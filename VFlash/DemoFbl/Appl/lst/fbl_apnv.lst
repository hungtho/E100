
                                   Fri Apr 10 08:31:56 2020           Page 1
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
Command Line:   C:\ghs\comp_201754\asppc.exe -noundefined
                -stderr=err/fbl_apnv.err -elf -b1 -I../../../bsw/_common
                -I../../../bsw/eep -I../../../bsw/fbl -I../../../bsw/flash
                -I../../../bsw/flash_xd1 -I../../../bsw/secmod
                -I../../../bsw/wrapnv -Ic:/ghs/comp_201754/ansi
                -Ic:/ghs/comp_201754/include/ppc -Ic:/ghs/comp_201754/src/libsys
                -Igendata -Iinclude -IC:\ghs\comp_201754\lib\ppc5514
                -cpu=ppc560xp
                -patch_dbo=C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl\obj\fbl_apnv.dbo
                -source=fbl_apnv.c -o obj\gh_0000csc1.o -list=lst/fbl_apnv.lst
                C:\Users\owner\AppData\Local\Temp\gh_0000csc1.si
Source File:    C:\Users\owner\AppData\Local\Temp\gh_0000csc1.si
Directory:      C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
Host OS:        Windows
AS: Copyright (C) 1983-2017 Green Hills Software.  All Rights Reserved.
Release: Compiler v2017.5.4
Build Directory: [Directory] COMP-VAL-WIN50:c:/autoval2/v2017.5-2017-10-03/win32-comp-ecom
Revision: [VCInfo] http://toolsvc/branches/release-branch-2017-5-comp/src@603870 (built by auto-compiler)
Revision Date: Wed Oct 04 11:30:08 2017

Release Date: Wed Oct 04 09:00:05 2017

                             1	#Driver Command: ccppc -DBRS_DERIVATIVE_SPC570S50 -DBRS_OSC_CLK=40
                             2	#		-DBRS_TIMEBASE_CLOCK=80 -DBRS_OS_USECASE_BRS
                             3	#		-DBRS_EVA_BOARD_DEFAULT -DBRS_PLATFORM_MPC57XX -DBRS_COMP_GHS
                             4	#		-DBRSHW_INSTRUCTION_SET_VLE -DBRS_CPU_STARTUP_ID=0
                             5	#		-object_dir=obj -list=lst/fbl_apnv.lst -stderr=err/fbl_apnv.err
                             6	#		-c -vle -DC_ENABLE_INSTRUCTION_SET_VLE -D__vle
                             7	#		--prototype_warnings -Odebug -Osize -Ospace -G -dual_debug
                             8	#		-nofloatio -cpu=ppc560xp -noobj -DRAM_48K -inline_prologue
                             9	#		-pragma_asm_inline -noSPE --no_exceptions --no_commons
                            10	#		-nokeeptempfiles -pnone --incorrect_pragma_warnings
                            11	#		--slash_comment --long_long -preprocess_assembly_files
                            12	#		-passsource -I../../../bsw/_common -I../../../bsw/eep
                            13	#		-I../../../bsw/fbl -I../../../bsw/flash -I../../../bsw/flash_xd1
                            14	#		-I../../../bsw/secmod -I../../../bsw/wrapnv
                            15	#		-Ic:/ghs/comp_201754/ansi -Ic:/ghs/comp_201754/include/ppc
                            16	#		-Ic:/ghs/comp_201754/src/libsys -Igendata -Iinclude
                            17	#		Source/fbl_apnv.c
                            18	#Source File:   Source/fbl_apnv.c
                            19	#Directory:     C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
                            20	#Compile Date:  Fri Apr 10 08:31:56 2020
                            21	#Host OS:       Win32
                            22	#Version:       C-POWERPC 2017.5.4 RELEASE VERSION
                            23	#Release:       Compiler v2017.5.4
                            24	#Revision Date: Wed Oct 04 11:39:37 2017
                            25	#Release Date:  Wed Oct 04 09:00:05 2017
                            26	# ecom  -g -w -OMS
                            27	
                            28	#1: /* Kernbauer Version: 1.12 Konfiguration: FBL Erzeugungsgangnummer: 1 */
                            29	#3: /***********************************************************************************************************************
                            30	#4:  *  FILE DESCRIPTION
                            31	#5:  *  ------------------------------------------------------------------------------------------------------------------*/
                            32	#6: /** \file
                            33	#7:  *  \brief         Application dependent nonvolatile memory access routines
                            34	#8:  *
                            35	#9:  *  \note          Please note, that this file contains a collection of callback functions to be used with the
                            36	#10:  *                 Flash Bootloader. These functions may influence the behavior of the bootloader in principle.
                            37	#11:  *                 Therefore, great care must be taken to verify the correctness of the implementation.
                            38	#12:  *                 The contents of the originally delivered files are only examples resp. implementation proposals.
                            39	#13:  *                 With regard to the fact that these functions are meant for demonstration purposes only, Vector
                            40	#14:  *                 Informatik's liability shall be expressly excluded in cases of ordinary negligence, to the extent
                            41	#15:  *                 admissible by law or statute.
                            42	#16:  *

                                   Fri Apr 10 08:31:56 2020           Page 2
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                            43	#17:  *  --------------------------------------------------------------------------------------------------------------------
                            44	#18:  *  COPYRIGHT
                            45	#19:  *  --------------------------------------------------------------------------------------------------------------------
                            46	#20:  *  \par Copyright
                            47	#21:  *  \verbatim
                            48	#22:  *  Copyright (c) 2016 by Vector Informatik GmbH.                                                  All rights reserved.
                            49	#23:  *
                            50	#24:  *                This software is copyright protected and proprietary to Vector Informatik GmbH.
                            51	#25:  *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
                            52	#26:  *                All other rights remain with Vector Informatik GmbH.
                            53	#27:  *  \endverbatim
                            54	#28:  */
                            55	#29: /**********************************************************************************************************************/
                            56	#31: /***********************************************************************************************************************
                            57	#32:  *  AUTHOR IDENTITY
                            58	#33:  *  --------------------------------------------------------------------------------------------------------------------
                            59	#34:  *  Name                          Initials      Company
                            60	#35:  *  --------------------------------------------------------------------------------------------------------------------
                            61	#36:  *  Christian Baeuerle            CB            Vector Informatik GmbH
                            62	#37:  *  --------------------------------------------------------------------------------------------------------------------
                            63	#38:  *  REVISION HISTORY
                            64	#39:  *  --------------------------------------------------------------------------------------------------------------------
                            65	#40:  *  Version    Date        Author  Change Id        Description
                            66	#41:  *  --------------------------------------------------------------------------------------------------------------------
                            67	#42:  *  02.00.00   2016-11-07  CB      -                Initial version based on UDS2 component
                            68	#43:  **********************************************************************************************************************/
                            69	#45: /***********************************************************************************************************************
                            70	#46:  *  --------------------------------------------------------------------------------------------------------------------
                            71	#47:  *  REVISION HISTORY (kbFbl_apAPI.c)
                            72	#48:  *  --------------------------------------------------------------------------------------------------------------------
                            73	#49:  *  Version    Date        Author  Change Id        Description
                            74	#50:  *  --------------------------------------------------------------------------------------------------------------------
                            75	#51:  *  00.90.00   2003-12-10  CB                       First implementation
                            76	#52:  *  00.91.00   2004-01-08  CB                       Decryption/decompression interface changed
                            77	#53:  *                         CB                       Parameters for ApplFblVerifyChecksum changed
                            78	#54:  *  01.00.00   2004-02-24  CB                       Release
                            79	#55:  *  01.01.00   2004-03-24  Rr                       Added new functions
                            80	#56:  *  01.02.00   2004-03-25  WM                       Minor changes and enhancements for new OEM
                            81	#57:  *  01.03.00   2004-04-23  WM                       Added watchdog trigger functions
                            82	#58:  *                         ACP                      Added ApplFblSecurityStatus
                            83	#59:  *                         AMN                      Added ApplFblIsValidFlashBlock, and ApplFblReadBlock
                            84	#60:  *  01.04.00   2004-05-07  CB                       Added ApplCanBusOff, ApplCanWakeUp
                            85	#61:  *  01.05.00   2004-05-19  CB                       Minor changes
                            86	#62:  *  01.06.00   2004-06-30  MHz                      No changes
                            87	#63:  *  01.07.00   2004-07-22  CB                       Added ApplFblReadEcuIdentification,
                            88	#64:  *                                                  ApplFblStoreTesterCode, ApplFblStoreProgrammingDate
                            89	#65:  *  01.08.00   2004-08-06  WM                       Added ApplFblRWSecurityAccessDelayFlag
                            90	#66:  *  01.09.00   2004-09-09  Rr                       Minor changes for ApplFblCanBusOff
                            91	#67:  *  01.10.00   2004-09-16  WM                       Added PRE and POST section for ApplFblWDTrigger
                            92	#68:  *  01.11.00   2004-10-25  AP      ESCAN00010007    Adaption to support Vector
                            93	#69:  *                                                  component OSEK NM
                            94	#70:  *  01.12.00   2004-12-23  AMN                      Changed prototype of ApplFblWriteDataById
                            95	#71:  *                                                  Added an ifdef to ApplFblCanParamInit
                            96	#72:  *                                                  Added function ApplFblPBLConfigSet
                            97	#73:  *                                                  Corrected the paramters in ApplFblRWProgCounter
                            98	#74:  *                                                  Define name changes PBL->CAN

                                   Fri Apr 10 08:31:56 2020           Page 3
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                            99	#75:  *                         ACP                      Version check reworked
                           100	#76:  *                         CB                       Added fingerprint functions
                           101	#77:  *  01.13.00   2005-01-14  CB                       Added several API functions
                           102	#78:  *  01.14.00   2005-03-22  WM      ESCAN00011595    MISRA warnings
                           103	#79:  *  01.15.00   2005-09-29  WM                       _PRE_ and _POST_ section for ApplFblWDTriggerEnd
                           104	#80:  *                                                  V_VER.H consistency check added
                           105	#81:  *  01.16.00   2005-12-08  WM      ESCAN00014594    FblApSrcApplFblTpParamInit token
                           106	#82:  *                                                  added for TPMC
                           107	#83:  *  01.17.00   2006-02-28  AMN                      Added ApplFblCopyToRAM and ApplFblIsValidAppInRAM
                           108	#84:  *  01.18.00   2006-03-24  QPs                      Added ApplFblGetSubNodeRxCanId for Gateway
                           109	#85:  *                                                  implementation
                           110	#86:  *  01.19.00   2006-04-25  CB      ESCAN00015917    Return value added for
                           111	#87:  *                                                  ApplFblInvalidateBlock
                           112	#88:  *                         WM      ESCAN00015960    ApplFblVerifySegmentChecksum added
                           113	#89:  *                         Ls                       added KBTok_FblApSrcApplFblCheckProgDependencies
                           114	#90:  *                         QPs     ESCAN00016110    Added ApplCanBusOff for the Gateway
                           115	#91:  *                         CB      ESCAN00016144    Return value added for
                           116	#92:  *                                                  ApplFblInitDecryption
                           117	#93:  *                         CB      ESCAN00016147    ApplFblStoreBootSwIdent added
                           118	#94:  *                                 ESCAN00016171    ApplFblSetSecAccessDelayFlag,
                           119	#95:  *                                                  ApplFblGetSecAccessDelayFlag and
                           120	#96:  *                                                  ApplFblClrSecAccessDelayFlag added
                           121	#97:  *  01.20.00   2006-05-18  ACP     ESCAN00016438    Added kStartupPreInit/PostInit
                           122	#98:  *                                                  definition for new ApplFblStartup() parameter
                           123	#99:  *  01.21.00   2006-06-29  FHE                      No changes
                           124	#100:  *  01.22.00   2006-07-24  JHg                      Added V_CALLBACK_NEAR to watchdog trigger
                           125	#101:  *                         CB      ESCAN00017003    Added ApplFblProgrammingStateChanged
                           126	#102:  *                         AMN                      Added ApplFblValidateFile
                           127	#103:  *                                                  Added a token to reference local prototypes
                           128	#104:  *                                                  from the OEM layer
                           129	#105:  *  01.23.00   2006-08-28  JHg                      Added token for additional watchdog functions
                           130	#106:  *                         AMN     ESCAN00017479    Modified the API of the
                           131	#107:  *                                                  ApplFblValidateApp for Misra compliance
                           132	#108:  *                                                  Removed ApplFblIsValidFlashBlock because it's
                           133	#109:  *                                                  not used anymore
                           134	#110:  *  01.24.00   2006-12-06  FHE     ESCAN00018639    Added ApplFblCheckConditions
                           135	#111:  *  01.25.00   2007-02-07  Hp      ESCAN00019129    Add support for CCP in the bootloader
                           136	#112:  *                                                  Add PreHandler and presence-pattern support.
                           137	#113:  *  01.26.00   2007-03-30  WM      ESCAN00020175    Added ApplFblCheckProgPreconditions
                           138	#114:  *  01.27.00   2007-07-06  JHg                      Return value added to ApplFblDecryption and
                           139	#115:  *                                                  ApplFblDeinitDecryption
                           140	#116:  *  01.28.00   2007-07-27  Ls      ESCAN00022542    FBL_ENABLE_PRE_WDINIT_COMMENT added
                           141	#117:  *  01.29.00   2008-03-07  Ci      ESCAN00014726    FBL_COPY_CODE_TO_RAM_ON_STARTUP
                           142	#118:  *                                                  renamed to FBL_ENABLE_COPY..
                           143	#119:  *                         Hp      ESCAN00014726    Support for memmap and FBL_ENABLE_COPY_CODE_TO_RAM_ON_STARTUP
                           144	#120:  *                                                  to map ApplFblWDTrigger and ApplFblWDTriggerEnd to special location
                           145	#121:  *                         JHg                      Update CAN driver Tx confirmation routines to RI 1.4 API
                           146	#122:  *                         Hp      ESCAN00025029    Support Vector decompression module (optional)
                           147	#123:  *  01.30.00   2008-03-28  JHg     ESCAN00025354    Remove COMMENT restriction from FBL_ENABLE_PRE_WDINIT
                           148	#124:  *                                                  If enabled watchdog will be already initalized in ApplFblInit
                           149	#125:  *                                 ESCAN00025355    FBL_ENABLE_PRE_TIMERINIT added
                           150	#126:  *                                                  If enabled timer will be already initalized in ApplFblInit
                           151	#127:  *  01.31.00   2008-06-13  Ci      ESCAN00025071    Extended function description of
                           152	#128:  *                                                  ApplFblStartup() with kStartupStayInBoot
                           153	#129:  *                                 ESCAN00027445    Added support for configurations
                           154	#130:  *                                                  with multiple CAN channels

                                   Fri Apr 10 08:31:56 2020           Page 4
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           155	#131:  *  01.32.00   2008-09-10  JHg     ESCAN00029860    Moved PRE_WDINIT and PRE_TIMERINIT to fbl_main
                           156	#132:  *  01.33.00   2008-10-15  FHe     ESCAN00030640    Added support for VAG spec 1.2.1
                           157	#133:  *  01.34.00   2009-03-13  JHg     ESCAN00032180    Added support for multichannel configurations
                           158	#134:  *                                                  to ApplCanTxObjStart, ApplCanTxObjConfirmed
                           159	#135:  *                                                  Updated description of ApplCanMsgReceived
                           160	#136:  *                         FHe                      Restored old format of ApplFblCheckProgConditions
                           161	#137:  *                         Ci      ESCAN00033475    Added gateway specific callback
                           162	#138:  *                                                  functions (Gw_Route support)
                           163	#139:  *  01.35.00   2009-03-12  QPs     ESCAN00033801    Added communication wrapper specific
                           164	#140:  *                                                  callback functions
                           165	#141:  *  01.36.00   2009-07-21  QPs     ESCAN00035282    Added DC SLP10 extension:
                           166	#142:  *                                                  ApplFblControlFailSafeReaction
                           167	#143:  *                         AWh     ESCAN00036825    Inconsistent return value type between
                           168	#144:  *                                                  ReadDataByCommonId prototype and implementation
                           169	#145:  *  01.37.00   2009-08-31  AWh     ESCAN00037405    No changes
                           170	#146:  *                         QPs     ESCAN00037479    Added FrTrcv specific callback functions
                           171	#147:  *  01.38.00   2009-09-18  Tbe     ESCAN00037856    Added Ethernet/DoIP specific
                           172	#148:  *                                                  callback functions
                           173	#149:  *  01.39.00   2009-12-02  Ci      ESCAN00038917    Adapted prototype of
                           174	#150:  *                                                  ApplFblFatalError()
                           175	#151:  *                                 ESCAN00038918    Added support for validation
                           176	#152:  *                                                  struct handling
                           177	#153:  *                                 ESCAN00038919    Added callback for flash erased
                           178	#154:  *                                                  detection
                           179	#155:  *  01.40.00   2010-02-15  Ci      ESCAN00040663    Enhanced flash erased detection
                           180	#156:  *                                                  interface
                           181	#157:  *                         Ci      ESCAN00040852    Replaced decryption interface by
                           182	#158:  *                                                  data processing API
                           183	#159:  *  01.41.00   2010-07-08  MVi     ESCAN00043736    Remove pragmas when memmap is used
                           184	#160:  *                         Ci      ESCAN00043863    Added function ApplCanTpConfirmation
                           185	#161:  *                         QPs     ESCAN00043896    Added support for LIN bootloader
                           186	#162:  *  01.42.00   2010-07-23  CB      ESCAN00044299    Default implementation of decompression
                           187	#163:  *  01.43.00   2010-09-15  Ci      ESCAN00044991    Added new Gw_Route API functions
                           188	#164:  *  01.44.00   2010-12-10  MVi     ESCAN00047478    Enhanced flash erased detection interface
                           189	#165:  *                                 ESCAN00047482    Added routine control succeeded interface
                           190	#166:  *  01.45.00   2011-02-03  Ach     ESCAN00048191    Use normal fixed addressing without TPMC
                           191	#167:  *  01.46.00   2011-07-14  Ci      ESCAN00052149    Adapted Gw_Route task interface
                           192	#168:  *  01.47.00   2011-11-25  Hp      ESCAN00052787    Extend support for PresencePatterns
                           193	#169:  *  01.48.00   2011-12-14  AWh     ESCAN00055586    Extend Api with ApplFblInvalidateApp function
                           194	#170:  *  01.49.00   2012-02-14  Ach     ESCAN00056341    Added ApplFblStartApplication() function
                           195	#171:  *  01.50.00   2012-02-22  Ach     ESCAN00052787    Extend support for PresencePatterns
                           196	#172:  *                         MVi     ESCAN00056833    Extend support for PresencePatterns (HMC)
                           197	#173:  *                                 ESCAN00056834    No changes
                           198	#174:  *                         CB      ESCAN00056642    Added ApplFblCanPlatformToPhysChannel()
                           199	#175:  *  01.51.00   2012-03-23  QPs     ESCAN00057230    Extend support for FlexRay
                           200	#176:  *                         Ach     ESCAN00057636    Remove local memSegment variables
                           201	#177:  *                         CB      ESCAN00057670    Added Suspend Programming API
                           202	#178:  *  01.52.00   2012-03-30  QPs     ESCAN00058040    No changes
                           203	#179:  *  01.53.00   2012-08-16  MVi     ESCAN00060433    Support for PresencePatterns
                           204	#180:  *                                                  with 256 byte segment size
                           205	#181:  *  01.54.00   2012-12-06  AWh     ESCAN00061619    Moved presence pattern macros to header
                           206	#182:  *                         Ach     ESCAN00062912    Adapted comments to use Doxygen
                           207	#183:  *  01.55.00   2013-01-24  Ach     ESCAN00064406    Support return value IO_E_ERASED for presence pattern
                           208	#184:  *                         JHg     ESCAN00064421    Added callback ApplFblOnTransitionSession
                           209	#185:  *                                 ESCAN00064437    Added callback ApplFblStateTask
                           210	#186:  *  01.56.00   2013-02-08  ASe     ESCAN00064889    Reworked comments

                                   Fri Apr 10 08:31:56 2020           Page 5
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           211	#187:  *  01.57.00   2014-01-21  ASe     ESCAN00072931    Fixed compiler warning (HMC)
                           212	#188:  *  01.58.00   2014-02-24  MVi     ESCAN00073549    Removed HMC exceptions to support new mtab header
                           213	#189:  *  01.58.01   2014-04-03  ASe     ESCAN00074701    Fixed comments
                           214	#190:  *  01.59.00   2014-07-16  QPs     ESCAN00077127    Extend support for LIN
                           215	#191:  *  01.60.00   2014-08-25  Dod     ESCAN00078033    Add callbacks ApplFblMemPreWrite/Erase and ApplFblGetLogBlkHash
                           216	#192:  *  01.61.00   2015-01-13  Ach     ESCAN00080481    Change visibility of ApplFblChkModulePresence()
                           217	#193:  *  01.62.00   2015-05-12  CB      ESCAN00082959    Added functions to read and store the TP target address
                           218	#194:  *  01.63.00   2015-05-27  CB      ESCAN00083167    Additional callback functions for status backup
                           219	#195:  *  01.64.00   2015-09-14  Ci      ESCAN00084704    Removed data processing default implementation
                           220	#196:  *                         QPs     ESCAN00085203    Added callback ApplFblCheckTesterSourceAddr
                           221	#197:  *  01.64.01   2015-12-15  TnS     ESCAN00087100    Moved initialization for Timer Interrupt use case to FblWd
                           222	#198:  *  01.65.00   2016-01-11  ASe     ESCAN00087324    Presence pattern handling fails on word-addressed platforms
                           223	#199:  *                         Rr      ESCAN00087414    Extend Renault SLP3 specific API for reading light LogZone
                           224	#200:  *  01.66.00   2016-02-25  TnS     ESCAN00088471    MISRA related code changes
                           225	#201:  *  01.67.00   2016-03-07  MVi     ESCAN00088759    Added ApplFblIsValidBlock
                           226	#202:  *  01.68.00   2016-03-17  Shs     ESCAN00088957    No changes
                           227	#203:  *  01.69.00   2016-05-09  HRf     ESCAN00089907    Encapsulate FlexRay specific code in ApplFblCwWakeUp()
                           228	#204:  *  01.70.00   2016-05-17  Rie     ESCAN00090027    Performed MISRA analysis
                           229	#205:  *  01.71.00   2016-06-27  Ach     ESCAN00090683    Support configuration switch FBL_CW_ENABLE_MULTIPLE_NODES
                           230	#206:  *  01.72.00   2016-07-15  DlM     ESCAN00090996    Added function for programming voltage check
                           231	#207:  *  01.73.00   2016-08-02  Ach     ESCAN00091282    Added ApplFblGetVerificationData()
                           232	#208:  *  01.74.00   2016-08-24  Rie     ESCAN00091646    Added ApplFblCheckFuncTargetAddr()
                           233	#209:  *  01.75.00   2016-10-04  CEl     ESCAN00092168    Added ApplFblSetLogBlkHash()
                           234	#210:  *  01.76.00   2016-12-01  Ach     ESCAN00093116    Added length parameter to ApplFblGetVerificationData()
                           235	#211:  *  01.77.00   2017-02-07  Ach     ESCAN00093891    Added constant definition for common data structure
                           236	#212:  *  01.77.01   2017-06-22  Rie     ESCAN00095595    Fixed evaluation of the presence pattern
                           237	#213:  *  01.78.00   2017-07-04  CB      ESCAN00095725    Added functions to read and write the segment list in NV-memory
                           238	#214:  *                         CEl     ESCAN00095744    Added ApplFblStartSeperationTime()
                           239	#215:  *  01.79.00   2017-07-31  Ach     ESCAN00096124    Add interface to handle DET callouts
                           240	#216:  *  01.80.00   2017-08-08  Rie     ESCAN00096215    Added support for latest TpLin
                           241	#217:  *  01.81.00   2017-09-13  Ach     ESCAN00096636    Add interface definition for ApplDiagUserRoutine
                           242	#218:  *  01.82.00   2017-10-09  Ach     ESCAN00096961    ApplFbl_DetEntryHandler() uses wrong interface definition
                           243	#219:  *  01.83.00   2017-12-20  Ach     ESCAN00097821    Added interface to handle DcmDslRxTesterSourceAddress
                           244	#220:  **********************************************************************************************************************/
                           245	#222: /***********************************************************************************************************************
                           246	#223:  *  REVISION HISTORY (KbFbl_apOem.c)
                           247	#224:  *  --------------------------------------------------------------------------------------------------------------------
                           248	#225:  *  Version    Date        Author  Change Id        Description
                           249	#226:  *  --------------------------------------------------------------------------------------------------------------------
                           250	#227:  *  02.00.00   2016-11-07  CB      -                Initial version based on UDS2 component
                           251	#228:  *  02.01.00   2017-01-24  CB      ESCAN00093698    Added example code for data processing
                           252	#229:  **********************************************************************************************************************/
                           253	#231: /***********************************************************************************************************************
                           254	#232:  *  --------------------------------------------------------------------------------------------------------------------
                           255	#233:  *  REVISION HISTORY (KbFbl_apHW.h, Brs)
                           256	#234:  *  --------------------------------------------------------------------------------------------------------------------
                           257	#235:  *  Version    Date        Author  Change Id        Description
                           258	#236:  *  --------------------------------------------------------------------------------------------------------------------
                           259	#237:  *  01.00.00   2018-02-26  Csz                      Initial version
                           260	#238:  *  01.00.01   2018-03-08  Csz                      Call the BrsHwTogglePin functions directly and include BrsHw.h
                           261	#239:  **********************************************************************************************************************/
                           262	#241: /***********************************************************************************************************************
                           263	#242:  *  INCLUDES
                           264	#243:  **********************************************************************************************************************/
                           265	#245: #include "fbl_inc.h"
                           266	#247: #include "BrsHw.h"

                                   Fri Apr 10 08:31:56 2020           Page 6
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           267	#249: /***********************************************************************************************************************
                           268	#250:  *  VERSION
                           269	#251:  **********************************************************************************************************************/
                           270	#253: #if ( FBLKBAPI_FRAMENV_SYMC_VERSION != 0x0200u ) || \
                           271	#254:     ( FBLKBAPI_FRAMENV_SYMC_RELEASE_VERSION != 0x00u )
                           272	#255: # error "Error in fbl_apnv.c Source and header file are inconsistent!"
                           273	#256: #endif
                           274	#258: #if ( (FBLKBAPI_FRAMENV_SYMC_VERSION != _FBLKBAPI_FRAMENV_OEM_VERSION ) || \
                           275	#259:       (FBLKBAPI_FRAMENV_SYMC_RELEASE_VERSION != _FBLKBAPI_FRAMENV_OEM_RELEASE_VERSION) )
                           276	#260: # error "Error in fbl_apxx.c: Source and v_ver.h are inconsistent!"
                           277	#261: #endif
                           278	#263: /***********************************************************************************************************************
                           279	#264:  *  DEFINES
                           280	#265:  **********************************************************************************************************************/
                           281	#267: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                           282	#268: /* PRQA S 3453 TAG_FblApNv_3453_1 */ /* MD_MSR_19.7 */
                           283	#269: /* Memory driver access */
                           284	#270: #define ApplFblReadPattern(buffer, address)           (MemDriver_RReadSync((IO_MemPtrType)(buffer), (IO_SizeType)kFblPresencePatternSize, (IO_PositionType)(address)))
                           285	#271: #define ApplFblWritePattern(buffer, length, address)  (MemDriver_RWriteSync((IO_MemPtrType)(buffer), (IO_SizeType)(length), (IO_PositionType)(address)) == IO_E_OK)
                           286	#274: V_MEMROM0 static V_MEMROM1 vuint8 V_MEMROM2 blockPresencePattern[kFblPresencePatternSize] = kFblPresencePattern;
                           287	#275: /* PRQA L:TAG_FblApNv_3453_1 */
                           288	#276: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                           289	#278: /* Configuration check */
                           290	#279: # if ( kEepSizeValidityFlags != kNrOfValidationBytes )
                           291	#280: #  error "Size of block validity data is not correct. Check GENy configuration of size."
                           292	#281: # endif
                           293	#283: /***********************************************************************************************************************
                           294	#284:  *  LOCAL DATA TYPES AND STRUCTURES
                           295	#285:  **********************************************************************************************************************/
                           296	#287: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                           297	#288: /** Presence pattern buffer with alignment to platform requirements */
                           298	#289: typedef struct
                           299	#290: {
                           300	#291: #if defined( C_CPUTYPE_32BIT ) || \
                           301	#292:     defined( C_CPUTYPE_16BIT )
                           302	#293:    vuint32  dummy;
                           303	#294: #endif /* C_CPUTYPE_32BIT || C_CPUTYPE_16BIT */
                           304	#295:    vuint8   data[FBL_PP_SEGMENT_SIZE];
                           305	#296: } tFblpresPtnAlignedBuffer;
                           306	#297: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                           307	#299: typedef vuint16   tFblApnvProgCountType;
                           308	#301: /***********************************************************************************************************************
                           309	#302:  *  LOCAL DATA
                           310	#303:  **********************************************************************************************************************/
                           311	#305: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                           312	#306: V_MEMRAM0 static V_MEMRAM1 tBlockDescriptor V_MEMRAM2 currentValidatedBlock;
                           313	#307: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                           314	#309: /***********************************************************************************************************************
                           315	#310:  *  LOCAL FUNCTION PROTOTYPES
                           316	#311:  **********************************************************************************************************************/
                           317	#313: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                           318	#314: static vsint16 ApplFblGetPresencePatternBaseAddress( vuint8 blockNr, IO_PositionType * pPresPtnAddr, IO_SizeType * pPresPtnLen );
                           319	#315: static tFblResult ApplFblSetModulePresence( tBlockDescriptor * blockDescriptor );
                           320	#316: static tFblResult ApplFblClrModulePresence( tBlockDescriptor * blockDescriptor );
                           321	#317: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                           322	#318: static tFblResult ApplFblChgBlockValid( vuint8 mode, tBlockDescriptor descriptor );

                                   Fri Apr 10 08:31:56 2020           Page 7
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           323	#320: /***********************************************************************************************************************
                           324	#321:  *   GLOBAL FUNCTIONS
                           325	#322:  **********************************************************************************************************************/
                           326	#324: /***********************************************************************************************************************
                           327	#325:  *  ApplFblChgBlockValid
                           328	#326:  **********************************************************************************************************************/
                           329	#327: /*! \brief       This function changes the validation flag of a logical block.
                           330	#328:  *               The state information is stored inverted.
                           331	#329:  *  \pre         EEPROM driver must be initialized before call
                           332	#330:  *  \param[in]   mode (kEepValidateBlock/kEepInvalidateBlock)
                           333	#331:  *  \param[in]   descriptor Block descriptor
                           334	#332:  *  \return      kFblOk if successful, kFblFailed otherwise
                           335	#333:  **********************************************************************************************************************/
                           336		.section ".vletext", "vax"
                           337		.vle
                           338		.vle
                           339	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB06C..0::
                           340		.align	1
                           341	..gh.f.p.4.a.1.r.0.e.0:
                           342		.type	..gh.f.p.4.a.1.r.0.e.0,@object
                           343		.size	..gh.f.p.4.a.1.r.0.e.0,0
                           344		.global	ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                           345	ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.:
                           346	ApplFblChgBlockValid:
00000000 182106e0          347		e_stwu	sp, -32(sp)
00000004 1b810910          348		e_stmw	r28, 16(sp)
00000008 013c              349		se_mr	r28, r3
0000000a 0080              350		se_mflr	r0
0000000c d901              351		se_stw	r0, 36(sp)
                           352	#	    .bf
                           353	.LDW01:
                           354	#334: static tFblResult ApplFblChgBlockValid( vuint8 mode, tBlockDescriptor descriptor )
                           355	#335: {
                           356	#336:    vuint8         validityMask;
                           357	#337:    tFblResult     result;
                           358	#339:    vuint8         byteIdx;
                           359	#340:    vuint8         validityFlags[kEepSizeValidityFlags];
                           360	#341:    vuint8         validityCheck[kEepSizeValidityFlags];
                           361	#343:    byteIdx = (vuint8)(descriptor.blockNr >> 0x03u);
                           362	#344:    validityMask = (vuint8)(0x01u << (descriptor.blockNr & 0x07u));
0000000e 73c8e001          363		e_lis	r30, 16385
00000012 1fde8b03          364		e_add16i	r30, r30, -29949
00000016 8004              365		se_lbz	r0, 0(r4)
00000018 01e5              366		se_mr	r5, r30
                           367	#346:    result = kFblFailed;
0000001a 4814              368		se_li	r4, 1
                           369	#348:    if (((ApplFblNvReadValidityFlags(validityFlags))) == kFblOk)
0000001c 014f              370		se_mr	r31, r4
0000001e 18618008          371		e_addi	r3, sp, 8
00000022 2e70              372		se_andi	r0, 7
00000024 7c9d0030          373		slw	r29, r4, r0
00000028 78000001          374		e_bl	EepromDriver_RReadSync
0000002c 2a03              375		se_cmpi	r3, 0
0000002e e200              376		se_bne	.L4
                           377	#349:    {
                           378	#350:       if (mode == kEepValidateBlock)

                                   Fri Apr 10 08:31:56 2020           Page 8
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           379	#line350
                           380	..lin.74ab1805..85576ff3.0_1::
                           381	.LDWlin1:
00000030 2a1c              382		se_cmpi	r28, 1
00000032 e200              383		se_bne	.L6
                           384	#351:       {
                           385	#352:          validityFlags[byteIdx] &= FblInvert8Bit(validityMask);
                           386	#line352
                           387	..lin.74ab1805..85576ff3.0_2::
                           388	.LDWlin2:
00000034 8801              389		se_lbz	r0, 8(sp)
00000036 1ba7e0ff          390		e_xori	r7, r29, 255
0000003a 4670              391		se_and	r0, r7
0000003c e800              392		se_b	.L129
                           393	.L6:
                           394	#line355
                           395	..lin.74ab1805..85576ff3.0_3::
                           396	.LDWlin3:
0000003e 8801              397		se_lbz	r0, 8(sp)
                           398	#353:       }
                           399	#354:       else
                           400	#355:       {
                           401	#356:          validityFlags[byteIdx] |= validityMask;
00000040 44d0              402		se_or	r0, r29
                           403	.L129:
00000042 9801              404		se_stb	r0, 8(sp)
                           405	#357:       }
                           406	#359:       /* Modify validity flags */
                           407	#360:       if (ApplFblNvWriteValidityFlags(validityFlags) == kFblOk)
00000044 18618008          408		e_addi	r3, sp, 8
00000048 4814              409		se_li	r4, 1
0000004a 01e5              410		se_mr	r5, r30
0000004c 78000001          411		e_bl	EepromDriver_RWriteSync
00000050 2a03              412		se_cmpi	r3, 0
00000052 e200              413		se_bne	.L4
                           414	#361:       {
                           415	#362:          /* Read modified flags */
                           416	#363:          if (ApplFblNvReadValidityFlags(validityCheck) == kFblOk)
                           417	#line363
                           418	..lin.74ab1805..85576ff3.0_4::
                           419	.LDWlin4:
00000054 18618009          420		e_addi	r3, sp, 9
00000058 4814              421		se_li	r4, 1
0000005a 01e5              422		se_mr	r5, r30
0000005c 78000001          423		e_bl	EepromDriver_RReadSync
00000060 2a03              424		se_cmpi	r3, 0
00000062 e200              425		se_bne	.L4
                           426	#line364
                           427	..lin.74ab1805..85576ff3.0_5::
                           428	.LDWlin5:
00000064 8871              429		se_lbz	r7, 8(sp)
                           430	#364:          {
                           431	#365:             /* Check if flags were written correctly */
                           432	#366:             if (validityCheck[byteIdx] == validityFlags[byteIdx])
00000066 8901              433		se_lbz	r0, 9(sp)
00000068 0c70              434		se_cmp	r0, r7

                                   Fri Apr 10 08:31:56 2020           Page 9
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000006a 7fe0f89e          435		iseleq	r31, r0, r31
0000006e 00cf              436		se_extzb	r31
                           437	.L4:
                           438	#367:             {
                           439	#368:                result = kFblOk;
                           440	#369:             }
                           441	#370:          }
                           442	#371:       }
                           443	#372:    }
                           444	#373:    return result;
00000070 01f3              445		se_mr	r3, r31
                           446	#	    .ef
                           447	.LDW11:
00000072 c901              448		se_lwz	r0, 36(sp)
00000074 1b810810          449		e_lmw	r28, 16(sp)
00000078 21f1              450		se_addi	sp, 32
0000007a 0090              451		se_mtlr	r0
0000007c 0004              452		se_blr
                           453	__ghs_eofn_ApplFblChgBlockValid:
                           454		.type	ApplFblChgBlockValid,@function
                           455		.size	ApplFblChgBlockValid,$-ApplFblChgBlockValid
                           456		.type	ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,@function
                           457		.size	ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,$-ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                           458		.align	1
                           459	
                           460	#function:			ApplFblChgBlockValid
                           461	#stack frame size:		32
                           462	#link area offset:		0
                           463	#local storage area offset:	12
                           464	#gpr save area offset:		16
                           465	#
                           466	#validityMask	r29	local
                           467	#result	r31	local
                           468	#validityFlags	8(sp)	local
                           469	#validityCheck	9(sp)	local
                           470	
                           471	#mode	r28	param
                           472	#descriptor	r4	param
                           473	
                           474		.data
                           475		.section ".vletext", "vax"
                           476		.vle
                           477		.vle
                           478	
                           479	#374: }
                           480	
                           481	#376: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                           482	#378: /***********************************************************************************************************************
                           483	#379:  *  ApplFblGetPresencePatternBaseAddress
                           484	#380:  **********************************************************************************************************************/
                           485	#381: /*! \brief         Calculates the base address of the presence pattern and mask.
                           486	#382:  *  \pre           LBT is present
                           487	#383:  *  \param[in]     blockNr Logical block number
                           488	#384:  *  \param[in,out] pPresPtnAddr Pointer to RAM location to place the address to the begin of presence pattern
                           489	#385:  *  \param[in,out] pPresPtnLen Pointer to the RAM location where the length of the presence pattern shall be stored to
                           490	#386:  *  \return        memSegment of the presence pattern location or -1 in case of an error

                                   Fri Apr 10 08:31:56 2020           Page 10
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           491	#387:  **********************************************************************************************************************/
                           492		.align	1
                           493		.align	1
                           494		.align	1
                           495	..gh.f.p.5.a.1.r.0.e.1:
                           496		.type	..gh.f.p.5.a.1.r.0.e.1,@object
                           497		.size	..gh.f.p.5.a.1.r.0.e.1,0
                           498		.global	ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                           499	ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.:
                           500	ApplFblGetPresencePatternBaseAddress:
0000007e 182106e8          501		e_stwu	sp, -24(sp)
00000082 0080              502		se_mflr	r0
00000084 1ba1090c          503		e_stmw	r29, 12(sp)
00000088 d701              504		se_stw	r0, 28(sp)
0000008a 014d              505		se_mr	r29, r4
0000008c 015e              506		se_mr	r30, r5
                           507	#	    .bf
                           508	.LDW21:
                           509	#388: static vsint16 ApplFblGetPresencePatternBaseAddress( vuint8 blockNr, IO_PositionType * pPresPtnAddr, IO_SizeType * pPresPtnLen )
                           510	#389: {
                           511	#390:    IO_PositionType   presPtnEndAddress;
                           512	#391:    IO_SizeType       presPtnLength;
                           513	#393: # if defined( FBL_ENABLE_DEBUG_STATUS )
                           514	#394:    if ((0xFFFFFFFFu - FblLogicalBlockTable.logicalBlock[blockNr].blockLength) < FblLogicalBlockTable.logicalBlock[blockNr].blockStartAddress)
0000008e 18e3a018          515		e_mulli	r7, r3, 24
00000092 1ce70008          516		e_add16i	r7, r7, %lo(FblLogicalBlockTable+8)
00000096 70079000          517		e_add2is	r7, %hiadj(FblLogicalBlockTable+8)
0000009a c307              518		se_lwz	r0, 12(r7)
0000009c c2f7              519		se_lwz	r31, 8(r7)
0000009e 7c0700f8          520		nor	r7, r0, r0
000000a2 0df7              521		se_cmpl	r7, r31
000000a4 e000              522		se_bge	.L132
                           523	.L136:
                           524	#395:    {
                           525	#396:       /* Overflow if block start address + block length is  *
                           526	#397:        * calculated - behavior has to be checked carefully. */
                           527	#398:       while (1)
                           528	#399:       {
                           529	#400:          ;
                           530	#line401
                           531	..lin.74ab1805..f1fcbf3a.0_6::
                           532	.LDWlin6:
000000a6 e800              533		se_b	.L136
                           534	.L132:
                           535	#401:       }
                           536	#402:    }
                           537	#403: # endif /* FBL_ENABLE_DEBUG_STATUS */
                           538	#405:     presPtnEndAddress = FblLogicalBlockTable.logicalBlock[blockNr].blockStartAddress + FblLogicalBlockTable.logicalBlock[blockNr].blockLength;
                           539	#line405
                           540	..lin.74ab1805..f1fcbf3a.0_7::
                           541	.LDWlin7:
000000a8 040f              542		se_add	r31, r0
                           543	#406:     /* Read the memory segment address */
                           544	#407:     memSegment = FblMemSegmentNrGet( (presPtnEndAddress - (kFblPresencePatternSize*2)) );
000000aa 187f84f8          545		e_addi	r3, r31, -8
000000ae 78000001          546		e_bl	FblMemSegmentNrGet

                                   Fri Apr 10 08:31:56 2020           Page 11
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000000b2 70e0e000          547		e_lis	r7, %hiadj(memSegment)
000000b6 5c670000          548		e_sth	r3, %lo(memSegment)(r7)
                           549	#408:    /* Check if a valid memory segment in the flash block table was found */
                           550	#409:    if (memSegment >= 0)
000000ba 2a03              551		se_cmpi	r3, 0
000000bc e400              552		se_blt	.L130
                           553	#410:    {
                           554	#411:       /* Get the flash segment length of the device */
                           555	#412:       /* Adjust if necessary (device's segment size is smaller than presence pattern size) */
                           556	#413:       if (MemDriver_SegmentSize < kFblPresencePatternSize)  /* PRQA S 3325 */ /* MD_FblKbApi_3325 */
                           557	#line413
                           558	..lin.74ab1805..f1fcbf3a.0_8::
                           559	.LDWlin8:
000000be 1803a00c          560		e_mulli	r0, r3, 12
000000c2 1ca00008          561		e_add16i	r5, r0, %lo(FlashBlock+8)
000000c6 70059000          562		e_add2is	r5, %hiadj(FlashBlock+8)
000000ca 8005              563		se_lbz	r0, 0(r5)
000000cc 1800a018          564		e_mulli	r0, r0, 24
000000d0 1cc00014          565		e_add16i	r6, r0, %lo(memDrvLst+20)
000000d4 70069000          566		e_add2is	r6, %hiadj(memDrvLst+20)
000000d8 a006              567		se_lhz	r0, 0(r6)
000000da 4847              568		se_li	r7, 4
000000dc 2230              569		se_cmpli	r0, 4
000000de e400              570		se_blt	.L141
                           571	#414:       {  /* PRQA S 3201 */ /* MD_FblKbApi_3201 */
                           572	#415:          presPtnLength = kFblPresencePatternSize;
                           573	#416:       }
                           574	#417:       else
                           575	#418:       {  /* PRQA S 3201 */ /* MD_FblKbApi_3201 */
                           576	#419:          presPtnLength = MemDriver_SegmentSize;
                           577	#line419
                           578	..lin.74ab1805..f1fcbf3a.0_9::
                           579	.LDWlin9:
000000e0 0107              580		se_mr	r7, r0
                           581	.L141:
                           582	#420:       }
                           583	#421:       /* Put results into arguments */
                           584	#422:       *pPresPtnAddr = (presPtnEndAddress - (presPtnLength * 2));
000000e2 7ce00870          585		e_slwi	r0, r7, 1
000000e6 07f0              586		se_subf	r0, r31
000000e8 d00d              587		se_stw	r0, 0(r29)
                           588	#423:       *pPresPtnLen  = presPtnLength;
000000ea d07e              589		se_stw	r7, 0(r30)
                           590	#424:    }
                           591	#426:    return memSegment;
                           592	.L130:
                           593	#	    .ef
                           594	.LDW31:
000000ec c701              595		se_lwz	r0, 28(sp)
000000ee 1ba1080c          596		e_lmw	r29, 12(sp)
000000f2 2171              597		se_addi	sp, 24
000000f4 0090              598		se_mtlr	r0
000000f6 0004              599		se_blr
                           600	__ghs_eofn_ApplFblGetPresencePatternBaseAddress:
                           601		.type	ApplFblGetPresencePatternBaseAddress,@function
                           602		.size	ApplFblGetPresencePatternBaseAddress,$-ApplFblGetPresencePatternBaseAddress

                                   Fri Apr 10 08:31:56 2020           Page 12
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           603		.type	ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,@function
                           604		.size	ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,$-ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                           605		.align	1
                           606	
                           607	#function:			ApplFblGetPresencePatternBaseAddress
                           608	#stack frame size:		24
                           609	#link area offset:		0
                           610	#local storage area offset:	12
                           611	#gpr save area offset:		12
                           612	#
                           613	#presPtnEndAddress	r31	local
                           614	#presPtnLength	r7	local
                           615	
                           616	#blockNr	r3	param
                           617	#pPresPtnAddr	r29	param
                           618	#pPresPtnLen	r30	param
                           619	
                           620		.section ".bss","awb"
                           621		.align	2
                           622		.global	currentValidatedBlock..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                           623	currentValidatedBlock..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.:
00000000                   624	currentValidatedBlock:	.space	24
                           625		.type	currentValidatedBlock..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,@object
                           626		.size	currentValidatedBlock..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,24
                           627		.type	currentValidatedBlock,@object
                           628		.size	currentValidatedBlock,24
                           629		.data
                           630		.section ".vletext", "vax"
                           631		.vle
                           632		.vle
                           633	
                           634	#427: }
                           635	
                           636	#429: /***********************************************************************************************************************
                           637	#430:  *  ApplFblModuleSetPresence
                           638	#431:  **********************************************************************************************************************/
                           639	#432: /*! \brief       Writes the presence pattern into the flash memory.
                           640	#433:  *  \details     The location of the presence pattern will be taken from the logical block descriptor.
                           641	#434:  *  \pre         Module programming successfully performed and checksum calculation succeeded.
                           642	#435:  *  \param[in]   blockDescriptor Pointer to the logical block descriptor
                           643	#436:  *  \return      kFblOk: Presence pattern successfully set, kFblFailed: Error writing presence pattern
                           644	#437:  **********************************************************************************************************************/
                           645	#438: static tFblResult ApplFblSetModulePresence( tBlockDescriptor * blockDescriptor )
                           646	#439: {
                           647	#440:    IO_PositionType            presPtnAddress;
                           648	#441:    IO_SizeType                presPtnLen;
                           649	#442:    IO_ErrorType               readResult;
                           650	#443:    vuint32                    i;
                           651	#444:    tFblResult                 result;
                           652	#445:    tFblpresPtnAlignedBuffer   flashHeader;
                           653	#446:    vuint8 *                   pFlashHeader;
                           654	#448:    /* Set presence pattern for this module */
                           655	#450:    /* Calculate location of presence pattern.           */
                           656	#451:    /* Note that the end of the block descriptor already */
                           657	#452:    /* points to the presence pattern itself.            */
                           658	#453:    memSegment = ApplFblGetPresencePatternBaseAddress(blockDescriptor->blockNr, &presPtnAddress, &presPtnLen);

                                   Fri Apr 10 08:31:56 2020           Page 13
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           659	#455:    if (memSegment >= 0)
                           660	#456:    {
                           661	#457:       /* FlashWrite requires an aligned address to RAM */
                           662	#458:       pFlashHeader = flashHeader.data;
                           663	#460:       /* Copy presence pattern to RAM buffer */
                           664	#461:       for (i = 0u; i < kFblPresencePatternSize; i++)
                           665	#462:       {
                           666	#463:          pFlashHeader[i] = blockPresencePattern[i];
                           667	#464:       }
                           668	#465: #if ( FBL_PP_SEGMENT_SIZE > kFblPresencePatternSize )
                           669	#466:       /* Clear remaining buffer if any */
                           670	#467:       for (i = kFblPresencePatternSize; i < FBL_PP_SEGMENT_SIZE; i++)
                           671	#468:       {
                           672	#469:          pFlashHeader[i] = 0;
                           673	#470:       }
                           674	#471: #endif
                           675	#472:       (void)FblRealTimeSupport();
                           676	#474:       /* Write presence pattern */
                           677	#475:       if (!ApplFblWritePattern(pFlashHeader, presPtnLen, presPtnAddress))
                           678	#476:       {
                           679	#477:          return kFblFailed;
                           680	#478:       }
                           681	#480:       /* Read mask pattern */
                           682	#481:       readResult = ApplFblReadPattern(pFlashHeader, (presPtnAddress+presPtnLen));
                           683	#482:       if ((readResult != IO_E_OK) && (readResult != IO_E_ERASED))
                           684	#483:       {
                           685	#484:          return kFblFailed;
                           686	#485:       }
                           687	#487:       /* Check if the erase pattern is set correctly */
                           688	#488:       for (i = 0u; i < kFblPresencePatternSize; i++)
                           689	#489:       {
                           690	#490:          if (pFlashHeader[i] != FBL_FLASH_DELETED)
                           691	#491:          {
                           692	#492:             return kFblFailed;
                           693	#493:          }
                           694	#494:       }
                           695	#496:       /* Return value depends on the Check if presence pattern is now valid */
                           696	#497:       result = ApplFblChkModulePresence(blockDescriptor);
                           697	#498:    }
                           698	#499:    else
                           699	#500:    {
                           700	#501:       /* Memory segment for the presence pattern address not found */
                           701	#502:       result = kFblFailed;
                           702	#503:    }
                           703	#505:    return result;
                           704	#506: }  /* PRQA S 2006 */ /* MD_MSR_14.7 */
                           705	#508: /***********************************************************************************************************************
                           706	#509:  *  ApplFblModuleClrPresence
                           707	#510:  **********************************************************************************************************************/
                           708	#511: /*! \brief       Sets the mask presence pattern in flash memory to invalidate the block.
                           709	#512:  *  \details     The location of the presence pattern will be taken from the logical block descriptor.
                           710	#513:  *  \pre         Module shall be marked as invalid now.
                           711	#514:  *  \param[in]   blockDescriptor Pointer to the logical block descriptor
                           712	#515:  *  \return      kFblOk: Mask for invalidation successfully written, kFblFailed: Error writing invalidation mask
                           713	#516:  **********************************************************************************************************************/
                           714	#517: static tFblResult ApplFblClrModulePresence( tBlockDescriptor * blockDescriptor )

                                   Fri Apr 10 08:31:56 2020           Page 14
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           715	#518: {
                           716	#519:    tFblResult                 result = kFblOk;
                           717	#520:    vuint32                    i;
                           718	#521:    IO_PositionType            presPtnAddress;
                           719	#522:    IO_SizeType                presPtnLen;
                           720	#523:    tFblpresPtnAlignedBuffer   flashHeader;
                           721	#524:    vuint8 *                   pFlashHeader;
                           722	#526:    /* Calculate location of presence pattern.           */
                           723	#527:    /* Note that the end of the block descriptor already */
                           724	#528:    /* points to the presence pattern itself.            */
                           725	#529:    memSegment = ApplFblGetPresencePatternBaseAddress(blockDescriptor->blockNr, &presPtnAddress, &presPtnLen);
                           726	#531:    /* valid segment found */
                           727	#532:    if (memSegment >= 0)
                           728	#533:    {
                           729	#534:      /* FlashWrite requires an aligned address to RAM */
                           730	#535:      pFlashHeader = flashHeader.data;
                           731	#537:       /* Check if presence pattern is set for this module */
                           732	#538:       /* Only clear and remove the marker if not already disabled */
                           733	#539:       if (ApplFblChkModulePresence(blockDescriptor) == kFblOk)
                           734	#540:       {
                           735	#541:          /* Copy presence pattern to RAM buffer */
                           736	#542:          for (i = 0u; i < kFblPresencePatternSize; i++)
                           737	#543:          {
                           738	#544:             /* Set the inverse of the presence pattern */
                           739	#545:             pFlashHeader[i] = FblInvert8Bit(blockPresencePattern[i]);
                           740	#546:          }
                           741	#547: #if ( FBL_PP_SEGMENT_SIZE > kFblPresencePatternSize )
                           742	#548:          /* Clear remaining buffer if any */
                           743	#549:          for (i = kFblPresencePatternSize; i < FBL_PP_SEGMENT_SIZE; i++)
                           744	#550:          {
                           745	#551:             pFlashHeader[i] = 0;
                           746	#552:          }
                           747	#553: #endif
                           748	#554:          /* Now write them */
                           749	#555:          if (!ApplFblWritePattern(pFlashHeader, presPtnLen, (presPtnAddress + presPtnLen)))
                           750	#556:          {
                           751	#557:             /* Writing the mask has failed. */
                           752	#558:             result = kFblFailed;
                           753	#559:          }
                           754	#560:          (void)FblRealTimeSupport();
                           755	#561:       }
                           756	#562:    }
                           757	#563:    else
                           758	#564:    {
                           759	#565:       /* Check if presence pattern is set for this module */
                           760	#566:       /* Only clear and remove the marker if not already disabled */
                           761	#567:       if (ApplFblChkModulePresence(blockDescriptor)==kFblOk)
                           762	#568:       {
                           763	#569:          result = kFblFailed;
                           764	#570:       }
                           765	#571:    }
                           766	#573:    return result;
                           767	#574: }
                           768	#576: /***********************************************************************************************************************
                           769	#577:  *  ApplFblChkModulePresence
                           770	#578:  **********************************************************************************************************************/

                                   Fri Apr 10 08:31:56 2020           Page 15
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           771	#579: /*! \brief       Checks if mask and value of the presence pattern are set for a valid module.
                           772	#580:  *  \details     The location of the presence pattern and mask is taken from the logical block table in FBL_MTAB.C.
                           773	#581:  *  \param[in]   blockDescriptor Pointer to the logical block descriptor
                           774	#582:  *  \return      kFblOk:     Presence pattern are set and Mask value are OK,
                           775	#583:  *               kFblFailed: Presence pattern not set or mask flag not correct.
                           776	#584:  **********************************************************************************************************************/
                           777	#585: /* PRQA S 3673 1 */ /* MD_FblKbApi_3673 */
                           778		.align	1
                           779		.align	1
                           780		.align	1
                           781	..gh.f.p.3.a.1.r.0.e.2:
                           782		.type	..gh.f.p.3.a.1.r.0.e.2,@object
                           783		.size	..gh.f.p.3.a.1.r.0.e.2,0
                           784		.global	ApplFblChkModulePresence
                           785	ApplFblChkModulePresence:
000000f8 182106d8          786		e_stwu	sp, -40(sp)
000000fc 1b810918          787		e_stmw	r28, 24(sp)
00000100 0080              788		se_mflr	r0
00000102 db01              789		se_stw	r0, 44(sp)
                           790	#	    .bf
                           791	.LDW41:
                           792	#586: tFblResult ApplFblChkModulePresence( tBlockDescriptor * blockDescriptor )
                           793	#587: {
                           794	#588:    vuint8           flashPresPtn[kFblPresencePatternSize];
                           795	#589:    vuint8           flashPresMsk[kFblPresencePatternSize];
                           796	#590:    IO_PositionType  presPtnAddress;
                           797	#591:    IO_SizeType      presPtnLen;
                           798	#592:    IO_ErrorType     readResult;
                           799	#593:    vuint32          i;
                           800	#594:    tFblResult       result;
                           801	#596:    result = kFblOk;
00000104 8033              802		se_lbz	r3, 0(r3)
                           803	#598:    /* Calculate location of presence pattern.           */
                           804	#599:    /* Note that the end of the block descriptor already */
                           805	#600:    /* points to the presence pattern itself.            */
                           806	#601:    memSegment = ApplFblGetPresencePatternBaseAddress(blockDescriptor->blockNr, &presPtnAddress, &presPtnLen);
00000106 480f              807		se_li	r31, 0
00000108 18818008          808		e_addi	r4, sp, 8
0000010c 18a18014          809		e_addi	r5, sp, 20
00000110 e900              810		se_bl	ApplFblGetPresencePatternBaseAddress
00000112 7380e000          811		e_lis	r28, %hiadj(memSegment)
00000116 1f9c0000          812		e_add16i	r28, r28, %lo(memSegment)
0000011a b03c              813		se_sth	r3, 0(r28)
                           814	#603:    if (memSegment < 0)
                           815	#line603
                           816	..lin.74ab1805..7c78c477.0_10::
                           817	.LDWlin10:
0000011c 2a03              818		se_cmpi	r3, 0
0000011e e400              819		se_blt	.L309
                           820	#604:    {
                           821	#605:       result = kFblFailed;
                           822	#606:    }
                           823	#608:    if (kFblOk == result)
                           824	#609:    {
                           825	#610:       /* Read presence pattern value */
                           826	#611:       readResult = ApplFblReadPattern(flashPresPtn, presPtnAddress);

                                   Fri Apr 10 08:31:56 2020           Page 16
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           827	#line611
                           828	..lin.74ab1805..7c78c477.0_11::
                           829	.LDWlin11:
00000120 18e3a00c          830		e_mulli	r7, r3, 12
00000124 73a0e000          831		e_lis	r29, %hiadj(FlashBlock)
00000128 1fbd0000          832		e_add16i	r29, r29, %lo(FlashBlock)
0000012c 04d7              833		se_add	r7, r29
0000012e 8807              834		se_lbz	r0, 8(r7)
00000130 73c0e000          835		e_lis	r30, %hiadj(memDrvLst)
00000134 1fde0000          836		e_add16i	r30, r30, %lo(memDrvLst)
00000138 c251              837		se_lwz	r5, 8(sp)
0000013a 18e0a018          838		e_mulli	r7, r0, 24
0000013e 04e7              839		se_add	r7, r30
00000140 c407              840		se_lwz	r0, 16(r7)
00000142 1861800c          841		e_addi	r3, sp, 12
00000146 4844              842		se_li	r4, 4
00000148 00b0              843		se_mtctr	r0
0000014a 0007              844		se_bctrl
                           845	#612:       if ((readResult != IO_E_OK) && (readResult != IO_E_ERASED))
0000014c 2a03              846		se_cmpi	r3, 0
0000014e e600              847		se_beq	.L307
00000150 1803a8e5          848		e_cmpi	r3, 229
00000154 e200              849		se_bne	.L309
                           850	.L307:
                           851	#613:       {
                           852	#614:          /* Read has failed */
                           853	#615:          result = kFblFailed;
                           854	#616:       }
                           855	#617:    }
                           856	#619:    if (kFblOk == result)
                           857	#620:    {
                           858	#621:       /* Read presence pattern mask */
                           859	#622:       readResult = ApplFblReadPattern(flashPresMsk, (presPtnAddress + presPtnLen));
                           860	#line622
                           861	..lin.74ab1805..7c78c477.0_12::
                           862	.LDWlin12:
00000156 381c0000          863		e_lha	r0, 0(r28)
0000015a 18e0a00c          864		e_mulli	r7, r0, 12
0000015e 04d7              865		se_add	r7, r29
00000160 8807              866		se_lbz	r0, 8(r7)
00000162 c251              867		se_lwz	r5, 8(sp)
00000164 18e0a018          868		e_mulli	r7, r0, 24
00000168 04e7              869		se_add	r7, r30
0000016a c477              870		se_lwz	r7, 16(r7)
0000016c c501              871		se_lwz	r0, 20(sp)
0000016e 18618010          872		e_addi	r3, sp, 16
00000172 4844              873		se_li	r4, 4
00000174 00b7              874		se_mtctr	r7
00000176 0405              875		se_add	r5, r0
00000178 0007              876		se_bctrl
                           877	#623:       if ((readResult != IO_E_OK) && (readResult != IO_E_ERASED))
0000017a 2a03              878		se_cmpi	r3, 0
0000017c e600              879		se_beq	.L312
0000017e 1803a8e5          880		e_cmpi	r3, 229
00000182 e600              881		se_beq	.L312
                           882	.L309:

                                   Fri Apr 10 08:31:56 2020           Page 17
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                           883	#624:       {
                           884	#625:          /* Read has failed */
                           885	#626:          result = kFblFailed;
                           886	#line626
                           887	..lin.74ab1805..7c78c477.0_13::
                           888	.LDWlin13:
00000184 481f              889		se_li	r31, 1
00000186 e800              890		se_b	.L311
                           891	.L312:
                           892	#627:       }
                           893	#628:    }
                           894	#630:    if (kFblOk == result)
                           895	#631:    {
                           896	#632:       for (i = 0u; ((i < kFblPresencePatternSize) && (kFblOk == result)); i++)
                           897	#line632
                           898	..lin.74ab1805..7c78c477.0_14::
                           899	.LDWlin14:
00000188 4800              900		se_li	r0, 0
                           901	.L315:
                           902	#633:       {
                           903	#634:          /* Compare the PP-value against the expected one */ /* PRQA S 3353 2 */ /* MD_FblKbApi_3353 */
                           904	#635:          if (   (flashPresPtn[i] != blockPresencePattern[i])
0000018a 18e1800c          905		e_addi	r7, sp, 12
0000018e 1cc00000          906		e_add16i	r6, r0, %lo(blockPresencePattern)
00000192 70069000          907		e_add2is	r6, %hiadj(blockPresencePattern)
00000196 8066              908		se_lbz	r6, 0(r6)
00000198 7ce700ae          909		lbzx	r7, r7, r0
0000019c 0d67              910		se_cmpl	r7, r6
0000019e e200              911		se_bne	.L318
000001a0 18e18010          912		e_addi	r7, sp, 16
000001a4 7ce700ae          913		lbzx	r7, r7, r0
000001a8 1807a8ff          914		e_cmpi	r7, 255
000001ac e600              915		se_beq	.L314
                           916	.L318:
                           917	#636:              || (flashPresMsk[i] != FBL_FLASH_DELETED))
                           918	#637:          {
                           919	#638:             /* PP value is different or MASK does not have its expected value */
                           920	#639:             result = kFblFailed;
                           921	#line639
                           922	..lin.74ab1805..7c78c477.0_15::
                           923	.LDWlin15:
000001ae 481f              924		se_li	r31, 1
                           925	.L314:
000001b0 2000              926		se_addi	r0, 1
000001b2 2230              927		se_cmpli	r0, 4
000001b4 e000              928		se_bge	.L311
000001b6 2a0f              929		se_cmpi	r31, 0
000001b8 e600              930		se_beq	.L315
                           931	.L311:
                           932	#640:          }
                           933	#641:       }
                           934	#642:    }
                           935	#644:    return result;
                           936	#line644
                           937	..lin.74ab1805..7c78c477.0_16::
                           938	.LDWlin16:

                                   Fri Apr 10 08:31:56 2020           Page 18
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000001ba 01f3              939		se_mr	r3, r31
                           940	#	    .ef
                           941	.LDW51:
000001bc cb01              942		se_lwz	r0, 44(sp)
000001be 1b810818          943		e_lmw	r28, 24(sp)
000001c2 18218028          944		e_addi	sp, sp, 40
000001c6 0090              945		se_mtlr	r0
000001c8 0004              946		se_blr
                           947		.global	__ghs_eofn_ApplFblChkModulePresence
                           948	__ghs_eofn_ApplFblChkModulePresence:
                           949		.type	ApplFblChkModulePresence,@function
                           950		.size	ApplFblChkModulePresence,$-ApplFblChkModulePresence
                           951		.align	1
                           952	
                           953	#function:			ApplFblChkModulePresence
                           954	#stack frame size:		40
                           955	#link area offset:		0
                           956	#local storage area offset:	8
                           957	#gpr save area offset:		24
                           958	#
                           959	#flashPresPtn	12(sp)	local
                           960	#flashPresMsk	16(sp)	local
                           961	#presPtnAddress	8(sp)	local
                           962	#presPtnLen	20(sp)	local
                           963	#readResult	r3	local
                           964	#i	r0	local
                           965	#result	r31	local
                           966	
                           967	#blockDescriptor	r3	param
                           968	
                           969		.section ".rodata","a"
                           970		.global	blockPresencePattern..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                           971	blockPresencePattern..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.:
00000000 736a293e          972	blockPresencePattern:	.byte	115,106,41,62
                           973		.type	blockPresencePattern..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,@object
                           974		.size	blockPresencePattern..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,4
                           975		.type	blockPresencePattern,@object
                           976		.size	blockPresencePattern,4
                           977		.data
                           978		.section ".vletext", "vax"
                           979		.vle
                           980		.vle
                           981	
                           982	#645: }
                           983	
                           984		.align	1
                           985		.align	1
                           986	..gh.f.p.3.a.1.r.0.e.3:
                           987		.type	..gh.f.p.3.a.1.r.0.e.3,@object
                           988		.size	..gh.f.p.3.a.1.r.0.e.3,0
                           989		.global	ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                           990	ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.:
                           991	ApplFblSetModulePresence:
000001ca 182106d8          992		e_stwu	sp, -40(sp)
000001ce 1ba1091c          993		e_stmw	r29, 28(sp)
000001d2 013e              994		se_mr	r30, r3

                                   Fri Apr 10 08:31:56 2020           Page 19
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000001d4 0080              995		se_mflr	r0
000001d6 db01              996		se_stw	r0, 44(sp)
                           997	#	    .bf
                           998	.LDW61:
                           999	#438: static tFblResult ApplFblSetModulePresence( tBlockDescriptor * blockDescriptor )
                          1000	#439: {
                          1001	#440:    IO_PositionType            presPtnAddress;
                          1002	#441:    IO_SizeType                presPtnLen;
                          1003	#442:    IO_ErrorType               readResult;
                          1004	#443:    vuint32                    i;
                          1005	#444:    tFblResult                 result;
                          1006	#445:    tFblpresPtnAlignedBuffer   flashHeader;
                          1007	#446:    vuint8 *                   pFlashHeader;
                          1008	#448:    /* Set presence pattern for this module */
                          1009	#450:    /* Calculate location of presence pattern.           */
                          1010	#451:    /* Note that the end of the block descriptor already */
                          1011	#452:    /* points to the presence pattern itself.            */
                          1012	#453:    memSegment = ApplFblGetPresencePatternBaseAddress(blockDescriptor->blockNr, &presPtnAddress, &presPtnLen);
000001d8 8033             1013		se_lbz	r3, 0(r3)
000001da 18818008         1014		e_addi	r4, sp, 8
000001de 18a1800c         1015		e_addi	r5, sp, 12
000001e2 78000001         1016		se_bl	ApplFblGetPresencePatternBaseAddress
000001e6 73a0e000         1017		e_lis	r29, %hiadj(memSegment)
000001ea 1fbd0000         1018		e_add16i	r29, r29, %lo(memSegment)
000001ee b03d             1019		se_sth	r3, 0(r29)
                          1020	#455:    if (memSegment >= 0)
                          1021	#line455
                          1022	..lin.74ab1805..42fa4ead.0_17::
                          1023	.LDWlin17:
000001f0 2a03             1024		se_cmpi	r3, 0
000001f2 e400             1025		se_blt	.L1394
                          1026	#456:    {
                          1027	#457:       /* FlashWrite requires an aligned address to RAM */
                          1028	#458:       pFlashHeader = flashHeader.data;
                          1029	#460:       /* Copy presence pattern to RAM buffer */
                          1030	#461:       for (i = 0u; i < kFblPresencePatternSize; i++)
                          1031	#line461
                          1032	..lin.74ab1805..42fa4ead.0_18::
                          1033	.LDWlin18:
000001f4 4800             1034		se_li	r0, 0
                          1035	.L1398:
                          1036	#462:       {
                          1037	#463:          pFlashHeader[i] = blockPresencePattern[i];
000001f6 1ce00000         1038		e_add16i	r7, r0, %lo(blockPresencePattern)
000001fa 70079000         1039		e_add2is	r7, %hiadj(blockPresencePattern)
000001fe 8077             1040		se_lbz	r7, 0(r7)
00000200 1be18014         1041		e_addi	r31, sp, 20
00000204 7cff01ae         1042		stbx	r7, r31, r0
00000208 2000             1043		se_addi	r0, 1
0000020a 2230             1044		se_cmpli	r0, 4
0000020c e400             1045		se_blt	.L1398
                          1046	#464:       }
                          1047	#465: #if ( FBL_PP_SEGMENT_SIZE > kFblPresencePatternSize )
                          1048	#466:       /* Clear remaining buffer if any */
                          1049	#467:       for (i = kFblPresencePatternSize; i < FBL_PP_SEGMENT_SIZE; i++)
                          1050	#line467

                                   Fri Apr 10 08:31:56 2020           Page 20
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1051	..lin.74ab1805..42fa4ead.0_19::
                          1052	.LDWlin19:
0000020e 4840             1053		se_li	r0, 4
                          1054	.L1401:
                          1055	#468:       {
                          1056	#469:          pFlashHeader[i] = 0;
00000210 4807             1057		se_li	r7, 0
00000212 7cff01ae         1058		stbx	r7, r31, r0
00000216 2000             1059		se_addi	r0, 1
00000218 2270             1060		se_cmpli	r0, 8
0000021a e400             1061		se_blt	.L1401
                          1062	#470:       }
                          1063	#471: #endif
                          1064	#472:       (void)FblRealTimeSupport();
                          1065	#line472
                          1066	..lin.74ab1805..42fa4ead.0_20::
                          1067	.LDWlin20:
0000021c 78000001         1068		e_bl	FblRealTimeSupport
                          1069	#474:       /* Write presence pattern */
                          1070	#475:       if (!ApplFblWritePattern(pFlashHeader, presPtnLen, presPtnAddress))
00000220 c341             1071		se_lwz	r4, 12(sp)
00000222 c251             1072		se_lwz	r5, 8(sp)
00000224 01f3             1073		se_mr	r3, r31
00000226 78000001         1074		e_bl	MemDriver_RWriteSync
0000022a 2a03             1075		se_cmpi	r3, 0
0000022c e200             1076		se_bne	.L1394
                          1077	#476:       {
                          1078	#477:          return kFblFailed;
                          1079	#478:       }
                          1080	#480:       /* Read mask pattern */
                          1081	#481:       readResult = ApplFblReadPattern(pFlashHeader, (presPtnAddress+presPtnLen));
                          1082	#line481
                          1083	..lin.74ab1805..42fa4ead.0_21::
                          1084	.LDWlin21:
0000022e 381d0000         1085		e_lha	r0, 0(r29)
00000232 1800a00c         1086		e_mulli	r0, r0, 12
00000236 1ce00008         1087		e_add16i	r7, r0, %lo(FlashBlock+8)
0000023a 70079000         1088		e_add2is	r7, %hiadj(FlashBlock+8)
0000023e 8007             1089		se_lbz	r0, 0(r7)
00000240 c251             1090		se_lwz	r5, 8(sp)
00000242 1800a018         1091		e_mulli	r0, r0, 24
00000246 1cc00010         1092		e_add16i	r6, r0, %lo(memDrvLst+16)
0000024a 70069000         1093		e_add2is	r6, %hiadj(memDrvLst+16)
0000024e c076             1094		se_lwz	r7, 0(r6)
00000250 c301             1095		se_lwz	r0, 12(sp)
00000252 01f3             1096		se_mr	r3, r31
00000254 4844             1097		se_li	r4, 4
00000256 00b7             1098		se_mtctr	r7
00000258 0405             1099		se_add	r5, r0
0000025a 0007             1100		se_bctrl
                          1101	#482:       if ((readResult != IO_E_OK) && (readResult != IO_E_ERASED))
0000025c 2a03             1102		se_cmpi	r3, 0
0000025e e600             1103		se_beq	.L1405
00000260 1803a8e5         1104		e_cmpi	r3, 229
00000264 e200             1105		se_bne	.L1394
                          1106	#483:       {

                                   Fri Apr 10 08:31:56 2020           Page 21
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1107	#484:          return kFblFailed;
                          1108	.L1405:
                          1109	#485:       }
                          1110	#487:       /* Check if the erase pattern is set correctly */
                          1111	#488:       for (i = 0u; i < kFblPresencePatternSize; i++)
                          1112	#line488
                          1113	..lin.74ab1805..42fa4ead.0_22::
                          1114	.LDWlin22:
00000266 4800             1115		se_li	r0, 0
                          1116	.L1411:
                          1117	#489:       {
                          1118	#490:          if (pFlashHeader[i] != FBL_FLASH_DELETED)
00000268 7cff00ae         1119		lbzx	r7, r31, r0
0000026c 1807a8ff         1120		e_cmpi	r7, 255
00000270 e200             1121		se_bne	.L1394
                          1122	#491:          {
                          1123	#492:             return kFblFailed;
                          1124	#line488
                          1125	..lin.74ab1805..42fa4ead.0_23::
                          1126	.LDWlin23:
00000272 2000             1127		se_addi	r0, 1
00000274 2230             1128		se_cmpli	r0, 4
00000276 e400             1129		se_blt	.L1411
                          1130	#493:          }
                          1131	#494:       }
                          1132	#496:       /* Return value depends on the Check if presence pattern is now valid */
                          1133	#497:       result = ApplFblChkModulePresence(blockDescriptor);
                          1134	#line497
                          1135	..lin.74ab1805..42fa4ead.0_24::
                          1136	.LDWlin24:
00000278 01e3             1137		se_mr	r3, r30
0000027a 78000001         1138		se_bl	ApplFblChkModulePresence
0000027e e800             1139		se_b	.L1392
                          1140	.L1394:
                          1141	#498:    }
                          1142	#499:    else
                          1143	#500:    {
                          1144	#501:       /* Memory segment for the presence pattern address not found */
                          1145	#502:       result = kFblFailed;
                          1146	#line502
                          1147	..lin.74ab1805..42fa4ead.0_25::
                          1148	.LDWlin25:
00000280 4813             1149		se_li	r3, 1
                          1150	#503:    }
                          1151	#505:    return result;
                          1152	.L1392:
                          1153	#	    .ef
                          1154	.LDW71:
00000282 cb01             1155		se_lwz	r0, 44(sp)
00000284 1ba1081c         1156		e_lmw	r29, 28(sp)
00000288 18218028         1157		e_addi	sp, sp, 40
0000028c 0090             1158		se_mtlr	r0
0000028e 0004             1159		se_blr
                          1160	__ghs_eofn_ApplFblSetModulePresence:
                          1161		.type	ApplFblSetModulePresence,@function
                          1162		.size	ApplFblSetModulePresence,$-ApplFblSetModulePresence

                                   Fri Apr 10 08:31:56 2020           Page 22
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1163		.type	ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,@function
                          1164		.size	ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,$-ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                          1165		.align	1
                          1166	
                          1167	#function:			ApplFblSetModulePresence
                          1168	#stack frame size:		40
                          1169	#link area offset:		0
                          1170	#local storage area offset:	8
                          1171	#gpr save area offset:		28
                          1172	#
                          1173	#presPtnAddress	8(sp)	local
                          1174	#presPtnLen	12(sp)	local
                          1175	#readResult	r3	local
                          1176	#i	r0	local
                          1177	#result	r3	local
                          1178	#flashHeader	16(sp)	local
                          1179	
                          1180	#blockDescriptor	r30	param
                          1181	
                          1182		.data
                          1183		.section ".vletext", "vax"
                          1184		.vle
                          1185		.vle
                          1186	
                          1187	#506: }  /* PRQA S 2006 */ /* MD_MSR_14.7 */
                          1188	
                          1189	#508: /***********************************************************************************************************************
                          1190	#509:  *  ApplFblModuleClrPresence
                          1191	#510:  **********************************************************************************************************************/
                          1192	#511: /*! \brief       Sets the mask presence pattern in flash memory to invalidate the block.
                          1193	#512:  *  \details     The location of the presence pattern will be taken from the logical block descriptor.
                          1194	#513:  *  \pre         Module shall be marked as invalid now.
                          1195	#514:  *  \param[in]   blockDescriptor Pointer to the logical block descriptor
                          1196	#515:  *  \return      kFblOk: Mask for invalidation successfully written, kFblFailed: Error writing invalidation mask
                          1197	#516:  **********************************************************************************************************************/
                          1198		.align	1
                          1199		.align	1
                          1200	..gh.f.p.3.a.1.r.0.e.4:
                          1201		.type	..gh.f.p.3.a.1.r.0.e.4,@object
                          1202		.size	..gh.f.p.3.a.1.r.0.e.4,0
                          1203		.global	ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                          1204	ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.:
                          1205	ApplFblClrModulePresence:
00000290 182106d8         1206		e_stwu	sp, -40(sp)
00000294 1bc10920         1207		e_stmw	r30, 32(sp)
00000298 0080             1208		se_mflr	r0
0000029a db01             1209		se_stw	r0, 44(sp)
0000029c 013e             1210		se_mr	r30, r3
                          1211	#	    .bf
                          1212	.LDW81:
                          1213	#517: static tFblResult ApplFblClrModulePresence( tBlockDescriptor * blockDescriptor )
                          1214	#518: {
                          1215	#519:    tFblResult                 result = kFblOk;
0000029e 8033             1216		se_lbz	r3, 0(r3)
                          1217	#520:    vuint32                    i;
                          1218	#521:    IO_PositionType            presPtnAddress;

                                   Fri Apr 10 08:31:56 2020           Page 23
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1219	#522:    IO_SizeType                presPtnLen;
                          1220	#523:    tFblpresPtnAlignedBuffer   flashHeader;
                          1221	#524:    vuint8 *                   pFlashHeader;
                          1222	#526:    /* Calculate location of presence pattern.           */
                          1223	#527:    /* Note that the end of the block descriptor already */
                          1224	#528:    /* points to the presence pattern itself.            */
                          1225	#529:    memSegment = ApplFblGetPresencePatternBaseAddress(blockDescriptor->blockNr, &presPtnAddress, &presPtnLen);
000002a0 480f             1226		se_li	r31, 0
000002a2 18818008         1227		e_addi	r4, sp, 8
000002a6 18a1800c         1228		e_addi	r5, sp, 12
000002aa 78000001         1229		se_bl	ApplFblGetPresencePatternBaseAddress
000002ae 70e0e000         1230		e_lis	r7, %hiadj(memSegment)
000002b2 5c670000         1231		e_sth	r3, %lo(memSegment)(r7)
                          1232	#531:    /* valid segment found */
                          1233	#532:    if (memSegment >= 0)
                          1234	#line532
                          1235	..lin.74ab1805..24415c42.0_26::
                          1236	.LDWlin26:
000002b6 2a03             1237		se_cmpi	r3, 0
000002b8 01e3             1238		se_mr	r3, r30
000002ba e400             1239		se_blt	.L1652
                          1240	#533:    {
                          1241	#534:      /* FlashWrite requires an aligned address to RAM */
                          1242	#535:      pFlashHeader = flashHeader.data;
                          1243	#537:       /* Check if presence pattern is set for this module */
                          1244	#538:       /* Only clear and remove the marker if not already disabled */
                          1245	#539:       if (ApplFblChkModulePresence(blockDescriptor) == kFblOk)
                          1246	#line539
                          1247	..lin.74ab1805..24415c42.0_27::
                          1248	.LDWlin27:
000002bc 78000001         1249		se_bl	ApplFblChkModulePresence
000002c0 2a03             1250		se_cmpi	r3, 0
000002c2 e200             1251		se_bne	.L1664
                          1252	#540:       {
                          1253	#541:          /* Copy presence pattern to RAM buffer */
                          1254	#542:          for (i = 0u; i < kFblPresencePatternSize; i++)
                          1255	#line542
                          1256	..lin.74ab1805..24415c42.0_28::
                          1257	.LDWlin28:
000002c4 0130             1258		se_mr	r0, r3
                          1259	.L1658:
                          1260	#543:          {
                          1261	#544:             /* Set the inverse of the presence pattern */
                          1262	#545:             pFlashHeader[i] = FblInvert8Bit(blockPresencePattern[i]);
000002c6 1ce00000         1263		e_add16i	r7, r0, %lo(blockPresencePattern)
000002ca 70079000         1264		e_add2is	r7, %hiadj(blockPresencePattern)
000002ce 8077             1265		se_lbz	r7, 0(r7)
000002d0 18618014         1266		e_addi	r3, sp, 20
000002d4 18e7e0ff         1267		e_xori	r7, r7, 255
000002d8 7ce301ae         1268		stbx	r7, r3, r0
000002dc 2000             1269		se_addi	r0, 1
000002de 2230             1270		se_cmpli	r0, 4
000002e0 e400             1271		se_blt	.L1658
                          1272	#546:          }
                          1273	#547: #if ( FBL_PP_SEGMENT_SIZE > kFblPresencePatternSize )
                          1274	#548:          /* Clear remaining buffer if any */

                                   Fri Apr 10 08:31:56 2020           Page 24
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1275	#549:          for (i = kFblPresencePatternSize; i < FBL_PP_SEGMENT_SIZE; i++)
                          1276	#line549
                          1277	..lin.74ab1805..24415c42.0_29::
                          1278	.LDWlin29:
000002e2 4840             1279		se_li	r0, 4
                          1280	.L1661:
                          1281	#550:          {
                          1282	#551:             pFlashHeader[i] = 0;
000002e4 4807             1283		se_li	r7, 0
000002e6 7ce301ae         1284		stbx	r7, r3, r0
000002ea 2000             1285		se_addi	r0, 1
000002ec 2270             1286		se_cmpli	r0, 8
000002ee e400             1287		se_blt	.L1661
                          1288	#552:          }
                          1289	#553: #endif
                          1290	#554:          /* Now write them */
                          1291	#555:          if (!ApplFblWritePattern(pFlashHeader, presPtnLen, (presPtnAddress + presPtnLen)))
                          1292	#line555
                          1293	..lin.74ab1805..24415c42.0_30::
                          1294	.LDWlin30:
000002f0 c251             1295		se_lwz	r5, 8(sp)
000002f2 c341             1296		se_lwz	r4, 12(sp)
000002f4 0445             1297		se_add	r5, r4
000002f6 78000001         1298		e_bl	MemDriver_RWriteSync
000002fa 2a03             1299		se_cmpi	r3, 0
000002fc e600             1300		se_beq	.L1662
                          1301	#556:          {
                          1302	#557:             /* Writing the mask has failed. */
                          1303	#558:             result = kFblFailed;
                          1304	#line558
                          1305	..lin.74ab1805..24415c42.0_31::
                          1306	.LDWlin31:
000002fe 481f             1307		se_li	r31, 1
                          1308	.L1662:
                          1309	#559:          }
                          1310	#560:          (void)FblRealTimeSupport();
00000300 78000001         1311		e_bl	FblRealTimeSupport
00000304 e800             1312		se_b	.L1664
                          1313	.L1652:
                          1314	#561:       }
                          1315	#562:    }
                          1316	#563:    else
                          1317	#564:    {
                          1318	#565:       /* Check if presence pattern is set for this module */
                          1319	#566:       /* Only clear and remove the marker if not already disabled */
                          1320	#567:       if (ApplFblChkModulePresence(blockDescriptor)==kFblOk)
                          1321	#line567
                          1322	..lin.74ab1805..24415c42.0_32::
                          1323	.LDWlin32:
00000306 78000001         1324		se_bl	ApplFblChkModulePresence
0000030a 2a03             1325		se_cmpi	r3, 0
0000030c e200             1326		se_bne	.L1664
                          1327	#568:       {
                          1328	#569:          result = kFblFailed;
                          1329	#line569
                          1330	..lin.74ab1805..24415c42.0_33::

                                   Fri Apr 10 08:31:56 2020           Page 25
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1331	.LDWlin33:
0000030e 481f             1332		se_li	r31, 1
                          1333	.L1664:
                          1334	#570:       }
                          1335	#571:    }
                          1336	#573:    return result;
00000310 01f3             1337		se_mr	r3, r31
                          1338	#	    .ef
                          1339	.LDW91:
00000312 cb01             1340		se_lwz	r0, 44(sp)
00000314 1bc10820         1341		e_lmw	r30, 32(sp)
00000318 18218028         1342		e_addi	sp, sp, 40
0000031c 0090             1343		se_mtlr	r0
0000031e 0004             1344		se_blr
                          1345	__ghs_eofn_ApplFblClrModulePresence:
                          1346		.type	ApplFblClrModulePresence,@function
                          1347		.size	ApplFblClrModulePresence,$-ApplFblClrModulePresence
                          1348		.type	ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,@function
                          1349		.size	ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.,$-ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                          1350		.align	1
                          1351	
                          1352	#function:			ApplFblClrModulePresence
                          1353	#stack frame size:		40
                          1354	#link area offset:		0
                          1355	#local storage area offset:	12
                          1356	#gpr save area offset:		32
                          1357	#
                          1358	#result	r31	local
                          1359	#i	r0	local
                          1360	#presPtnAddress	8(sp)	local
                          1361	#presPtnLen	12(sp)	local
                          1362	#flashHeader	16(sp)	local
                          1363	
                          1364	#blockDescriptor	r30	param
                          1365	
                          1366		.data
                          1367		.section ".vletext", "vax"
                          1368		.vle
                          1369		.vle
                          1370	
                          1371	#574: }
                          1372	
                          1373	#576: /***********************************************************************************************************************
                          1374	#577:  *  ApplFblChkModulePresence
                          1375	#578:  **********************************************************************************************************************/
                          1376	#579: /*! \brief       Checks if mask and value of the presence pattern are set for a valid module.
                          1377	#580:  *  \details     The location of the presence pattern and mask is taken from the logical block table in FBL_MTAB.C.
                          1378	#581:  *  \param[in]   blockDescriptor Pointer to the logical block descriptor
                          1379	#582:  *  \return      kFblOk:     Presence pattern are set and Mask value are OK,
                          1380	#583:  *               kFblFailed: Presence pattern not set or mask flag not correct.
                          1381	#584:  **********************************************************************************************************************/
                          1382	#585: /* PRQA S 3673 1 */ /* MD_FblKbApi_3673 */
                          1383	#586: tFblResult ApplFblChkModulePresence( tBlockDescriptor * blockDescriptor )
                          1384	#587: {
                          1385	#588:    vuint8           flashPresPtn[kFblPresencePatternSize];
                          1386	#589:    vuint8           flashPresMsk[kFblPresencePatternSize];

                                   Fri Apr 10 08:31:56 2020           Page 26
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1387	#590:    IO_PositionType  presPtnAddress;
                          1388	#591:    IO_SizeType      presPtnLen;
                          1389	#592:    IO_ErrorType     readResult;
                          1390	#593:    vuint32          i;
                          1391	#594:    tFblResult       result;
                          1392	#596:    result = kFblOk;
                          1393	#598:    /* Calculate location of presence pattern.           */
                          1394	#599:    /* Note that the end of the block descriptor already */
                          1395	#600:    /* points to the presence pattern itself.            */
                          1396	#601:    memSegment = ApplFblGetPresencePatternBaseAddress(blockDescriptor->blockNr, &presPtnAddress, &presPtnLen);
                          1397	#603:    if (memSegment < 0)
                          1398	#604:    {
                          1399	#605:       result = kFblFailed;
                          1400	#606:    }
                          1401	#608:    if (kFblOk == result)
                          1402	#609:    {
                          1403	#610:       /* Read presence pattern value */
                          1404	#611:       readResult = ApplFblReadPattern(flashPresPtn, presPtnAddress);
                          1405	#612:       if ((readResult != IO_E_OK) && (readResult != IO_E_ERASED))
                          1406	#613:       {
                          1407	#614:          /* Read has failed */
                          1408	#615:          result = kFblFailed;
                          1409	#616:       }
                          1410	#617:    }
                          1411	#619:    if (kFblOk == result)
                          1412	#620:    {
                          1413	#621:       /* Read presence pattern mask */
                          1414	#622:       readResult = ApplFblReadPattern(flashPresMsk, (presPtnAddress + presPtnLen));
                          1415	#623:       if ((readResult != IO_E_OK) && (readResult != IO_E_ERASED))
                          1416	#624:       {
                          1417	#625:          /* Read has failed */
                          1418	#626:          result = kFblFailed;
                          1419	#627:       }
                          1420	#628:    }
                          1421	#630:    if (kFblOk == result)
                          1422	#631:    {
                          1423	#632:       for (i = 0u; ((i < kFblPresencePatternSize) && (kFblOk == result)); i++)
                          1424	#633:       {
                          1425	#634:          /* Compare the PP-value against the expected one */ /* PRQA S 3353 2 */ /* MD_FblKbApi_3353 */
                          1426	#635:          if (   (flashPresPtn[i] != blockPresencePattern[i])
                          1427	#636:              || (flashPresMsk[i] != FBL_FLASH_DELETED))
                          1428	#637:          {
                          1429	#638:             /* PP value is different or MASK does not have its expected value */
                          1430	#639:             result = kFblFailed;
                          1431	#640:          }
                          1432	#641:       }
                          1433	#642:    }
                          1434	#644:    return result;
                          1435	#645: }
                          1436	#647: /***********************************************************************************************************************
                          1437	#648:  *  ApplFblAdjustLbtBlockData
                          1438	#649:  **********************************************************************************************************************/
                          1439	#650: /*! \brief         This function is called whenever the bootloader queries the range for the logical blocks.
                          1440	#651:  *  \details       This info is typically stored in fbl_mtab.c and generated from GENy. This function
                          1441	#652:  *                 can be used to spare a range from the LBT at runtime that shall not be flashed.
                          1442	#653:  *                 The purpose of this function is mainly to spare two flashable

                                   Fri Apr 10 08:31:56 2020           Page 27
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1443	#654:  *                 segments at the very end to store the mask and pattern for validation,
                          1444	#655:  *                 so that they can't overwritten during a download.
                          1445	#656:  *                 | programmable data | mask | pattern |
                          1446	#657:  *  \param[in,out] blockDescriptor Pointer to LBT-Descriptor
                          1447	#658:  **********************************************************************************************************************/
                          1448		.align	1
                          1449		.align	1
                          1450	..gh.f.p.3.a.1.r.0.e.5:
                          1451		.type	..gh.f.p.3.a.1.r.0.e.5,@object
                          1452		.size	..gh.f.p.3.a.1.r.0.e.5,0
                          1453		.global	ApplFblAdjustLbtBlockData
                          1454	ApplFblAdjustLbtBlockData:
00000320 182106e8         1455		e_stwu	sp, -24(sp)
00000324 0080             1456		se_mflr	r0
00000326 d5f1             1457		se_stw	r31, 20(sp)
00000328 d701             1458		se_stw	r0, 28(sp)
0000032a 013f             1459		se_mr	r31, r3
                          1460	#	    .bf
                          1461	.LDW02:
                          1462	#659: tFblResult ApplFblAdjustLbtBlockData( tBlockDescriptor * blockDescriptor )
                          1463	#660: {
                          1464	#661:    IO_PositionType  presPtnAddress;
                          1465	#662:    IO_SizeType      presPtnLen;
                          1466	#663:    tFblResult       result;
                          1467	#665:    /* Calculate location of presence pattern.           */
                          1468	#666:    /* Note that the end of the block descriptor already */
                          1469	#667:    /* points to the presence pattern itself.            */
                          1470	#668:    memSegment = ApplFblGetPresencePatternBaseAddress(blockDescriptor->blockNr, &presPtnAddress, &presPtnLen);
0000032c 8033             1471		se_lbz	r3, 0(r3)
0000032e 18a18008         1472		e_addi	r5, sp, 8
00000332 1881800c         1473		e_addi	r4, sp, 12
00000336 78000001         1474		se_bl	ApplFblGetPresencePatternBaseAddress
0000033a 70e0e000         1475		e_lis	r7, %hiadj(memSegment)
0000033e 5c670000         1476		e_sth	r3, %lo(memSegment)(r7)
                          1477	#670:    if (memSegment >= 0)
                          1478	#line670
                          1479	..lin.74ab1805..6258acd8.0_34::
                          1480	.LDWlin34:
00000342 2a03             1481		se_cmpi	r3, 0
00000344 e400             1482		se_blt	.L2270
                          1483	#671:    {
                          1484	#672:       /* Reduce length for presence pattern and mask */
                          1485	#673:       blockDescriptor->blockLength -= (presPtnLen*2);
                          1486	#line673
                          1487	..lin.74ab1805..6258acd8.0_35::
                          1488	.LDWlin35:
00000346 c201             1489		se_lwz	r0, 8(sp)
00000348 c37f             1490		se_lwz	r7, 12(r31)
0000034a 6c10             1491		se_slwi	r0, 1
0000034c 0607             1492		se_sub	r7, r0
0000034e d37f             1493		se_stw	r7, 12(r31)
                          1494	#674:       result = kFblOk;
00000350 4803             1495		se_li	r3, 0
00000352 e800             1496		se_b	.L2268
                          1497	.L2270:
                          1498	#675:    }

                                   Fri Apr 10 08:31:56 2020           Page 28
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1499	#676:    else
                          1500	#677:    {
                          1501	#678:       result = kFblFailed;
                          1502	#line678
                          1503	..lin.74ab1805..6258acd8.0_36::
                          1504	.LDWlin36:
00000354 4813             1505		se_li	r3, 1
                          1506	#679:    }
                          1507	#681:    return result;
                          1508	.L2268:
                          1509	#	    .ef
                          1510	.LDW12:
00000356 c701             1511		se_lwz	r0, 28(sp)
00000358 c5f1             1512		se_lwz	r31, 20(sp)
0000035a 2171             1513		se_addi	sp, 24
0000035c 0090             1514		se_mtlr	r0
0000035e 0004             1515		se_blr
                          1516		.global	__ghs_eofn_ApplFblAdjustLbtBlockData
                          1517	__ghs_eofn_ApplFblAdjustLbtBlockData:
                          1518		.type	ApplFblAdjustLbtBlockData,@function
                          1519		.size	ApplFblAdjustLbtBlockData,$-ApplFblAdjustLbtBlockData
                          1520		.align	1
                          1521	
                          1522	#function:			ApplFblAdjustLbtBlockData
                          1523	#stack frame size:		24
                          1524	#link area offset:		0
                          1525	#local storage area offset:	12
                          1526	#gpr save area offset:		20
                          1527	#
                          1528	#presPtnAddress	12(sp)	local
                          1529	#presPtnLen	8(sp)	local
                          1530	#result	r3	local
                          1531	
                          1532	#blockDescriptor	r31	param
                          1533	
                          1534		.data
                          1535		.section ".vletext", "vax"
                          1536		.vle
                          1537		.vle
                          1538	
                          1539	#682: }
                          1540	
                          1541	#683: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          1542	#685: /***********************************************************************************************************************
                          1543	#686:  *  ApplFblGetModuleHeaderAddress
                          1544	#687:  **********************************************************************************************************************/
                          1545	#688: /*! \brief       This function has to return the address of the module header.
                          1546	#689:  *  \pre         Logical blocks need a module header
                          1547	#690:  *  \param[in]   blockNr
                          1548	#691:  *  \return      Address of module header information structure
                          1549	#692:  **********************************************************************************************************************/
                          1550		.align	1
                          1551		.align	1
                          1552	..gh.f.p.3.a.1.r.0.e.6:
                          1553		.type	..gh.f.p.3.a.1.r.0.e.6,@object
                          1554		.size	..gh.f.p.3.a.1.r.0.e.6,0

                                   Fri Apr 10 08:31:56 2020           Page 29
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1555		.global	ApplFblGetModuleHeaderAddress
                          1556	ApplFblGetModuleHeaderAddress:
                          1557	#	    .bf
                          1558	.LDW22:
                          1559	#693: tFblAddress ApplFblGetModuleHeaderAddress( vuint8 blockNr )
                          1560	#694: {
                          1561	#695:    tFblAddress moduleHeaderAddr;
                          1562	#697:    /* The module header (containing the software identification information   *
                          1563	#698:     * and the interface version for consistency check) may be placed          *
                          1564	#699:     * at e.g.                                                                 *
                          1565	#700:     * - the beginning of the logical block (offset = +0x00 ) or               *
                          1566	#701:     * - with an offset to the beginning of the block (offset = +0xXX)         *
                          1567	#702:     * - with an offset to the end of the block (offset = -0xXX)               *
                          1568	#703:     * To provide an application specific flexibility, this function can       *
                          1569	#704:     * return the address depending on the block type and -number.             */
                          1570	#706:    /* Determine the module header address: */
                          1571	#707:    if (blockNr == 0x00)
00000360 70e0e000         1572		e_lis	r7, %hiadj(FblLogicalBlockTable)
00000364 1ce70000         1573		e_add16i	r7, r7, %lo(FblLogicalBlockTable)
00000368 2a03             1574		se_cmpi	r3, 0
0000036a e200             1575		se_bne	.L2340
                          1576	#708:    {
                          1577	#709:       /* This is just a demonstration, that e.g. a certain block  *
                          1578	#710:        * can be treated different (with a certain offset):        */
                          1579	#711:       moduleHeaderAddr = FblLogicalBlockTable.logicalBlock[blockNr].blockStartAddress + 0x500;
                          1580	#line711
                          1581	..lin.74ab1805..88768f1b.0_37::
                          1582	.LDWlin37:
0000036c c407             1583		se_lwz	r0, 16(r7)
0000036e 18608105         1584		e_addi	r3, r0, 1280
00000372 0004             1585		se_blr
                          1586	.L2340:
                          1587	#712:    }
                          1588	#713:    else
                          1589	#714:    {
                          1590	#715:       /* For all other blocks: */
                          1591	#716:       moduleHeaderAddr = FblLogicalBlockTable.logicalBlock[blockNr].blockStartAddress;
00000374 18c3a018         1592		e_mulli	r6, r3, 24
00000378 0476             1593		se_add	r6, r7
0000037a c436             1594		se_lwz	r3, 16(r6)
                          1595	#717:    }
                          1596	#719:    return moduleHeaderAddr;
                          1597	#	    .ef
                          1598	.LDW32:
0000037c 0004             1599		se_blr
                          1600		.global	__ghs_eofn_ApplFblGetModuleHeaderAddress
                          1601	__ghs_eofn_ApplFblGetModuleHeaderAddress:
                          1602		.type	ApplFblGetModuleHeaderAddress,@function
                          1603		.size	ApplFblGetModuleHeaderAddress,$-ApplFblGetModuleHeaderAddress
                          1604		.align	1
                          1605	
                          1606	#function:			ApplFblGetModuleHeaderAddress
                          1607	#stack frame size:		0
                          1608	#
                          1609	#moduleHeaderAddr	r3	local
                          1610	

                                   Fri Apr 10 08:31:56 2020           Page 30
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1611	#blockNr	r3	param
                          1612	
                          1613		.data
                          1614		.section ".vletext", "vax"
                          1615		.vle
                          1616		.vle
                          1617	
                          1618	#720: }
                          1619	
                          1620	#722: /***********************************************************************************************************************
                          1621	#723:  *  ApplFblExtProgRequest
                          1622	#724:  **********************************************************************************************************************/
                          1623	#725: /*! \brief       Function is called on power-on reset to check if an external programming request exists.
                          1624	#726:  *  \details     If the flag is set, the flag is cleared and the function returns kProgRequest.
                          1625	#727:  *  \return      kProgRequest = external programming request, kNoProgRequest = programming request flag not set
                          1626	#728:  **********************************************************************************************************************/
                          1627		.align	1
                          1628		.align	1
                          1629	..gh.f.p.0.a.1.r.0.e.7:
                          1630		.type	..gh.f.p.0.a.1.r.0.e.7,@object
                          1631		.size	..gh.f.p.0.a.1.r.0.e.7,0
                          1632		.global	ApplFblExtProgRequest
                          1633	ApplFblExtProgRequest:
                          1634	#	    .bf
                          1635	.LDW42:
                          1636	#729: tFblProgStatus ApplFblExtProgRequest( void )
                          1637	#730: {
                          1638	#731:    tFblProgStatus progStatus;
                          1639	#732: # if defined( FBL_ENABLE_FBL_START )
                          1640	#733:    /* Check a pattern in uninitialized RAM to see if this
                          1641	#734:     * is a reprogramming request from the application */
                          1642	#735:    if (FblChkFblStartMagicFlag())
0000037e 70e0e000         1643		e_lis	r7, %hiadj(fblStartMagicFlag)
00000382 1ce70000         1644		e_add16i	r7, r7, %lo(fblStartMagicFlag)
00000386 8007             1645		se_lbz	r0, 0(r7)
00000388 1800a850         1646		e_cmpi	r0, 80
0000038c e200             1647		se_bne	.L2426
0000038e 8107             1648		se_lbz	r0, 1(r7)
00000390 1800a872         1649		e_cmpi	r0, 114
00000394 e200             1650		se_bne	.L2426
00000396 8207             1651		se_lbz	r0, 2(r7)
00000398 1800a86f         1652		e_cmpi	r0, 111
0000039c e200             1653		se_bne	.L2426
0000039e 8307             1654		se_lbz	r0, 3(r7)
000003a0 1800a867         1655		e_cmpi	r0, 103
000003a4 e200             1656		se_bne	.L2426
000003a6 8407             1657		se_lbz	r0, 4(r7)
000003a8 1800a853         1658		e_cmpi	r0, 83
000003ac e200             1659		se_bne	.L2426
000003ae 8507             1660		se_lbz	r0, 5(r7)
000003b0 1800a869         1661		e_cmpi	r0, 105
000003b4 e200             1662		se_bne	.L2426
000003b6 8607             1663		se_lbz	r0, 6(r7)
000003b8 1800a867         1664		e_cmpi	r0, 103
000003bc e200             1665		se_bne	.L2426
000003be 8707             1666		se_lbz	r0, 7(r7)

                                   Fri Apr 10 08:31:56 2020           Page 31
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000003c0 1800a86e         1667		e_cmpi	r0, 110
000003c4 e200             1668		se_bne	.L2426
                          1669	#736:    {
                          1670	#737:       /* Clear immediately the request */
                          1671	#738:       FblClrFblStartMagicFlag();
                          1672	#line738
                          1673	..lin.74ab1805..cd1eb6d8.0_38::
                          1674	.LDWlin38:
000003c6 4800             1675		se_li	r0, 0
000003c8 9007             1676		se_stb	r0, 0(r7)
000003ca 9107             1677		se_stb	r0, 1(r7)
000003cc 9207             1678		se_stb	r0, 2(r7)
000003ce 9307             1679		se_stb	r0, 3(r7)
000003d0 9407             1680		se_stb	r0, 4(r7)
000003d2 9507             1681		se_stb	r0, 5(r7)
000003d4 9607             1682		se_stb	r0, 6(r7)
000003d6 9707             1683		se_stb	r0, 7(r7)
                          1684	#740:       progStatus = kProgRequest;
000003d8 0103             1685		se_mr	r3, r0
000003da 0004             1686		se_blr
                          1687	.L2426:
                          1688	#741:    }
                          1689	#742: # else /* ! FBL_ENABLE_FBL_START */
                          1690	#743:    vuint8 progReqFlag;
                          1691	#745:    /* Check the reprogramming request flag */
                          1692	#746:    if (ApplFblNvReadProgReqFlag(&progReqFlag) == kFblOk)
                          1693	#747:    {
                          1694	#748:       if (progReqFlag == kEepFblReprogram)
                          1695	#749:       {
                          1696	#750:          /* Reprogramming flag is set, clear flag */
                          1697	#751:          progReqFlag = 0u;
                          1698	#752:          (void)ApplFblNvWriteProgReqFlag(&progReqFlag);  /* PRQA S 3425 */ /* MD_FblKbApiOem_3425 */
                          1699	#754:          progStatus = kProgRequest;
                          1700	#755:       }
                          1701	#756:       else /* != kEepFblReprogram */
                          1702	#757:       {
                          1703	#758:          progStatus = kNoProgRequest;
                          1704	#759:       }
                          1705	#760:    }
                          1706	#761: # endif /* ! FBL_ENABLE_FBL_START */
                          1707	#762:    else
                          1708	#763:    {
                          1709	#764:       progStatus = kNoProgRequest;
000003dc 2c83             1710		se_bmaski	r3, 8
                          1711	#765:    }
                          1712	#767:    return progStatus;
                          1713	#	    .ef
                          1714	.LDW52:
000003de 0004             1715		se_blr
                          1716		.global	__ghs_eofn_ApplFblExtProgRequest
                          1717	__ghs_eofn_ApplFblExtProgRequest:
                          1718		.type	ApplFblExtProgRequest,@function
                          1719		.size	ApplFblExtProgRequest,$-ApplFblExtProgRequest
                          1720		.align	1
                          1721	
                          1722	#function:			ApplFblExtProgRequest

                                   Fri Apr 10 08:31:56 2020           Page 32
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1723	#stack frame size:		0
                          1724	#
                          1725	#progStatus	r3	local
                          1726	
                          1727		.data
                          1728		.section ".vletext", "vax"
                          1729		.vle
                          1730		.vle
                          1731	
                          1732	#768: }
                          1733	
                          1734	#770: /***********************************************************************************************************************
                          1735	#771:  *  ApplFblValidateBlock
                          1736	#772:  **********************************************************************************************************************/
                          1737	#773: /*! \brief       Function is called after a successful download (CRC check was successful) to validate the logical block
                          1738	#774:  *  \pre         Logical block must be successfully downloaded
                          1739	#775:  *  \param[in]   blockDescriptor Block descriptor structure
                          1740	#776:  *  \return      kFblOk = validation successfully performed, kFblFailed = validation failed
                          1741	#777:  **********************************************************************************************************************/
                          1742		.align	1
                          1743		.align	1
                          1744	..gh.f.p.3.a.1.r.0.e.8:
                          1745		.type	..gh.f.p.3.a.1.r.0.e.8,@object
                          1746		.size	..gh.f.p.3.a.1.r.0.e.8,0
                          1747		.global	ApplFblValidateBlock
                          1748	ApplFblValidateBlock:
000003e0 182106d8         1749		e_stwu	sp, -40(sp)
000003e4 0080             1750		se_mflr	r0
000003e6 1bc10920         1751		e_stmw	r30, 32(sp)
000003ea db01             1752		se_stw	r0, 44(sp)
000003ec 013e             1753		se_mr	r30, r3
                          1754	#	    .bf
                          1755	.LDW62:
                          1756	#778: tFblResult ApplFblValidateBlock( tBlockDescriptor blockDescriptor )
                          1757	#779: {
                          1758	#780:    tFblResult result;
                          1759	#782:    /* Initialize variables */
                          1760	#783:    result = kFblOk;
000003ee 0134             1761		se_mr	r4, r3
                          1762	#785: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          1763	#786:    /* Save block descriptor of currently validated block.
                          1764	#787:     * The block descriptor will be used to validate the application. */
                          1765	#788:    currentValidatedBlock = blockDescriptor;
000003f0 480f             1766		se_li	r31, 0
000003f2 7060e000         1767		e_lis	r3, %hiadj(currentValidatedBlock)
000003f6 4985             1768		se_li	r5, 24
000003f8 1c630000         1769		e_add16i	r3, r3, %lo(currentValidatedBlock)
000003fc 78000001         1770		e_bl	memmove
                          1771	#789: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          1772	#791:    /* Set current block valid */
                          1773	#792:    if (ApplFblChgBlockValid(kEepValidateBlock, blockDescriptor) != kFblOk)
00000400 4985             1774		se_li	r5, 24
00000402 01e4             1775		se_mr	r4, r30
00000404 18618008         1776		e_addi	r3, sp, 8
00000408 78000001         1777		e_bl	memmove
0000040c 4813             1778		se_li	r3, 1

                                   Fri Apr 10 08:31:56 2020           Page 33
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000040e 18818008         1779		e_addi	r4, sp, 8
00000412 78000001         1780		se_bl	ApplFblChgBlockValid
00000416 2a03             1781		se_cmpi	r3, 0
00000418 e600             1782		se_beq	.L2640
                          1783	#793:    {
                          1784	#794:       result = kFblFailed;
                          1785	#line794
                          1786	..lin.74ab1805..c8e74ffb.0_39::
                          1787	.LDWlin39:
0000041a 481f             1788		se_li	r31, 1
                          1789	.L2640:
                          1790	#795:    }
                          1791	#796:  
                          1792	#797:    return result;
0000041c 01f3             1793		se_mr	r3, r31
                          1794	#	    .ef
                          1795	.LDW72:
0000041e cb01             1796		se_lwz	r0, 44(sp)
00000420 1bc10820         1797		e_lmw	r30, 32(sp)
00000424 18218028         1798		e_addi	sp, sp, 40
00000428 0090             1799		se_mtlr	r0
0000042a 0004             1800		se_blr
                          1801		.global	__ghs_eofn_ApplFblValidateBlock
                          1802	__ghs_eofn_ApplFblValidateBlock:
                          1803		.type	ApplFblValidateBlock,@function
                          1804		.size	ApplFblValidateBlock,$-ApplFblValidateBlock
                          1805		.align	1
                          1806	
                          1807	#function:			ApplFblValidateBlock
                          1808	#stack frame size:		40
                          1809	#link area offset:		0
                          1810	#local storage area offset:	8
                          1811	#gpr save area offset:		32
                          1812	#
                          1813	#result	r31	local
                          1814	
                          1815	#blockDescriptor	r30	param
                          1816	
                          1817		.data
                          1818		.section ".vletext", "vax"
                          1819		.vle
                          1820		.vle
                          1821	
                          1822	#798: }
                          1823	
                          1824	#800: /***********************************************************************************************************************
                          1825	#801:  *  ApplFblInvalidateBlock
                          1826	#802:  **********************************************************************************************************************/
                          1827	#803: /*! \brief       Whenever the bootloader needs to delete data, this function is called
                          1828	#804:  *               to invalidate the current logical block.
                          1829	#805:  *  \param[in]   blockDescriptor Block descriptor structure
                          1830	#806:  *  \return      kFblOk: invalidation successfully performed, kFblFailed: invalidation failed
                          1831	#807:  **********************************************************************************************************************/
                          1832	#808: tFblResult ApplFblInvalidateBlock( tBlockDescriptor blockDescriptor )
                          1833	#809: {
                          1834	#810:    tFblResult result;

                                   Fri Apr 10 08:31:56 2020           Page 34
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1835	#811:    /* Invalidate application validity flag */
                          1836	#812:    result = ApplFblInvalidateApp();
                          1837	#814:    /* Erase valid flag of current block */
                          1838	#815:    if (result == kFblOk)
                          1839	#816:    {
                          1840	#817:       result = ApplFblChgBlockValid(kEepInvalidateBlock, blockDescriptor);
                          1841	#818:    }
                          1842	#820:    return result;
                          1843	#821: }
                          1844	#823: /***********************************************************************************************************************
                          1845	#824:  *  ApplFblIsValidApp
                          1846	#825:  **********************************************************************************************************************/
                          1847	#826: /*! \brief       Function is called on power-up to check if the application is successfully validated or not.
                          1848	#827:  *  \details     Returns kApplValid if application is valid (all mandatory blocks available) and application start is
                          1849	#828:  *               allowed. Otherwise it returns kApplInvalid.
                          1850	#829:  **********************************************************************************************************************/
                          1851	#830: tApplStatus ApplFblIsValidApp( void )
                          1852	#831: {
                          1853	#832:    tApplStatus applicationStatus;
                          1854	#833: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          1855	#834:    vuintx currentBlockNr;
                          1856	#835:    tBlockDescriptor tempBlockDescriptor;
                          1857	#836: #else
                          1858	#837:    vuint8 applValidity;
                          1859	#838: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          1860	#840:    /* Initialize variables */
                          1861	#841:    applicationStatus = kApplInvalid;
                          1862	#843: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          1863	#844:    /* Read validity from application validity pattern
                          1864	#845:     * Scan all logical blocks until one block with application valid flag is found */
                          1865	#846:    currentBlockNr = FBL_MTAB_NO_OF_BLOCKS;
                          1866	#847:    while ((currentBlockNr > 0u) && (applicationStatus == kApplInvalid))
                          1867	#848:    {
                          1868	#849:       currentBlockNr--;
                          1869	#850:       tempBlockDescriptor = FblLogicalBlockTable.logicalBlock[currentBlockNr];
                          1870	#851:       if (ApplFblChkModulePresence(&tempBlockDescriptor) == kFblOk)
                          1871	#852:       {
                          1872	#853:          applicationStatus = kApplValid;
                          1873	#854:       }
                          1874	#855:    }
                          1875	#856: #else
                          1876	#857:    /* Read validity from NV-memory */
                          1877	#858:    if (ApplFblNvReadApplValidity(&applValidity) == kFblOk)
                          1878	#859:    {
                          1879	#860:       if (applValidity == kEepApplConsistent)
                          1880	#861:       {
                          1881	#862:          applicationStatus = kApplValid;
                          1882	#863:       }
                          1883	#864:    }
                          1884	#865: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          1885	#867: #if ( FBL_PROJECT_STATE >= FBL_INTEGRATION )
                          1886	#868:    if ((applicationStatus == kApplValid) && (FblCheckBootVectTableIsValid()))
                          1887	#869:    {
                          1888	#870:       /* Application is valid but contains an APPLVECT_FROM_BOOT.
                          1889	#871:        * Therefore it is not possible to jump to startup code of application.
                          1890	#872:        * Probably the Bootloader was reprogrammed with a debugger. */

                                   Fri Apr 10 08:31:56 2020           Page 35
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1891	#873:       applicationStatus = kApplInvalid;
                          1892	#874:    }
                          1893	#875: #endif /* FBL_PROJECT_STATE >= FBL_INTEGRATION */
                          1894	#877:    return applicationStatus;
                          1895	#878: }  /* PRQA S 2006 */ /* MD_MSR_14.7 */
                          1896	#880: /***********************************************************************************************************************
                          1897	#881:  *  ApplFblErrorNotification
                          1898	#882:  **********************************************************************************************************************/
                          1899	#883: /*! \brief       Call-back function for diagnostic trouble code entries.
                          1900	#884:  *  \details     This function is called whenever a flash programming error occurred.
                          1901	#885:  *  \param[in]   errorType The error type
                          1902	#886:  *  \param[in]   errorCode The error code
                          1903	#887:  **********************************************************************************************************************/
                          1904	#888: void ApplFblErrorNotification( tFblErrorType errorType, tFblErrorCode errorCode )
                          1905	#889: {
                          1906	#890: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          1907	#891:    /* Parameters not used: avoid compiler warning */ /* PRQA S 3112 2 */ /* MD_MSR_14.2 */
                          1908	#892:    (void)errorType;
                          1909	#893:    (void)errorCode;
                          1910	#894: #endif
                          1911	#895: }
                          1912	#897: /***********************************************************************************************************************
                          1913	#898:  *  ApplFblIncProgCounts
                          1914	#899:  **********************************************************************************************************************/
                          1915	#900: /*! \brief       Increment programming counter
                          1916	#901:  *  \param[in]   blockDescriptor Block descriptor
                          1917	#902:  *  \return      kFblOk / kFblFailed
                          1918	#903:  **********************************************************************************************************************/
                          1919	#904: tFblResult ApplFblIncProgCounts( tBlockDescriptor blockDescriptor )
                          1920	#905: {
                          1921	#906:    tFblApnvProgCountType progCounts;
                          1922	#907:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          1923	#908:    tFblResult status;
                          1924	#910:    status = (tFblResult)ApplFblNvReadProgCounter(blockDescriptor.blockNr, nvBuffer);
                          1925	#911:    progCounts = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
                          1926	#913:    if (status == kFblOk)
                          1927	#914:    {
                          1928	#915:       /* Value is stored inverted because of erase value */
                          1929	#916:       progCounts = FblInvert16Bit(progCounts);
                          1930	#917:       progCounts++;
                          1931	#918:       progCounts = FblInvert16Bit(progCounts);
                          1932	#920:       FblMemSetInteger(sizeof(nvBuffer), progCounts, nvBuffer);
                          1933	#921:       status = (tFblResult)ApplFblNvWriteProgCounter(blockDescriptor.blockNr, nvBuffer);
                          1934	#922:    }
                          1935	#924:    return status;
                          1936	#925: }
                          1937	#927: /***********************************************************************************************************************
                          1938	#928:  *  ApplFblGetProgCounts
                          1939	#929:  **********************************************************************************************************************/
                          1940	#930: /*! \brief       Get programming counter
                          1941	#931:  *  \param[in]   blockDescriptor Block descriptor
                          1942	#932:  *  \param[in]   progCounts The programming counter
                          1943	#933:  *  \return      kFblOk / kFblFailed
                          1944	#934:  **********************************************************************************************************************/
                          1945	#935: tFblResult ApplFblGetProgCounts( tBlockDescriptor blockDescriptor, V_MEMRAM1 vuint16 V_MEMRAM2 V_MEMRAM3 * progCounts)
                          1946	#936: {

                                   Fri Apr 10 08:31:56 2020           Page 36
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          1947	#937:    tFblResult status;
                          1948	#938:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          1949	#939:    tFblApnvProgCountType tempCount;
                          1950	#941:    status = (tFblResult)ApplFblNvReadProgCounter(blockDescriptor.blockNr, nvBuffer);
                          1951	#942:    tempCount = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
                          1952	#943:    tempCount = FblInvert16Bit(tempCount);
                          1953	#945:    *progCounts = (vuint16)tempCount;
                          1954	#947:    return status;
                          1955	#948: }
                          1956	#950: /***********************************************************************************************************************
                          1957	#951:  *  ApplFblIncProgAttempts
                          1958	#952:  **********************************************************************************************************************/
                          1959	#953: /*! \brief       Increment programming attempt counter
                          1960	#954:  *  \param[in]   blockDescriptor Block descriptor
                          1961	#955:  *  \return      kFblOk / kFblFailed
                          1962	#956:  **********************************************************************************************************************/
                          1963	#957: tFblResult ApplFblIncProgAttempts( tBlockDescriptor blockDescriptor )
                          1964	#958: {
                          1965	#959:    tFblApnvProgCountType progAttempts;
                          1966	#960:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          1967	#961:    tFblResult status;
                          1968	#963:    status = (tFblResult)ApplFblNvReadProgAttempts(blockDescriptor.blockNr, nvBuffer);
                          1969	#964:    progAttempts = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
                          1970	#966:    if (status == kFblOk)
                          1971	#967:    {
                          1972	#968:       /* Value is stored inverted because of erase value */
                          1973	#969:       progAttempts = FblInvert16Bit(progAttempts);
                          1974	#970:       progAttempts++;
                          1975	#971:       progAttempts = FblInvert16Bit(progAttempts);
                          1976	#973:       FblMemSetInteger(sizeof(nvBuffer), progAttempts, nvBuffer);
                          1977	#974:       status = (tFblResult)ApplFblNvWriteProgAttempts(blockDescriptor.blockNr, nvBuffer);
                          1978	#975:    }
                          1979	#977:    return status;
                          1980	#978: }
                          1981	#980: /***********************************************************************************************************************
                          1982	#981:  *  ApplFblGetProgAttempts
                          1983	#982:  **********************************************************************************************************************/
                          1984	#983: /*! \brief       Get programming attempt counter
                          1985	#984:  *  \param[in]   blockDescriptor Block descriptor
                          1986	#985:  *  \param[out]  progAttempts The returned programming attempts
                          1987	#986:  *  \return      kFblOk / kFblFailed
                          1988	#987:  **********************************************************************************************************************/
                          1989	#988: tFblResult ApplFblGetProgAttempts( tBlockDescriptor blockDescriptor, V_MEMRAM1 vuint16 V_MEMRAM2 V_MEMRAM3 * progAttempts )
                          1990	#989: {
                          1991	#990:    tFblResult status;
                          1992	#991:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          1993	#992:    tFblApnvProgCountType tempCount;
                          1994	#994:    status = (tFblResult)ApplFblNvReadProgAttempts(blockDescriptor.blockNr, nvBuffer);
                          1995	#995:    tempCount = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
                          1996	#996:    tempCount = FblInvert16Bit(tempCount);
                          1997	#997:    *progAttempts = (vuint16)tempCount;
                          1998	#999:    return status;
                          1999	#1000: }
                          2000	#1002: #if defined( SEC_VER_DISABLE_CRC_TOTAL )
                          2001	#1003: #else
                          2002	#1004: /***********************************************************************************************************************

                                   Fri Apr 10 08:31:56 2020           Page 37
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2003	#1005:  *  ApplFblWriteCRCTotal
                          2004	#1006:  **********************************************************************************************************************/
                          2005	#1007: /*! \brief       Store CRC total. String buffer used to avoid little/big endian permutation.
                          2006	#1008:  *  \param[in]   blockDescriptor Block descriptor
                          2007	#1009:  *  \param[in]   crcStart Start address of CRC calculation
                          2008	#1010:  *  \param[in]   crcLength Length of CRC calculation
                          2009	#1011:  *  \param[in]   crcValue The CRC value
                          2010	#1012:  *  \return      kFblOk / kFblFailed
                          2011	#1013:  **********************************************************************************************************************/
                          2012	#1014: tFblResult ApplFblWriteCRCTotal( V_MEMRAM1 tBlockDescriptor V_MEMRAM2 V_MEMRAM3 * blockDescriptor, vuint32 crcStart, vuint32 crcLength, vuint32 crcValue )
                          2013	#1015: {
                          2014	#1016:    tFblResult status;
                          2015	#1017:    vuint8 strConversionBuffer[4u];
                          2016	#1019:    status = kFblOk;
                          2017	#1021: # if ( kEepSizeCRCStart  != 4u ) || \
                          2018	#1022:      ( kEepSizeCRCLength != 4u ) || \
                          2019	#1023:      ( kEepSizeCRCValue  != 4u )
                          2020	#1024: #  error "Error in FBL_APNV.C: Configuration error (kEepSizeCRC... != 4)"
                          2021	#1025: # endif
                          2022	#1027:    FblMemSetInteger(kEepSizeCRCStart, crcStart, strConversionBuffer);
                          2023	#1028:    status |= (tFblResult)ApplFblNvWriteCRCStart(blockDescriptor->blockNr, strConversionBuffer);
                          2024	#1030:    FblMemSetInteger(kEepSizeCRCLength, crcLength, strConversionBuffer);
                          2025	#1031:    status |= (tFblResult)ApplFblNvWriteCRCLength(blockDescriptor->blockNr, strConversionBuffer);
                          2026	#1033:    FblMemSetInteger(kEepSizeCRCValue, crcValue, strConversionBuffer);
                          2027	#1034:    status |= (tFblResult)ApplFblNvWriteCRCValue(blockDescriptor->blockNr, strConversionBuffer);
                          2028	#1036:    return status;
                          2029	#1037: }
                          2030	#1038: #endif /* SEC_VER_DISABLE_CRC_TOTAL */
                          2031	#1040: /***********************************************************************************************************************
                          2032	#1041:  *  ApplFblValidateApp
                          2033	#1042:  **********************************************************************************************************************/
                          2034	#1043: /*! \brief       Function is called after a successful download to validate a file.
                          2035	#1044:  *  \pre         Complete file must be successfully downloaded
                          2036	#1045:  *  \return      kFblOk = validation successfully performed, kFblFailed = validation failed
                          2037	#1046:  **********************************************************************************************************************/
                          2038	#1047: tFblResult ApplFblValidateApp( void )
                          2039	#1048: {
                          2040	#1049:    tFblResult result;
                          2041	#1050: # if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2042	#1051: # else
                          2043	#1052:    vuint8 applValidity;
                          2044	#1053: # endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2045	#1055: # if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2046	#1056:    /* Set presence pattern in last flashed logical block. */
                          2047	#1057:    result = ApplFblSetModulePresence(&currentValidatedBlock);
                          2048	#1058: # else
                          2049	#1059:    applValidity = kEepApplConsistent;
                          2050	#1060:    result = (tFblResult)ApplFblNvWriteApplValidity(&applValidity);
                          2051	#1061: # endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2052	#1063:    return result;
                          2053	#1064: }
                          2054	#1066: /***********************************************************************************************************************
                          2055	#1067:  *  ApplFblInvalidateApp
                          2056	#1068:  **********************************************************************************************************************/
                          2057	#1069: /*! \brief       Function is called before erasure of the application
                          2058	#1070:  *  \return      kFblOk = invalidation successfully performed, kFblFailed = invalidation failed

                                   Fri Apr 10 08:31:56 2020           Page 38
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2059	#1071:  **********************************************************************************************************************/
                          2060		.align	1
                          2061		.align	1
                          2062	..gh.f.p.0.a.1.r.0.e.9:
                          2063		.type	..gh.f.p.0.a.1.r.0.e.9,@object
                          2064		.size	..gh.f.p.0.a.1.r.0.e.9,0
                          2065		.global	ApplFblInvalidateApp
                          2066	ApplFblInvalidateApp:
0000042c 182106d8         2067		e_stwu	sp, -40(sp)
00000430 0080             2068		se_mflr	r0
00000432 d9f1             2069		se_stw	r31, 36(sp)
00000434 db01             2070		se_stw	r0, 44(sp)
                          2071	#	    .bf
                          2072	.LDW82:
                          2073	#1072: tFblResult ApplFblInvalidateApp( void )
                          2074	#1073: {
                          2075	#1074:    tFblResult result;
                          2076	#1075: # if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2077	#1076:    vuintx currentBlockNr;
                          2078	#1077:    tBlockDescriptor tempBlockDescriptor;
                          2079	#1078: # else
                          2080	#1079:    vuint8 applValidity;
                          2081	#1080: # endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2082	#1082: # if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2083	#1083:    /* Loop over all logical blocks to invalidate application flag */
                          2084	#1084:    currentBlockNr = 0u;
00000436 480f             2085		se_li	r31, 0
                          2086	#1085:    result = kFblOk;
                          2087	#1086:    while ((currentBlockNr < FBL_MTAB_NO_OF_BLOCKS) && (result == kFblOk))
                          2088	.L2715:
                          2089	#1087:    {
                          2090	#1088:       tempBlockDescriptor = FblLogicalBlockTable.logicalBlock[currentBlockNr];
00000438 181fa018         2091		e_mulli	r0, r31, 24
0000043c 70e0e000         2092		e_lis	r7, %hiadj(FblLogicalBlockTable+8)
00000440 1ce70008         2093		e_add16i	r7, r7, %lo(FblLogicalBlockTable+8)
00000444 4985             2094		se_li	r5, 24
00000446 7c870214         2095		add	r4, r7, r0
0000044a 18618008         2096		e_addi	r3, sp, 8
0000044e 78000001         2097		e_bl	memcpy
                          2098	#1089:       result = ApplFblClrModulePresence(&tempBlockDescriptor);
00000452 18618008         2099		e_addi	r3, sp, 8
00000456 78000001         2100		se_bl	ApplFblClrModulePresence
                          2101	#1091:       /* Prepare index for next loop */
                          2102	#1092:       currentBlockNr++;
                          2103	#line1092
                          2104	..lin.74ab1805..83380ee8.0_40::
                          2105	.LDWlin40:
0000045a 200f             2106		se_addi	r31, 1
0000045c 221f             2107		se_cmpli	r31, 2
0000045e e000             2108		se_bge	.L2714
00000460 2a03             2109		se_cmpi	r3, 0
00000462 e600             2110		se_beq	.L2715
                          2111	.L2714:
                          2112	#1093:    }
                          2113	#1094: # else
                          2114	#1095:    applValidity = kEepApplInconsistent;

                                   Fri Apr 10 08:31:56 2020           Page 39
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2115	#1096:    result = (tFblResult)ApplFblNvWriteApplValidity(&applValidity);
                          2116	#1097: # endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2117	#1099:    return result;
                          2118	#	    .ef
                          2119	.LDW92:
                          2120	#line1099
                          2121	..lin.74ab1805..83380ee8.0_41::
                          2122	.LDWlin41:
00000464 cb01             2123		se_lwz	r0, 44(sp)
00000466 c9f1             2124		se_lwz	r31, 36(sp)
00000468 18218028         2125		e_addi	sp, sp, 40
0000046c 0090             2126		se_mtlr	r0
0000046e 0004             2127		se_blr
                          2128		.global	__ghs_eofn_ApplFblInvalidateApp
                          2129	__ghs_eofn_ApplFblInvalidateApp:
                          2130		.type	ApplFblInvalidateApp,@function
                          2131		.size	ApplFblInvalidateApp,$-ApplFblInvalidateApp
                          2132		.align	1
                          2133	
                          2134	#function:			ApplFblInvalidateApp
                          2135	#stack frame size:		40
                          2136	#link area offset:		0
                          2137	#local storage area offset:	12
                          2138	#gpr save area offset:		36
                          2139	#
                          2140	#result	r3	local
                          2141	#currentBlockNr	r31	local
                          2142	#tempBlockDescriptor	8(sp)	local
                          2143	
                          2144		.data
                          2145		.section ".vletext", "vax"
                          2146		.vle
                          2147		.vle
                          2148	
                          2149	#1100: }
                          2150	
                          2151		.align	1
                          2152		.align	1
                          2153	..gh.f.p.3.a.1.r.0.e.10:
                          2154		.type	..gh.f.p.3.a.1.r.0.e.10,@object
                          2155		.size	..gh.f.p.3.a.1.r.0.e.10,0
                          2156		.global	ApplFblInvalidateBlock
                          2157	ApplFblInvalidateBlock:
00000470 182106d8         2158		e_stwu	sp, -40(sp)
00000474 0080             2159		se_mflr	r0
00000476 d9f1             2160		se_stw	r31, 36(sp)
00000478 db01             2161		se_stw	r0, 44(sp)
0000047a 013f             2162		se_mr	r31, r3
                          2163	#	    .bf
                          2164	.LDW03:
                          2165	#808: tFblResult ApplFblInvalidateBlock( tBlockDescriptor blockDescriptor )
                          2166	#809: {
                          2167	#810:    tFblResult result;
                          2168	#811:    /* Invalidate application validity flag */
                          2169	#812:    result = ApplFblInvalidateApp();
0000047c e900             2170		se_bl	ApplFblInvalidateApp

                                   Fri Apr 10 08:31:56 2020           Page 40
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2171	#814:    /* Erase valid flag of current block */
                          2172	#815:    if (result == kFblOk)
                          2173	#line815
                          2174	..lin.74ab1805..318758d2.0_42::
                          2175	.LDWlin42:
0000047e 2a03             2176		se_cmpi	r3, 0
00000480 e200             2177		se_bne	.L2813
                          2178	#816:    {
                          2179	#817:       result = ApplFblChgBlockValid(kEepInvalidateBlock, blockDescriptor);
                          2180	#line817
                          2181	..lin.74ab1805..318758d2.0_43::
                          2182	.LDWlin43:
00000482 4985             2183		se_li	r5, 24
00000484 01f4             2184		se_mr	r4, r31
00000486 18618008         2185		e_addi	r3, sp, 8
0000048a 78000001         2186		e_bl	memmove
0000048e 4823             2187		se_li	r3, 2
00000490 18818008         2188		e_addi	r4, sp, 8
00000494 78000001         2189		se_bl	ApplFblChgBlockValid
                          2190	.L2813:
                          2191	#818:    }
                          2192	#820:    return result;
                          2193	#	    .ef
                          2194	.LDW13:
                          2195	#line820
                          2196	..lin.74ab1805..318758d2.0_44::
                          2197	.LDWlin44:
00000498 cb01             2198		se_lwz	r0, 44(sp)
0000049a c9f1             2199		se_lwz	r31, 36(sp)
0000049c 18218028         2200		e_addi	sp, sp, 40
000004a0 0090             2201		se_mtlr	r0
000004a2 0004             2202		se_blr
                          2203		.global	__ghs_eofn_ApplFblInvalidateBlock
                          2204	__ghs_eofn_ApplFblInvalidateBlock:
                          2205		.type	ApplFblInvalidateBlock,@function
                          2206		.size	ApplFblInvalidateBlock,$-ApplFblInvalidateBlock
                          2207		.align	1
                          2208	
                          2209	#function:			ApplFblInvalidateBlock
                          2210	#stack frame size:		40
                          2211	#link area offset:		0
                          2212	#local storage area offset:	12
                          2213	#gpr save area offset:		36
                          2214	#
                          2215	#result	r3	local
                          2216	
                          2217	#blockDescriptor	r31	param
                          2218	
                          2219		.data
                          2220		.section ".vletext", "vax"
                          2221		.vle
                          2222		.vle
                          2223	
                          2224	#821: }
                          2225	
                          2226	#823: /***********************************************************************************************************************

                                   Fri Apr 10 08:31:56 2020           Page 41
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2227	#824:  *  ApplFblIsValidApp
                          2228	#825:  **********************************************************************************************************************/
                          2229	#826: /*! \brief       Function is called on power-up to check if the application is successfully validated or not.
                          2230	#827:  *  \details     Returns kApplValid if application is valid (all mandatory blocks available) and application start is
                          2231	#828:  *               allowed. Otherwise it returns kApplInvalid.
                          2232	#829:  **********************************************************************************************************************/
                          2233		.align	1
                          2234		.align	1
                          2235	..gh.f.p.0.a.1.r.0.e.11:
                          2236		.type	..gh.f.p.0.a.1.r.0.e.11,@object
                          2237		.size	..gh.f.p.0.a.1.r.0.e.11,0
                          2238		.global	ApplFblIsValidApp
                          2239	ApplFblIsValidApp:
000004a4 182106d8         2240		e_stwu	sp, -40(sp)
000004a8 0080             2241		se_mflr	r0
000004aa 1bc10920         2242		e_stmw	r30, 32(sp)
000004ae db01             2243		se_stw	r0, 44(sp)
                          2244	#	    .bf
                          2245	.LDW23:
                          2246	#830: tApplStatus ApplFblIsValidApp( void )
                          2247	#831: {
                          2248	#832:    tApplStatus applicationStatus;
                          2249	#833: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2250	#834:    vuintx currentBlockNr;
                          2251	#835:    tBlockDescriptor tempBlockDescriptor;
                          2252	#836: #else
                          2253	#837:    vuint8 applValidity;
                          2254	#838: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2255	#840:    /* Initialize variables */
                          2256	#841:    applicationStatus = kApplInvalid;
000004b0 482e             2257		se_li	r30, 2
                          2258	#843: #if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2259	#844:    /* Read validity from application validity pattern
                          2260	#845:     * Scan all logical blocks until one block with application valid flag is found */
                          2261	#846:    currentBlockNr = FBL_MTAB_NO_OF_BLOCKS;
000004b2 480f             2262		se_li	r31, 0
                          2263	#847:    while ((currentBlockNr > 0u) && (applicationStatus == kApplInvalid))
                          2264	.L2875:
                          2265	#848:    {
                          2266	#849:       currentBlockNr--;
000004b4 240e             2267		se_subi	r30, 1
                          2268	#850:       tempBlockDescriptor = FblLogicalBlockTable.logicalBlock[currentBlockNr];
000004b6 181ea018         2269		e_mulli	r0, r30, 24
000004ba 70e0e000         2270		e_lis	r7, %hiadj(FblLogicalBlockTable+8)
000004be 1ce70008         2271		e_add16i	r7, r7, %lo(FblLogicalBlockTable+8)
000004c2 4985             2272		se_li	r5, 24
000004c4 7c870214         2273		add	r4, r7, r0
000004c8 18618008         2274		e_addi	r3, sp, 8
000004cc 78000001         2275		e_bl	memcpy
                          2276	#851:       if (ApplFblChkModulePresence(&tempBlockDescriptor) == kFblOk)
000004d0 18618008         2277		e_addi	r3, sp, 8
000004d4 78000001         2278		se_bl	ApplFblChkModulePresence
000004d8 2a03             2279		se_cmpi	r3, 0
000004da e200             2280		se_bne	.L2873
                          2281	#852:       {
                          2282	#853:          applicationStatus = kApplValid;

                                   Fri Apr 10 08:31:56 2020           Page 42
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2283	#line853
                          2284	..lin.74ab1805..41d35133.0_45::
                          2285	.LDWlin45:
000004dc 481f             2286		se_li	r31, 1
                          2287	.L2873:
000004de 2a0e             2288		se_cmpi	r30, 0
000004e0 e600             2289		se_beq	.L2874
000004e2 2a0f             2290		se_cmpi	r31, 0
000004e4 e600             2291		se_beq	.L2875
                          2292	.L2874:
                          2293	#854:       }
                          2294	#855:    }
                          2295	#856: #else
                          2296	#857:    /* Read validity from NV-memory */
                          2297	#858:    if (ApplFblNvReadApplValidity(&applValidity) == kFblOk)
                          2298	#859:    {
                          2299	#860:       if (applValidity == kEepApplConsistent)
                          2300	#861:       {
                          2301	#862:          applicationStatus = kApplValid;
                          2302	#863:       }
                          2303	#864:    }
                          2304	#865: #endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2305	#867: #if ( FBL_PROJECT_STATE >= FBL_INTEGRATION )
                          2306	#868:    if ((applicationStatus == kApplValid) && (FblCheckBootVectTableIsValid()))
                          2307	#line868
                          2308	..lin.74ab1805..41d35133.0_46::
                          2309	.LDWlin46:
000004e6 2a1f             2310		se_cmpi	r31, 1
000004e8 e200             2311		se_bne	.L2879
000004ea 70e0e000         2312		e_lis	r7, %hiadj(ApplIntJmpTable)
000004ee 50e70000         2313		e_lwz	r7, %lo(ApplIntJmpTable)(r7)
000004f2 7014e500         2314		e_lis	r0, -23296
000004f6 0c07             2315		se_cmp	r7, r0
000004f8 7fe0f89e         2316		iseleq	r31, r0, r31
000004fc 00cf             2317		se_extzb	r31
                          2318	.L2879:
                          2319	#869:    {
                          2320	#870:       /* Application is valid but contains an APPLVECT_FROM_BOOT.
                          2321	#871:        * Therefore it is not possible to jump to startup code of application.
                          2322	#872:        * Probably the Bootloader was reprogrammed with a debugger. */
                          2323	#873:       applicationStatus = kApplInvalid;
                          2324	#874:    }
                          2325	#875: #endif /* FBL_PROJECT_STATE >= FBL_INTEGRATION */
                          2326	#877:    return applicationStatus;
                          2327	#line877
                          2328	..lin.74ab1805..41d35133.0_47::
                          2329	.LDWlin47:
000004fe 01f3             2330		se_mr	r3, r31
                          2331	#	    .ef
                          2332	.LDW33:
00000500 cb01             2333		se_lwz	r0, 44(sp)
00000502 1bc10820         2334		e_lmw	r30, 32(sp)
00000506 18218028         2335		e_addi	sp, sp, 40
0000050a 0090             2336		se_mtlr	r0
0000050c 0004             2337		se_blr
                          2338		.global	__ghs_eofn_ApplFblIsValidApp

                                   Fri Apr 10 08:31:56 2020           Page 43
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2339	__ghs_eofn_ApplFblIsValidApp:
                          2340		.type	ApplFblIsValidApp,@function
                          2341		.size	ApplFblIsValidApp,$-ApplFblIsValidApp
                          2342		.align	1
                          2343	
                          2344	#function:			ApplFblIsValidApp
                          2345	#stack frame size:		40
                          2346	#link area offset:		0
                          2347	#local storage area offset:	8
                          2348	#gpr save area offset:		32
                          2349	#
                          2350	#applicationStatus	r31	local
                          2351	#currentBlockNr	r30	local
                          2352	#tempBlockDescriptor	8(sp)	local
                          2353	
                          2354		.data
                          2355		.section ".vletext", "vax"
                          2356		.vle
                          2357		.vle
                          2358	
                          2359	#878: }  /* PRQA S 2006 */ /* MD_MSR_14.7 */
                          2360	
                          2361	#880: /***********************************************************************************************************************
                          2362	#881:  *  ApplFblErrorNotification
                          2363	#882:  **********************************************************************************************************************/
                          2364	#883: /*! \brief       Call-back function for diagnostic trouble code entries.
                          2365	#884:  *  \details     This function is called whenever a flash programming error occurred.
                          2366	#885:  *  \param[in]   errorType The error type
                          2367	#886:  *  \param[in]   errorCode The error code
                          2368	#887:  **********************************************************************************************************************/
                          2369		.align	1
                          2370		.align	1
                          2371	..gh.f.p.4.a.1.r.0.e.12:
                          2372		.type	..gh.f.p.4.a.1.r.0.e.12,@object
                          2373		.size	..gh.f.p.4.a.1.r.0.e.12,0
                          2374		.global	ApplFblErrorNotification
                          2375	ApplFblErrorNotification:
                          2376	#	    .bf
                          2377	.LDW43:
                          2378	#888: void ApplFblErrorNotification( tFblErrorType errorType, tFblErrorCode errorCode )
                          2379	#889: {
                          2380	#890: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          2381	#891:    /* Parameters not used: avoid compiler warning */ /* PRQA S 3112 2 */ /* MD_MSR_14.2 */
                          2382	#892:    (void)errorType;
                          2383	#893:    (void)errorCode;
                          2384	#894: #endif
                          2385	#895: }
                          2386	#	    .ef
                          2387	.LDW53:
0000050e 0004             2388		se_blr
                          2389		.global	__ghs_eofn_ApplFblErrorNotification
                          2390	__ghs_eofn_ApplFblErrorNotification:
                          2391		.type	ApplFblErrorNotification,@function
                          2392		.size	ApplFblErrorNotification,$-ApplFblErrorNotification
                          2393		.align	1
                          2394	

                                   Fri Apr 10 08:31:56 2020           Page 44
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2395	#function:			ApplFblErrorNotification
                          2396	#stack frame size:		0
                          2397	#
                          2398	
                          2399	#errorType	none	param
                          2400	#errorCode	none	param
                          2401	
                          2402		.data
                          2403		.section ".vletext", "vax"
                          2404		.vle
                          2405		.vle
                          2406	
                          2407	
                          2408	#897: /***********************************************************************************************************************
                          2409	#898:  *  ApplFblIncProgCounts
                          2410	#899:  **********************************************************************************************************************/
                          2411	#900: /*! \brief       Increment programming counter
                          2412	#901:  *  \param[in]   blockDescriptor Block descriptor
                          2413	#902:  *  \return      kFblOk / kFblFailed
                          2414	#903:  **********************************************************************************************************************/
                          2415		.align	1
                          2416		.align	1
                          2417	..gh.f.p.3.a.1.r.0.e.13:
                          2418		.type	..gh.f.p.3.a.1.r.0.e.13,@object
                          2419		.size	..gh.f.p.3.a.1.r.0.e.13,0
                          2420		.global	ApplFblIncProgCounts
                          2421	ApplFblIncProgCounts:
00000510 182106e8         2422		e_stwu	sp, -24(sp)
00000514 1bc10910         2423		e_stmw	r30, 16(sp)
00000518 0080             2424		se_mflr	r0
0000051a d701             2425		se_stw	r0, 28(sp)
                          2426	#	    .bf
                          2427	.LDW63:
                          2428	#904: tFblResult ApplFblIncProgCounts( tBlockDescriptor blockDescriptor )
                          2429	#905: {
                          2430	#906:    tFblApnvProgCountType progCounts;
                          2431	#907:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          2432	#908:    tFblResult status;
                          2433	#910:    status = (tFblResult)ApplFblNvReadProgCounter(blockDescriptor.blockNr, nvBuffer);
0000051c 80e3             2434		se_lbz	r30, 0(r3)
0000051e 18618008         2435		e_addi	r3, sp, 8
00000522 4824             2436		se_li	r4, 2
00000524 6c4e             2437		se_slwi	r30, 4
00000526 1cbe8b20         2438		e_add16i	r5, r30, -29920
0000052a 71059001         2439		e_add2is	r5, 16385
0000052e 78000001         2440		e_bl	EepromDriver_RReadSync
00000532 2a03             2441		se_cmpi	r3, 0
00000534 4810             2442		se_li	r0, 1
00000536 7fe0009e         2443		iseleq	r31, r0, r0
                          2444	#911:    progCounts = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
0000053a 4823             2445		se_li	r3, 2
0000053c 18818008         2446		e_addi	r4, sp, 8
00000540 78000001         2447		e_bl	FblMemGetInteger
                          2448	#913:    if (status == kFblOk)
00000544 2a0f             2449		se_cmpi	r31, 0
00000546 e200             2450		se_bne	.L3068

                                   Fri Apr 10 08:31:56 2020           Page 45
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2451	#914:    {
                          2452	#915:       /* Value is stored inverted because of erase value */
                          2453	#916:       progCounts = FblInvert16Bit(progCounts);
                          2454	#line916
                          2455	..lin.74ab1805..3dbb9a14.0_48::
                          2456	.LDWlin48:
00000548 2d00             2457		se_bmaski	r0, 16
0000054a 7c640278         2458		xor	r4, r3, r0
                          2459	#917:       progCounts++;
0000054e 2004             2460		se_addi	r4, 1
00000550 00e4             2461		se_extzh	r4
                          2462	#918:       progCounts = FblInvert16Bit(progCounts);
00000552 7c840278         2463		xor	r4, r4, r0
                          2464	#920:       FblMemSetInteger(sizeof(nvBuffer), progCounts, nvBuffer);
00000556 4823             2465		se_li	r3, 2
00000558 18a18008         2466		e_addi	r5, sp, 8
0000055c 78000001         2467		e_bl	FblMemSetInteger
                          2468	#921:       status = (tFblResult)ApplFblNvWriteProgCounter(blockDescriptor.blockNr, nvBuffer);
00000560 1cbe8b20         2469		e_add16i	r5, r30, -29920
00000564 71059001         2470		e_add2is	r5, 16385
00000568 18618008         2471		e_addi	r3, sp, 8
0000056c 4824             2472		se_li	r4, 2
0000056e 78000001         2473		e_bl	EepromDriver_RWriteSync
00000572 2a03             2474		se_cmpi	r3, 0
00000574 4810             2475		se_li	r0, 1
00000576 7fe0009e         2476		iseleq	r31, r0, r0
                          2477	.L3068:
                          2478	#922:    }
                          2479	#924:    return status;
0000057a 01f3             2480		se_mr	r3, r31
                          2481	#	    .ef
                          2482	.LDW73:
0000057c c701             2483		se_lwz	r0, 28(sp)
0000057e 1bc10810         2484		e_lmw	r30, 16(sp)
00000582 2171             2485		se_addi	sp, 24
00000584 0090             2486		se_mtlr	r0
00000586 0004             2487		se_blr
                          2488		.global	__ghs_eofn_ApplFblIncProgCounts
                          2489	__ghs_eofn_ApplFblIncProgCounts:
                          2490		.type	ApplFblIncProgCounts,@function
                          2491		.size	ApplFblIncProgCounts,$-ApplFblIncProgCounts
                          2492		.align	1
                          2493	
                          2494	#function:			ApplFblIncProgCounts
                          2495	#stack frame size:		24
                          2496	#link area offset:		0
                          2497	#local storage area offset:	12
                          2498	#gpr save area offset:		16
                          2499	#
                          2500	#progCounts	r4	local
                          2501	#nvBuffer	8(sp)	local
                          2502	#status	r31	local
                          2503	
                          2504	#blockDescriptor	r3	param
                          2505	
                          2506		.data

                                   Fri Apr 10 08:31:56 2020           Page 46
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2507		.section ".vletext", "vax"
                          2508		.vle
                          2509		.vle
                          2510	
                          2511	#925: }
                          2512	
                          2513	#927: /***********************************************************************************************************************
                          2514	#928:  *  ApplFblGetProgCounts
                          2515	#929:  **********************************************************************************************************************/
                          2516	#930: /*! \brief       Get programming counter
                          2517	#931:  *  \param[in]   blockDescriptor Block descriptor
                          2518	#932:  *  \param[in]   progCounts The programming counter
                          2519	#933:  *  \return      kFblOk / kFblFailed
                          2520	#934:  **********************************************************************************************************************/
                          2521		.align	1
                          2522		.align	1
                          2523	..gh.f.p.4.a.1.r.0.e.14:
                          2524		.type	..gh.f.p.4.a.1.r.0.e.14,@object
                          2525		.size	..gh.f.p.4.a.1.r.0.e.14,0
                          2526		.global	ApplFblGetProgCounts
                          2527	ApplFblGetProgCounts:
00000588 182106e8         2528		e_stwu	sp, -24(sp)
0000058c 1bc10910         2529		e_stmw	r30, 16(sp)
00000590 0080             2530		se_mflr	r0
00000592 d701             2531		se_stw	r0, 28(sp)
00000594 014e             2532		se_mr	r30, r4
                          2533	#	    .bf
                          2534	.LDW83:
                          2535	#935: tFblResult ApplFblGetProgCounts( tBlockDescriptor blockDescriptor, V_MEMRAM1 vuint16 V_MEMRAM2 V_MEMRAM3 * progCounts)
                          2536	#936: {
                          2537	#937:    tFblResult status;
                          2538	#938:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          2539	#939:    tFblApnvProgCountType tempCount;
                          2540	#941:    status = (tFblResult)ApplFblNvReadProgCounter(blockDescriptor.blockNr, nvBuffer);
00000596 8003             2541		se_lbz	r0, 0(r3)
00000598 18618008         2542		e_addi	r3, sp, 8
0000059c 4824             2543		se_li	r4, 2
0000059e 6c40             2544		se_slwi	r0, 4
000005a0 1ca08b20         2545		e_add16i	r5, r0, -29920
000005a4 71059001         2546		e_add2is	r5, 16385
000005a8 78000001         2547		e_bl	EepromDriver_RReadSync
000005ac 2a03             2548		se_cmpi	r3, 0
000005ae 4810             2549		se_li	r0, 1
000005b0 7fe0009e         2550		iseleq	r31, r0, r0
                          2551	#942:    tempCount = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
000005b4 4823             2552		se_li	r3, 2
000005b6 18818008         2553		e_addi	r4, sp, 8
000005ba 78000001         2554		e_bl	FblMemGetInteger
                          2555	#943:    tempCount = FblInvert16Bit(tempCount);
000005be 2d00             2556		se_bmaski	r0, 16
000005c0 7c630278         2557		xor	r3, r3, r0
                          2558	#945:    *progCounts = (vuint16)tempCount;
000005c4 b03e             2559		se_sth	r3, 0(r30)
                          2560	#947:    return status;
000005c6 01f3             2561		se_mr	r3, r31
                          2562	#	    .ef

                                   Fri Apr 10 08:31:56 2020           Page 47
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2563	.LDW93:
000005c8 c701             2564		se_lwz	r0, 28(sp)
000005ca 1bc10810         2565		e_lmw	r30, 16(sp)
000005ce 2171             2566		se_addi	sp, 24
000005d0 0090             2567		se_mtlr	r0
000005d2 0004             2568		se_blr
                          2569		.global	__ghs_eofn_ApplFblGetProgCounts
                          2570	__ghs_eofn_ApplFblGetProgCounts:
                          2571		.type	ApplFblGetProgCounts,@function
                          2572		.size	ApplFblGetProgCounts,$-ApplFblGetProgCounts
                          2573		.align	1
                          2574	
                          2575	#function:			ApplFblGetProgCounts
                          2576	#stack frame size:		24
                          2577	#link area offset:		0
                          2578	#local storage area offset:	12
                          2579	#gpr save area offset:		16
                          2580	#
                          2581	#nvBuffer	8(sp)	local
                          2582	#tempCount	r3	local
                          2583	
                          2584	#blockDescriptor	r3	param
                          2585	#progCounts	r30	param
                          2586	
                          2587		.data
                          2588		.section ".vletext", "vax"
                          2589		.vle
                          2590		.vle
                          2591	
                          2592	#948: }
                          2593	
                          2594	#950: /***********************************************************************************************************************
                          2595	#951:  *  ApplFblIncProgAttempts
                          2596	#952:  **********************************************************************************************************************/
                          2597	#953: /*! \brief       Increment programming attempt counter
                          2598	#954:  *  \param[in]   blockDescriptor Block descriptor
                          2599	#955:  *  \return      kFblOk / kFblFailed
                          2600	#956:  **********************************************************************************************************************/
                          2601		.align	1
                          2602		.align	1
                          2603	..gh.f.p.3.a.1.r.0.e.15:
                          2604		.type	..gh.f.p.3.a.1.r.0.e.15,@object
                          2605		.size	..gh.f.p.3.a.1.r.0.e.15,0
                          2606		.global	ApplFblIncProgAttempts
                          2607	ApplFblIncProgAttempts:
000005d4 182106e8         2608		e_stwu	sp, -24(sp)
000005d8 1bc10910         2609		e_stmw	r30, 16(sp)
000005dc 0080             2610		se_mflr	r0
000005de d701             2611		se_stw	r0, 28(sp)
                          2612	#	    .bf
                          2613	.LDW04:
                          2614	#957: tFblResult ApplFblIncProgAttempts( tBlockDescriptor blockDescriptor )
                          2615	#958: {
                          2616	#959:    tFblApnvProgCountType progAttempts;
                          2617	#960:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          2618	#961:    tFblResult status;

                                   Fri Apr 10 08:31:56 2020           Page 48
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2619	#963:    status = (tFblResult)ApplFblNvReadProgAttempts(blockDescriptor.blockNr, nvBuffer);
000005e0 80e3             2620		se_lbz	r30, 0(r3)
000005e2 18618008         2621		e_addi	r3, sp, 8
000005e6 4824             2622		se_li	r4, 2
000005e8 6c4e             2623		se_slwi	r30, 4
000005ea 1cbe8b22         2624		e_add16i	r5, r30, -29918
000005ee 71059001         2625		e_add2is	r5, 16385
000005f2 78000001         2626		e_bl	EepromDriver_RReadSync
000005f6 2a03             2627		se_cmpi	r3, 0
000005f8 4810             2628		se_li	r0, 1
000005fa 7fe0009e         2629		iseleq	r31, r0, r0
                          2630	#964:    progAttempts = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
000005fe 4823             2631		se_li	r3, 2
00000600 18818008         2632		e_addi	r4, sp, 8
00000604 78000001         2633		e_bl	FblMemGetInteger
                          2634	#966:    if (status == kFblOk)
00000608 2a0f             2635		se_cmpi	r31, 0
0000060a e200             2636		se_bne	.L3173
                          2637	#967:    {
                          2638	#968:       /* Value is stored inverted because of erase value */
                          2639	#969:       progAttempts = FblInvert16Bit(progAttempts);
                          2640	#line969
                          2641	..lin.74ab1805..406e1bea.0_49::
                          2642	.LDWlin49:
0000060c 2d00             2643		se_bmaski	r0, 16
0000060e 7c640278         2644		xor	r4, r3, r0
                          2645	#970:       progAttempts++;
00000612 2004             2646		se_addi	r4, 1
00000614 00e4             2647		se_extzh	r4
                          2648	#971:       progAttempts = FblInvert16Bit(progAttempts);
00000616 7c840278         2649		xor	r4, r4, r0
                          2650	#973:       FblMemSetInteger(sizeof(nvBuffer), progAttempts, nvBuffer);
0000061a 4823             2651		se_li	r3, 2
0000061c 18a18008         2652		e_addi	r5, sp, 8
00000620 78000001         2653		e_bl	FblMemSetInteger
                          2654	#974:       status = (tFblResult)ApplFblNvWriteProgAttempts(blockDescriptor.blockNr, nvBuffer);
00000624 1cbe8b22         2655		e_add16i	r5, r30, -29918
00000628 71059001         2656		e_add2is	r5, 16385
0000062c 18618008         2657		e_addi	r3, sp, 8
00000630 4824             2658		se_li	r4, 2
00000632 78000001         2659		e_bl	EepromDriver_RWriteSync
00000636 2a03             2660		se_cmpi	r3, 0
00000638 4810             2661		se_li	r0, 1
0000063a 7fe0009e         2662		iseleq	r31, r0, r0
                          2663	.L3173:
                          2664	#975:    }
                          2665	#977:    return status;
0000063e 01f3             2666		se_mr	r3, r31
                          2667	#	    .ef
                          2668	.LDW14:
00000640 c701             2669		se_lwz	r0, 28(sp)
00000642 1bc10810         2670		e_lmw	r30, 16(sp)
00000646 2171             2671		se_addi	sp, 24
00000648 0090             2672		se_mtlr	r0
0000064a 0004             2673		se_blr
                          2674		.global	__ghs_eofn_ApplFblIncProgAttempts

                                   Fri Apr 10 08:31:56 2020           Page 49
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2675	__ghs_eofn_ApplFblIncProgAttempts:
                          2676		.type	ApplFblIncProgAttempts,@function
                          2677		.size	ApplFblIncProgAttempts,$-ApplFblIncProgAttempts
                          2678		.align	1
                          2679	
                          2680	#function:			ApplFblIncProgAttempts
                          2681	#stack frame size:		24
                          2682	#link area offset:		0
                          2683	#local storage area offset:	12
                          2684	#gpr save area offset:		16
                          2685	#
                          2686	#progAttempts	r4	local
                          2687	#nvBuffer	8(sp)	local
                          2688	#status	r31	local
                          2689	
                          2690	#blockDescriptor	r3	param
                          2691	
                          2692		.data
                          2693		.section ".vletext", "vax"
                          2694		.vle
                          2695		.vle
                          2696	
                          2697	#978: }
                          2698	
                          2699	#980: /***********************************************************************************************************************
                          2700	#981:  *  ApplFblGetProgAttempts
                          2701	#982:  **********************************************************************************************************************/
                          2702	#983: /*! \brief       Get programming attempt counter
                          2703	#984:  *  \param[in]   blockDescriptor Block descriptor
                          2704	#985:  *  \param[out]  progAttempts The returned programming attempts
                          2705	#986:  *  \return      kFblOk / kFblFailed
                          2706	#987:  **********************************************************************************************************************/
                          2707		.align	1
                          2708		.align	1
                          2709	..gh.f.p.4.a.1.r.0.e.16:
                          2710		.type	..gh.f.p.4.a.1.r.0.e.16,@object
                          2711		.size	..gh.f.p.4.a.1.r.0.e.16,0
                          2712		.global	ApplFblGetProgAttempts
                          2713	ApplFblGetProgAttempts:
0000064c 182106e8         2714		e_stwu	sp, -24(sp)
00000650 1bc10910         2715		e_stmw	r30, 16(sp)
00000654 0080             2716		se_mflr	r0
00000656 d701             2717		se_stw	r0, 28(sp)
00000658 014e             2718		se_mr	r30, r4
                          2719	#	    .bf
                          2720	.LDW24:
                          2721	#988: tFblResult ApplFblGetProgAttempts( tBlockDescriptor blockDescriptor, V_MEMRAM1 vuint16 V_MEMRAM2 V_MEMRAM3 * progAttempts )
                          2722	#989: {
                          2723	#990:    tFblResult status;
                          2724	#991:    vuint8 nvBuffer[sizeof(tFblApnvProgCountType)];
                          2725	#992:    tFblApnvProgCountType tempCount;
                          2726	#994:    status = (tFblResult)ApplFblNvReadProgAttempts(blockDescriptor.blockNr, nvBuffer);
0000065a 8003             2727		se_lbz	r0, 0(r3)
0000065c 18618008         2728		e_addi	r3, sp, 8
00000660 4824             2729		se_li	r4, 2
00000662 6c40             2730		se_slwi	r0, 4

                                   Fri Apr 10 08:31:56 2020           Page 50
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000664 1ca08b22         2731		e_add16i	r5, r0, -29918
00000668 71059001         2732		e_add2is	r5, 16385
0000066c 78000001         2733		e_bl	EepromDriver_RReadSync
00000670 2a03             2734		se_cmpi	r3, 0
00000672 4810             2735		se_li	r0, 1
00000674 7fe0009e         2736		iseleq	r31, r0, r0
                          2737	#995:    tempCount = (tFblApnvProgCountType)FblMemGetInteger(sizeof(nvBuffer), nvBuffer);
00000678 4823             2738		se_li	r3, 2
0000067a 18818008         2739		e_addi	r4, sp, 8
0000067e 78000001         2740		e_bl	FblMemGetInteger
                          2741	#996:    tempCount = FblInvert16Bit(tempCount);
00000682 2d00             2742		se_bmaski	r0, 16
00000684 7c630278         2743		xor	r3, r3, r0
                          2744	#997:    *progAttempts = (vuint16)tempCount;
00000688 b03e             2745		se_sth	r3, 0(r30)
                          2746	#999:    return status;
0000068a 01f3             2747		se_mr	r3, r31
                          2748	#	    .ef
                          2749	.LDW34:
0000068c c701             2750		se_lwz	r0, 28(sp)
0000068e 1bc10810         2751		e_lmw	r30, 16(sp)
00000692 2171             2752		se_addi	sp, 24
00000694 0090             2753		se_mtlr	r0
00000696 0004             2754		se_blr
                          2755		.global	__ghs_eofn_ApplFblGetProgAttempts
                          2756	__ghs_eofn_ApplFblGetProgAttempts:
                          2757		.type	ApplFblGetProgAttempts,@function
                          2758		.size	ApplFblGetProgAttempts,$-ApplFblGetProgAttempts
                          2759		.align	1
                          2760	
                          2761	#function:			ApplFblGetProgAttempts
                          2762	#stack frame size:		24
                          2763	#link area offset:		0
                          2764	#local storage area offset:	12
                          2765	#gpr save area offset:		16
                          2766	#
                          2767	#nvBuffer	8(sp)	local
                          2768	#tempCount	r3	local
                          2769	
                          2770	#blockDescriptor	r3	param
                          2771	#progAttempts	r30	param
                          2772	
                          2773		.data
                          2774		.section ".vletext", "vax"
                          2775		.vle
                          2776		.vle
                          2777	
                          2778	#1000: }
                          2779	
                          2780	#1002: #if defined( SEC_VER_DISABLE_CRC_TOTAL )
                          2781	#1003: #else
                          2782	#1004: /***********************************************************************************************************************
                          2783	#1005:  *  ApplFblWriteCRCTotal
                          2784	#1006:  **********************************************************************************************************************/
                          2785	#1007: /*! \brief       Store CRC total. String buffer used to avoid little/big endian permutation.
                          2786	#1008:  *  \param[in]   blockDescriptor Block descriptor

                                   Fri Apr 10 08:31:56 2020           Page 51
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2787	#1009:  *  \param[in]   crcStart Start address of CRC calculation
                          2788	#1010:  *  \param[in]   crcLength Length of CRC calculation
                          2789	#1011:  *  \param[in]   crcValue The CRC value
                          2790	#1012:  *  \return      kFblOk / kFblFailed
                          2791	#1013:  **********************************************************************************************************************/
                          2792		.align	1
                          2793		.align	1
                          2794	..gh.f.p.6.a.1.r.0.e.17:
                          2795		.type	..gh.f.p.6.a.1.r.0.e.17,@object
                          2796		.size	..gh.f.p.6.a.1.r.0.e.17,0
                          2797		.global	ApplFblWriteCRCTotal
                          2798	ApplFblWriteCRCTotal:
00000698 0080             2799		se_mflr	r0
0000069a 182106d8         2800		e_stwu	sp, -40(sp)
0000069e db01             2801		se_stw	r0, 44(sp)
000006a0 1b410910         2802		e_stmw	r26, 16(sp)
000006a4 013e             2803		se_mr	r30, r3
000006a6 015b             2804		se_mr	r27, r5
000006a8 016c             2805		se_mr	r28, r6
                          2806	#	    .bf
                          2807	.LDW44:
                          2808	#1014: tFblResult ApplFblWriteCRCTotal( V_MEMRAM1 tBlockDescriptor V_MEMRAM2 V_MEMRAM3 * blockDescriptor, vuint32 crcStart, vuint32 crcLength, vuint32 crcValue )
                          2809	#1015: {
                          2810	#1016:    tFblResult status;
                          2811	#1017:    vuint8 strConversionBuffer[4u];
                          2812	#1019:    status = kFblOk;
                          2813	#1021: # if ( kEepSizeCRCStart  != 4u ) || \
                          2814	#1022:      ( kEepSizeCRCLength != 4u ) || \
                          2815	#1023:      ( kEepSizeCRCValue  != 4u )
                          2816	#1024: #  error "Error in FBL_APNV.C: Configuration error (kEepSizeCRC... != 4)"
                          2817	#1025: # endif
                          2818	#1027:    FblMemSetInteger(kEepSizeCRCStart, crcStart, strConversionBuffer);
000006aa 4843             2819		se_li	r3, 4
000006ac 18a18008         2820		e_addi	r5, sp, 8
000006b0 78000001         2821		e_bl	FblMemSetInteger
                          2822	#1028:    status |= (tFblResult)ApplFblNvWriteCRCStart(blockDescriptor->blockNr, strConversionBuffer);
000006b4 800e             2823		se_lbz	r0, 0(r30)
000006b6 73a8e001         2824		e_lis	r29, 16385
000006ba 1fbd8b24         2825		e_add16i	r29, r29, -29916
000006be 18bd8004         2826		e_addi	r5, r29, 4
000006c2 18618008         2827		e_addi	r3, sp, 8
000006c6 6c40             2828		se_slwi	r0, 4
000006c8 0405             2829		se_add	r5, r0
000006ca 4844             2830		se_li	r4, 4
000006cc 78000001         2831		e_bl	EepromDriver_RWriteSync
000006d0 481a             2832		se_li	r26, 1
000006d2 2a03             2833		se_cmpi	r3, 0
000006d4 7fe0d09e         2834		iseleq	r31, r0, r26
000006d8 00cf             2835		se_extzb	r31
                          2836	#1030:    FblMemSetInteger(kEepSizeCRCLength, crcLength, strConversionBuffer);
000006da 01b4             2837		se_mr	r4, r27
000006dc 4843             2838		se_li	r3, 4
000006de 18a18008         2839		e_addi	r5, sp, 8
000006e2 78000001         2840		e_bl	FblMemSetInteger
                          2841	#1031:    status |= (tFblResult)ApplFblNvWriteCRCLength(blockDescriptor->blockNr, strConversionBuffer);
000006e6 805e             2842		se_lbz	r5, 0(r30)

                                   Fri Apr 10 08:31:56 2020           Page 52
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000006e8 181d8008         2843		e_addi	r0, r29, 8
000006ec 18618008         2844		e_addi	r3, sp, 8
000006f0 4844             2845		se_li	r4, 4
000006f2 6c45             2846		se_slwi	r5, 4
000006f4 0405             2847		se_add	r5, r0
000006f6 78000001         2848		e_bl	EepromDriver_RWriteSync
000006fa 2a03             2849		se_cmpi	r3, 0
000006fc 7c00d09e         2850		iseleq	r0, r0, r26
00000700 440f             2851		se_or	r31, r0
                          2852	#1033:    FblMemSetInteger(kEepSizeCRCValue, crcValue, strConversionBuffer);
00000702 01c4             2853		se_mr	r4, r28
00000704 4843             2854		se_li	r3, 4
00000706 18a18008         2855		e_addi	r5, sp, 8
0000070a 78000001         2856		e_bl	FblMemSetInteger
                          2857	#1034:    status |= (tFblResult)ApplFblNvWriteCRCValue(blockDescriptor->blockNr, strConversionBuffer);
0000070e 805e             2858		se_lbz	r5, 0(r30)
00000710 4844             2859		se_li	r4, 4
00000712 18618008         2860		e_addi	r3, sp, 8
00000716 6c45             2861		se_slwi	r5, 4
00000718 04d5             2862		se_add	r5, r29
0000071a 78000001         2863		e_bl	EepromDriver_RWriteSync
0000071e 2a03             2864		se_cmpi	r3, 0
00000720 7c00d09e         2865		iseleq	r0, r0, r26
00000724 440f             2866		se_or	r31, r0
                          2867	#1036:    return status;
00000726 01f3             2868		se_mr	r3, r31
                          2869	#	    .ef
                          2870	.LDW54:
00000728 cb01             2871		se_lwz	r0, 44(sp)
0000072a 1b410810         2872		e_lmw	r26, 16(sp)
0000072e 18218028         2873		e_addi	sp, sp, 40
00000732 0090             2874		se_mtlr	r0
00000734 0004             2875		se_blr
                          2876		.global	__ghs_eofn_ApplFblWriteCRCTotal
                          2877	__ghs_eofn_ApplFblWriteCRCTotal:
                          2878		.type	ApplFblWriteCRCTotal,@function
                          2879		.size	ApplFblWriteCRCTotal,$-ApplFblWriteCRCTotal
                          2880		.align	1
                          2881	
                          2882	#function:			ApplFblWriteCRCTotal
                          2883	#stack frame size:		40
                          2884	#link area offset:		0
                          2885	#local storage area offset:	12
                          2886	#gpr save area offset:		16
                          2887	#
                          2888	#strConversionBuffer	8(sp)	local
                          2889	
                          2890	#blockDescriptor	r30	param
                          2891	#crcStart	none	param
                          2892	#crcLength	r27	param
                          2893	#crcValue	r28	param
                          2894	
                          2895		.data
                          2896		.section ".vletext", "vax"
                          2897		.vle
                          2898		.vle

                                   Fri Apr 10 08:31:56 2020           Page 53
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2899	
                          2900	#1037: }
                          2901	
                          2902	#1038: #endif /* SEC_VER_DISABLE_CRC_TOTAL */
                          2903	#1040: /***********************************************************************************************************************
                          2904	#1041:  *  ApplFblValidateApp
                          2905	#1042:  **********************************************************************************************************************/
                          2906	#1043: /*! \brief       Function is called after a successful download to validate a file.
                          2907	#1044:  *  \pre         Complete file must be successfully downloaded
                          2908	#1045:  *  \return      kFblOk = validation successfully performed, kFblFailed = validation failed
                          2909	#1046:  **********************************************************************************************************************/
                          2910		.align	1
                          2911		.align	1
                          2912	..gh.f.p.0.a.1.r.0.e.18:
                          2913		.type	..gh.f.p.0.a.1.r.0.e.18,@object
                          2914		.size	..gh.f.p.0.a.1.r.0.e.18,0
                          2915		.global	ApplFblValidateApp
                          2916	ApplFblValidateApp:
                          2917	#	    .bf
                          2918	.LDW64:
                          2919	#1047: tFblResult ApplFblValidateApp( void )
                          2920	#1048: {
                          2921	#1049:    tFblResult result;
                          2922	#1050: # if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2923	#1051: # else
                          2924	#1052:    vuint8 applValidity;
                          2925	#1053: # endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2926	#1055: # if defined( FBL_ENABLE_PRESENCE_PATTERN )
                          2927	#1056:    /* Set presence pattern in last flashed logical block. */
                          2928	#1057:    result = ApplFblSetModulePresence(&currentValidatedBlock);
00000736 7060e000         2929		e_lis	r3, %hiadj(currentValidatedBlock)
0000073a 1c630000         2930		e_add16i	r3, r3, %lo(currentValidatedBlock)
0000073e 78000000         2931		se_b	ApplFblSetModulePresence
                          2932	#1058: # else
                          2933	#1059:    applValidity = kEepApplConsistent;
                          2934	#1060:    result = (tFblResult)ApplFblNvWriteApplValidity(&applValidity);
                          2935	#1061: # endif /* FBL_ENABLE_PRESENCE_PATTERN */
                          2936	#1063:    return result;
                          2937	#	    .ef
                          2938	.LDW74:
                          2939	..lin.74ab1805..e4ae27d1.0_50::
                          2940	.LDWlin50:
                          2941		.global	__ghs_eofn_ApplFblValidateApp
                          2942	__ghs_eofn_ApplFblValidateApp:
                          2943		.type	ApplFblValidateApp,@function
                          2944		.size	ApplFblValidateApp,$-ApplFblValidateApp
                          2945		.align	1
                          2946	
                          2947	#function:			ApplFblValidateApp
                          2948	#stack frame size:		0
                          2949	#
                          2950	
                          2951		.data
                          2952		.section ".vletext", "vax"
                          2953		.vle
                          2954		.vle

                                   Fri Apr 10 08:31:56 2020           Page 54
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          2955	
                          2956	#1064: }
                          2957		.align	1
                          2958	#FblLogicalBlockTable	FblLogicalBlockTable	import
                          2959	#ApplIntJmpTable	ApplIntJmpTable	import
                          2960	#FlashBlock	FlashBlock	import
                          2961	#memDrvLst	memDrvLst	import
                          2962	#memSegment	memSegment	import
                          2963	#fblStartMagicFlag	fblStartMagicFlag	import
                          2964	#blockPresencePattern	blockPresencePattern	static
                          2965	#currentValidatedBlock	currentValidatedBlock	static
                          2966	
                          2967		.data
                          2968		.note ".PPC.EMB.apuinfo",""
00000000 00000008         2969		.long	0x00000008
00000004 00000004         2970		.long	4
00000008 00000002         2971		.long	0x00000002
                          2972		# "APUinfo\000"
0000000c 41505569         2973		.byte	65,80,85,105
00000010 6e666f00         2974		.byte	110,102,111,0
00000014 01040001         2975		.long	0x01040001
                          2976		.ghsnote version,20
                          2977		.ghsnote tools,3
                          2978		.ghsnote options,644
                          2979		.section ".vletext", "vax"
                          2980		.vle
                          2981		.vle
                          2982		.align	1
                          2983	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB06C..0::
                          2984		.section	.debug_info
                          2985	.Ldw_begin:
00000000 00001777         2986		.long	.Ldw_end-.Ldw_begin-4
00000004 0002             2987		.byte	0,2
00000006 00000000         2988		.long	.Ldw_abbr_begin
0000000a 04               2989		.byte	4
                          2990		.section	.debug_abbrev
                          2991	.Ldw_abbr_begin:
                          2992		.section	.debug_info
0000000b 01               2993		.byte	1
0000000c 00000000         2994		.long	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB06C..0
00000010 00000000         2995		.long	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB06C..0
00000014 536f757263652f66 2996		.strz	"Source/fbl_apnv.c"
0000001c 626c5f61706e762e
00000024 6300            
00000026 433a5c566563746f 2997		.strz	"C:\\Vector\\CBD1800772_D00_Mpc57xx\\Demo\\DemoFbl\\Appl"
0000002e 725c434244313830
00000036 303737325f443030
0000003e 5f4d706335377878
00000046 5c44656d6f5c4465
0000004e 6d6f46626c5c4170
00000056 706c00          
00000059 4748532043203230 2998		.strz	"GHS C 2017.5.4 [dual]"
00000061 31372e352e34205b
00000069 6475616c5d00    
0000006f 0001             2999		.byte	0,1
00000071 00000000         3000		.long	.Ldw_line_begin
00000075 00000000         3001		.long	.Ldw_macinfo_begin
00000079 00               3002		.byte	0
                          3003	
                          3004		.section	.debug_abbrev
00000000 01               3005		.byte	1
00000001 11               3006		.byte	17
00000002 01               3007		.byte	1
00000003 1101             3008		.byte	17,1
00000005 1201             3009		.byte	18,1
00000007 0308             3010		.byte	3,8

                                   Fri Apr 10 08:31:56 2020           Page 55
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000009 1b08             3011		.byte	27,8
0000000b 2508             3012		.byte	37,8
0000000d 1305             3013		.byte	19,5
0000000f 1006             3014		.byte	16,6
00000011 4306             3015		.byte	67,6
00000013 420b             3016		.byte	66,11
00000015 0000             3017		.byte	0,0
                          3018	
                          3019		.section	.debug_line
                          3020	.Ldw_line_begin:
00000000 00000b34         3021		.long	.Ldw_line_end-.Ldw_line_begin-4
00000004 0002             3022		.byte	0,2
00000006 0000065e         3023		.long	.Ldw_lpro_end-.Ldw_lpro_begin
                          3024	.Ldw_lpro_begin:
0000000a 01               3025		.byte	1
0000000b 00               3026		.byte	0
0000000c 00               3027		.byte	0
0000000d 04               3028		.byte	4
0000000e 0a               3029		.byte	10
0000000f 000101           3030		.byte	0,1,1
00000012 010100           3031		.byte	1,1,0
00000015 000001           3032		.byte	0,0,1
00000018 00               3033		.byte	0
00000019 536f757263652f66 3034		.strz	"Source/fbl_apnv.c"
00000021 626c5f61706e762e
00000029 6300            
0000002b 000000           3035		.byte	0,0,0
0000002e 696e636c7564655c 3036		.strz	"include\\fbl_inc.h"
00000036 66626c5f696e632e
0000003e 6800            
00000040 000000           3037		.byte	0,0,0
00000043 2e2e2f2e2e2f2e2e 3038		.strz	"../../../bsw/fbl/v_ver.h"
0000004b 2f6273772f66626c
00000053 2f765f7665722e68
0000005b 00              
0000005c 000000           3039		.byte	0,0,0
0000005f 67656e646174615c 3040		.strz	"gendata\\v_cfg.h"
00000067 765f6366672e6800
0000006f 000000           3041		.byte	0,0,0
00000072 67656e646174615c 3042		.strz	"gendata\\v_inc.h"
0000007a 765f696e632e6800
00000082 000000           3043		.byte	0,0,0
00000085 67656e646174615c 3044		.strz	"gendata\\v_par.h"
0000008d 765f7061722e6800
00000095 000000           3045		.byte	0,0,0
00000098 2e2e2f2e2e2f2e2e 3046		.strz	"../../../bsw/_common/v_def.h"
000000a0 2f6273772f5f636f
000000a8 6d6d6f6e2f765f64
000000b0 65662e6800      
000000b5 000000           3047		.byte	0,0,0
000000b8 2e2e2f2e2e2f2e2e 3048		.strz	"../../../bsw/secmod/SecM.h"
000000c0 2f6273772f736563
000000c8 6d6f642f5365634d
000000d0 2e6800          
000000d3 000000           3049		.byte	0,0,0
000000d6 2e2e2f2e2e2f2e2e 3050		.strz	"../../../bsw/secmod/Sec.h"
000000de 2f6273772f736563
000000e6 6d6f642f5365632e
000000ee 6800            
000000f0 000000           3051		.byte	0,0,0
000000f3 2e2e2f2e2e2f2e2e 3052		.strz	"../../../bsw/secmod/Sec_Inc.h"
000000fb 2f6273772f736563
00000103 6d6f642f5365635f
0000010b 496e632e6800    
00000111 000000           3053		.byte	0,0,0
00000114 67656e646174615c 3054		.strz	"gendata\\SecM_cfg.h"
0000011c 5365634d5f636667
00000124 2e6800          
00000127 000000           3055		.byte	0,0,0
0000012a 2e2e2f2e2e2f2e2e 3056		.strz	"../../../bsw/secmod/Sec_Types.h"
00000132 2f6273772f736563
0000013a 6d6f642f5365635f
00000142 54797065732e6800
0000014a 000000           3057		.byte	0,0,0
0000014d 67656e646174615c 3058		.strz	"gendata\\SecMPar.h"
00000155 5365634d5061722e
0000015d 6800            
0000015f 000000           3059		.byte	0,0,0
00000162 2e2e2f2e2e2f2e2e 3060		.strz	"../../../bsw/secmod/SecM_inc.h"
0000016a 2f6273772f736563
00000172 6d6f642f5365634d
0000017a 5f696e632e6800  
00000181 000000           3061		.byte	0,0,0
00000184 2e2e2f2e2e2f2e2e 3062		.strz	"../../../bsw/secmod/Sec_Crc.h"
0000018c 2f6273772f736563
00000194 6d6f642f5365635f
0000019c 4372632e6800    
000001a2 000000           3063		.byte	0,0,0
000001a5 2e2e2f2e2e2f2e2e 3064		.strz	"../../../bsw/secmod/Sec_SeedKey.h"
000001ad 2f6273772f736563
000001b5 6d6f642f5365635f
000001bd 536565644b65792e
000001c5 6800            
000001c7 000000           3065		.byte	0,0,0
000001ca 696e636c7564655c 3066		.strz	"include\\Sec_SeedKey_Cfg.h"
000001d2 5365635f53656564
000001da 4b65795f4366672e
000001e2 6800            

                                   Fri Apr 10 08:31:56 2020           Page 56
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000001e4 000000           3067		.byte	0,0,0
000001e7 2e2e2f2e2e2f2e2e 3068		.strz	"../../../bsw/secmod/Sec_Verification.h"
000001ef 2f6273772f736563
000001f7 6d6f642f5365635f
000001ff 5665726966696361
00000207 74696f6e2e6800  
0000020e 000000           3069		.byte	0,0,0
00000211 2e2e2f2e2e2f2e2e 3070		.strz	"../../../bsw/fbl/fbl_def.h"
00000219 2f6273772f66626c
00000221 2f66626c5f646566
00000229 2e6800          
0000022c 000000           3071		.byte	0,0,0
0000022f 67656e646174615c 3072		.strz	"gendata\\fbl_cfg.h"
00000237 66626c5f6366672e
0000023f 6800            
00000241 000000           3073		.byte	0,0,0
00000244 2e2e2f2e2e2f2e2e 3074		.strz	"../../../bsw/fbl/fbl_assert.h"
0000024c 2f6273772f66626c
00000254 2f66626c5f617373
0000025c 6572742e6800    
00000262 000000           3075		.byte	0,0,0
00000265 2e2e2f2e2e2f2e2e 3076		.strz	"../../../bsw/fbl/fbl_assert_oem.h"
0000026d 2f6273772f66626c
00000275 2f66626c5f617373
0000027d 6572745f6f656d2e
00000285 6800            
00000287 000000           3077		.byte	0,0,0
0000028a 67656e646174615c 3078		.strz	"gendata\\fbl_mtab.h"
00000292 66626c5f6d746162
0000029a 2e6800          
0000029d 000000           3079		.byte	0,0,0
000002a0 696e636c7564655c 3080		.strz	"include\\MemMap.h"
000002a8 4d656d4d61702e68
000002b0 00              
000002b1 000000           3081		.byte	0,0,0
000002b4 2e2e2f2e2e2f2e2e 3082		.strz	"../../../bsw/flash/flashdrv.h"
000002bc 2f6273772f666c61
000002c4 73682f666c617368
000002cc 6472762e6800    
000002d2 000000           3083		.byte	0,0,0
000002d5 2e2e2f2e2e2f2e2e 3084		.strz	"../../../bsw/flash_xd1/flashdrv_xd1.h"
000002dd 2f6273772f666c61
000002e5 73685f7864312f66
000002ed 6c6173686472765f
000002f5 7864312e6800    
000002fb 000000           3085		.byte	0,0,0
000002fe 2e2e2f2e2e2f2e2e 3086		.strz	"../../../bsw/fbl/fbl_wd.h"
00000306 2f6273772f66626c
0000030e 2f66626c5f77642e
00000316 6800            
00000318 000000           3087		.byte	0,0,0
0000031b 2e2e2f2e2e2f2e2e 3088		.strz	"../../../bsw/fbl/iotypes.h"
00000323 2f6273772f66626c
0000032b 2f696f7479706573
00000333 2e6800          
00000336 000000           3089		.byte	0,0,0
00000339 2e2e2f2e2e2f2e2e 3090		.strz	"../../../bsw/fbl/fbl_mio.h"
00000341 2f6273772f66626c
00000349 2f66626c5f6d696f
00000351 2e6800          
00000354 000000           3091		.byte	0,0,0
00000357 2e2e2f2e2e2f2e2e 3092		.strz	"../../../bsw/fbl/fbl_flio.h"
0000035f 2f6273772f66626c
00000367 2f66626c5f666c69
0000036f 6f2e6800        
00000373 000000           3093		.byte	0,0,0
00000376 2e2e2f2e2e2f2e2e 3094		.strz	"../../../bsw/fbl/fbl_flio_xd1.h"
0000037e 2f6273772f66626c
00000386 2f66626c5f666c69
0000038e 6f5f7864312e6800
00000396 000000           3095		.byte	0,0,0
00000399 2e2e2f2e2e2f2e2e 3096		.strz	"../../../bsw/eep/EepInc.h"
000003a1 2f6273772f656570
000003a9 2f456570496e632e
000003b1 6800            
000003b3 000000           3097		.byte	0,0,0
000003b6 2e2e2f2e2e2f2e2e 3098		.strz	"../../../bsw/eep/EepIO.h"
000003be 2f6273772f656570
000003c6 2f456570494f2e68
000003ce 00              
000003cf 000000           3099		.byte	0,0,0
000003d2 2e2e2f2e2e2f2e2e 3100		.strz	"../../../bsw/fbl/applvect.h"
000003da 2f6273772f66626c
000003e2 2f6170706c766563
000003ea 742e6800        
000003ee 000000           3101		.byte	0,0,0
000003f1 2e2e2f2e2e2f2e2e 3102		.strz	"../../../bsw/fbl/fbl_cw.h"
000003f9 2f6273772f66626c
00000401 2f66626c5f63772e
00000409 6800            
0000040b 000000           3103		.byte	0,0,0
0000040e 67656e646174615c 3104		.strz	"gendata\\fbl_cw_cfg.h"
00000416 66626c5f63775f63
0000041e 66672e6800      
00000423 000000           3105		.byte	0,0,0
00000426 2e2e2f2e2e2f2e2e 3106		.strz	"../../../bsw/fbl/fbl_hw.h"
0000042e 2f6273772f66626c
00000436 2f66626c5f68772e
0000043e 6800            
00000440 000000           3107		.byte	0,0,0
00000443 2e2e2f2e2e2f2e2e 3108		.strz	"../../../bsw/fbl/fbl_sfr.h"
0000044b 2f6273772f66626c
00000453 2f66626c5f736672
0000045b 2e6800          
0000045e 000000           3109		.byte	0,0,0
00000461 67656e646174615c 3110		.strz	"gendata\\ftp_cfg.h"
00000469 6674705f6366672e
00000471 6800            
00000473 000000           3111		.byte	0,0,0
00000476 2e2e2f2e2e2f2e2e 3112		.strz	"../../../bsw/fbl/fbl_tp.h"
0000047e 2f6273772f66626c
00000486 2f66626c5f74702e
0000048e 6800            
00000490 000000           3113		.byte	0,0,0
00000493 696e636c7564655c 3114		.strz	"include\\WrapNv_inc.h"
0000049b 577261704e765f69
000004a3 6e632e6800      
000004a8 000000           3115		.byte	0,0,0
000004ab 2e2e2f2e2e2f2e2e 3116		.strz	"../../../bsw/wrapnv/WrapNv.h"
000004b3 2f6273772f777261
000004bb 706e762f57726170
000004c3 4e762e6800      
000004c8 000000           3117		.byte	0,0,0
000004cb 67656e646174615c 3118		.strz	"gendata\\WrapNv_cfg.h"
000004d3 577261704e765f63
000004db 66672e6800      
000004e0 000000           3119		.byte	0,0,0
000004e3 67656e646174615c 3120		.strz	"gendata\\fbl_apfb.h"
000004eb 66626c5f61706662
000004f3 2e6800          
000004f6 000000           3121		.byte	0,0,0
000004f9 2e2e2f2e2e2f2e2e 3122		.strz	"../../../bsw/fbl/fbl_diag.h"
00000501 2f6273772f66626c
00000509 2f66626c5f646961
00000511 672e6800        

                                   Fri Apr 10 08:31:56 2020           Page 57
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000515 000000           3123		.byte	0,0,0
00000518 2e2e2f2e2e2f2e2e 3124		.strz	"../../../bsw/fbl/fbl_diag_oem.h"
00000520 2f6273772f66626c
00000528 2f66626c5f646961
00000530 675f6f656d2e6800
00000538 000000           3125		.byte	0,0,0
0000053b 2e2e2f2e2e2f2e2e 3126		.strz	"../../../bsw/fbl/fbl_mem.h"
00000543 2f6273772f66626c
0000054b 2f66626c5f6d656d
00000553 2e6800          
00000556 000000           3127		.byte	0,0,0
00000559 2e2e2f2e2e2f2e2e 3128		.strz	"../../../bsw/fbl/fbl_mem_oem.h"
00000561 2f6273772f66626c
00000569 2f66626c5f6d656d
00000571 5f6f656d2e6800  
00000578 000000           3129		.byte	0,0,0
0000057b 696e636c7564655c 3130		.strz	"include\\fbl_ap.h"
00000583 66626c5f61702e68
0000058b 00              
0000058c 000000           3131		.byte	0,0,0
0000058f 696e636c7564655c 3132		.strz	"include\\fbl_apwd.h"
00000597 66626c5f61707764
0000059f 2e6800          
000005a2 000000           3133		.byte	0,0,0
000005a5 696e636c7564655c 3134		.strz	"include\\fbl_apdi.h"
000005ad 66626c5f61706469
000005b5 2e6800          
000005b8 000000           3135		.byte	0,0,0
000005bb 696e636c7564655c 3136		.strz	"include\\fbl_apnv.h"
000005c3 66626c5f61706e76
000005cb 2e6800          
000005ce 000000           3137		.byte	0,0,0
000005d1 2e2e2f2e2e2f2e2e 3138		.strz	"../../../bsw/fbl/fbl_main.h"
000005d9 2f6273772f66626c
000005e1 2f66626c5f6d6169
000005e9 6e2e6800        
000005ed 000000           3139		.byte	0,0,0
000005f0 696e636c7564655c 3140		.strz	"include\\BrsHw.h"
000005f8 42727348772e6800
00000600 000000           3141		.byte	0,0,0
00000603 696e636c7564655c 3142		.strz	"include\\BrsHw_DerivativeList.h"
0000060b 42727348775f4465
00000613 7269766174697665
0000061b 4c6973742e6800  
00000622 000000           3143		.byte	0,0,0
00000625 696e636c7564655c 3144		.strz	"include\\BrsCfg.h"
0000062d 4272734366672e68
00000635 00              
00000636 000000           3145		.byte	0,0,0
00000639 696e636c7564655c 3146		.strz	"include\\BrsTypes.h"
00000641 4272735479706573
00000649 2e6800          
0000064c 000000           3147		.byte	0,0,0
0000064f 696e636c7564655c 3148		.strz	"include\\Brs_MemMap.h"
00000657 4272735f4d656d4d
0000065f 61702e6800      
00000664 000000           3149		.byte	0,0,0
00000667 00               3150		.byte	0
                          3151	.Ldw_lpro_end:
                          3152		.section	.debug_macinfo
                          3153	.Ldw_macinfo_begin:
                          3154		.section	.debug_frame
                          3155	.LDW_5d355a0:
00000000 0000008c         3156		.long	.LDW_unq_2-.LDW_unq_1
                          3157	.LDW_unq_1:
00000004 ffffffff         3158		.byte	255,255,255,255
00000008 01               3159		.byte	1
00000009 00               3160		.byte	0
0000000a 01               3161		.byte	1
0000000b 01               3162		.byte	1
0000000c 6c               3163		.byte	108
0000000d 0c               3164		.byte	12
0000000e 01               3165		.byte	1
0000000f 00               3166		.byte	0
00000010 07               3167		.byte	7
00000011 00               3168		.byte	0
00000012 07               3169		.byte	7
00000013 01               3170		.byte	1
00000014 07               3171		.byte	7
00000015 02               3172		.byte	2
00000016 07               3173		.byte	7
00000017 03               3174		.byte	3
00000018 07               3175		.byte	7
00000019 04               3176		.byte	4
0000001a 07               3177		.byte	7
0000001b 05               3178		.byte	5

                                   Fri Apr 10 08:31:56 2020           Page 58
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000001c 07               3179		.byte	7
0000001d 06               3180		.byte	6
0000001e 07               3181		.byte	7
0000001f 07               3182		.byte	7
00000020 07               3183		.byte	7
00000021 08               3184		.byte	8
00000022 07               3185		.byte	7
00000023 09               3186		.byte	9
00000024 07               3187		.byte	7
00000025 0a               3188		.byte	10
00000026 07               3189		.byte	7
00000027 0b               3190		.byte	11
00000028 07               3191		.byte	7
00000029 0c               3192		.byte	12
0000002a 07               3193		.byte	7
0000002b 0d               3194		.byte	13
0000002c 07               3195		.byte	7
0000002d 0e               3196		.byte	14
0000002e 07               3197		.byte	7
0000002f 0f               3198		.byte	15
00000030 07               3199		.byte	7
00000031 10               3200		.byte	16
00000032 07               3201		.byte	7
00000033 11               3202		.byte	17
00000034 07               3203		.byte	7
00000035 12               3204		.byte	18
00000036 07               3205		.byte	7
00000037 13               3206		.byte	19
00000038 07               3207		.byte	7
00000039 14               3208		.byte	20
0000003a 07               3209		.byte	7
0000003b 15               3210		.byte	21
0000003c 07               3211		.byte	7
0000003d 16               3212		.byte	22
0000003e 07               3213		.byte	7
0000003f 17               3214		.byte	23
00000040 07               3215		.byte	7
00000041 18               3216		.byte	24
00000042 07               3217		.byte	7
00000043 19               3218		.byte	25
00000044 07               3219		.byte	7
00000045 1a               3220		.byte	26
00000046 07               3221		.byte	7
00000047 1b               3222		.byte	27
00000048 07               3223		.byte	7
00000049 1c               3224		.byte	28
0000004a 07               3225		.byte	7
0000004b 1d               3226		.byte	29
0000004c 07               3227		.byte	7
0000004d 1e               3228		.byte	30
0000004e 07               3229		.byte	7
0000004f 1f               3230		.byte	31
00000050 07               3231		.byte	7
00000051 20               3232		.byte	32
00000052 07               3233		.byte	7
00000053 21               3234		.byte	33

                                   Fri Apr 10 08:31:56 2020           Page 59
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000054 07               3235		.byte	7
00000055 22               3236		.byte	34
00000056 07               3237		.byte	7
00000057 23               3238		.byte	35
00000058 07               3239		.byte	7
00000059 24               3240		.byte	36
0000005a 07               3241		.byte	7
0000005b 25               3242		.byte	37
0000005c 07               3243		.byte	7
0000005d 26               3244		.byte	38
0000005e 07               3245		.byte	7
0000005f 27               3246		.byte	39
00000060 07               3247		.byte	7
00000061 28               3248		.byte	40
00000062 07               3249		.byte	7
00000063 29               3250		.byte	41
00000064 07               3251		.byte	7
00000065 2a               3252		.byte	42
00000066 07               3253		.byte	7
00000067 2b               3254		.byte	43
00000068 07               3255		.byte	7
00000069 2c               3256		.byte	44
0000006a 07               3257		.byte	7
0000006b 2d               3258		.byte	45
0000006c 07               3259		.byte	7
0000006d 2e               3260		.byte	46
0000006e 07               3261		.byte	7
0000006f 2f               3262		.byte	47
00000070 07               3263		.byte	7
00000071 30               3264		.byte	48
00000072 07               3265		.byte	7
00000073 31               3266		.byte	49
00000074 07               3267		.byte	7
00000075 32               3268		.byte	50
00000076 07               3269		.byte	7
00000077 33               3270		.byte	51
00000078 07               3271		.byte	7
00000079 34               3272		.byte	52
0000007a 07               3273		.byte	7
0000007b 35               3274		.byte	53
0000007c 07               3275		.byte	7
0000007d 36               3276		.byte	54
0000007e 07               3277		.byte	7
0000007f 37               3278		.byte	55
00000080 07               3279		.byte	7
00000081 38               3280		.byte	56
00000082 07               3281		.byte	7
00000083 39               3282		.byte	57
00000084 07               3283		.byte	7
00000085 3a               3284		.byte	58
00000086 07               3285		.byte	7
00000087 3b               3286		.byte	59
00000088 07               3287		.byte	7
00000089 3c               3288		.byte	60
0000008a 07               3289		.byte	7
0000008b 3d               3290		.byte	61

                                   Fri Apr 10 08:31:56 2020           Page 60
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000008c 07               3291		.byte	7
0000008d 3e               3292		.byte	62
0000008e 07               3293		.byte	7
0000008f 3f               3294		.byte	63
                          3295	.LDW_unq_2:
                          3296		.section	.debug_info
                          3297	.LDW_498c8b8:
0000007a 27               3298		.byte	39
0000007b 756e7369676e6564 3299		.strz	"unsigned char"
00000083 206368617200    
00000089 08               3300		.byte	8
0000008a 01               3301		.byte	1
                          3302	
                          3303		.section	.debug_abbrev
00000017 27               3304		.byte	39
00000018 24               3305		.byte	36
00000019 00               3306		.byte	0
0000001a 0308             3307		.byte	3,8
0000001c 3e0b             3308		.byte	62,11
0000001e 0b0b             3309		.byte	11,11
00000020 0000             3310		.byte	0,0
                          3311	
                          3312		.section	.debug_info
                          3313	.LDW_498c688:
0000008b 46               3314		.byte	70
0000008c 00000000         3315		.long	.LDW_49cb7c0
00000090 01               3316		.byte	1
                          3317	
                          3318		.section	.debug_abbrev
00000022 46               3319		.byte	70
00000023 15               3320		.byte	21
00000024 01               3321		.byte	1
00000025 4910             3322		.byte	73,16
00000027 270c             3323		.byte	39,12
00000029 0000             3324		.byte	0,0
                          3325	
                          3326		.section	.debug_info
                          3327	.LDW_49835f8:
00000091 14               3328		.byte	20
00000092 00000000         3329		.long	.LDW_49cb768
00000096 00               3330		.byte	0
                          3331	
                          3332		.section	.debug_abbrev
0000002b 14               3333		.byte	20
0000002c 05               3334		.byte	5
0000002d 00               3335		.byte	0
0000002e 4910             3336		.byte	73,16
00000030 4b0c             3337		.byte	75,12
00000032 0000             3338		.byte	0,0
                          3339	
                          3340		.section	.debug_info
                          3341	.LDW_4983688:
00000097 14               3342		.byte	20
00000098 00000000         3343		.long	.LDW_49cb870
0000009c 00               3344		.byte	0
                          3345	
0000009d 00               3346		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 61
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          3347	
                          3348	.LDW_498ca78:
0000009e 27               3349		.byte	39
0000009f 696e7400         3350		.strz	"int"
000000a3 05               3351		.byte	5
000000a4 04               3352		.byte	4
                          3353	
                          3354	.LDW_49cd7c0:
000000a5 3c               3355		.byte	60
000000a6 00               3356		.byte	0
000000a7 01               3357		.byte	1
000000a8 00000000         3358		.long	.LDW_49cb768
                          3359	
                          3360		.section	.debug_abbrev
00000034 3c               3361		.byte	60
00000035 01               3362		.byte	1
00000036 01               3363		.byte	1
00000037 090b             3364		.byte	9,11
00000039 0b0f             3365		.byte	11,15
0000003b 4910             3366		.byte	73,16
0000003d 0000             3367		.byte	0,0
                          3368	
                          3369		.section	.debug_info
000000ac 34               3370		.byte	52
000000ad 00000000         3371		.long	.LDW_498ca78
000000b1 04               3372		.byte	4
000000b2 00               3373		.byte	0
000000b3 00               3374		.byte	0
                          3375	
                          3376		.section	.debug_abbrev
0000003f 34               3377		.byte	52
00000040 21               3378		.byte	33
00000041 00               3379		.byte	0
00000042 4910             3380		.byte	73,16
00000044 0b0f             3381		.byte	11,15
00000046 220d             3382		.byte	34,13
00000048 2f0d             3383		.byte	47,13
0000004a 0000             3384		.byte	0,0
                          3385	
                          3386		.section	.debug_info
000000b4 00               3387		.byte	0
                          3388	
                          3389	.LDW_49cd8a0:
000000b5 3c               3390		.byte	60
000000b6 00               3391		.byte	0
000000b7 01               3392		.byte	1
000000b8 00000000         3393		.long	.LDW_49cb768
                          3394	
000000bc 34               3395		.byte	52
000000bd 00000000         3396		.long	.LDW_498ca78
000000c1 04               3397		.byte	4
000000c2 00               3398		.byte	0
000000c3 00               3399		.byte	0
                          3400	
000000c4 00               3401		.byte	0
                          3402	

                                   Fri Apr 10 08:31:56 2020           Page 62
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          3403	.LDW_498c3b0:
000000c5 27               3404		.byte	39
000000c6 73686f727400     3405		.strz	"short"
000000cc 05               3406		.byte	5
000000cd 02               3407		.byte	2
                          3408	
                          3409	.LDW_498c6c0:
000000ce 27               3410		.byte	39
000000cf 756e7369676e6564 3411		.strz	"unsigned long"
000000d7 206c6f6e6700    
000000dd 07               3412		.byte	7
000000de 04               3413		.byte	4
                          3414	
                          3415	.LDW_498c960:
000000df 31               3416		.byte	49
000000e0 00000000         3417		.long	.LDW_49cda30
                          3418	
                          3419		.section	.debug_abbrev
0000004c 31               3420		.byte	49
0000004d 0f               3421		.byte	15
0000004e 00               3422		.byte	0
0000004f 4910             3423		.byte	73,16
00000051 0000             3424		.byte	0,0
                          3425	
                          3426		.section	.debug_info
                          3427	.LDW_498c3e8:
000000e4 31               3428		.byte	49
000000e5 00000000         3429		.long	.LDW_49ca458
                          3430	
                          3431	.LDW_498c650:
000000e9 46               3432		.byte	70
000000ea 00000000         3433		.long	.LDW_49cd980
000000ee 01               3434		.byte	1
                          3435	
                          3436	.LDW_49834a8:
000000ef 14               3437		.byte	20
000000f0 00000000         3438		.long	.LDW_49cb768
000000f4 00               3439		.byte	0
                          3440	
                          3441	.LDW_4983358:
000000f5 14               3442		.byte	20
000000f6 00000000         3443		.long	.LDW_498c960
000000fa 00               3444		.byte	0
                          3445	
                          3446	.LDW_4983598:
000000fb 14               3447		.byte	20
000000fc 00000000         3448		.long	.LDW_498c3e8
00000100 00               3449		.byte	0
                          3450	
00000101 00               3451		.byte	0
                          3452	
                          3453	.LDW_498c9d0:
00000102 31               3454		.byte	49
00000103 00000000         3455		.long	.LDW_49cb870
                          3456	
                          3457	.LDW_498ca40:
00000107 46               3458		.byte	70

                                   Fri Apr 10 08:31:56 2020           Page 63
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000108 00000000         3459		.long	.LDW_49cb7c0
0000010c 01               3460		.byte	1
                          3461	
                          3462	.LDW_4983178:
0000010d 14               3463		.byte	20
0000010e 00000000         3464		.long	.LDW_498c9d0
00000112 00               3465		.byte	0
                          3466	
00000113 00               3467		.byte	0
                          3468	
                          3469	.LDW_498c6f8:
00000114 27               3470		.byte	39
00000115 756e7369676e6564 3471		.strz	"unsigned short"
0000011d 2073686f727400  
00000124 07               3472		.byte	7
00000125 02               3473		.byte	2
                          3474	
                          3475	.LDW_498c5a8:
00000126 31               3476		.byte	49
00000127 00000000         3477		.long	.LDW_49cb768
                          3478	
                          3479	.LDW_498ca08:
0000012b 46               3480		.byte	70
0000012c 00000000         3481		.long	.LDW_49cb7c0
00000130 01               3482		.byte	1
                          3483	
                          3484	.LDW_4983388:
00000131 14               3485		.byte	20
00000132 00000000         3486		.long	.LDW_498c9d0
00000136 00               3487		.byte	0
                          3488	
00000137 00               3489		.byte	0
                          3490	
                          3491	.LDW_498c420:
00000138 46               3492		.byte	70
00000139 00000000         3493		.long	.LDW_49cb7c0
0000013d 01               3494		.byte	1
                          3495	
                          3496	.LDW_4983328:
0000013e 14               3497		.byte	20
0000013f 00000000         3498		.long	.LDW_498c9d0
00000143 00               3499		.byte	0
                          3500	
00000144 00               3501		.byte	0
                          3502	
                          3503	.LDW_5c4d240:
00000145 3c               3504		.byte	60
00000146 00               3505		.byte	0
00000147 04               3506		.byte	4
00000148 00000000         3507		.long	.LDW_49cb768
                          3508	
0000014c 34               3509		.byte	52
0000014d 00000000         3510		.long	.LDW_498ca78
00000151 04               3511		.byte	4
00000152 00               3512		.byte	0
00000153 03               3513		.byte	3
                          3514	

                                   Fri Apr 10 08:31:56 2020           Page 64
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000154 00               3515		.byte	0
                          3516	
                          3517	.LDW_5c4d2c8:
00000155 3c               3518		.byte	60
00000156 00               3519		.byte	0
00000157 04               3520		.byte	4
00000158 00000000         3521		.long	.LDW_49cb768
                          3522	
0000015c 34               3523		.byte	52
0000015d 00000000         3524		.long	.LDW_498ca78
00000161 04               3525		.byte	4
00000162 00               3526		.byte	0
00000163 03               3527		.byte	3
                          3528	
00000164 00               3529		.byte	0
                          3530	
                          3531	.LDW_498c768:
00000165 46               3532		.byte	70
00000166 00000000         3533		.long	.LDW_49cb7c0
0000016a 01               3534		.byte	1
                          3535	
                          3536	.LDW_49835c8:
0000016b 14               3537		.byte	20
0000016c 00000000         3538		.long	.LDW_498c9d0
00000170 00               3539		.byte	0
                          3540	
00000171 00               3541		.byte	0
                          3542	
                          3543	.LDW_498c458:
00000172 46               3544		.byte	70
00000173 00000000         3545		.long	.LDW_5c1e8e0
00000177 01               3546		.byte	1
                          3547	
                          3548	.LDW_4983208:
00000178 14               3549		.byte	20
00000179 00000000         3550		.long	.LDW_49cb768
0000017d 00               3551		.byte	0
                          3552	
0000017e 00               3553		.byte	0
                          3554	
                          3555	.LDW_498c490:
0000017f 46               3556		.byte	70
00000180 00000000         3557		.long	.LDW_5c1e7d8
00000184 01               3558		.byte	1
                          3559	
00000185 00               3560		.byte	0
                          3561	
                          3562	.LDW_498c7a0:
00000186 46               3563		.byte	70
00000187 00000000         3564		.long	.LDW_49cb7c0
0000018b 01               3565		.byte	1
                          3566	
                          3567	.LDW_4983298:
0000018c 14               3568		.byte	20
0000018d 00000000         3569		.long	.LDW_49cb870
00000191 00               3570		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 65
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          3571	
00000192 00               3572		.byte	0
                          3573	
                          3574	.LDW_498c4c8:
00000193 46               3575		.byte	70
00000194 00000000         3576		.long	.LDW_49cb7c0
00000198 01               3577		.byte	1
                          3578	
                          3579	.LDW_4983448:
00000199 14               3580		.byte	20
0000019a 00000000         3581		.long	.LDW_49cb870
0000019e 00               3582		.byte	0
                          3583	
0000019f 00               3584		.byte	0
                          3585	
                          3586	.LDW_498c7d8:
000001a0 46               3587		.byte	70
000001a1 00000000         3588		.long	.LDW_5c1e200
000001a5 01               3589		.byte	1
                          3590	
000001a6 00               3591		.byte	0
                          3592	
                          3593	.LDW_498c848:
000001a7 47               3594		.byte	71
000001a8 01               3595		.byte	1
                          3596	
                          3597		.section	.debug_abbrev
00000053 47               3598		.byte	71
00000054 15               3599		.byte	21
00000055 01               3600		.byte	1
00000056 270c             3601		.byte	39,12
00000058 0000             3602		.byte	0,0
                          3603	
                          3604		.section	.debug_info
                          3605	.LDW_4983508:
000001a9 14               3606		.byte	20
000001aa 00000000         3607		.long	.LDW_5c1e5c8
000001ae 00               3608		.byte	0
                          3609	
                          3610	.LDW_4983538:
000001af 14               3611		.byte	20
000001b0 00000000         3612		.long	.LDW_5c1e410
000001b4 00               3613		.byte	0
                          3614	
000001b5 00               3615		.byte	0
                          3616	
                          3617	.LDW_498c5e0:
000001b6 46               3618		.byte	70
000001b7 00000000         3619		.long	.LDW_49cb7c0
000001bb 01               3620		.byte	1
                          3621	
                          3622	.LDW_4983838:
000001bc 14               3623		.byte	20
000001bd 00000000         3624		.long	.LDW_49cb870
000001c1 00               3625		.byte	0
                          3626	

                                   Fri Apr 10 08:31:56 2020           Page 66
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000001c2 00               3627		.byte	0
                          3628	
                          3629	.LDW_5c4d810:
000001c3 3c               3630		.byte	60
000001c4 00               3631		.byte	0
000001c5 02               3632		.byte	2
000001c6 00000000         3633		.long	.LDW_49cb768
                          3634	
000001ca 34               3635		.byte	52
000001cb 00000000         3636		.long	.LDW_498ca78
000001cf 04               3637		.byte	4
000001d0 00               3638		.byte	0
000001d1 01               3639		.byte	1
                          3640	
000001d2 00               3641		.byte	0
                          3642	
                          3643	.LDW_498c500:
000001d3 31               3644		.byte	49
000001d4 00000000         3645		.long	.LDW_5b85098
                          3646	
                          3647	.LDW_498c880:
000001d8 46               3648		.byte	70
000001d9 00000000         3649		.long	.LDW_49cb7c0
000001dd 01               3650		.byte	1
                          3651	
                          3652	.LDW_4983718:
000001de 14               3653		.byte	20
000001df 00000000         3654		.long	.LDW_49cb870
000001e3 00               3655		.byte	0
                          3656	
                          3657	.LDW_49837a8:
000001e4 14               3658		.byte	20
000001e5 00000000         3659		.long	.LDW_498c500
000001e9 00               3660		.byte	0
                          3661	
000001ea 00               3662		.byte	0
                          3663	
                          3664	.LDW_5c4d930:
000001eb 3c               3665		.byte	60
000001ec 00               3666		.byte	0
000001ed 02               3667		.byte	2
000001ee 00000000         3668		.long	.LDW_49cb768
                          3669	
000001f2 34               3670		.byte	52
000001f3 00000000         3671		.long	.LDW_498ca78
000001f7 04               3672		.byte	4
000001f8 00               3673		.byte	0
000001f9 01               3674		.byte	1
                          3675	
000001fa 00               3676		.byte	0
                          3677	
                          3678	.LDW_498c8f0:
000001fb 46               3679		.byte	70
000001fc 00000000         3680		.long	.LDW_49cb7c0
00000200 01               3681		.byte	1
                          3682	

                                   Fri Apr 10 08:31:56 2020           Page 67
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          3683	.LDW_4983748:
00000201 14               3684		.byte	20
00000202 00000000         3685		.long	.LDW_49cb870
00000206 00               3686		.byte	0
                          3687	
00000207 00               3688		.byte	0
                          3689	
                          3690	.LDW_5c4da50:
00000208 3c               3691		.byte	60
00000209 00               3692		.byte	0
0000020a 02               3693		.byte	2
0000020b 00000000         3694		.long	.LDW_49cb768
                          3695	
0000020f 34               3696		.byte	52
00000210 00000000         3697		.long	.LDW_498ca78
00000214 04               3698		.byte	4
00000215 00               3699		.byte	0
00000216 01               3700		.byte	1
                          3701	
00000217 00               3702		.byte	0
                          3703	
                          3704	.LDW_498c928:
00000218 46               3705		.byte	70
00000219 00000000         3706		.long	.LDW_49cb7c0
0000021d 01               3707		.byte	1
                          3708	
                          3709	.LDW_49837d8:
0000021e 14               3710		.byte	20
0000021f 00000000         3711		.long	.LDW_49cb870
00000223 00               3712		.byte	0
                          3713	
                          3714	.LDW_4983808:
00000224 14               3715		.byte	20
00000225 00000000         3716		.long	.LDW_498c500
00000229 00               3717		.byte	0
                          3718	
0000022a 00               3719		.byte	0
                          3720	
                          3721	.LDW_5d3ea80:
0000022b 3c               3722		.byte	60
0000022c 00               3723		.byte	0
0000022d 02               3724		.byte	2
0000022e 00000000         3725		.long	.LDW_49cb768
                          3726	
00000232 34               3727		.byte	52
00000233 00000000         3728		.long	.LDW_498ca78
00000237 04               3729		.byte	4
00000238 00               3730		.byte	0
00000239 01               3731		.byte	1
                          3732	
0000023a 00               3733		.byte	0
                          3734	
                          3735	.LDW_498c538:
0000023b 46               3736		.byte	70
0000023c 00000000         3737		.long	.LDW_49cb7c0
00000240 01               3738		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 68
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          3739	
                          3740	.LDW_5d3e968:
00000241 14               3741		.byte	20
00000242 00000000         3742		.long	.LDW_498c9d0
00000246 00               3743		.byte	0
                          3744	
                          3745	.LDW_5d3e9f8:
00000247 14               3746		.byte	20
00000248 00000000         3747		.long	.LDW_49cd9d8
0000024c 00               3748		.byte	0
                          3749	
                          3750	.LDW_5d3e8d8:
0000024d 14               3751		.byte	20
0000024e 00000000         3752		.long	.LDW_49cd9d8
00000252 00               3753		.byte	0
                          3754	
                          3755	.LDW_5d3e998:
00000253 14               3756		.byte	20
00000254 00000000         3757		.long	.LDW_49cd9d8
00000258 00               3758		.byte	0
                          3759	
00000259 00               3760		.byte	0
                          3761	
                          3762	.LDW_5d3eba0:
0000025a 3c               3763		.byte	60
0000025b 00               3764		.byte	0
0000025c 04               3765		.byte	4
0000025d 00000000         3766		.long	.LDW_49cb768
                          3767	
00000261 34               3768		.byte	52
00000262 00000000         3769		.long	.LDW_498ca78
00000266 04               3770		.byte	4
00000267 00               3771		.byte	0
00000268 03               3772		.byte	3
                          3773	
00000269 00               3774		.byte	0
                          3775	
                          3776	.LDW_498cb20:
0000026a 46               3777		.byte	70
0000026b 00000000         3778		.long	.LDW_49cb7c0
0000026f 01               3779		.byte	1
                          3780	
00000270 00               3781		.byte	0
                          3782	
                          3783	.LDW_498cae8:
00000271 46               3784		.byte	70
00000272 00000000         3785		.long	.LDW_49cb7c0
00000276 01               3786		.byte	1
                          3787	
00000277 00               3788		.byte	0
                          3789	
                          3790	.LDW_5b73258:
00000278 27               3791		.byte	39
00000279 766f69642a00     3792		.strz	"void*"
0000027f 01               3793		.byte	1
00000280 04               3794		.byte	4

                                   Fri Apr 10 08:31:56 2020           Page 69
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          3795	
                          3796	.LDW_5dcd858:
00000281 47               3797		.byte	71
00000282 01               3798		.byte	1
                          3799	
00000283 00               3800		.byte	0
                          3801	
                          3802	.LDW_5dcd6d0:
00000284 31               3803		.byte	49
00000285 00000000         3804		.long	.LDW_5dcd858
                          3805	
                          3806	.LDW_5dce058:
00000289 3c               3807		.byte	60
0000028a 00               3808		.byte	0
0000028b 01               3809		.byte	1
0000028c 00000000         3810		.long	.LDW_49cb768
                          3811	
00000290 34               3812		.byte	52
00000291 00000000         3813		.long	.LDW_498ca78
00000295 04               3814		.byte	4
00000296 00               3815		.byte	0
00000297 00               3816		.byte	0
                          3817	
00000298 00               3818		.byte	0
                          3819	
                          3820	.LDW_5dcdb08:
00000299 3c               3821		.byte	60
0000029a 00               3822		.byte	0
0000029b 30               3823		.byte	48
0000029c 00000000         3824		.long	.LDW_49cb870
                          3825	
000002a0 34               3826		.byte	52
000002a1 00000000         3827		.long	.LDW_498ca78
000002a5 04               3828		.byte	4
000002a6 00               3829		.byte	0
000002a7 01               3830		.byte	1
                          3831	
000002a8 00               3832		.byte	0
                          3833	
                          3834	.LDW_5dcd2a8:
000002a9 46               3835		.byte	70
000002aa 00000000         3836		.long	.LDW_5b85250
000002ae 01               3837		.byte	1
                          3838	
                          3839	.LDW_5d3e2a8:
000002af 14               3840		.byte	20
000002b0 00000000         3841		.long	.LDW_5b73258
000002b4 00               3842		.byte	0
                          3843	
000002b5 00               3844		.byte	0
                          3845	
                          3846	.LDW_5dcd4a0:
000002b6 31               3847		.byte	49
000002b7 00000000         3848		.long	.LDW_5dcd2a8
                          3849	
                          3850	.LDW_5dcd238:

                                   Fri Apr 10 08:31:56 2020           Page 70
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000002bb 46               3851		.byte	70
000002bc 00000000         3852		.long	.LDW_5b85250
000002c0 01               3853		.byte	1
                          3854	
                          3855	.LDW_5d3e638:
000002c1 14               3856		.byte	20
000002c2 00000000         3857		.long	.LDW_5b73258
000002c6 00               3858		.byte	0
                          3859	
000002c7 00               3860		.byte	0
                          3861	
                          3862	.LDW_5dcd4d8:
000002c8 31               3863		.byte	49
000002c9 00000000         3864		.long	.LDW_5dcd238
                          3865	
                          3866	.LDW_5dcd5f0:
000002cd 46               3867		.byte	70
000002ce 00000000         3868		.long	.LDW_5b85250
000002d2 01               3869		.byte	1
                          3870	
                          3871	.LDW_5d3e608:
000002d3 14               3872		.byte	20
000002d4 00000000         3873		.long	.LDW_5dccc90
000002d8 00               3874		.byte	0
                          3875	
                          3876	.LDW_5d3e728:
000002d9 14               3877		.byte	20
000002da 00000000         3878		.long	.LDW_49ca458
000002de 00               3879		.byte	0
                          3880	
                          3881	.LDW_5d3e308:
000002df 14               3882		.byte	20
000002e0 00000000         3883		.long	.LDW_49cda30
000002e4 00               3884		.byte	0
                          3885	
000002e5 00               3886		.byte	0
                          3887	
                          3888	.LDW_5dcd628:
000002e6 31               3889		.byte	49
000002e7 00000000         3890		.long	.LDW_5dcd5f0
                          3891	
                          3892	.LDW_5dcd510:
000002eb 46               3893		.byte	70
000002ec 00000000         3894		.long	.LDW_5b85250
000002f0 01               3895		.byte	1
                          3896	
                          3897	.LDW_5d3e458:
000002f1 14               3898		.byte	20
000002f2 00000000         3899		.long	.LDW_5dccc90
000002f6 00               3900		.byte	0
                          3901	
                          3902	.LDW_5d3e2d8:
000002f7 14               3903		.byte	20
000002f8 00000000         3904		.long	.LDW_49ca458
000002fc 00               3905		.byte	0
                          3906	

                                   Fri Apr 10 08:31:56 2020           Page 71
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          3907	.LDW_5d3e338:
000002fd 14               3908		.byte	20
000002fe 00000000         3909		.long	.LDW_49cda30
00000302 00               3910		.byte	0
                          3911	
00000303 00               3912		.byte	0
                          3913	
                          3914	.LDW_5dcd580:
00000304 31               3915		.byte	49
00000305 00000000         3916		.long	.LDW_5dcd510
                          3917	
                          3918	.LDW_5dcd660:
00000309 46               3919		.byte	70
0000030a 00000000         3920		.long	.LDW_5b85250
0000030e 01               3921		.byte	1
                          3922	
                          3923	.LDW_5d3e368:
0000030f 14               3924		.byte	20
00000310 00000000         3925		.long	.LDW_49ca458
00000314 00               3926		.byte	0
                          3927	
                          3928	.LDW_5d3e398:
00000315 14               3929		.byte	20
00000316 00000000         3930		.long	.LDW_49cda30
0000031a 00               3931		.byte	0
                          3932	
0000031b 00               3933		.byte	0
                          3934	
                          3935	.LDW_5dcd778:
0000031c 31               3936		.byte	49
0000031d 00000000         3937		.long	.LDW_5dcd660
                          3938	
                          3939	.LDW_5dcfa08:
00000321 2d               3940		.byte	45
00000322 00000000         3941		.long	.LDW_49cb768
                          3942	
                          3943		.section	.debug_abbrev
0000005a 2d               3944		.byte	45
0000005b 35               3945		.byte	53
0000005c 00               3946		.byte	0
0000005d 4910             3947		.byte	73,16
0000005f 0000             3948		.byte	0,0
                          3949	
                          3950		.section	.debug_info
                          3951	.LDW_5dcd7b0:
00000326 31               3952		.byte	49
00000327 00000000         3953		.long	.LDW_5dcfa08
                          3954	
                          3955	.LDW_5dd00e8:
0000032b 2b               3956		.byte	43
0000032c 00000000         3957		.long	.LDW_49cd9d8
                          3958	
                          3959		.section	.debug_abbrev
00000061 2b               3960		.byte	43
00000062 26               3961		.byte	38
00000063 00               3962		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 72
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000064 4910             3963		.byte	73,16
00000066 0000             3964		.byte	0,0
                          3965	
                          3966		.section	.debug_info
                          3967	.LDW_5dd0ac8:
00000330 31               3968		.byte	49
00000331 00000000         3969		.long	.LDW_5dd00e8
                          3970	
                          3971	.LDW_5dd31b8:
00000335 2b               3972		.byte	43
00000336 00000000         3973		.long	.LDW_49cb768
                          3974	
                          3975	.LDW_5dd0a20:
0000033a 31               3976		.byte	49
0000033b 00000000         3977		.long	.LDW_5dd31b8
                          3978	
                          3979	.LDW_5dd3478:
0000033f 2b               3980		.byte	43
00000340 00000000         3981		.long	.LDW_5dcc818
                          3982	
                          3983	.LDW_5dcdc18:
00000344 3c               3984		.byte	60
00000345 00               3985		.byte	0
00000346 08               3986		.byte	8
00000347 00000000         3987		.long	.LDW_49cb768
                          3988	
0000034b 34               3989		.byte	52
0000034c 00000000         3990		.long	.LDW_498ca78
00000350 04               3991		.byte	4
00000351 00               3992		.byte	0
00000352 07               3993		.byte	7
                          3994	
00000353 00               3995		.byte	0
                          3996	
                          3997	.LDW_5dce6b8:
00000354 3d               3998		.byte	61
00000355 00               3999		.byte	0
00000356 00000000         4000		.long	.LDW_5dd00e8
                          4001	
                          4002		.section	.debug_abbrev
00000068 3d               4003		.byte	61
00000069 01               4004		.byte	1
0000006a 01               4005		.byte	1
0000006b 090b             4006		.byte	9,11
0000006d 4910             4007		.byte	73,16
0000006f 0000             4008		.byte	0,0
                          4009	
                          4010		.section	.debug_info
0000035a 34               4011		.byte	52
0000035b 00000000         4012		.long	.LDW_498ca78
0000035f 04               4013		.byte	4
00000360 00               4014		.byte	0
00000361 7f               4015		.byte	127
                          4016	
00000362 00               4017		.byte	0
                          4018	

                                   Fri Apr 10 08:31:56 2020           Page 73
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4019	.LDW_5dd6458:
00000363 2b               4020		.byte	43
00000364 00000000         4021		.long	.LDW_5dd0508
                          4022	
                          4023	.LDW_5dce410:
00000368 3c               4024		.byte	60
00000369 00               4025		.byte	0
0000036a 9001             4026		.byte	144,1
0000036c 00000000         4027		.long	.LDW_5dd6458
                          4028	
00000370 34               4029		.byte	52
00000371 00000000         4030		.long	.LDW_498ca78
00000375 04               4031		.byte	4
00000376 00               4032		.byte	0
00000377 0b               4033		.byte	11
                          4034	
00000378 00               4035		.byte	0
                          4036	
                          4037	.LDW_5dd7300:
00000379 2b               4038		.byte	43
0000037a 00000000         4039		.long	.LDW_5dcffe0
                          4040	
                          4041	.LDW_5dce740:
0000037e 3c               4042		.byte	60
0000037f 00               4043		.byte	0
00000380 30               4044		.byte	48
00000381 00000000         4045		.long	.LDW_5dd7300
                          4046	
00000385 34               4047		.byte	52
00000386 00000000         4048		.long	.LDW_498ca78
0000038a 04               4049		.byte	4
0000038b 00               4050		.byte	0
0000038c 01               4051		.byte	1
                          4052	
0000038d 00               4053		.byte	0
                          4054	
                          4055	.LDW_5dd89d0:
0000038e 3c               4056		.byte	60
0000038f 00               4057		.byte	0
00000390 08               4058		.byte	8
00000391 00000000         4059		.long	.LDW_5dcfa08
                          4060	
00000395 34               4061		.byte	52
00000396 00000000         4062		.long	.LDW_498ca78
0000039a 04               4063		.byte	4
0000039b 00               4064		.byte	0
0000039c 07               4065		.byte	7
                          4066	
0000039d 00               4067		.byte	0
                          4068	
                          4069	.LDW_5dd8e98:
0000039e 3c               4070		.byte	60
0000039f 00               4071		.byte	0
000003a0 04               4072		.byte	4
000003a1 00000000         4073		.long	.LDW_5dd31b8
                          4074	

                                   Fri Apr 10 08:31:56 2020           Page 74
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000003a5 34               4075		.byte	52
000003a6 00000000         4076		.long	.LDW_498ca78
000003aa 04               4077		.byte	4
000003ab 00               4078		.byte	0
000003ac 03               4079		.byte	3
                          4080	
000003ad 00               4081		.byte	0
                          4082	
                          4083	.LDW_5dda4a0:
000003ae 46               4084		.byte	70
000003af 00000000         4085		.long	.LDW_5b85250
000003b3 01               4086		.byte	1
                          4087	
                          4088	.LDW_5dd27a8:
000003b4 14               4089		.byte	20
000003b5 00000000         4090		.long	.LDW_5dccc90
000003b9 00               4091		.byte	0
                          4092	
                          4093	.LDW_5dd2838:
000003ba 14               4094		.byte	20
000003bb 00000000         4095		.long	.LDW_49ca458
000003bf 00               4096		.byte	0
                          4097	
                          4098	.LDW_5dd2868:
000003c0 14               4099		.byte	20
000003c1 00000000         4100		.long	.LDW_49cda30
000003c5 00               4101		.byte	0
                          4102	
000003c6 00               4103		.byte	0
                          4104	
                          4105	.LDW_5dda2e0:
000003c7 46               4106		.byte	70
000003c8 00000000         4107		.long	.LDW_5b85250
000003cc 01               4108		.byte	1
                          4109	
                          4110	.LDW_5ddcb48:
000003cd 14               4111		.byte	20
000003ce 00000000         4112		.long	.LDW_5dccc90
000003d2 00               4113		.byte	0
                          4114	
                          4115	.LDW_5ddce18:
000003d3 14               4116		.byte	20
000003d4 00000000         4117		.long	.LDW_49ca458
000003d8 00               4118		.byte	0
                          4119	
                          4120	.LDW_5ddce48:
000003d9 14               4121		.byte	20
000003da 00000000         4122		.long	.LDW_49cda30
000003de 00               4123		.byte	0
                          4124	
000003df 00               4125		.byte	0
                          4126	
                          4127	.LDW_5dda8c8:
000003e0 46               4128		.byte	70
000003e1 00000000         4129		.long	.LDW_5b85250
000003e5 01               4130		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 75
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4131	
                          4132	.LDW_5ddcf08:
000003e6 14               4133		.byte	20
000003e7 00000000         4134		.long	.LDW_5dccc90
000003eb 00               4135		.byte	0
                          4136	
                          4137	.LDW_5ddcb78:
000003ec 14               4138		.byte	20
000003ed 00000000         4139		.long	.LDW_49ca458
000003f1 00               4140		.byte	0
                          4141	
                          4142	.LDW_5ddc968:
000003f2 14               4143		.byte	20
000003f3 00000000         4144		.long	.LDW_49cda30
000003f7 00               4145		.byte	0
                          4146	
000003f8 00               4147		.byte	0
                          4148	
                          4149	.LDW_5ddd480:
000003f9 27               4150		.byte	39
000003fa 756e7369676e6564 4151		.strz	"unsigned int"
00000402 20696e7400      
00000407 07               4152		.byte	7
00000408 04               4153		.byte	4
                          4154	
                          4155	.LDW_5de0b80:
00000409 46               4156		.byte	70
0000040a 00000000         4157		.long	.LDW_49cb768
0000040e 01               4158		.byte	1
                          4159	
0000040f 00               4160		.byte	0
                          4161	
                          4162	.LDW_5de1018:
00000410 46               4163		.byte	70
00000411 00000000         4164		.long	.LDW_49cd980
00000415 01               4165		.byte	1
                          4166	
                          4167	.LDW_5dddeb8:
00000416 14               4168		.byte	20
00000417 00000000         4169		.long	.LDW_5c1e8e0
0000041b 00               4170		.byte	0
                          4171	
0000041c 00               4172		.byte	0
                          4173	
                          4174	.LDW_5de19a8:
0000041d 47               4175		.byte	71
0000041e 01               4176		.byte	1
                          4177	
                          4178	.LDW_5dde428:
0000041f 14               4179		.byte	20
00000420 00000000         4180		.long	.LDW_49cd9d8
00000424 00               4181		.byte	0
                          4182	
                          4183	.LDW_5dde308:
00000425 14               4184		.byte	20
00000426 00000000         4185		.long	.LDW_49cd9d8
0000042a 00               4186		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 76
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4187	
                          4188	.LDW_5dde1e8:
0000042b 14               4189		.byte	20
0000042c 00000000         4190		.long	.LDW_5dd2ef8
00000430 00               4191		.byte	0
                          4192	
00000431 00               4193		.byte	0
                          4194	
                          4195	.LDW_5de19e0:
00000432 46               4196		.byte	70
00000433 00000000         4197		.long	.LDW_49cd9d8
00000437 01               4198		.byte	1
                          4199	
                          4200	.LDW_5dde038:
00000438 14               4201		.byte	20
00000439 00000000         4202		.long	.LDW_49cd9d8
0000043d 00               4203		.byte	0
                          4204	
                          4205	.LDW_5dde338:
0000043e 14               4206		.byte	20
0000043f 00000000         4207		.long	.LDW_5dd3058
00000443 00               4208		.byte	0
                          4209	
00000444 00               4210		.byte	0
                          4211	
                          4212	.LDW_49cb768:
00000445 2a               4213		.byte	42
00000446 7675696e743800   4214		.strz	"vuint8"
0000044d 9b04             4215		.byte	155,4
0000044f 18               4216		.byte	24
00000450 07               4217		.byte	7
00000451 00000000         4218		.long	.LDW_498c8b8
                          4219	
                          4220		.section	.debug_abbrev
00000071 2a               4221		.byte	42
00000072 16               4222		.byte	22
00000073 00               4223		.byte	0
00000074 0308             4224		.byte	3,8
00000076 3b0f             4225		.byte	59,15
00000078 390f             4226		.byte	57,15
0000007a 3a0f             4227		.byte	58,15
0000007c 4910             4228		.byte	73,16
0000007e 0000             4229		.byte	0,0
                          4230	
                          4231		.section	.debug_info
                          4232	.LDW_5b85098:
00000455 2a               4233		.byte	42
00000456 7675696e74313600 4234		.strz	"vuint16"
0000045e a604             4235		.byte	166,4
00000460 18               4236		.byte	24
00000461 07               4237		.byte	7
00000462 00000000         4238		.long	.LDW_498c6f8
                          4239	
                          4240	.LDW_49cd980:
00000466 2a               4241		.byte	42
00000467 7673696e74313600 4242		.strz	"vsint16"

                                   Fri Apr 10 08:31:56 2020           Page 77
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000046f ab04             4243		.byte	171,4
00000471 18               4244		.byte	24
00000472 07               4245		.byte	7
00000473 00000000         4246		.long	.LDW_498c3b0
                          4247	
                          4248	.LDW_49cd9d8:
00000477 2a               4249		.byte	42
00000478 7675696e74333200 4250		.strz	"vuint32"
00000480 b204             4251		.byte	178,4
00000482 18               4252		.byte	24
00000483 07               4253		.byte	7
00000484 00000000         4254		.long	.LDW_498c6c0
                          4255	
                          4256	.LDW_5c1e5c8:
00000488 2a               4257		.byte	42
00000489 7446626c4572726f 4258		.strz	"tFblErrorType"
00000491 725479706500    
00000497 9c02             4259		.byte	156,2
00000499 11               4260		.byte	17
0000049a 13               4261		.byte	19
0000049b 00000000         4262		.long	.LDW_49cb768
                          4263	
                          4264	.LDW_5c1e410:
0000049f 2a               4265		.byte	42
000004a0 7446626c4572726f 4266		.strz	"tFblErrorCode"
000004a8 72436f646500    
000004ae 9d02             4267		.byte	157,2
000004b0 11               4268		.byte	17
000004b1 13               4269		.byte	19
000004b2 00000000         4270		.long	.LDW_5b85098
                          4271	
                          4272	.LDW_49cb7c0:
000004b6 2a               4273		.byte	42
000004b7 7446626c52657375 4274		.strz	"tFblResult"
000004bf 6c7400          
000004c2 9f02             4275		.byte	159,2
000004c4 10               4276		.byte	16
000004c5 13               4277		.byte	19
000004c6 00000000         4278		.long	.LDW_49cb768
                          4279	
                          4280	.LDW_5c1e7d8:
000004ca 2a               4281		.byte	42
000004cb 7446626c50726f67 4282		.strz	"tFblProgStatus"
000004d3 53746174757300  
000004da a002             4283		.byte	160,2
000004dc 10               4284		.byte	16
000004dd 13               4285		.byte	19
000004de 00000000         4286		.long	.LDW_49cb768
                          4287	
                          4288	.LDW_5c1e200:
000004e2 2a               4289		.byte	42
000004e3 744170706c537461 4290		.strz	"tApplStatus"
000004eb 74757300        
000004ef a102             4291		.byte	161,2
000004f1 10               4292		.byte	16
000004f2 13               4293		.byte	19
000004f3 00000000         4294		.long	.LDW_49cb768
                          4295	
                          4296	.LDW_5c1e780:
000004f7 2a               4297		.byte	42
000004f8 46424c5f41444452 4298		.strz	"FBL_ADDR_TYPE"
00000500 5f5459504500    

                                   Fri Apr 10 08:31:56 2020           Page 78
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000506 ae02             4299		.byte	174,2
00000508 11               4300		.byte	17
00000509 13               4301		.byte	19
0000050a 00000000         4302		.long	.LDW_49cd9d8
                          4303	
                          4304	.LDW_5dcc240:
0000050e 2a               4305		.byte	42
0000050f 46424c5f4d454d53 4306		.strz	"FBL_MEMSIZE_TYPE"
00000517 495a455f54595045
0000051f 00              
00000520 af02             4307		.byte	175,2
00000522 11               4308		.byte	17
00000523 13               4309		.byte	19
00000524 00000000         4310		.long	.LDW_49cd9d8
                          4311	
                          4312	.LDW_5c1e8e0:
00000528 2a               4313		.byte	42
00000529 7446626c41646472 4314		.strz	"tFblAddress"
00000531 65737300        
00000535 b902             4315		.byte	185,2
00000537 1d               4316		.byte	29
00000538 13               4317		.byte	19
00000539 00000000         4318		.long	.LDW_5c1e780
                          4319	
                          4320	.LDW_5dcc298:
0000053d 2a               4321		.byte	42
0000053e 7446626c4c656e67 4322		.strz	"tFblLength"
00000546 746800          
00000549 ba02             4323		.byte	186,2
0000054b 1d               4324		.byte	29
0000054c 13               4325		.byte	19
0000054d 00000000         4326		.long	.LDW_5dcc240
                          4327	
                          4328	.LDW_5dcc450:
00000551 2a               4329		.byte	42
00000552 744578706f727446 4330		.strz	"tExportFct"
0000055a 637400          
0000055d ca02             4331		.byte	202,2
0000055f 1b               4332		.byte	27
00000560 13               4333		.byte	19
00000561 00000000         4334		.long	.LDW_5dcd6d0
                          4335	
                          4336	.LDW_49cb818:
00000565 42               4337		.byte	66
00000566 74426c6f636b4465 4338		.strz	"tBlockDescriptorTag"
0000056e 7363726970746f72
00000576 54616700        
0000057a 48               4339		.byte	72
0000057b 10               4340		.byte	16
0000057c 17               4341		.byte	23
0000057d 18               4342		.byte	24
0000057e 01               4343		.byte	1
                          4344	
                          4345		.section	.debug_abbrev
00000080 42               4346		.byte	66
00000081 13               4347		.byte	19
00000082 01               4348		.byte	1
00000083 0308             4349		.byte	3,8
00000085 3b0f             4350		.byte	59,15
00000087 390f             4351		.byte	57,15
00000089 3a0f             4352		.byte	58,15
0000008b 0b0f             4353		.byte	11,15
0000008d 320b             4354		.byte	50,11

                                   Fri Apr 10 08:31:56 2020           Page 79
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000008f 0000             4355		.byte	0,0
                          4356	
                          4357		.section	.debug_info
                          4358	.LDW_5dcadc0:
0000057f 25               4359		.byte	37
00000580 626c6f636b4e7200 4360		.strz	"blockNr"
00000588 4a               4361		.byte	74
00000589 0a               4362		.byte	10
0000058a 17               4363		.byte	23
0000058b 00000000         4364		.long	.LDW_49cb768
0000058f 0223             4365		.byte	2,35
00000591 00               4366		.byte	0
00000592 01               4367		.byte	1
                          4368	
                          4369		.section	.debug_abbrev
00000091 25               4370		.byte	37
00000092 0d               4371		.byte	13
00000093 00               4372		.byte	0
00000094 0308             4373		.byte	3,8
00000096 3b0f             4374		.byte	59,15
00000098 390f             4375		.byte	57,15
0000009a 3a0f             4376		.byte	58,15
0000009c 4910             4377		.byte	73,16
0000009e 380a             4378		.byte	56,10
000000a0 320b             4379		.byte	50,11
000000a2 0000             4380		.byte	0,0
                          4381	
                          4382		.section	.debug_info
                          4383	.LDW_5dcb048:
00000593 25               4384		.byte	37
00000594 626c6f636b547970 4385		.strz	"blockType"
0000059c 6500            
0000059e 4b               4386		.byte	75
0000059f 0b               4387		.byte	11
000005a0 17               4388		.byte	23
000005a1 00000000         4389		.long	.LDW_49cd9d8
000005a5 0223             4390		.byte	2,35
000005a7 04               4391		.byte	4
000005a8 01               4392		.byte	1
                          4393	
                          4394	.LDW_5dcabc8:
000005a9 25               4395		.byte	37
000005aa 626c6f636b537461 4396		.strz	"blockStartAddress"
000005b2 7274416464726573
000005ba 7300            
000005bc 4c               4397		.byte	76
000005bd 0f               4398		.byte	15
000005be 17               4399		.byte	23
000005bf 00000000         4400		.long	.LDW_5c1e8e0
000005c3 0223             4401		.byte	2,35
000005c5 08               4402		.byte	8
000005c6 01               4403		.byte	1
                          4404	
                          4405	.LDW_5dcab38:
000005c7 25               4406		.byte	37
000005c8 626c6f636b4c656e 4407		.strz	"blockLength"
000005d0 67746800        
000005d4 4d               4408		.byte	77
000005d5 0e               4409		.byte	14
000005d6 17               4410		.byte	23

                                   Fri Apr 10 08:31:56 2020           Page 80
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000005d7 00000000         4411		.long	.LDW_5dcc298
000005db 0223             4412		.byte	2,35
000005dd 0c               4413		.byte	12
000005de 01               4414		.byte	1
                          4415	
                          4416	.LDW_5dcab80:
000005df 25               4417		.byte	37
000005e0 6d617850726f6741 4418		.strz	"maxProgAttempts"
000005e8 7474656d70747300
000005f0 4e               4419		.byte	78
000005f1 0b               4420		.byte	11
000005f2 17               4421		.byte	23
000005f3 00000000         4422		.long	.LDW_5b85098
000005f7 0223             4423		.byte	2,35
000005f9 10               4424		.byte	16
000005fa 01               4425		.byte	1
                          4426	
                          4427	.LDW_5dcae98:
000005fb 25               4428		.byte	37
000005fc 7665726966794f75 4429		.strz	"verifyOutput"
00000604 7470757400      
00000609 4f               4430		.byte	79
0000060a 0e               4431		.byte	14
0000060b 17               4432		.byte	23
0000060c 00000000         4433		.long	.LDW_5dcc450
00000610 0223             4434		.byte	2,35
00000612 14               4435		.byte	20
00000613 01               4436		.byte	1
                          4437	
00000614 00               4438		.byte	0
                          4439	
                          4440	.LDW_49cb870:
00000615 2a               4441		.byte	42
00000616 74426c6f636b4465 4442		.strz	"tBlockDescriptor"
0000061e 7363726970746f72
00000626 00              
00000627 50               4443		.byte	80
00000628 03               4444		.byte	3
00000629 17               4445		.byte	23
0000062a 00000000         4446		.long	.LDW_49cb818
                          4447	
                          4448	.LDW_5dcc558:
0000062e 42               4449		.byte	66
0000062f 744c6f676963616c 4450		.strz	"tLogicalBlockTableTag"
00000637 426c6f636b546162
0000063f 6c6554616700    
00000645 53               4451		.byte	83
00000646 10               4452		.byte	16
00000647 17               4453		.byte	23
00000648 38               4454		.byte	56
00000649 01               4455		.byte	1
                          4456	
                          4457	.LDW_5dcaee0:
0000064a 25               4458		.byte	37
0000064b 6d61676963466c61 4459		.strz	"magicFlag"
00000653 6700            
00000655 55               4460		.byte	85
00000656 0b               4461		.byte	11
00000657 17               4462		.byte	23
00000658 00000000         4463		.long	.LDW_49cd9d8
0000065c 0223             4464		.byte	2,35
0000065e 00               4465		.byte	0
0000065f 01               4466		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 81
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4467	
                          4468	.LDW_5dcafb8:
00000660 25               4469		.byte	37
00000661 61737369676e466c 4470		.strz	"assignFlags"
00000669 61677300        
0000066d 56               4471		.byte	86
0000066e 0a               4472		.byte	10
0000066f 17               4473		.byte	23
00000670 00000000         4474		.long	.LDW_5dce058
00000674 0223             4475		.byte	2,35
00000676 04               4476		.byte	4
00000677 01               4477		.byte	1
                          4478	
                          4479	.LDW_5dcb000:
00000678 25               4480		.byte	37
00000679 6e6f4f66426c6f63 4481		.strz	"noOfBlocks"
00000681 6b7300          
00000684 57               4482		.byte	87
00000685 0a               4483		.byte	10
00000686 17               4484		.byte	23
00000687 00000000         4485		.long	.LDW_49cb768
0000068b 0223             4486		.byte	2,35
0000068d 05               4487		.byte	5
0000068e 01               4488		.byte	1
                          4489	
                          4490	.LDW_5dcf0d8:
0000068f 25               4491		.byte	37
00000690 6c6f676963616c42 4492		.strz	"logicalBlock"
00000698 6c6f636b00      
0000069d 58               4493		.byte	88
0000069e 14               4494		.byte	20
0000069f 17               4495		.byte	23
000006a0 00000000         4496		.long	.LDW_5dcdb08
000006a4 0223             4497		.byte	2,35
000006a6 08               4498		.byte	8
000006a7 01               4499		.byte	1
                          4500	
000006a8 00               4501		.byte	0
                          4502	
                          4503	.LDW_5dcc818:
000006a9 2a               4504		.byte	42
000006aa 744c6f676963616c 4505		.strz	"tLogicalBlockTable"
000006b2 426c6f636b546162
000006ba 6c6500          
000006bd 59               4506		.byte	89
000006be 03               4507		.byte	3
000006bf 17               4508		.byte	23
000006c0 00000000         4509		.long	.LDW_5dcc558
                          4510	
                          4511	.LDW_49ca458:
000006c4 2a               4512		.byte	42
000006c5 494f5f53697a6554 4513		.strz	"IO_SizeType"
000006cd 79706500        
000006d1 5e               4514		.byte	94
000006d2 13               4515		.byte	19
000006d3 1c               4516		.byte	28
000006d4 00000000         4517		.long	.LDW_49cd9d8
                          4518	
                          4519	.LDW_49cda30:
000006d8 2a               4520		.byte	42
000006d9 494f5f506f736974 4521		.strz	"IO_PositionType"
000006e1 696f6e5479706500
000006e9 5f               4522		.byte	95

                                   Fri Apr 10 08:31:56 2020           Page 82
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000006ea 13               4523		.byte	19
000006eb 1c               4524		.byte	28
000006ec 00000000         4525		.long	.LDW_49cd9d8
                          4526	
                          4527	.LDW_5b85250:
000006f0 2a               4528		.byte	42
000006f1 494f5f4572726f72 4529		.strz	"IO_ErrorType"
000006f9 5479706500      
000006fe 65               4530		.byte	101
000006ff 13               4531		.byte	19
00000700 1c               4532		.byte	28
00000701 00000000         4533		.long	.LDW_5b85098
                          4534	
                          4535	.LDW_5dccc90:
00000705 2a               4536		.byte	42
00000706 494f5f4d656d5074 4537		.strz	"IO_MemPtrType"
0000070e 725479706500    
00000714 66               4538		.byte	102
00000715 13               4539		.byte	19
00000716 1c               4540		.byte	28
00000717 00000000         4541		.long	.LDW_498c5a8
                          4542	
                          4543	.LDW_5dcfd78:
0000071b 2a               4544		.byte	42
0000071c 7444727646637449 4545		.strz	"tDrvFctInit"
00000724 6e697400        
00000728 8b02             4546		.byte	139,2
0000072a 23               4547		.byte	35
0000072b 1d               4548		.byte	29
0000072c 00000000         4549		.long	.LDW_5dcd4a0
                          4550	
                          4551	.LDW_5dd0090:
00000730 2a               4552		.byte	42
00000731 7444727646637444 4553		.strz	"tDrvFctDeinit"
00000739 65696e697400    
0000073f 8c02             4554		.byte	140,2
00000741 23               4555		.byte	35
00000742 1d               4556		.byte	29
00000743 00000000         4557		.long	.LDW_5dcd4d8
                          4558	
                          4559	.LDW_5dd0198:
00000747 2a               4560		.byte	42
00000748 7444727646637452 4561		.strz	"tDrvFctRead"
00000750 65616400        
00000754 8d02             4562		.byte	141,2
00000756 23               4563		.byte	35
00000757 1d               4564		.byte	29
00000758 00000000         4565		.long	.LDW_5dcd628
                          4566	
                          4567	.LDW_5dd01f0:
0000075c 2a               4568		.byte	42
0000075d 7444727646637457 4569		.strz	"tDrvFctWrite"
00000765 7269746500      
0000076a 8e02             4570		.byte	142,2
0000076c 23               4571		.byte	35
0000076d 1d               4572		.byte	29
0000076e 00000000         4573		.long	.LDW_5dcd580
                          4574	
                          4575	.LDW_5dcfcc8:
00000772 2a               4576		.byte	42
00000773 7444727646637445 4577		.strz	"tDrvFctErase"
0000077b 7261736500      
00000780 8f02             4578		.byte	143,2

                                   Fri Apr 10 08:31:56 2020           Page 83
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000782 23               4579		.byte	35
00000783 1d               4580		.byte	29
00000784 00000000         4581		.long	.LDW_5dcd778
                          4582	
                          4583	.LDW_5dcfe28:
00000788 43               4584		.byte	67
00000789 9302             4585		.byte	147,2
0000078b 01               4586		.byte	1
0000078c 1d               4587		.byte	29
0000078d 18               4588		.byte	24
0000078e 01               4589		.byte	1
                          4590	
                          4591		.section	.debug_abbrev
000000a4 43               4592		.byte	67
000000a5 13               4593		.byte	19
000000a6 01               4594		.byte	1
000000a7 3b0f             4595		.byte	59,15
000000a9 390f             4596		.byte	57,15
000000ab 3a0f             4597		.byte	58,15
000000ad 0b0f             4598		.byte	11,15
000000af 320b             4599		.byte	50,11
000000b1 0000             4600		.byte	0,0
                          4601	
                          4602		.section	.debug_info
                          4603	.LDW_5dcf438:
0000078f 25               4604		.byte	37
00000790 696e697400       4605		.strz	"init"
00000795 9402             4606		.byte	148,2
00000797 13               4607		.byte	19
00000798 1d               4608		.byte	29
00000799 00000000         4609		.long	.LDW_5dcfd78
0000079d 0223             4610		.byte	2,35
0000079f 00               4611		.byte	0
000007a0 01               4612		.byte	1
                          4613	
                          4614	.LDW_5dcf798:
000007a1 25               4615		.byte	37
000007a2 6465696e697400   4616		.strz	"deinit"
000007a9 9502             4617		.byte	149,2
000007ab 13               4618		.byte	19
000007ac 1d               4619		.byte	29
000007ad 00000000         4620		.long	.LDW_5dd0090
000007b1 0223             4621		.byte	2,35
000007b3 04               4622		.byte	4
000007b4 01               4623		.byte	1
                          4624	
                          4625	.LDW_5dcf7e0:
000007b5 25               4626		.byte	37
000007b6 657261736500     4627		.strz	"erase"
000007bc 9602             4628		.byte	150,2
000007be 13               4629		.byte	19
000007bf 1d               4630		.byte	29
000007c0 00000000         4631		.long	.LDW_5dcfcc8
000007c4 0223             4632		.byte	2,35
000007c6 08               4633		.byte	8
000007c7 01               4634		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 84
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4635	
                          4636	.LDW_5dcf870:
000007c8 25               4637		.byte	37
000007c9 777269746500     4638		.strz	"write"
000007cf 9702             4639		.byte	151,2
000007d1 13               4640		.byte	19
000007d2 1d               4641		.byte	29
000007d3 00000000         4642		.long	.LDW_5dd01f0
000007d7 0223             4643		.byte	2,35
000007d9 0c               4644		.byte	12
000007da 01               4645		.byte	1
                          4646	
                          4647	.LDW_5dcf1f8:
000007db 25               4648		.byte	37
000007dc 7265616400       4649		.strz	"read"
000007e1 9802             4650		.byte	152,2
000007e3 13               4651		.byte	19
000007e4 1d               4652		.byte	29
000007e5 00000000         4653		.long	.LDW_5dd0198
000007e9 0223             4654		.byte	2,35
000007eb 10               4655		.byte	16
000007ec 01               4656		.byte	1
                          4657	
                          4658	.LDW_5dcf240:
000007ed 25               4659		.byte	37
000007ee 7365676d656e7453 4660		.strz	"segmentSize"
000007f6 697a6500        
000007fa 9902             4661		.byte	153,2
000007fc 13               4662		.byte	19
000007fd 1d               4663		.byte	29
000007fe 00000000         4664		.long	.LDW_5b85098
00000802 0223             4665		.byte	2,35
00000804 14               4666		.byte	20
00000805 01               4667		.byte	1
                          4668	
00000806 00               4669		.byte	0
                          4670	
                          4671	.LDW_5dcffe0:
00000807 2a               4672		.byte	42
00000808 744d656d44727600 4673		.strz	"tMemDrv"
00000810 9a02             4674		.byte	154,2
00000812 03               4675		.byte	3
00000813 1d               4676		.byte	29
00000814 00000000         4677		.long	.LDW_5dcfe28
                          4678	
                          4679	.LDW_5dd0458:
00000818 42               4680		.byte	66
00000819 74466c617368426c 4681		.strz	"tFlashBlockTag"
00000821 6f636b54616700  
00000828 38               4682		.byte	56
00000829 10               4683		.byte	16
0000082a 2c               4684		.byte	44
0000082b 0c               4685		.byte	12
0000082c 01               4686		.byte	1
                          4687	
                          4688	.LDW_5dd1b78:
0000082d 25               4689		.byte	37
0000082e 626567696e00     4690		.strz	"begin"

                                   Fri Apr 10 08:31:56 2020           Page 85
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000834 3a               4691		.byte	58
00000835 0f               4692		.byte	15
00000836 2c               4693		.byte	44
00000837 00000000         4694		.long	.LDW_5c1e8e0
0000083b 0223             4695		.byte	2,35
0000083d 00               4696		.byte	0
0000083e 01               4697		.byte	1
                          4698	
                          4699	.LDW_5dd1f20:
0000083f 25               4700		.byte	37
00000840 656e6400         4701		.strz	"end"
00000844 3b               4702		.byte	59
00000845 0f               4703		.byte	15
00000846 2c               4704		.byte	44
00000847 00000000         4705		.long	.LDW_5c1e8e0
0000084b 0223             4706		.byte	2,35
0000084d 04               4707		.byte	4
0000084e 01               4708		.byte	1
                          4709	
                          4710	.LDW_5dd1bc0:
0000084f 25               4711		.byte	37
00000850 64657669636500   4712		.strz	"device"
00000857 3c               4713		.byte	60
00000858 0a               4714		.byte	10
00000859 2c               4715		.byte	44
0000085a 00000000         4716		.long	.LDW_49cb768
0000085e 0223             4717		.byte	2,35
00000860 08               4718		.byte	8
00000861 01               4719		.byte	1
                          4720	
00000862 00               4721		.byte	0
                          4722	
                          4723	.LDW_5dd0508:
00000863 2a               4724		.byte	42
00000864 74466c617368426c 4725		.strz	"tFlashBlock"
0000086c 6f636b00        
00000870 3d               4726		.byte	61
00000871 03               4727		.byte	3
00000872 2c               4728		.byte	44
00000873 00000000         4729		.long	.LDW_5dd0458
                          4730	
                          4731	.LDW_5dd2ef8:
00000877 2a               4732		.byte	42
00000878 7446626c4d656d52 4733		.strz	"tFblMemRamData"
00000880 616d4461746100  
00000887 c205             4734		.byte	194,5
00000889 37               4735		.byte	55
0000088a 2f               4736		.byte	47
0000088b 00000000         4737		.long	.LDW_498c5a8
                          4738	
                          4739	.LDW_5dd3058:
0000088f 2a               4740		.byte	42
00000890 7446626c4d656d43 4741		.strz	"tFblMemConstRamData"
00000898 6f6e737452616d44
000008a0 61746100        
000008a4 c405             4742		.byte	196,5
000008a6 37               4743		.byte	55
000008a7 2f               4744		.byte	47
000008a8 00000000         4745		.long	.LDW_5dd0a20
                          4746	

                                   Fri Apr 10 08:31:56 2020           Page 86
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4747	.LDW_5b84e88:
000008ac 43               4748		.byte	67
000008ad a202             4749		.byte	162,2
000008af 01               4750		.byte	1
000008b0 01               4751		.byte	1
000008b1 0c               4752		.byte	12
000008b2 01               4753		.byte	1
                          4754	
                          4755	.LDW_5dd5570:
000008b3 25               4756		.byte	37
000008b4 64756d6d7900     4757		.strz	"dummy"
000008ba a502             4758		.byte	165,2
000008bc 0d               4759		.byte	13
000008bd 01               4760		.byte	1
000008be 00000000         4761		.long	.LDW_49cd9d8
000008c2 0223             4762		.byte	2,35
000008c4 00               4763		.byte	0
000008c5 01               4764		.byte	1
                          4765	
                          4766	.LDW_5dd5648:
000008c6 25               4767		.byte	37
000008c7 6461746100       4768		.strz	"data"
000008cc a702             4769		.byte	167,2
000008ce 0d               4770		.byte	13
000008cf 01               4771		.byte	1
000008d0 00000000         4772		.long	.LDW_5dcdc18
000008d4 0223             4773		.byte	2,35
000008d6 04               4774		.byte	4
000008d7 01               4775		.byte	1
                          4776	
000008d8 00               4777		.byte	0
                          4778	
                          4779	.LDW_5b84ee0:
000008d9 2a               4780		.byte	42
000008da 7446626c70726573 4781		.strz	"tFblpresPtnAlignedBuffer"
000008e2 50746e416c69676e
000008ea 6564427566666572
000008f2 00              
000008f3 a802             4782		.byte	168,2
000008f5 03               4783		.byte	3
000008f6 01               4784		.byte	1
000008f7 00000000         4785		.long	.LDW_5b84e88
                          4786	
                          4787	.LDW_5c1edb0:
000008fb 2a               4788		.byte	42
000008fc 7446626c41706e76 4789		.strz	"tFblApnvProgCountType"
00000904 50726f67436f756e
0000090c 745479706500    
00000912 ab02             4790		.byte	171,2
00000914 13               4791		.byte	19
00000915 01               4792		.byte	1
00000916 00000000         4793		.long	.LDW_5b85098
                          4794	
                          4795	.LDW_5dd7008:
0000091a 07               4796		.byte	7
0000091b 46626c4c6f676963 4797		.strz	"FblLogicalBlockTable"
00000923 616c426c6f636b54
0000092b 61626c6500      
00000930 5e               4798		.byte	94
00000931 3a               4799		.byte	58
00000932 17               4800		.byte	23
00000933 00000000         4801		.long	.LDW_5dd3478
00000937 01               4802		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 87
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000938 01               4803		.byte	1
                          4804	
                          4805		.section	.debug_abbrev
000000b3 07               4806		.byte	7
000000b4 34               4807		.byte	52
000000b5 00               4808		.byte	0
000000b6 0308             4809		.byte	3,8
000000b8 3b0f             4810		.byte	59,15
000000ba 390f             4811		.byte	57,15
000000bc 3a0f             4812		.byte	58,15
000000be 4910             4813		.byte	73,16
000000c0 3f0c             4814		.byte	63,12
000000c2 3c0c             4815		.byte	60,12
000000c4 0000             4816		.byte	0,0
                          4817	
                          4818		.section	.debug_info
                          4819	.LDW_5dd6508:
00000939 07               4820		.byte	7
0000093a 4170706c496e744a 4821		.strz	"ApplIntJmpTable"
00000942 6d705461626c6500
0000094a 58               4822		.byte	88
0000094b 2e               4823		.byte	46
0000094c 22               4824		.byte	34
0000094d 00000000         4825		.long	.LDW_5dce6b8
00000951 01               4826		.byte	1
00000952 01               4827		.byte	1
                          4828	
                          4829	.LDW_5dd75c0:
00000953 07               4830		.byte	7
00000954 466c617368426c6f 4831		.strz	"FlashBlock"
0000095c 636b00          
0000095f 42               4832		.byte	66
00000960 3b               4833		.byte	59
00000961 2c               4834		.byte	44
00000962 00000000         4835		.long	.LDW_5dce410
00000966 01               4836		.byte	1
00000967 01               4837		.byte	1
                          4838	
                          4839	.LDW_5dd7930:
00000968 07               4840		.byte	7
00000969 6d656d4472764c73 4841		.strz	"memDrvLst"
00000971 7400            
00000973 45               4842		.byte	69
00000974 37               4843		.byte	55
00000975 2c               4844		.byte	44
00000976 00000000         4845		.long	.LDW_5dce740
0000097a 01               4846		.byte	1
0000097b 01               4847		.byte	1
                          4848	
                          4849	.LDW_5dd7670:
0000097c 07               4850		.byte	7
0000097d 6d656d5365676d65 4851		.strz	"memSegment"
00000985 6e7400          
00000988 e403             4852		.byte	228,3
0000098a 43               4853		.byte	67
0000098b 2d               4854		.byte	45
0000098c 00000000         4855		.long	.LDW_49cd980
00000990 01               4856		.byte	1
00000991 01               4857		.byte	1
                          4858	

                                   Fri Apr 10 08:31:56 2020           Page 88
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4859	.LDW_5dd73b0:
00000992 07               4860		.byte	7
00000993 66626c5374617274 4861		.strz	"fblStartMagicFlag"
0000099b 4d61676963466c61
000009a3 6700            
000009a5 ef01             4862		.byte	239,1
000009a7 36               4863		.byte	54
000009a8 35               4864		.byte	53
000009a9 00000000         4865		.long	.LDW_5dd89d0
000009ad 01               4866		.byte	1
000009ae 01               4867		.byte	1
                          4868	
                          4869	.LDW_5dd7a38:
000009af 06               4870		.byte	6
000009b0 626c6f636b507265 4871		.strz	"blockPresencePattern"
000009b8 73656e6365506174
000009c0 7465726e00      
000009c5 9202             4872		.byte	146,2
000009c7 2d               4873		.byte	45
000009c8 01               4874		.byte	1
000009c9 00000000         4875		.long	.LDW_5dd8e98
000009cd 00               4876		.byte	0
000009ce 00               4877		.byte	0
000009cf 0503             4878		.byte	5,3
000009d1 00000000         4879		.long	blockPresencePattern..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                          4880	
                          4881		.section	.debug_abbrev
000000c6 06               4882		.byte	6
000000c7 34               4883		.byte	52
000000c8 00               4884		.byte	0
000000c9 0308             4885		.byte	3,8
000000cb 3b0f             4886		.byte	59,15
000000cd 390f             4887		.byte	57,15
000000cf 3a0f             4888		.byte	58,15
000000d1 4910             4889		.byte	73,16
000000d3 3f0c             4890		.byte	63,12
000000d5 3c0c             4891		.byte	60,12
000000d7 020a             4892		.byte	2,10
000000d9 0000             4893		.byte	0,0
                          4894	
                          4895		.section	.debug_info
                          4896	.LDW_5dd71a0:
000009d5 06               4897		.byte	6
000009d6 63757272656e7456 4898		.strz	"currentValidatedBlock"
000009de 616c696461746564
000009e6 426c6f636b00    
000009ec b202             4899		.byte	178,2
000009ee 37               4900		.byte	55
000009ef 01               4901		.byte	1
000009f0 00000000         4902		.long	.LDW_49cb870
000009f4 00               4903		.byte	0
000009f5 00               4904		.byte	0
000009f6 0503             4905		.byte	5,3
000009f8 00000000         4906		.long	currentValidatedBlock..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
                          4907	
                          4908	.LDW_5ddc710:
000009fc 18               4909		.byte	24
000009fd 4d656d4472697665 4910		.strz	"MemDriver_RWriteSync"
00000a05 725f525772697465
00000a0d 53796e6300      
00000a12 a902             4911		.byte	169,2
00000a14 19               4912		.byte	25
00000a15 1d               4913		.byte	29
00000a16 00000000         4914		.long	.LDW_5b85250

                                   Fri Apr 10 08:31:56 2020           Page 89
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000a1a 01               4915		.byte	1
00000a1b 00               4916		.byte	0
00000a1c 01               4917		.byte	1
00000a1d 01               4918		.byte	1
00000a1e 00               4919		.byte	0
00000a1f 01               4920		.byte	1
                          4921	
                          4922		.section	.debug_abbrev
000000db 18               4923		.byte	24
000000dc 2e               4924		.byte	46
000000dd 01               4925		.byte	1
000000de 0308             4926		.byte	3,8
000000e0 3b0f             4927		.byte	59,15
000000e2 390f             4928		.byte	57,15
000000e4 3a0f             4929		.byte	58,15
000000e6 4910             4930		.byte	73,16
000000e8 3c0c             4931		.byte	60,12
000000ea 200b             4932		.byte	32,11
000000ec 3f0c             4933		.byte	63,12
000000ee 320b             4934		.byte	50,11
000000f0 4c0b             4935		.byte	76,11
000000f2 270c             4936		.byte	39,12
000000f4 0000             4937		.byte	0,0
                          4938	
                          4939		.section	.debug_info
00000a20 00               4940		.byte	0
                          4941	
                          4942	.LDW_5ddc5e0:
00000a21 18               4943		.byte	24
00000a22 456570726f6d4472 4944		.strz	"EepromDriver_RReadSync"
00000a2a 697665725f525265
00000a32 616453796e6300  
00000a39 50               4945		.byte	80
00000a3a 19               4946		.byte	25
00000a3b 21               4947		.byte	33
00000a3c 00000000         4948		.long	.LDW_5b85250
00000a40 01               4949		.byte	1
00000a41 00               4950		.byte	0
00000a42 01               4951		.byte	1
00000a43 01               4952		.byte	1
00000a44 00               4953		.byte	0
00000a45 01               4954		.byte	1
                          4955	
00000a46 00               4956		.byte	0
                          4957	
                          4958	.LDW_5ddb118:
00000a47 18               4959		.byte	24
00000a48 456570726f6d4472 4960		.strz	"EepromDriver_RWriteSync"
00000a50 697665725f525772
00000a58 69746553796e6300
00000a60 51               4961		.byte	81
00000a61 19               4962		.byte	25
00000a62 21               4963		.byte	33
00000a63 00000000         4964		.long	.LDW_5b85250
00000a67 01               4965		.byte	1
00000a68 00               4966		.byte	0
00000a69 01               4967		.byte	1
00000a6a 01               4968		.byte	1
00000a6b 00               4969		.byte	0
00000a6c 01               4970		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 90
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          4971	
00000a6d 00               4972		.byte	0
                          4973	
                          4974	.LDW_5ddee40:
00000a6e 18               4975		.byte	24
00000a6f 46626c5265616c54 4976		.strz	"FblRealTimeSupport"
00000a77 696d65537570706f
00000a7f 727400          
00000a82 ba03             4977		.byte	186,3
00000a84 0d               4978		.byte	13
00000a85 2d               4979		.byte	45
00000a86 00000000         4980		.long	.LDW_49cb768
00000a8a 01               4981		.byte	1
00000a8b 00               4982		.byte	0
00000a8c 01               4983		.byte	1
00000a8d 01               4984		.byte	1
00000a8e 00               4985		.byte	0
00000a8f 01               4986		.byte	1
                          4987	
00000a90 00               4988		.byte	0
                          4989	
                          4990	.LDW_5ddfb50:
00000a91 18               4991		.byte	24
00000a92 46626c4d656d5365 4992		.strz	"FblMemSegmentNrGet"
00000a9a 676d656e744e7247
00000aa2 657400          
00000aa5 c603             4993		.byte	198,3
00000aa7 0d               4994		.byte	13
00000aa8 2d               4995		.byte	45
00000aa9 00000000         4996		.long	.LDW_49cd980
00000aad 01               4997		.byte	1
00000aae 00               4998		.byte	0
00000aaf 01               4999		.byte	1
00000ab0 01               5000		.byte	1
00000ab1 00               5001		.byte	0
00000ab2 01               5002		.byte	1
                          5003	
00000ab3 00               5004		.byte	0
                          5005	
                          5006	.LDW_5de0438:
00000ab4 17               5007		.byte	23
00000ab5 46626c4d656d5365 5008		.strz	"FblMemSetInteger"
00000abd 74496e7465676572
00000ac5 00              
00000ac6 d806             5009		.byte	216,6
00000ac8 06               5010		.byte	6
00000ac9 2f               5011		.byte	47
00000aca 01               5012		.byte	1
00000acb 00               5013		.byte	0
00000acc 01               5014		.byte	1
00000acd 01               5015		.byte	1
00000ace 00               5016		.byte	0
00000acf 01               5017		.byte	1
                          5018	
                          5019		.section	.debug_abbrev
000000f6 17               5020		.byte	23
000000f7 2e               5021		.byte	46
000000f8 01               5022		.byte	1
000000f9 0308             5023		.byte	3,8
000000fb 3b0f             5024		.byte	59,15
000000fd 390f             5025		.byte	57,15
000000ff 3a0f             5026		.byte	58,15

                                   Fri Apr 10 08:31:56 2020           Page 91
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000101 3c0c             5027		.byte	60,12
00000103 200b             5028		.byte	32,11
00000105 3f0c             5029		.byte	63,12
00000107 320b             5030		.byte	50,11
00000109 4c0b             5031		.byte	76,11
0000010b 270c             5032		.byte	39,12
0000010d 0000             5033		.byte	0,0
                          5034	
                          5035		.section	.debug_info
00000ad0 00               5036		.byte	0
                          5037	
                          5038	.LDW_5de07c8:
00000ad1 18               5039		.byte	24
00000ad2 46626c4d656d4765 5040		.strz	"FblMemGetInteger"
00000ada 74496e7465676572
00000ae2 00              
00000ae3 d906             5041		.byte	217,6
00000ae5 09               5042		.byte	9
00000ae6 2f               5043		.byte	47
00000ae7 00000000         5044		.long	.LDW_49cd9d8
00000aeb 01               5045		.byte	1
00000aec 00               5046		.byte	0
00000aed 01               5047		.byte	1
00000aee 01               5048		.byte	1
00000aef 00               5049		.byte	0
00000af0 01               5050		.byte	1
                          5051	
00000af1 00               5052		.byte	0
                          5053	
                          5054	.LDW_49cb8c8:
00000af2 16               5055		.byte	22
00000af3 4170706c46626c43 5056		.strz	"ApplFblChgBlockValid"
00000afb 6867426c6f636b56
00000b03 616c696400      
00000b08 ce02             5057		.byte	206,2
00000b0a 13               5058		.byte	19
00000b0b 01               5059		.byte	1
00000b0c 00000000         5060		.long	.LDW_49cb7c0
00000b10 00000000         5061		.long	ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
00000b14 00000000         5062		.long	__ghs_eofn_ApplFblChgBlockValid
00000b18 0151             5063		.byte	1,81
00000b1a 808080800f       5064		.byte	128,128,128,128,15
00000b1f 10               5065		.byte	16
00000b20 00               5066		.byte	0
00000b21 20               5067		.byte	32
00000b22 00               5068		.byte	0
00000b23 00               5069		.byte	0
00000b24 00               5070		.byte	0
00000b25 00               5071		.byte	0
00000b26 01               5072		.byte	1
00000b27 00               5073		.byte	0
00000b28 01               5074		.byte	1
                          5075	
                          5076		.section	.debug_abbrev
0000010f 16               5077		.byte	22
00000110 2e               5078		.byte	46
00000111 01               5079		.byte	1
00000112 0308             5080		.byte	3,8
00000114 3b0f             5081		.byte	59,15
00000116 390f             5082		.byte	57,15

                                   Fri Apr 10 08:31:56 2020           Page 92
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000118 3a0f             5083		.byte	58,15
0000011a 4910             5084		.byte	73,16
0000011c 1101             5085		.byte	17,1
0000011e 1201             5086		.byte	18,1
00000120 400a             5087		.byte	64,10
00000122 8341             5088		.byte	131,65
00000124 0f               5089		.byte	15
00000125 8741             5090		.byte	135,65
00000127 0d               5091		.byte	13
00000128 8541             5092		.byte	133,65
0000012a 0f               5093		.byte	15
0000012b 8641             5094		.byte	134,65
0000012d 0d               5095		.byte	13
0000012e 9241             5096		.byte	146,65
00000130 0f               5097		.byte	15
00000131 3c0c             5098		.byte	60,12
00000133 200b             5099		.byte	32,11
00000135 3f0c             5100		.byte	63,12
00000137 320b             5101		.byte	50,11
00000139 4c0b             5102		.byte	76,11
0000013b 270c             5103		.byte	39,12
0000013d 0000             5104		.byte	0,0
                          5105	
                          5106		.section	.debug_frame
                          5107	.LDW_5dd4c70:
00000090 00000014         5108		.long	.LDW_unq_4-.LDW_unq_3
                          5109	.LDW_unq_3:
00000094 00000000         5110		.long	.LDW_5d355a0
00000098 00000000         5111		.long	ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
0000009c 0000007e         5112		.long	__ghs_eofn_ApplFblChgBlockValid-ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000000a0 01               5113		.byte	1
000000a1 00000000         5114		.long	.LDW11
000000a5 00               5115		.byte	0
000000a6 00               5116		.byte	0
000000a7 00               5117		.byte	0
                          5118	.LDW_unq_4:
                          5119		.section	.debug_line
00000668 000502           5120		.byte	0,5,2
0000066b 00000000         5121		.long	ApplFblChgBlockValid..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
0000066f 06               5122		.byte	6
00000670 03               5123		.byte	3
00000671 ce02             5124		.byte	206,2
00000673 02               5125		.byte	2
00000674 00               5126		.byte	0
00000675 01               5127		.byte	1
00000676 03               5128		.byte	3
00000677 09               5129		.byte	9
00000678 02               5130		.byte	2
00000679 0e               5131		.byte	14
0000067a 01               5132		.byte	1
0000067b 3c               5133		.byte	60
0000067c 14               5134		.byte	20
0000067d 000502           5135		.byte	0,5,2
00000680 00000000         5136		.long	.LDWlin1
00000684 0b               5137		.byte	11
00000685 0b               5138		.byte	11

                                   Fri Apr 10 08:31:56 2020           Page 93
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000686 000502           5139		.byte	0,5,2
00000689 00000000         5140		.long	.LDWlin2
0000068d 0b               5141		.byte	11
0000068e 0b               5142		.byte	11
0000068f 000502           5143		.byte	0,5,2
00000692 00000000         5144		.long	.LDWlin3
00000696 0b               5145		.byte	11
00000697 0c               5146		.byte	12
00000698 13               5147		.byte	19
00000699 1b               5148		.byte	27
0000069a 02               5149		.byte	2
0000069b 00               5150		.byte	0
0000069c 0d               5151		.byte	13
0000069d 000502           5152		.byte	0,5,2
000006a0 00000000         5153		.long	.LDWlin4
000006a4 0b               5154		.byte	11
000006a5 0c               5155		.byte	12
000006a6 000502           5156		.byte	0,5,2
000006a9 00000000         5157		.long	.LDWlin5
000006ad 0b               5158		.byte	11
000006ae 14               5159		.byte	20
000006af 33               5160		.byte	51
000006b0 0c               5161		.byte	12
000006b1 02               5162		.byte	2
000006b2 00               5163		.byte	0
000006b3 0b               5164		.byte	11
000006b4 02               5165		.byte	2
000006b5 00               5166		.byte	0
000006b6 0b               5167		.byte	11
000006b7 02               5168		.byte	2
000006b8 00               5169		.byte	0
000006b9 0b               5170		.byte	11
000006ba 02               5171		.byte	2
000006bb 00               5172		.byte	0
000006bc 0b               5173		.byte	11
000006bd 06               5174		.byte	6
000006be 02               5175		.byte	2
000006bf 02               5176		.byte	2
000006c0 02               5177		.byte	2
000006c1 0c               5178		.byte	12
000006c2 000101           5179		.byte	0,1,1
                          5180		.section	.debug_info
                          5181	.LDW_49cb960:
00000b29 11               5182		.byte	17
00000b2a 6d6f646500       5183		.strz	"mode"
00000b2f ce02             5184		.byte	206,2
00000b31 30               5185		.byte	48
00000b32 01               5186		.byte	1
00000b33 00000000         5187		.long	.LDW_49cb768
00000b37 00               5188		.byte	0
00000b38 016c             5189		.byte	1,108
                          5190	
                          5191		.section	.debug_abbrev
0000013f 11               5192		.byte	17
00000140 05               5193		.byte	5
00000141 00               5194		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 94
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000142 0308             5195		.byte	3,8
00000144 3b0f             5196		.byte	59,15
00000146 390f             5197		.byte	57,15
00000148 3a0f             5198		.byte	58,15
0000014a 4910             5199		.byte	73,16
0000014c 4b0c             5200		.byte	75,12
0000014e 020a             5201		.byte	2,10
00000150 0000             5202		.byte	0,0
                          5203	
                          5204		.section	.debug_info
                          5205	.LDW_49cb9b8:
00000b3a 11               5206		.byte	17
00000b3b 6465736372697074 5207		.strz	"descriptor"
00000b43 6f7200          
00000b46 ce02             5208		.byte	206,2
00000b48 47               5209		.byte	71
00000b49 01               5210		.byte	1
00000b4a 00000000         5211		.long	.LDW_49cb870
00000b4e 00               5212		.byte	0
00000b4f 0274             5213		.byte	2,116
00000b51 00               5214		.byte	0
                          5215	
                          5216	.LDW_4983118:
00000b52 1f               5217		.byte	31
00000b53 00000000         5218		.long	.LDW01
00000b57 00000000         5219		.long	.LDW11
                          5220	
                          5221		.section	.debug_abbrev
00000152 1f               5222		.byte	31
00000153 0b               5223		.byte	11
00000154 01               5224		.byte	1
00000155 1101             5225		.byte	17,1
00000157 1201             5226		.byte	18,1
00000159 0000             5227		.byte	0,0
                          5228	
                          5229		.section	.debug_info
                          5230	.LDW_49cd6b8:
00000b5b 06               5231		.byte	6
00000b5c 76616c6964697479 5232		.strz	"validityMask"
00000b64 4d61736b00      
00000b69 d002             5233		.byte	208,2
00000b6b 13               5234		.byte	19
00000b6c 01               5235		.byte	1
00000b6d 00000000         5236		.long	.LDW_49cb768
00000b71 00               5237		.byte	0
00000b72 00               5238		.byte	0
00000b73 016d             5239		.byte	1,109
                          5240	
                          5241	.LDW_49cd710:
00000b75 06               5242		.byte	6
00000b76 726573756c7400   5243		.strz	"result"
00000b7d d102             5244		.byte	209,2
00000b7f 13               5245		.byte	19
00000b80 01               5246		.byte	1
00000b81 00000000         5247		.long	.LDW_49cb7c0
00000b85 00               5248		.byte	0
00000b86 00               5249		.byte	0
00000b87 016f             5250		.byte	1,111

                                   Fri Apr 10 08:31:56 2020           Page 95
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          5251	
                          5252	.LDW_49cd768:
00000b89 07               5253		.byte	7
00000b8a 6279746549647800 5254		.strz	"byteIdx"
00000b92 d302             5255		.byte	211,2
00000b94 13               5256		.byte	19
00000b95 01               5257		.byte	1
00000b96 00000000         5258		.long	.LDW_49cb768
00000b9a 00               5259		.byte	0
00000b9b 00               5260		.byte	0
                          5261	
                          5262	.LDW_49cd848:
00000b9c 06               5263		.byte	6
00000b9d 76616c6964697479 5264		.strz	"validityFlags"
00000ba5 466c61677300    
00000bab d402             5265		.byte	212,2
00000bad 13               5266		.byte	19
00000bae 01               5267		.byte	1
00000baf 00000000         5268		.long	.LDW_49cd7c0
00000bb3 00               5269		.byte	0
00000bb4 00               5270		.byte	0
00000bb5 0271             5271		.byte	2,113
00000bb7 08               5272		.byte	8
                          5273	
                          5274	.LDW_49cd928:
00000bb8 06               5275		.byte	6
00000bb9 76616c6964697479 5276		.strz	"validityCheck"
00000bc1 436865636b00    
00000bc7 d502             5277		.byte	213,2
00000bc9 13               5278		.byte	19
00000bca 01               5279		.byte	1
00000bcb 00000000         5280		.long	.LDW_49cd8a0
00000bcf 00               5281		.byte	0
00000bd0 00               5282		.byte	0
00000bd1 0271             5283		.byte	2,113
00000bd3 09               5284		.byte	9
                          5285	
00000bd4 00               5286		.byte	0
                          5287	
00000bd5 00               5288		.byte	0
                          5289	
                          5290	.LDW_49ca4b0:
00000bd6 16               5291		.byte	22
00000bd7 4170706c46626c47 5292		.strz	"ApplFblGetPresencePatternBaseAddress"
00000bdf 657450726573656e
00000be7 6365506174746572
00000bef 6e42617365416464
00000bf7 7265737300      
00000bfc 8403             5293		.byte	132,3
00000bfe 10               5294		.byte	16
00000bff 01               5295		.byte	1
00000c00 00000000         5296		.long	.LDW_49cd980
00000c04 00000000         5297		.long	ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
00000c08 00000000         5298		.long	__ghs_eofn_ApplFblGetPresencePatternBaseAddress
00000c0c 0151             5299		.byte	1,81
00000c0e 808080800e       5300		.byte	128,128,128,128,14
00000c13 0c               5301		.byte	12
00000c14 00               5302		.byte	0
00000c15 18               5303		.byte	24
00000c16 00               5304		.byte	0
00000c17 00               5305		.byte	0
00000c18 00               5306		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 96
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000c19 00               5307		.byte	0
00000c1a 01               5308		.byte	1
00000c1b 00               5309		.byte	0
00000c1c 01               5310		.byte	1
                          5311	
                          5312		.section	.debug_frame
                          5313	.LDW_5dd4db0:
000000a8 00000014         5314		.long	.LDW_unq_6-.LDW_unq_5
                          5315	.LDW_unq_5:
000000ac 00000000         5316		.long	.LDW_5d355a0
000000b0 00000000         5317		.long	ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000000b4 0000007a         5318		.long	__ghs_eofn_ApplFblGetPresencePatternBaseAddress-ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000000b8 01               5319		.byte	1
000000b9 00000000         5320		.long	.LDW31
000000bd 00               5321		.byte	0
000000be 00               5322		.byte	0
000000bf 00               5323		.byte	0
                          5324	.LDW_unq_6:
                          5325		.section	.debug_line
000006c5 000502           5326		.byte	0,5,2
000006c8 00000000         5327		.long	ApplFblGetPresencePatternBaseAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000006cc 06               5328		.byte	6
000006cd 03               5329		.byte	3
000006ce 8403             5330		.byte	132,3
000006d0 02               5331		.byte	2
000006d1 00               5332		.byte	0
000006d2 01               5333		.byte	1
000006d3 03               5334		.byte	3
000006d4 05               5335		.byte	5
000006d5 02               5336		.byte	2
000006d6 10               5337		.byte	16
000006d7 01               5338		.byte	1
000006d8 000502           5339		.byte	0,5,2
000006db 00000000         5340		.long	.LDWlin6
000006df 0b               5341		.byte	11
000006e0 0d               5342		.byte	13
000006e1 0d               5343		.byte	13
000006e2 000502           5344		.byte	0,5,2
000006e5 00000000         5345		.long	.LDWlin7
000006e9 02               5346		.byte	2
000006ea 00               5347		.byte	0
000006eb 0b               5348		.byte	11
000006ec 02               5349		.byte	2
000006ed 00               5350		.byte	0
000006ee 0d               5351		.byte	13
000006ef 14               5352		.byte	20
000006f0 4c               5353		.byte	76
000006f1 000502           5354		.byte	0,5,2
000006f4 00000000         5355		.long	.LDWlin8
000006f8 0b               5356		.byte	11
000006f9 0d               5357		.byte	13
000006fa 000502           5358		.byte	0,5,2
000006fd 00000000         5359		.long	.LDWlin9
00000701 0d               5360		.byte	13
00000702 0c               5361		.byte	12
00000703 0b               5362		.byte	11

                                   Fri Apr 10 08:31:56 2020           Page 97
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000704 13               5363		.byte	19
00000705 02               5364		.byte	2
00000706 00               5365		.byte	0
00000707 0c               5366		.byte	12
00000708 2b               5367		.byte	43
00000709 13               5368		.byte	19
0000070a 02               5369		.byte	2
0000070b 00               5370		.byte	0
0000070c 0c               5371		.byte	12
0000070d 02               5372		.byte	2
0000070e 0c               5373		.byte	12
0000070f 000101           5374		.byte	0,1,1
                          5375		.section	.debug_info
                          5376	.LDW_5b853b0:
00000c1d 11               5377		.byte	17
00000c1e 626c6f636b4e7200 5378		.strz	"blockNr"
00000c26 8403             5379		.byte	132,3
00000c28 3d               5380		.byte	61
00000c29 01               5381		.byte	1
00000c2a 00000000         5382		.long	.LDW_49cb768
00000c2e 00               5383		.byte	0
00000c2f 0153             5384		.byte	1,83
                          5385	
                          5386	.LDW_5b85300:
00000c31 11               5387		.byte	17
00000c32 705072657350746e 5388		.strz	"pPresPtnAddr"
00000c3a 4164647200      
00000c3f 8403             5389		.byte	132,3
00000c41 58               5390		.byte	88
00000c42 01               5391		.byte	1
00000c43 00000000         5392		.long	.LDW_498c960
00000c47 00               5393		.byte	0
00000c48 016d             5394		.byte	1,109
                          5395	
                          5396	.LDW_5b84e30:
00000c4a 11               5397		.byte	17
00000c4b 705072657350746e 5398		.strz	"pPresPtnLen"
00000c53 4c656e00        
00000c57 8403             5399		.byte	132,3
00000c59 74               5400		.byte	116
00000c5a 01               5401		.byte	1
00000c5b 00000000         5402		.long	.LDW_498c3e8
00000c5f 00               5403		.byte	0
00000c60 016e             5404		.byte	1,110
                          5405	
                          5406	.LDW_4983418:
00000c62 1f               5407		.byte	31
00000c63 00000000         5408		.long	.LDW21
00000c67 00000000         5409		.long	.LDW31
                          5410	
                          5411	.LDW_5b850f0:
00000c6b 06               5412		.byte	6
00000c6c 7072657350746e45 5413		.strz	"presPtnEndAddress"
00000c74 6e64416464726573
00000c7c 7300            
00000c7e 8603             5414		.byte	134,3
00000c80 16               5415		.byte	22
00000c81 01               5416		.byte	1
00000c82 00000000         5417		.long	.LDW_49cda30
00000c86 00               5418		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 98
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000c87 00               5419		.byte	0
00000c88 016f             5420		.byte	1,111
                          5421	
                          5422	.LDW_5b852a8:
00000c8a 06               5423		.byte	6
00000c8b 7072657350746e4c 5424		.strz	"presPtnLength"
00000c93 656e67746800    
00000c99 8703             5425		.byte	135,3
00000c9b 16               5426		.byte	22
00000c9c 01               5427		.byte	1
00000c9d 00000000         5428		.long	.LDW_49ca458
00000ca1 00               5429		.byte	0
00000ca2 00               5430		.byte	0
00000ca3 0157             5431		.byte	1,87
                          5432	
00000ca5 00               5433		.byte	0
                          5434	
00000ca6 00               5435		.byte	0
                          5436	
                          5437	.LDW_5b85b10:
00000ca7 16               5438		.byte	22
00000ca8 4170706c46626c53 5439		.strz	"ApplFblSetModulePresence"
00000cb0 65744d6f64756c65
00000cb8 50726573656e6365
00000cc0 00              
00000cc1 b603             5440		.byte	182,3
00000cc3 13               5441		.byte	19
00000cc4 01               5442		.byte	1
00000cc5 00000000         5443		.long	.LDW_49cb7c0
00000cc9 00000000         5444		.long	ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
00000ccd 00000000         5445		.long	__ghs_eofn_ApplFblSetModulePresence
00000cd1 0151             5446		.byte	1,81
00000cd3 808080800e       5447		.byte	128,128,128,128,14
00000cd8 1c               5448		.byte	28
00000cd9 00               5449		.byte	0
00000cda 28               5450		.byte	40
00000cdb 00               5451		.byte	0
00000cdc 00               5452		.byte	0
00000cdd 00               5453		.byte	0
00000cde 00               5454		.byte	0
00000cdf 01               5455		.byte	1
00000ce0 00               5456		.byte	0
00000ce1 01               5457		.byte	1
                          5458	
                          5459		.section	.debug_frame
                          5460	.LDW_5dd4ab0:
000000c0 00000014         5461		.long	.LDW_unq_8-.LDW_unq_7
                          5462	.LDW_unq_7:
000000c4 00000000         5463		.long	.LDW_5d355a0
000000c8 00000000         5464		.long	ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000000cc 000000c6         5465		.long	__ghs_eofn_ApplFblSetModulePresence-ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000000d0 01               5466		.byte	1
000000d1 00000000         5467		.long	.LDW71
000000d5 00               5468		.byte	0
000000d6 00               5469		.byte	0
000000d7 00               5470		.byte	0
                          5471	.LDW_unq_8:
                          5472		.section	.debug_line
00000712 000502           5473		.byte	0,5,2
00000715 00000000         5474		.long	ApplFblSetModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.

                                   Fri Apr 10 08:31:56 2020           Page 99
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000719 06               5475		.byte	6
0000071a 03               5476		.byte	3
0000071b b603             5477		.byte	182,3
0000071d 02               5478		.byte	2
0000071e 00               5479		.byte	0
0000071f 01               5480		.byte	1
00000720 03               5481		.byte	3
00000721 0e               5482		.byte	14
00000722 02               5483		.byte	2
00000723 0e               5484		.byte	14
00000724 01               5485		.byte	1
00000725 000502           5486		.byte	0,5,2
00000728 00000000         5487		.long	.LDWlin17
0000072c 0c               5488		.byte	12
0000072d 000502           5489		.byte	0,5,2
00000730 00000000         5490		.long	.LDWlin18
00000734 0b               5491		.byte	11
00000735 03               5492		.byte	3
00000736 05               5493		.byte	5
00000737 02               5494		.byte	2
00000738 00               5495		.byte	0
00000739 01               5496		.byte	1
0000073a 02               5497		.byte	2
0000073b 02               5498		.byte	2
0000073c 0c               5499		.byte	12
0000073d 03               5500		.byte	3
0000073e 7e               5501		.byte	126
0000073f 02               5502		.byte	2
00000740 12               5503		.byte	18
00000741 01               5504		.byte	1
00000742 000502           5505		.byte	0,5,2
00000745 00000000         5506		.long	.LDWlin19
00000749 0d               5507		.byte	13
0000074a 0d               5508		.byte	13
0000074b 02               5509		.byte	2
0000074c 02               5510		.byte	2
0000074d 0c               5511		.byte	12
0000074e 03               5512		.byte	3
0000074f 7e               5513		.byte	126
00000750 02               5514		.byte	2
00000751 06               5515		.byte	6
00000752 01               5516		.byte	1
00000753 000502           5517		.byte	0,5,2
00000756 00000000         5518		.long	.LDWlin20
0000075a 0d               5519		.byte	13
0000075b 0c               5520		.byte	12
0000075c 1d               5521		.byte	29
0000075d 000502           5522		.byte	0,5,2
00000760 00000000         5523		.long	.LDWlin21
00000764 0d               5524		.byte	13
00000765 02               5525		.byte	2
00000766 00               5526		.byte	0
00000767 0d               5527		.byte	13
00000768 c3               5528		.byte	195
00000769 06               5529		.byte	6
0000076a 000502           5530		.byte	0,5,2

                                   Fri Apr 10 08:31:56 2020           Page 100
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000076d 00000000         5531		.long	.LDWlin22
00000771 03               5532		.byte	3
00000772 7b               5533		.byte	123
00000773 02               5534		.byte	2
00000774 00               5535		.byte	0
00000775 01               5536		.byte	1
00000776 03               5537		.byte	3
00000777 0f               5538		.byte	15
00000778 02               5539		.byte	2
00000779 00               5540		.byte	0
0000077a 01               5541		.byte	1
0000077b 06               5542		.byte	6
0000077c 03               5543		.byte	3
0000077d 77               5544		.byte	119
0000077e 02               5545		.byte	2
0000077f 00               5546		.byte	0
00000780 01               5547		.byte	1
00000781 0c               5548		.byte	12
00000782 02               5549		.byte	2
00000783 00               5550		.byte	0
00000784 0d               5551		.byte	13
00000785 02               5552		.byte	2
00000786 02               5553		.byte	2
00000787 0c               5554		.byte	12
00000788 000502           5555		.byte	0,5,2
0000078b 00000000         5556		.long	.LDWlin23
0000078f 0d               5557		.byte	13
00000790 02               5558		.byte	2
00000791 00               5559		.byte	0
00000792 03               5560		.byte	3
00000793 7b               5561		.byte	123
00000794 02               5562		.byte	2
00000795 00               5563		.byte	0
00000796 01               5564		.byte	1
00000797 000502           5565		.byte	0,5,2
0000079a 00000000         5566		.long	.LDWlin24
0000079e 03               5567		.byte	3
0000079f 06               5568		.byte	6
000007a0 02               5569		.byte	2
000007a1 00               5570		.byte	0
000007a2 01               5571		.byte	1
000007a3 0d               5572		.byte	13
000007a4 000502           5573		.byte	0,5,2
000007a7 00000000         5574		.long	.LDWlin25
000007ab 0b               5575		.byte	11
000007ac 0c               5576		.byte	12
000007ad 0c               5577		.byte	12
000007ae 13               5578		.byte	19
000007af 02               5579		.byte	2
000007b0 00               5580		.byte	0
000007b1 0c               5581		.byte	12
000007b2 02               5582		.byte	2
000007b3 0e               5583		.byte	14
000007b4 000101           5584		.byte	0,1,1
                          5585		.section	.debug_info
                          5586	.LDW_5b84f90:

                                   Fri Apr 10 08:31:56 2020           Page 101
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000ce2 11               5587		.byte	17
00000ce3 626c6f636b446573 5588		.strz	"blockDescriptor"
00000ceb 63726970746f7200
00000cf3 b603             5589		.byte	182,3
00000cf5 40               5590		.byte	64
00000cf6 01               5591		.byte	1
00000cf7 00000000         5592		.long	.LDW_498c9d0
00000cfb 00               5593		.byte	0
00000cfc 016e             5594		.byte	1,110
                          5595	
                          5596	.LDW_49832f8:
00000cfe 1f               5597		.byte	31
00000cff 00000000         5598		.long	.LDW61
00000d03 00000000         5599		.long	.LDW71
                          5600	
                          5601	.LDW_5b85358:
00000d07 06               5602		.byte	6
00000d08 7072657350746e41 5603		.strz	"presPtnAddress"
00000d10 64647265737300  
00000d17 b803             5604		.byte	184,3
00000d19 1f               5605		.byte	31
00000d1a 01               5606		.byte	1
00000d1b 00000000         5607		.long	.LDW_49cda30
00000d1f 00               5608		.byte	0
00000d20 00               5609		.byte	0
00000d21 0271             5610		.byte	2,113
00000d23 08               5611		.byte	8
                          5612	
                          5613	.LDW_5b85408:
00000d24 06               5614		.byte	6
00000d25 7072657350746e4c 5615		.strz	"presPtnLen"
00000d2d 656e00          
00000d30 b903             5616		.byte	185,3
00000d32 1f               5617		.byte	31
00000d33 01               5618		.byte	1
00000d34 00000000         5619		.long	.LDW_49ca458
00000d38 00               5620		.byte	0
00000d39 00               5621		.byte	0
00000d3a 0271             5622		.byte	2,113
00000d3c 0c               5623		.byte	12
                          5624	
                          5625	.LDW_5b84d28:
00000d3d 06               5626		.byte	6
00000d3e 7265616452657375 5627		.strz	"readResult"
00000d46 6c7400          
00000d49 ba03             5628		.byte	186,3
00000d4b 1f               5629		.byte	31
00000d4c 01               5630		.byte	1
00000d4d 00000000         5631		.long	.LDW_5b85250
00000d51 00               5632		.byte	0
00000d52 00               5633		.byte	0
00000d53 0153             5634		.byte	1,83
                          5635	
                          5636	.LDW_5b84cd0:
00000d55 06               5637		.byte	6
00000d56 6900             5638		.strz	"i"
00000d58 bb03             5639		.byte	187,3
00000d5a 1f               5640		.byte	31
00000d5b 01               5641		.byte	1
00000d5c 00000000         5642		.long	.LDW_49cd9d8

                                   Fri Apr 10 08:31:56 2020           Page 102
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000d60 00               5643		.byte	0
00000d61 00               5644		.byte	0
00000d62 0150             5645		.byte	1,80
                          5646	
                          5647	.LDW_5b85148:
00000d64 06               5648		.byte	6
00000d65 726573756c7400   5649		.strz	"result"
00000d6c bc03             5650		.byte	188,3
00000d6e 1f               5651		.byte	31
00000d6f 01               5652		.byte	1
00000d70 00000000         5653		.long	.LDW_49cb7c0
00000d74 00               5654		.byte	0
00000d75 00               5655		.byte	0
00000d76 0153             5656		.byte	1,83
                          5657	
                          5658	.LDW_5b84fe8:
00000d78 06               5659		.byte	6
00000d79 666c617368486561 5660		.strz	"flashHeader"
00000d81 64657200        
00000d85 bd03             5661		.byte	189,3
00000d87 1f               5662		.byte	31
00000d88 01               5663		.byte	1
00000d89 00000000         5664		.long	.LDW_5b84ee0
00000d8d 00               5665		.byte	0
00000d8e 00               5666		.byte	0
00000d8f 0271             5667		.byte	2,113
00000d91 10               5668		.byte	16
                          5669	
                          5670	.LDW_5b85040:
00000d92 07               5671		.byte	7
00000d93 70466c6173684865 5672		.strz	"pFlashHeader"
00000d9b 6164657200      
00000da0 be03             5673		.byte	190,3
00000da2 1f               5674		.byte	31
00000da3 01               5675		.byte	1
00000da4 00000000         5676		.long	.LDW_498c5a8
00000da8 00               5677		.byte	0
00000da9 00               5678		.byte	0
                          5679	
00000daa 00               5680		.byte	0
                          5681	
00000dab 00               5682		.byte	0
                          5683	
                          5684	.LDW_5b85ba8:
00000dac 16               5685		.byte	22
00000dad 4170706c46626c43 5686		.strz	"ApplFblClrModulePresence"
00000db5 6c724d6f64756c65
00000dbd 50726573656e6365
00000dc5 00              
00000dc6 8504             5687		.byte	133,4
00000dc8 13               5688		.byte	19
00000dc9 01               5689		.byte	1
00000dca 00000000         5690		.long	.LDW_49cb7c0
00000dce 00000000         5691		.long	ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
00000dd2 00000000         5692		.long	__ghs_eofn_ApplFblClrModulePresence
00000dd6 0151             5693		.byte	1,81
00000dd8 808080800c       5694		.byte	128,128,128,128,12
00000ddd 20               5695		.byte	32
00000dde 00               5696		.byte	0
00000ddf 28               5697		.byte	40
00000de0 00               5698		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 103
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000de1 00               5699		.byte	0
00000de2 00               5700		.byte	0
00000de3 00               5701		.byte	0
00000de4 01               5702		.byte	1
00000de5 00               5703		.byte	0
00000de6 01               5704		.byte	1
                          5705	
                          5706		.section	.debug_frame
                          5707	.LDW_5dd4f30:
000000d8 00000014         5708		.long	.LDW_unq_a-.LDW_unq_9
                          5709	.LDW_unq_9:
000000dc 00000000         5710		.long	.LDW_5d355a0
000000e0 00000000         5711		.long	ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000000e4 00000090         5712		.long	__ghs_eofn_ApplFblClrModulePresence-ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000000e8 01               5713		.byte	1
000000e9 00000000         5714		.long	.LDW91
000000ed 00               5715		.byte	0
000000ee 00               5716		.byte	0
000000ef 00               5717		.byte	0
                          5718	.LDW_unq_a:
                          5719		.section	.debug_line
000007b7 000502           5720		.byte	0,5,2
000007ba 00000000         5721		.long	ApplFblClrModulePresence..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_apnv.
000007be 06               5722		.byte	6
000007bf 03               5723		.byte	3
000007c0 8504             5724		.byte	133,4
000007c2 02               5725		.byte	2
000007c3 00               5726		.byte	0
000007c4 01               5727		.byte	1
000007c5 43               5728		.byte	67
000007c6 03               5729		.byte	3
000007c7 0a               5730		.byte	10
000007c8 02               5731		.byte	2
000007c9 02               5732		.byte	2
000007ca 01               5733		.byte	1
000007cb 000502           5734		.byte	0,5,2
000007ce 00000000         5735		.long	.LDWlin26
000007d2 0d               5736		.byte	13
000007d3 000502           5737		.byte	0,5,2
000007d6 00000000         5738		.long	.LDWlin27
000007da 0b               5739		.byte	11
000007db 03               5740		.byte	3
000007dc 06               5741		.byte	6
000007dd 02               5742		.byte	2
000007de 00               5743		.byte	0
000007df 01               5744		.byte	1
000007e0 000502           5745		.byte	0,5,2
000007e3 00000000         5746		.long	.LDWlin28
000007e7 0b               5747		.byte	11
000007e8 0c               5748		.byte	12
000007e9 02               5749		.byte	2
000007ea 02               5750		.byte	2
000007eb 0d               5751		.byte	13
000007ec 03               5752		.byte	3
000007ed 7d               5753		.byte	125
000007ee 02               5754		.byte	2

                                   Fri Apr 10 08:31:56 2020           Page 104
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000007ef 16               5755		.byte	22
000007f0 01               5756		.byte	1
000007f1 000502           5757		.byte	0,5,2
000007f4 00000000         5758		.long	.LDWlin29
000007f8 03               5759		.byte	3
000007f9 04               5760		.byte	4
000007fa 02               5761		.byte	2
000007fb 00               5762		.byte	0
000007fc 01               5763		.byte	1
000007fd 0d               5764		.byte	13
000007fe 02               5765		.byte	2
000007ff 02               5766		.byte	2
00000800 0c               5767		.byte	12
00000801 03               5768		.byte	3
00000802 7e               5769		.byte	126
00000803 02               5770		.byte	2
00000804 06               5771		.byte	6
00000805 01               5772		.byte	1
00000806 000502           5773		.byte	0,5,2
00000809 00000000         5774		.long	.LDWlin30
0000080d 0d               5775		.byte	13
0000080e 0d               5776		.byte	13
0000080f 000502           5777		.byte	0,5,2
00000812 00000000         5778		.long	.LDWlin31
00000816 0b               5779		.byte	11
00000817 0c               5780		.byte	12
00000818 13               5781		.byte	19
00000819 02               5782		.byte	2
0000081a 00               5783		.byte	0
0000081b 0b               5784		.byte	11
0000081c 000502           5785		.byte	0,5,2
0000081f 00000000         5786		.long	.LDWlin32
00000823 0b               5787		.byte	11
00000824 02               5788		.byte	2
00000825 00               5789		.byte	0
00000826 0b               5790		.byte	11
00000827 0c               5791		.byte	12
00000828 0d               5792		.byte	13
00000829 000502           5793		.byte	0,5,2
0000082c 00000000         5794		.long	.LDWlin33
00000830 0b               5795		.byte	11
00000831 0b               5796		.byte	11
00000832 13               5797		.byte	19
00000833 02               5798		.byte	2
00000834 00               5799		.byte	0
00000835 0b               5800		.byte	11
00000836 02               5801		.byte	2
00000837 00               5802		.byte	0
00000838 0c               5803		.byte	12
00000839 06               5804		.byte	6
0000083a 02               5805		.byte	2
0000083b 02               5806		.byte	2
0000083c 02               5807		.byte	2
0000083d 0e               5808		.byte	14
0000083e 000101           5809		.byte	0,1,1
                          5810		.section	.debug_info

                                   Fri Apr 10 08:31:56 2020           Page 105
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          5811	.LDW_5b84d80:
00000de7 11               5812		.byte	17
00000de8 626c6f636b446573 5813		.strz	"blockDescriptor"
00000df0 63726970746f7200
00000df8 8504             5814		.byte	133,4
00000dfa 40               5815		.byte	64
00000dfb 01               5816		.byte	1
00000dfc 00000000         5817		.long	.LDW_498c9d0
00000e00 00               5818		.byte	0
00000e01 016e             5819		.byte	1,110
                          5820	
                          5821	.LDW_49831a8:
00000e03 1f               5822		.byte	31
00000e04 00000000         5823		.long	.LDW81
00000e08 00000000         5824		.long	.LDW91
                          5825	
                          5826	.LDW_5b851a0:
00000e0c 06               5827		.byte	6
00000e0d 726573756c7400   5828		.strz	"result"
00000e14 8704             5829		.byte	135,4
00000e16 1f               5830		.byte	31
00000e17 01               5831		.byte	1
00000e18 00000000         5832		.long	.LDW_49cb7c0
00000e1c 00               5833		.byte	0
00000e1d 00               5834		.byte	0
00000e1e 016f             5835		.byte	1,111
                          5836	
                          5837	.LDW_5b84dd8:
00000e20 06               5838		.byte	6
00000e21 6900             5839		.strz	"i"
00000e23 8804             5840		.byte	136,4
00000e25 1f               5841		.byte	31
00000e26 01               5842		.byte	1
00000e27 00000000         5843		.long	.LDW_49cd9d8
00000e2b 00               5844		.byte	0
00000e2c 00               5845		.byte	0
00000e2d 0150             5846		.byte	1,80
                          5847	
                          5848	.LDW_5b84f38:
00000e2f 06               5849		.byte	6
00000e30 7072657350746e41 5850		.strz	"presPtnAddress"
00000e38 64647265737300  
00000e3f 8904             5851		.byte	137,4
00000e41 1f               5852		.byte	31
00000e42 01               5853		.byte	1
00000e43 00000000         5854		.long	.LDW_49cda30
00000e47 00               5855		.byte	0
00000e48 00               5856		.byte	0
00000e49 0271             5857		.byte	2,113
00000e4b 08               5858		.byte	8
                          5859	
                          5860	.LDW_5b851f8:
00000e4c 06               5861		.byte	6
00000e4d 7072657350746e4c 5862		.strz	"presPtnLen"
00000e55 656e00          
00000e58 8a04             5863		.byte	138,4
00000e5a 1f               5864		.byte	31
00000e5b 01               5865		.byte	1
00000e5c 00000000         5866		.long	.LDW_49ca458

                                   Fri Apr 10 08:31:56 2020           Page 106
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000e60 00               5867		.byte	0
00000e61 00               5868		.byte	0
00000e62 0271             5869		.byte	2,113
00000e64 0c               5870		.byte	12
                          5871	
                          5872	.LDW_5c1e728:
00000e65 06               5873		.byte	6
00000e66 666c617368486561 5874		.strz	"flashHeader"
00000e6e 64657200        
00000e72 8b04             5875		.byte	139,4
00000e74 1f               5876		.byte	31
00000e75 01               5877		.byte	1
00000e76 00000000         5878		.long	.LDW_5b84ee0
00000e7a 00               5879		.byte	0
00000e7b 00               5880		.byte	0
00000e7c 0271             5881		.byte	2,113
00000e7e 10               5882		.byte	16
                          5883	
                          5884	.LDW_5c1e518:
00000e7f 07               5885		.byte	7
00000e80 70466c6173684865 5886		.strz	"pFlashHeader"
00000e88 6164657200      
00000e8d 8c04             5887		.byte	140,4
00000e8f 1f               5888		.byte	31
00000e90 01               5889		.byte	1
00000e91 00000000         5890		.long	.LDW_498c5a8
00000e95 00               5891		.byte	0
00000e96 00               5892		.byte	0
                          5893	
00000e97 00               5894		.byte	0
                          5895	
00000e98 00               5896		.byte	0
                          5897	
                          5898	.LDW_5c4d1a8:
00000e99 16               5899		.byte	22
00000e9a 4170706c46626c43 5900		.strz	"ApplFblChkModulePresence"
00000ea2 686b4d6f64756c65
00000eaa 50726573656e6365
00000eb2 00              
00000eb3 ca04             5901		.byte	202,4
00000eb5 0c               5902		.byte	12
00000eb6 01               5903		.byte	1
00000eb7 00000000         5904		.long	.LDW_49cb7c0
00000ebb 00000000         5905		.long	ApplFblChkModulePresence
00000ebf 00000000         5906		.long	__ghs_eofn_ApplFblChkModulePresence
00000ec3 0151             5907		.byte	1,81
00000ec5 808080800f       5908		.byte	128,128,128,128,15
00000eca 18               5909		.byte	24
00000ecb 00               5910		.byte	0
00000ecc 28               5911		.byte	40
00000ecd 00               5912		.byte	0
00000ece 00               5913		.byte	0
00000ecf 00               5914		.byte	0
00000ed0 01               5915		.byte	1
00000ed1 01               5916		.byte	1
00000ed2 00               5917		.byte	0
00000ed3 01               5918		.byte	1
                          5919	
                          5920		.section	.debug_frame
                          5921	.LDW_5dd50b0:
000000f0 00000014         5922		.long	.LDW_unq_c-.LDW_unq_b

                                   Fri Apr 10 08:31:56 2020           Page 107
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          5923	.LDW_unq_b:
000000f4 00000000         5924		.long	.LDW_5d355a0
000000f8 00000000         5925		.long	ApplFblChkModulePresence
000000fc 000000d2         5926		.long	__ghs_eofn_ApplFblChkModulePresence-ApplFblChkModulePresence
00000100 01               5927		.byte	1
00000101 00000000         5928		.long	.LDW51
00000105 00               5929		.byte	0
00000106 00               5930		.byte	0
00000107 00               5931		.byte	0
                          5932	.LDW_unq_c:
                          5933		.section	.debug_line
00000841 000502           5934		.byte	0,5,2
00000844 00000000         5935		.long	ApplFblChkModulePresence
00000848 06               5936		.byte	6
00000849 03               5937		.byte	3
0000084a ca04             5938		.byte	202,4
0000084c 02               5939		.byte	2
0000084d 00               5940		.byte	0
0000084e 01               5941		.byte	1
0000084f 03               5942		.byte	3
00000850 09               5943		.byte	9
00000851 02               5944		.byte	2
00000852 0c               5945		.byte	12
00000853 01               5946		.byte	1
00000854 03               5947		.byte	3
00000855 05               5948		.byte	5
00000856 02               5949		.byte	2
00000857 02               5950		.byte	2
00000858 01               5951		.byte	1
00000859 000502           5952		.byte	0,5,2
0000085c 00000000         5953		.long	.LDWlin10
00000860 0c               5954		.byte	12
00000861 000502           5955		.byte	0,5,2
00000864 00000000         5956		.long	.LDWlin11
00000868 0d               5957		.byte	13
00000869 02               5958		.byte	2
0000086a 00               5959		.byte	0
0000086b 0c               5960		.byte	12
0000086c 0b               5961		.byte	11
0000086d 0c               5962		.byte	12
0000086e bb               5963		.byte	187
0000086f 000502           5964		.byte	0,5,2
00000872 00000000         5965		.long	.LDWlin12
00000876 03               5966		.byte	3
00000877 04               5967		.byte	4
00000878 02               5968		.byte	2
00000879 00               5969		.byte	0
0000087a 01               5970		.byte	1
0000087b 02               5971		.byte	2
0000087c 00               5972		.byte	0
0000087d 0b               5973		.byte	11
0000087e 02               5974		.byte	2
0000087f 00               5975		.byte	0
00000880 0c               5976		.byte	12
00000881 0b               5977		.byte	11
00000882 0c               5978		.byte	12

                                   Fri Apr 10 08:31:56 2020           Page 108
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000883 9b               5979		.byte	155
00000884 06               5980		.byte	6
00000885 000502           5981		.byte	0,5,2
00000888 00000000         5982		.long	.LDWlin13
0000088c 03               5983		.byte	3
0000088d 6e               5984		.byte	110
0000088e 02               5985		.byte	2
0000088f 00               5986		.byte	0
00000890 01               5987		.byte	1
00000891 03               5988		.byte	3
00000892 0a               5989		.byte	10
00000893 02               5990		.byte	2
00000894 00               5991		.byte	0
00000895 01               5992		.byte	1
00000896 06               5993		.byte	6
00000897 03               5994		.byte	3
00000898 09               5995		.byte	9
00000899 02               5996		.byte	2
0000089a 00               5997		.byte	0
0000089b 01               5998		.byte	1
0000089c 0c               5999		.byte	12
0000089d 000502           6000		.byte	0,5,2
000008a0 00000000         6001		.long	.LDWlin14
000008a4 0b               6002		.byte	11
000008a5 02               6003		.byte	2
000008a6 00               6004		.byte	0
000008a7 0b               6005		.byte	11
000008a8 02               6006		.byte	2
000008a9 00               6007		.byte	0
000008aa 0c               6008		.byte	12
000008ab 0b               6009		.byte	11
000008ac 0b               6010		.byte	11
000008ad 02               6011		.byte	2
000008ae 02               6012		.byte	2
000008af 0d               6013		.byte	13
000008b0 000502           6014		.byte	0,5,2
000008b3 00000000         6015		.long	.LDWlin15
000008b7 0c               6016		.byte	12
000008b8 0c               6017		.byte	12
000008b9 13               6018		.byte	19
000008ba 02               6019		.byte	2
000008bb 00               6020		.byte	0
000008bc 03               6021		.byte	3
000008bd 78               6022		.byte	120
000008be 02               6023		.byte	2
000008bf 00               6024		.byte	0
000008c0 01               6025		.byte	1
000008c1 000502           6026		.byte	0,5,2
000008c4 00000000         6027		.long	.LDWlin16
000008c8 03               6028		.byte	3
000008c9 09               6029		.byte	9
000008ca 02               6030		.byte	2
000008cb 00               6031		.byte	0
000008cc 01               6032		.byte	1
000008cd 0b               6033		.byte	11
000008ce 02               6034		.byte	2

                                   Fri Apr 10 08:31:56 2020           Page 109
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000008cf 00               6035		.byte	0
000008d0 0c               6036		.byte	12
000008d1 06               6037		.byte	6
000008d2 02               6038		.byte	2
000008d3 02               6039		.byte	2
000008d4 02               6040		.byte	2
000008d5 0e               6041		.byte	14
000008d6 000101           6042		.byte	0,1,1
                          6043		.section	.debug_info
                          6044	.LDW_5c1e6d0:
00000ed4 11               6045		.byte	17
00000ed5 626c6f636b446573 6046		.strz	"blockDescriptor"
00000edd 63726970746f7200
00000ee5 ca04             6047		.byte	202,4
00000ee7 39               6048		.byte	57
00000ee8 01               6049		.byte	1
00000ee9 00000000         6050		.long	.LDW_498c9d0
00000eed 00               6051		.byte	0
00000eee 0153             6052		.byte	1,83
                          6053	
                          6054	.LDW_49833b8:
00000ef0 1f               6055		.byte	31
00000ef1 00000000         6056		.long	.LDW41
00000ef5 00000000         6057		.long	.LDW51
                          6058	
                          6059	.LDW_5c1ebf8:
00000ef9 06               6060		.byte	6
00000efa 666c617368507265 6061		.strz	"flashPresPtn"
00000f02 7350746e00      
00000f07 cc04             6062		.byte	204,4
00000f09 15               6063		.byte	21
00000f0a 01               6064		.byte	1
00000f0b 00000000         6065		.long	.LDW_5c4d240
00000f0f 00               6066		.byte	0
00000f10 00               6067		.byte	0
00000f11 0271             6068		.byte	2,113
00000f13 0c               6069		.byte	12
                          6070	
                          6071	.LDW_5c1e888:
00000f14 06               6072		.byte	6
00000f15 666c617368507265 6073		.strz	"flashPresMsk"
00000f1d 734d736b00      
00000f22 cd04             6074		.byte	205,4
00000f24 15               6075		.byte	21
00000f25 01               6076		.byte	1
00000f26 00000000         6077		.long	.LDW_5c4d2c8
00000f2a 00               6078		.byte	0
00000f2b 00               6079		.byte	0
00000f2c 0271             6080		.byte	2,113
00000f2e 10               6081		.byte	16
                          6082	
                          6083	.LDW_5c1ea98:
00000f2f 06               6084		.byte	6
00000f30 7072657350746e41 6085		.strz	"presPtnAddress"
00000f38 64647265737300  
00000f3f ce04             6086		.byte	206,4
00000f41 15               6087		.byte	21
00000f42 01               6088		.byte	1
00000f43 00000000         6089		.long	.LDW_49cda30
00000f47 00               6090		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 110
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000f48 00               6091		.byte	0
00000f49 0271             6092		.byte	2,113
00000f4b 08               6093		.byte	8
                          6094	
                          6095	.LDW_5c1e360:
00000f4c 06               6096		.byte	6
00000f4d 7072657350746e4c 6097		.strz	"presPtnLen"
00000f55 656e00          
00000f58 cf04             6098		.byte	207,4
00000f5a 15               6099		.byte	21
00000f5b 01               6100		.byte	1
00000f5c 00000000         6101		.long	.LDW_49ca458
00000f60 00               6102		.byte	0
00000f61 00               6103		.byte	0
00000f62 0271             6104		.byte	2,113
00000f64 14               6105		.byte	20
                          6106	
                          6107	.LDW_5c1e2b0:
00000f65 06               6108		.byte	6
00000f66 7265616452657375 6109		.strz	"readResult"
00000f6e 6c7400          
00000f71 d004             6110		.byte	208,4
00000f73 15               6111		.byte	21
00000f74 01               6112		.byte	1
00000f75 00000000         6113		.long	.LDW_5b85250
00000f79 00               6114		.byte	0
00000f7a 00               6115		.byte	0
00000f7b 0153             6116		.byte	1,83
                          6117	
                          6118	.LDW_5c1e830:
00000f7d 06               6119		.byte	6
00000f7e 6900             6120		.strz	"i"
00000f80 d104             6121		.byte	209,4
00000f82 15               6122		.byte	21
00000f83 01               6123		.byte	1
00000f84 00000000         6124		.long	.LDW_49cd9d8
00000f88 00               6125		.byte	0
00000f89 00               6126		.byte	0
00000f8a 0150             6127		.byte	1,80
                          6128	
                          6129	.LDW_5c1e308:
00000f8c 06               6130		.byte	6
00000f8d 726573756c7400   6131		.strz	"result"
00000f94 d204             6132		.byte	210,4
00000f96 15               6133		.byte	21
00000f97 01               6134		.byte	1
00000f98 00000000         6135		.long	.LDW_49cb7c0
00000f9c 00               6136		.byte	0
00000f9d 00               6137		.byte	0
00000f9e 016f             6138		.byte	1,111
                          6139	
00000fa0 00               6140		.byte	0
                          6141	
00000fa1 00               6142		.byte	0
                          6143	
                          6144	.LDW_5c4d350:
00000fa2 16               6145		.byte	22
00000fa3 4170706c46626c41 6146		.strz	"ApplFblAdjustLbtBlockData"
00000fab 646a7573744c6274
00000fb3 426c6f636b446174
00000fbb 6100            

                                   Fri Apr 10 08:31:56 2020           Page 111
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000fbd 9305             6147		.byte	147,5
00000fbf 0c               6148		.byte	12
00000fc0 01               6149		.byte	1
00000fc1 00000000         6150		.long	.LDW_49cb7c0
00000fc5 00000000         6151		.long	ApplFblAdjustLbtBlockData
00000fc9 00000000         6152		.long	__ghs_eofn_ApplFblAdjustLbtBlockData
00000fcd 0151             6153		.byte	1,81
00000fcf 8080808008       6154		.byte	128,128,128,128,8
00000fd4 14               6155		.byte	20
00000fd5 00               6156		.byte	0
00000fd6 18               6157		.byte	24
00000fd7 00               6158		.byte	0
00000fd8 00               6159		.byte	0
00000fd9 00               6160		.byte	0
00000fda 01               6161		.byte	1
00000fdb 01               6162		.byte	1
00000fdc 00               6163		.byte	0
00000fdd 01               6164		.byte	1
                          6165	
                          6166		.section	.debug_frame
                          6167	.LDW_5dd4df0:
00000108 00000014         6168		.long	.LDW_unq_e-.LDW_unq_d
                          6169	.LDW_unq_d:
0000010c 00000000         6170		.long	.LDW_5d355a0
00000110 00000000         6171		.long	ApplFblAdjustLbtBlockData
00000114 00000040         6172		.long	__ghs_eofn_ApplFblAdjustLbtBlockData-ApplFblAdjustLbtBlockData
00000118 01               6173		.byte	1
00000119 00000000         6174		.long	.LDW12
0000011d 00               6175		.byte	0
0000011e 00               6176		.byte	0
0000011f 00               6177		.byte	0
                          6178	.LDW_unq_e:
                          6179		.section	.debug_line
000008d9 000502           6180		.byte	0,5,2
000008dc 00000000         6181		.long	ApplFblAdjustLbtBlockData
000008e0 06               6182		.byte	6
000008e1 03               6183		.byte	3
000008e2 9305             6184		.byte	147,5
000008e4 02               6185		.byte	2
000008e5 00               6186		.byte	0
000008e6 01               6187		.byte	1
000008e7 03               6188		.byte	3
000008e8 08               6189		.byte	8
000008e9 02               6190		.byte	2
000008ea 0c               6191		.byte	12
000008eb 01               6192		.byte	1
000008ec 000502           6193		.byte	0,5,2
000008ef 00000000         6194		.long	.LDWlin34
000008f3 0c               6195		.byte	12
000008f4 000502           6196		.byte	0,5,2
000008f7 00000000         6197		.long	.LDWlin35
000008fb 0b               6198		.byte	11
000008fc 0c               6199		.byte	12
000008fd 33               6200		.byte	51
000008fe 000502           6201		.byte	0,5,2
00000901 00000000         6202		.long	.LDWlin36

                                   Fri Apr 10 08:31:56 2020           Page 112
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000905 0b               6203		.byte	11
00000906 0c               6204		.byte	12
00000907 0b               6205		.byte	11
00000908 13               6206		.byte	19
00000909 02               6207		.byte	2
0000090a 00               6208		.byte	0
0000090b 0c               6209		.byte	12
0000090c 02               6210		.byte	2
0000090d 0a               6211		.byte	10
0000090e 000101           6212		.byte	0,1,1
                          6213		.section	.debug_info
                          6214	.LDW_5c1e678:
00000fde 11               6215		.byte	17
00000fdf 626c6f636b446573 6216		.strz	"blockDescriptor"
00000fe7 63726970746f7200
00000fef 9305             6217		.byte	147,5
00000ff1 3a               6218		.byte	58
00000ff2 01               6219		.byte	1
00000ff3 00000000         6220		.long	.LDW_498c9d0
00000ff7 00               6221		.byte	0
00000ff8 016f             6222		.byte	1,111
                          6223	
                          6224	.LDW_49836b8:
00000ffa 1f               6225		.byte	31
00000ffb 00000000         6226		.long	.LDW02
00000fff 00000000         6227		.long	.LDW12
                          6228	
                          6229	.LDW_5c1e938:
00001003 06               6230		.byte	6
00001004 7072657350746e41 6231		.strz	"presPtnAddress"
0000100c 64647265737300  
00001013 9505             6232		.byte	149,5
00001015 15               6233		.byte	21
00001016 01               6234		.byte	1
00001017 00000000         6235		.long	.LDW_49cda30
0000101b 00               6236		.byte	0
0000101c 00               6237		.byte	0
0000101d 0271             6238		.byte	2,113
0000101f 0c               6239		.byte	12
                          6240	
                          6241	.LDW_5c1eb48:
00001020 06               6242		.byte	6
00001021 7072657350746e4c 6243		.strz	"presPtnLen"
00001029 656e00          
0000102c 9605             6244		.byte	150,5
0000102e 15               6245		.byte	21
0000102f 01               6246		.byte	1
00001030 00000000         6247		.long	.LDW_49ca458
00001034 00               6248		.byte	0
00001035 00               6249		.byte	0
00001036 0271             6250		.byte	2,113
00001038 08               6251		.byte	8
                          6252	
                          6253	.LDW_5c1e9e8:
00001039 06               6254		.byte	6
0000103a 726573756c7400   6255		.strz	"result"
00001041 9705             6256		.byte	151,5
00001043 15               6257		.byte	21
00001044 01               6258		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 113
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001045 00000000         6259		.long	.LDW_49cb7c0
00001049 00               6260		.byte	0
0000104a 00               6261		.byte	0
0000104b 0153             6262		.byte	1,83
                          6263	
0000104d 00               6264		.byte	0
                          6265	
0000104e 00               6266		.byte	0
                          6267	
                          6268	.LDW_5c4d3e8:
0000104f 16               6269		.byte	22
00001050 4170706c46626c47 6270		.strz	"ApplFblGetModuleHeaderAddress"
00001058 65744d6f64756c65
00001060 4865616465724164
00001068 647265737300    
0000106e b505             6271		.byte	181,5
00001070 0d               6272		.byte	13
00001071 01               6273		.byte	1
00001072 00000000         6274		.long	.LDW_5c1e8e0
00001076 00000000         6275		.long	ApplFblGetModuleHeaderAddress
0000107a 00000000         6276		.long	__ghs_eofn_ApplFblGetModuleHeaderAddress
0000107e 0151             6277		.byte	1,81
00001080 03               6278		.byte	3
00001081 00               6279		.byte	0
00001082 00               6280		.byte	0
00001083 00               6281		.byte	0
00001084 00               6282		.byte	0
00001085 00               6283		.byte	0
00001086 00               6284		.byte	0
00001087 01               6285		.byte	1
00001088 01               6286		.byte	1
00001089 00               6287		.byte	0
0000108a 01               6288		.byte	1
                          6289	
                          6290		.section	.debug_frame
                          6291	.LDW_5dd4f70:
00000120 00000014         6292		.long	.LDW_unq_10-.LDW_unq_f
                          6293	.LDW_unq_f:
00000124 00000000         6294		.long	.LDW_5d355a0
00000128 00000000         6295		.long	ApplFblGetModuleHeaderAddress
0000012c 0000001e         6296		.long	__ghs_eofn_ApplFblGetModuleHeaderAddress-ApplFblGetModuleHeaderAddress
00000130 01               6297		.byte	1
00000131 00000000         6298		.long	.LDW32
00000135 00               6299		.byte	0
00000136 00               6300		.byte	0
00000137 00               6301		.byte	0
                          6302	.LDW_unq_10:
                          6303		.section	.debug_line
00000911 000502           6304		.byte	0,5,2
00000914 00000000         6305		.long	ApplFblGetModuleHeaderAddress
00000918 06               6306		.byte	6
00000919 03               6307		.byte	3
0000091a c205             6308		.byte	194,5
0000091c 02               6309		.byte	2
0000091d 00               6310		.byte	0
0000091e 01               6311		.byte	1
0000091f 000502           6312		.byte	0,5,2
00000922 00000000         6313		.long	.LDWlin37
00000926 0b               6314		.byte	11

                                   Fri Apr 10 08:31:56 2020           Page 114
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000927 0d               6315		.byte	13
00000928 2b               6316		.byte	43
00000929 0c               6317		.byte	12
0000092a 0c               6318		.byte	12
0000092b 2b               6319		.byte	43
0000092c 02               6320		.byte	2
0000092d 00               6321		.byte	0
0000092e 0c               6322		.byte	12
0000092f 02               6323		.byte	2
00000930 02               6324		.byte	2
00000931 000101           6325		.byte	0,1,1
                          6326		.section	.debug_info
                          6327	.LDW_5c1eaf0:
0000108b 11               6328		.byte	17
0000108c 626c6f636b4e7200 6329		.strz	"blockNr"
00001094 b505             6330		.byte	181,5
00001096 33               6331		.byte	51
00001097 01               6332		.byte	1
00001098 00000000         6333		.long	.LDW_49cb768
0000109c 00               6334		.byte	0
0000109d 0153             6335		.byte	1,83
                          6336	
                          6337	.LDW_49832c8:
0000109f 1f               6338		.byte	31
000010a0 00000000         6339		.long	.LDW22
000010a4 00000000         6340		.long	.LDW32
                          6341	
                          6342	.LDW_5c1eba0:
000010a8 06               6343		.byte	6
000010a9 6d6f64756c654865 6344		.strz	"moduleHeaderAddr"
000010b1 6164657241646472
000010b9 00              
000010ba b705             6345		.byte	183,5
000010bc 10               6346		.byte	16
000010bd 01               6347		.byte	1
000010be 00000000         6348		.long	.LDW_5c1e8e0
000010c2 00               6349		.byte	0
000010c3 00               6350		.byte	0
000010c4 0153             6351		.byte	1,83
                          6352	
000010c6 00               6353		.byte	0
                          6354	
000010c7 00               6355		.byte	0
                          6356	
                          6357	.LDW_5c4d480:
000010c8 16               6358		.byte	22
000010c9 4170706c46626c45 6359		.strz	"ApplFblExtProgRequest"
000010d1 787450726f675265
000010d9 717565737400    
000010df d905             6360		.byte	217,5
000010e1 10               6361		.byte	16
000010e2 01               6362		.byte	1
000010e3 00000000         6363		.long	.LDW_5c1e7d8
000010e7 00000000         6364		.long	ApplFblExtProgRequest
000010eb 00000000         6365		.long	__ghs_eofn_ApplFblExtProgRequest
000010ef 0151             6366		.byte	1,81
000010f1 03               6367		.byte	3
000010f2 00               6368		.byte	0
000010f3 00               6369		.byte	0
000010f4 00               6370		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 115
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000010f5 00               6371		.byte	0
000010f6 00               6372		.byte	0
000010f7 00               6373		.byte	0
000010f8 01               6374		.byte	1
000010f9 01               6375		.byte	1
000010fa 00               6376		.byte	0
000010fb 01               6377		.byte	1
                          6378	
                          6379		.section	.debug_frame
                          6380	.LDW_5dd4e30:
00000138 00000014         6381		.long	.LDW_unq_12-.LDW_unq_11
                          6382	.LDW_unq_11:
0000013c 00000000         6383		.long	.LDW_5d355a0
00000140 00000000         6384		.long	ApplFblExtProgRequest
00000144 00000062         6385		.long	__ghs_eofn_ApplFblExtProgRequest-ApplFblExtProgRequest
00000148 01               6386		.byte	1
00000149 00000000         6387		.long	.LDW52
0000014d 00               6388		.byte	0
0000014e 00               6389		.byte	0
0000014f 00               6390		.byte	0
                          6391	.LDW_unq_12:
                          6392		.section	.debug_line
00000934 000502           6393		.byte	0,5,2
00000937 00000000         6394		.long	ApplFblExtProgRequest
0000093b 06               6395		.byte	6
0000093c 03               6396		.byte	3
0000093d de05             6397		.byte	222,5
0000093f 02               6398		.byte	2
00000940 00               6399		.byte	0
00000941 01               6400		.byte	1
00000942 000502           6401		.byte	0,5,2
00000945 00000000         6402		.long	.LDWlin38
00000949 0b               6403		.byte	11
0000094a 0c               6404		.byte	12
0000094b 54               6405		.byte	84
0000094c 1b               6406		.byte	27
0000094d 03               6407		.byte	3
0000094e 16               6408		.byte	22
0000094f 02               6409		.byte	2
00000950 00               6410		.byte	0
00000951 01               6411		.byte	1
00000952 0b               6412		.byte	11
00000953 13               6413		.byte	19
00000954 02               6414		.byte	2
00000955 00               6415		.byte	0
00000956 0c               6416		.byte	12
00000957 02               6417		.byte	2
00000958 02               6418		.byte	2
00000959 000101           6419		.byte	0,1,1
                          6420		.section	.debug_info
                          6421	.LDW_4983238:
000010fc 1f               6422		.byte	31
000010fd 00000000         6423		.long	.LDW42
00001101 00000000         6424		.long	.LDW52
                          6425	
                          6426	.LDW_5c1e570:

                                   Fri Apr 10 08:31:56 2020           Page 116
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001105 06               6427		.byte	6
00001106 70726f6753746174 6428		.strz	"progStatus"
0000110e 757300          
00001111 db05             6429		.byte	219,5
00001113 13               6430		.byte	19
00001114 01               6431		.byte	1
00001115 00000000         6432		.long	.LDW_5c1e7d8
00001119 00               6433		.byte	0
0000111a 00               6434		.byte	0
0000111b 0153             6435		.byte	1,83
                          6436	
0000111d 00               6437		.byte	0
                          6438	
0000111e 00               6439		.byte	0
                          6440	
                          6441	.LDW_5c4d518:
0000111f 16               6442		.byte	22
00001120 4170706c46626c56 6443		.strz	"ApplFblValidateBlock"
00001128 616c696461746542
00001130 6c6f636b00      
00001135 8a06             6444		.byte	138,6
00001137 0c               6445		.byte	12
00001138 01               6446		.byte	1
00001139 00000000         6447		.long	.LDW_49cb7c0
0000113d 00000000         6448		.long	ApplFblValidateBlock
00001141 00000000         6449		.long	__ghs_eofn_ApplFblValidateBlock
00001145 0151             6450		.byte	1,81
00001147 808080800c       6451		.byte	128,128,128,128,12
0000114c 20               6452		.byte	32
0000114d 00               6453		.byte	0
0000114e 28               6454		.byte	40
0000114f 00               6455		.byte	0
00001150 00               6456		.byte	0
00001151 00               6457		.byte	0
00001152 01               6458		.byte	1
00001153 01               6459		.byte	1
00001154 00               6460		.byte	0
00001155 01               6461		.byte	1
                          6462	
                          6463		.section	.debug_frame
                          6464	.LDW_5dd4e70:
00000150 00000014         6465		.long	.LDW_unq_14-.LDW_unq_13
                          6466	.LDW_unq_13:
00000154 00000000         6467		.long	.LDW_5d355a0
00000158 00000000         6468		.long	ApplFblValidateBlock
0000015c 0000004c         6469		.long	__ghs_eofn_ApplFblValidateBlock-ApplFblValidateBlock
00000160 01               6470		.byte	1
00000161 00000000         6471		.long	.LDW72
00000165 00               6472		.byte	0
00000166 00               6473		.byte	0
00000167 00               6474		.byte	0
                          6475	.LDW_unq_14:
                          6476		.section	.debug_line
0000095c 000502           6477		.byte	0,5,2
0000095f 00000000         6478		.long	ApplFblValidateBlock
00000963 06               6479		.byte	6
00000964 03               6480		.byte	3
00000965 8a06             6481		.byte	138,6
00000967 02               6482		.byte	2

                                   Fri Apr 10 08:31:56 2020           Page 117
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000968 00               6483		.byte	0
00000969 01               6484		.byte	1
0000096a 03               6485		.byte	3
0000096b 04               6486		.byte	4
0000096c 02               6487		.byte	2
0000096d 0e               6488		.byte	14
0000096e 01               6489		.byte	1
0000096f 03               6490		.byte	3
00000970 05               6491		.byte	5
00000971 02               6492		.byte	2
00000972 02               6493		.byte	2
00000973 01               6494		.byte	1
00000974 03               6495		.byte	3
00000975 04               6496		.byte	4
00000976 02               6497		.byte	2
00000977 10               6498		.byte	16
00000978 01               6499		.byte	1
00000979 000502           6500		.byte	0,5,2
0000097c 00000000         6501		.long	.LDWlin39
00000980 0b               6502		.byte	11
00000981 0b               6503		.byte	11
00000982 13               6504		.byte	19
00000983 02               6505		.byte	2
00000984 00               6506		.byte	0
00000985 0c               6507		.byte	12
00000986 06               6508		.byte	6
00000987 02               6509		.byte	2
00000988 02               6510		.byte	2
00000989 02               6511		.byte	2
0000098a 0e               6512		.byte	14
0000098b 000101           6513		.byte	0,1,1
                          6514		.section	.debug_info
                          6515	.LDW_5c1e990:
00001156 11               6516		.byte	17
00001157 626c6f636b446573 6517		.strz	"blockDescriptor"
0000115f 63726970746f7200
00001167 8a06             6518		.byte	138,6
00001169 33               6519		.byte	51
0000116a 01               6520		.byte	1
0000116b 00000000         6521		.long	.LDW_49cb870
0000116f 00               6522		.byte	0
00001170 028e             6523		.byte	2,142
00001172 00               6524		.byte	0
                          6525	
                          6526	.LDW_49833e8:
00001173 1f               6527		.byte	31
00001174 00000000         6528		.long	.LDW62
00001178 00000000         6529		.long	.LDW72
                          6530	
                          6531	.LDW_5c1ec50:
0000117c 06               6532		.byte	6
0000117d 726573756c7400   6533		.strz	"result"
00001184 8c06             6534		.byte	140,6
00001186 0f               6535		.byte	15
00001187 01               6536		.byte	1
00001188 00000000         6537		.long	.LDW_49cb7c0
0000118c 00               6538		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 118
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000118d 00               6539		.byte	0
0000118e 016f             6540		.byte	1,111
                          6541	
00001190 00               6542		.byte	0
                          6543	
00001191 00               6544		.byte	0
                          6545	
                          6546	.LDW_5c4d5b0:
00001192 16               6547		.byte	22
00001193 4170706c46626c49 6548		.strz	"ApplFblInvalidateBlock"
0000119b 6e76616c69646174
000011a3 65426c6f636b00  
000011aa a806             6549		.byte	168,6
000011ac 0c               6550		.byte	12
000011ad 01               6551		.byte	1
000011ae 00000000         6552		.long	.LDW_49cb7c0
000011b2 00000000         6553		.long	ApplFblInvalidateBlock
000011b6 00000000         6554		.long	__ghs_eofn_ApplFblInvalidateBlock
000011ba 0151             6555		.byte	1,81
000011bc 8080808008       6556		.byte	128,128,128,128,8
000011c1 24               6557		.byte	36
000011c2 00               6558		.byte	0
000011c3 28               6559		.byte	40
000011c4 00               6560		.byte	0
000011c5 00               6561		.byte	0
000011c6 00               6562		.byte	0
000011c7 01               6563		.byte	1
000011c8 01               6564		.byte	1
000011c9 00               6565		.byte	0
000011ca 01               6566		.byte	1
                          6567	
                          6568		.section	.debug_frame
                          6569	.LDW_5dd41b0:
00000168 00000014         6570		.long	.LDW_unq_16-.LDW_unq_15
                          6571	.LDW_unq_15:
0000016c 00000000         6572		.long	.LDW_5d355a0
00000170 00000000         6573		.long	ApplFblInvalidateBlock
00000174 00000034         6574		.long	__ghs_eofn_ApplFblInvalidateBlock-ApplFblInvalidateBlock
00000178 01               6575		.byte	1
00000179 00000000         6576		.long	.LDW13
0000017d 00               6577		.byte	0
0000017e 00               6578		.byte	0
0000017f 00               6579		.byte	0
                          6580	.LDW_unq_16:
                          6581		.section	.debug_line
0000098e 000502           6582		.byte	0,5,2
00000991 00000000         6583		.long	ApplFblInvalidateBlock
00000995 06               6584		.byte	6
00000996 03               6585		.byte	3
00000997 a806             6586		.byte	168,6
00000999 02               6587		.byte	2
0000099a 00               6588		.byte	0
0000099b 01               6589		.byte	1
0000099c 3d               6590		.byte	61
0000099d 000502           6591		.byte	0,5,2
000009a0 00000000         6592		.long	.LDWlin42
000009a4 0d               6593		.byte	13
000009a5 000502           6594		.byte	0,5,2

                                   Fri Apr 10 08:31:56 2020           Page 119
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000009a8 00000000         6595		.long	.LDWlin43
000009ac 0b               6596		.byte	11
000009ad 0b               6597		.byte	11
000009ae 000502           6598		.byte	0,5,2
000009b1 00000000         6599		.long	.LDWlin44
000009b5 0b               6600		.byte	11
000009b6 02               6601		.byte	2
000009b7 00               6602		.byte	0
000009b8 0c               6603		.byte	12
000009b9 02               6604		.byte	2
000009ba 0c               6605		.byte	12
000009bb 000101           6606		.byte	0,1,1
                          6607		.section	.debug_info
                          6608	.LDW_5c1e620:
000011cb 11               6609		.byte	17
000011cc 626c6f636b446573 6610		.strz	"blockDescriptor"
000011d4 63726970746f7200
000011dc a806             6611		.byte	168,6
000011de 35               6612		.byte	53
000011df 01               6613		.byte	1
000011e0 00000000         6614		.long	.LDW_49cb870
000011e4 00               6615		.byte	0
000011e5 028f             6616		.byte	2,143
000011e7 00               6617		.byte	0
                          6618	
                          6619	.LDW_4983478:
000011e8 1f               6620		.byte	31
000011e9 00000000         6621		.long	.LDW03
000011ed 00000000         6622		.long	.LDW13
                          6623	
                          6624	.LDW_5c1ea40:
000011f1 06               6625		.byte	6
000011f2 726573756c7400   6626		.strz	"result"
000011f9 aa06             6627		.byte	170,6
000011fb 0f               6628		.byte	15
000011fc 01               6629		.byte	1
000011fd 00000000         6630		.long	.LDW_49cb7c0
00001201 00               6631		.byte	0
00001202 00               6632		.byte	0
00001203 0153             6633		.byte	1,83
                          6634	
00001205 00               6635		.byte	0
                          6636	
00001206 00               6637		.byte	0
                          6638	
                          6639	.LDW_5c4d648:
00001207 16               6640		.byte	22
00001208 4170706c46626c49 6641		.strz	"ApplFblIsValidApp"
00001210 7356616c69644170
00001218 7000            
0000121a be06             6642		.byte	190,6
0000121c 0d               6643		.byte	13
0000121d 01               6644		.byte	1
0000121e 00000000         6645		.long	.LDW_5c1e200
00001222 00000000         6646		.long	ApplFblIsValidApp
00001226 00000000         6647		.long	__ghs_eofn_ApplFblIsValidApp
0000122a 0151             6648		.byte	1,81
0000122c 808080800c       6649		.byte	128,128,128,128,12
00001231 20               6650		.byte	32

                                   Fri Apr 10 08:31:56 2020           Page 120
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001232 00               6651		.byte	0
00001233 28               6652		.byte	40
00001234 00               6653		.byte	0
00001235 00               6654		.byte	0
00001236 00               6655		.byte	0
00001237 01               6656		.byte	1
00001238 01               6657		.byte	1
00001239 00               6658		.byte	0
0000123a 01               6659		.byte	1
                          6660	
                          6661		.section	.debug_frame
                          6662	.LDW_5dd4270:
00000180 00000014         6663		.long	.LDW_unq_18-.LDW_unq_17
                          6664	.LDW_unq_17:
00000184 00000000         6665		.long	.LDW_5d355a0
00000188 00000000         6666		.long	ApplFblIsValidApp
0000018c 0000006a         6667		.long	__ghs_eofn_ApplFblIsValidApp-ApplFblIsValidApp
00000190 01               6668		.byte	1
00000191 00000000         6669		.long	.LDW33
00000195 00               6670		.byte	0
00000196 00               6671		.byte	0
00000197 00               6672		.byte	0
                          6673	.LDW_unq_18:
                          6674		.section	.debug_line
000009be 000502           6675		.byte	0,5,2
000009c1 00000000         6676		.long	ApplFblIsValidApp
000009c5 06               6677		.byte	6
000009c6 03               6678		.byte	3
000009c7 be06             6679		.byte	190,6
000009c9 02               6680		.byte	2
000009ca 00               6681		.byte	0
000009cb 01               6682		.byte	1
000009cc 03               6683		.byte	3
000009cd 0a               6684		.byte	10
000009ce 02               6685		.byte	2
000009cf 0c               6686		.byte	12
000009d0 01               6687		.byte	1
000009d1 03               6688		.byte	3
000009d2 05               6689		.byte	5
000009d3 02               6690		.byte	2
000009d4 02               6691		.byte	2
000009d5 01               6692		.byte	1
000009d6 13               6693		.byte	19
000009d7 0c               6694		.byte	12
000009d8 13               6695		.byte	19
000009d9 73               6696		.byte	115
000009da 000502           6697		.byte	0,5,2
000009dd 00000000         6698		.long	.LDWlin45
000009e1 0b               6699		.byte	11
000009e2 0b               6700		.byte	11
000009e3 13               6701		.byte	19
000009e4 02               6702		.byte	2
000009e5 00               6703		.byte	0
000009e6 03               6704		.byte	3
000009e7 79               6705		.byte	121
000009e8 02               6706		.byte	2

                                   Fri Apr 10 08:31:56 2020           Page 121
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000009e9 00               6707		.byte	0
000009ea 01               6708		.byte	1
000009eb 000502           6709		.byte	0,5,2
000009ee 00000000         6710		.long	.LDWlin46
000009f2 03               6711		.byte	3
000009f3 08               6712		.byte	8
000009f4 02               6713		.byte	2
000009f5 00               6714		.byte	0
000009f6 01               6715		.byte	1
000009f7 03               6716		.byte	3
000009f8 0d               6717		.byte	13
000009f9 02               6718		.byte	2
000009fa 00               6719		.byte	0
000009fb 01               6720		.byte	1
000009fc 000502           6721		.byte	0,5,2
000009ff 00000000         6722		.long	.LDWlin47
00000a03 0b               6723		.byte	11
00000a04 03               6724		.byte	3
00000a05 05               6725		.byte	5
00000a06 02               6726		.byte	2
00000a07 00               6727		.byte	0
00000a08 01               6728		.byte	1
00000a09 02               6729		.byte	2
00000a0a 00               6730		.byte	0
00000a0b 0d               6731		.byte	13
00000a0c 06               6732		.byte	6
00000a0d 02               6733		.byte	2
00000a0e 02               6734		.byte	2
00000a0f 02               6735		.byte	2
00000a10 0e               6736		.byte	14
00000a11 000101           6737		.byte	0,1,1
                          6738		.section	.debug_info
                          6739	.LDW_49834d8:
0000123b 1f               6740		.byte	31
0000123c 00000000         6741		.long	.LDW23
00001240 00000000         6742		.long	.LDW33
                          6743	
                          6744	.LDW_5c1e1a8:
00001244 06               6745		.byte	6
00001245 6170706c69636174 6746		.strz	"applicationStatus"
0000124d 696f6e5374617475
00001255 7300            
00001257 c006             6747		.byte	192,6
00001259 10               6748		.byte	16
0000125a 01               6749		.byte	1
0000125b 00000000         6750		.long	.LDW_5c1e200
0000125f 00               6751		.byte	0
00001260 00               6752		.byte	0
00001261 016f             6753		.byte	1,111
                          6754	
                          6755	.LDW_5c1e258:
00001263 06               6756		.byte	6
00001264 63757272656e7442 6757		.strz	"currentBlockNr"
0000126c 6c6f636b4e7200  
00001273 c206             6758		.byte	194,6
00001275 0b               6759		.byte	11
00001276 01               6760		.byte	1
00001277 00000000         6761		.long	.LDW_49cd9d8
0000127b 00               6762		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 122
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000127c 00               6763		.byte	0
0000127d 016e             6764		.byte	1,110
                          6765	
                          6766	.LDW_5c1e3b8:
0000127f 06               6767		.byte	6
00001280 74656d70426c6f63 6768		.strz	"tempBlockDescriptor"
00001288 6b44657363726970
00001290 746f7200        
00001294 c306             6769		.byte	195,6
00001296 15               6770		.byte	21
00001297 01               6771		.byte	1
00001298 00000000         6772		.long	.LDW_49cb870
0000129c 00               6773		.byte	0
0000129d 00               6774		.byte	0
0000129e 0271             6775		.byte	2,113
000012a0 08               6776		.byte	8
                          6777	
000012a1 00               6778		.byte	0
                          6779	
000012a2 00               6780		.byte	0
                          6781	
                          6782	.LDW_5c4d6e0:
000012a3 15               6783		.byte	21
000012a4 4170706c46626c45 6784		.strz	"ApplFblErrorNotification"
000012ac 72726f724e6f7469
000012b4 6669636174696f6e
000012bc 00              
000012bd f806             6785		.byte	248,6
000012bf 06               6786		.byte	6
000012c0 01               6787		.byte	1
000012c1 00000000         6788		.long	ApplFblErrorNotification
000012c5 00000000         6789		.long	__ghs_eofn_ApplFblErrorNotification
000012c9 0151             6790		.byte	1,81
000012cb 03               6791		.byte	3
000012cc 00               6792		.byte	0
000012cd 00               6793		.byte	0
000012ce 00               6794		.byte	0
000012cf 00               6795		.byte	0
000012d0 00               6796		.byte	0
000012d1 00               6797		.byte	0
000012d2 01               6798		.byte	1
000012d3 01               6799		.byte	1
000012d4 00               6800		.byte	0
000012d5 01               6801		.byte	1
                          6802	
                          6803		.section	.debug_abbrev
0000015b 15               6804		.byte	21
0000015c 2e               6805		.byte	46
0000015d 01               6806		.byte	1
0000015e 0308             6807		.byte	3,8
00000160 3b0f             6808		.byte	59,15
00000162 390f             6809		.byte	57,15
00000164 3a0f             6810		.byte	58,15
00000166 1101             6811		.byte	17,1
00000168 1201             6812		.byte	18,1
0000016a 400a             6813		.byte	64,10
0000016c 8341             6814		.byte	131,65
0000016e 0f               6815		.byte	15
0000016f 8741             6816		.byte	135,65
00000171 0d               6817		.byte	13
00000172 8541             6818		.byte	133,65

                                   Fri Apr 10 08:31:56 2020           Page 123
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000174 0f               6819		.byte	15
00000175 8641             6820		.byte	134,65
00000177 0d               6821		.byte	13
00000178 9241             6822		.byte	146,65
0000017a 0f               6823		.byte	15
0000017b 3c0c             6824		.byte	60,12
0000017d 200b             6825		.byte	32,11
0000017f 3f0c             6826		.byte	63,12
00000181 320b             6827		.byte	50,11
00000183 4c0b             6828		.byte	76,11
00000185 270c             6829		.byte	39,12
00000187 0000             6830		.byte	0,0
                          6831	
                          6832		.section	.debug_frame
                          6833	.LDW_5dd43f0:
00000198 00000014         6834		.long	.LDW_unq_1a-.LDW_unq_19
                          6835	.LDW_unq_19:
0000019c 00000000         6836		.long	.LDW_5d355a0
000001a0 00000000         6837		.long	ApplFblErrorNotification
000001a4 00000002         6838		.long	__ghs_eofn_ApplFblErrorNotification-ApplFblErrorNotification
000001a8 01               6839		.byte	1
000001a9 00000000         6840		.long	.LDW53
000001ad 00               6841		.byte	0
000001ae 00               6842		.byte	0
000001af 00               6843		.byte	0
                          6844	.LDW_unq_1a:
                          6845		.section	.debug_line
00000a14 000502           6846		.byte	0,5,2
00000a17 00000000         6847		.long	ApplFblErrorNotification
00000a1b 06               6848		.byte	6
00000a1c 03               6849		.byte	3
00000a1d fe06             6850		.byte	254,6
00000a1f 02               6851		.byte	2
00000a20 00               6852		.byte	0
00000a21 01               6853		.byte	1
00000a22 02               6854		.byte	2
00000a23 02               6855		.byte	2
00000a24 000101           6856		.byte	0,1,1
                          6857		.section	.debug_info
                          6858	.LDW_5c1e468:
000012d6 11               6859		.byte	17
000012d7 6572726f72547970 6860		.strz	"errorType"
000012df 6500            
000012e1 f806             6861		.byte	248,6
000012e3 2e               6862		.byte	46
000012e4 01               6863		.byte	1
000012e5 00000000         6864		.long	.LDW_5c1e5c8
000012e9 00               6865		.byte	0
000012ea 0153             6866		.byte	1,83
                          6867	
                          6868	.LDW_5c1e4c0:
000012ec 11               6869		.byte	17
000012ed 6572726f72436f64 6870		.strz	"errorCode"
000012f5 6500            
000012f7 f806             6871		.byte	248,6
000012f9 47               6872		.byte	71
000012fa 01               6873		.byte	1
000012fb 00000000         6874		.long	.LDW_5c1e410

                                   Fri Apr 10 08:31:56 2020           Page 124
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000012ff 00               6875		.byte	0
00001300 0154             6876		.byte	1,84
                          6877	
                          6878	.LDW_4983568:
00001302 1f               6879		.byte	31
00001303 00000000         6880		.long	.LDW43
00001307 00000000         6881		.long	.LDW53
                          6882	
0000130b 00               6883		.byte	0
                          6884	
0000130c 00               6885		.byte	0
                          6886	
                          6887	.LDW_5c4d778:
0000130d 16               6888		.byte	22
0000130e 4170706c46626c49 6889		.strz	"ApplFblIncProgCounts"
00001316 6e6350726f67436f
0000131e 756e747300      
00001323 8807             6890		.byte	136,7
00001325 0c               6891		.byte	12
00001326 01               6892		.byte	1
00001327 00000000         6893		.long	.LDW_49cb7c0
0000132b 00000000         6894		.long	ApplFblIncProgCounts
0000132f 00000000         6895		.long	__ghs_eofn_ApplFblIncProgCounts
00001333 0151             6896		.byte	1,81
00001335 808080800c       6897		.byte	128,128,128,128,12
0000133a 10               6898		.byte	16
0000133b 00               6899		.byte	0
0000133c 18               6900		.byte	24
0000133d 00               6901		.byte	0
0000133e 00               6902		.byte	0
0000133f 00               6903		.byte	0
00001340 01               6904		.byte	1
00001341 01               6905		.byte	1
00001342 00               6906		.byte	0
00001343 01               6907		.byte	1
                          6908	
                          6909		.section	.debug_frame
                          6910	.LDW_5dd47b0:
000001b0 00000014         6911		.long	.LDW_unq_1c-.LDW_unq_1b
                          6912	.LDW_unq_1b:
000001b4 00000000         6913		.long	.LDW_5d355a0
000001b8 00000000         6914		.long	ApplFblIncProgCounts
000001bc 00000078         6915		.long	__ghs_eofn_ApplFblIncProgCounts-ApplFblIncProgCounts
000001c0 01               6916		.byte	1
000001c1 00000000         6917		.long	.LDW73
000001c5 00               6918		.byte	0
000001c6 00               6919		.byte	0
000001c7 00               6920		.byte	0
                          6921	.LDW_unq_1c:
                          6922		.section	.debug_line
00000a27 000502           6923		.byte	0,5,2
00000a2a 00000000         6924		.long	ApplFblIncProgCounts
00000a2e 06               6925		.byte	6
00000a2f 03               6926		.byte	3
00000a30 8807             6927		.byte	136,7
00000a32 02               6928		.byte	2
00000a33 00               6929		.byte	0
00000a34 01               6930		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 125
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000a35 03               6931		.byte	3
00000a36 05               6932		.byte	5
00000a37 02               6933		.byte	2
00000a38 0c               6934		.byte	12
00000a39 01               6935		.byte	1
00000a3a 83               6936		.byte	131
00000a3b 34               6937		.byte	52
00000a3c 000502           6938		.byte	0,5,2
00000a3f 00000000         6939		.long	.LDWlin48
00000a43 0b               6940		.byte	11
00000a44 0c               6941		.byte	12
00000a45 23               6942		.byte	35
00000a46 1b               6943		.byte	27
00000a47 1c               6944		.byte	28
00000a48 33               6945		.byte	51
00000a49 73               6946		.byte	115
00000a4a 02               6947		.byte	2
00000a4b 00               6948		.byte	0
00000a4c 0c               6949		.byte	12
00000a4d 06               6950		.byte	6
00000a4e 02               6951		.byte	2
00000a4f 02               6952		.byte	2
00000a50 02               6953		.byte	2
00000a51 0c               6954		.byte	12
00000a52 000101           6955		.byte	0,1,1
                          6956		.section	.debug_info
                          6957	.LDW_5c1ed58:
00001344 11               6958		.byte	17
00001345 626c6f636b446573 6959		.strz	"blockDescriptor"
0000134d 63726970746f7200
00001355 8807             6960		.byte	136,7
00001357 33               6961		.byte	51
00001358 01               6962		.byte	1
00001359 00000000         6963		.long	.LDW_49cb870
0000135d 00               6964		.byte	0
0000135e 0273             6965		.byte	2,115
00001360 00               6966		.byte	0
                          6967	
                          6968	.LDW_49836e8:
00001361 1f               6969		.byte	31
00001362 00000000         6970		.long	.LDW63
00001366 00000000         6971		.long	.LDW73
                          6972	
                          6973	.LDW_5c1ed00:
0000136a 06               6974		.byte	6
0000136b 70726f67436f756e 6975		.strz	"progCounts"
00001373 747300          
00001376 8a07             6976		.byte	138,7
00001378 1a               6977		.byte	26
00001379 01               6978		.byte	1
0000137a 00000000         6979		.long	.LDW_5c1edb0
0000137e 00               6980		.byte	0
0000137f 00               6981		.byte	0
00001380 0154             6982		.byte	1,84
                          6983	
                          6984	.LDW_5c1ef68:
00001382 06               6985		.byte	6
00001383 6e76427566666572 6986		.strz	"nvBuffer"
0000138b 00              

                                   Fri Apr 10 08:31:56 2020           Page 126
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000138c 8b07             6987		.byte	139,7
0000138e 0b               6988		.byte	11
0000138f 01               6989		.byte	1
00001390 00000000         6990		.long	.LDW_5c4d810
00001394 00               6991		.byte	0
00001395 00               6992		.byte	0
00001396 0271             6993		.byte	2,113
00001398 08               6994		.byte	8
                          6995	
                          6996	.LDW_5c1eeb8:
00001399 06               6997		.byte	6
0000139a 73746174757300   6998		.strz	"status"
000013a1 8c07             6999		.byte	140,7
000013a3 0f               7000		.byte	15
000013a4 01               7001		.byte	1
000013a5 00000000         7002		.long	.LDW_49cb7c0
000013a9 00               7003		.byte	0
000013aa 00               7004		.byte	0
000013ab 016f             7005		.byte	1,111
                          7006	
000013ad 00               7007		.byte	0
                          7008	
000013ae 00               7009		.byte	0
                          7010	
                          7011	.LDW_5c4d898:
000013af 16               7012		.byte	22
000013b0 4170706c46626c47 7013		.strz	"ApplFblGetProgCounts"
000013b8 657450726f67436f
000013c0 756e747300      
000013c5 a707             7014		.byte	167,7
000013c7 0c               7015		.byte	12
000013c8 01               7016		.byte	1
000013c9 00000000         7017		.long	.LDW_49cb7c0
000013cd 00000000         7018		.long	ApplFblGetProgCounts
000013d1 00000000         7019		.long	__ghs_eofn_ApplFblGetProgCounts
000013d5 0151             7020		.byte	1,81
000013d7 808080800c       7021		.byte	128,128,128,128,12
000013dc 10               7022		.byte	16
000013dd 00               7023		.byte	0
000013de 18               7024		.byte	24
000013df 00               7025		.byte	0
000013e0 00               7026		.byte	0
000013e1 00               7027		.byte	0
000013e2 01               7028		.byte	1
000013e3 01               7029		.byte	1
000013e4 00               7030		.byte	0
000013e5 01               7031		.byte	1
                          7032	
                          7033		.section	.debug_frame
                          7034	.LDW_5dd43b0:
000001c8 00000014         7035		.long	.LDW_unq_1e-.LDW_unq_1d
                          7036	.LDW_unq_1d:
000001cc 00000000         7037		.long	.LDW_5d355a0
000001d0 00000000         7038		.long	ApplFblGetProgCounts
000001d4 0000004c         7039		.long	__ghs_eofn_ApplFblGetProgCounts-ApplFblGetProgCounts
000001d8 01               7040		.byte	1
000001d9 00000000         7041		.long	.LDW93
000001dd 00               7042		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 127
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000001de 00               7043		.byte	0
000001df 00               7044		.byte	0
                          7045	.LDW_unq_1e:
                          7046		.section	.debug_line
00000a55 000502           7047		.byte	0,5,2
00000a58 00000000         7048		.long	ApplFblGetProgCounts
00000a5c 06               7049		.byte	6
00000a5d 03               7050		.byte	3
00000a5e a707             7051		.byte	167,7
00000a60 02               7052		.byte	2
00000a61 00               7053		.byte	0
00000a62 01               7054		.byte	1
00000a63 03               7055		.byte	3
00000a64 05               7056		.byte	5
00000a65 02               7057		.byte	2
00000a66 0e               7058		.byte	14
00000a67 01               7059		.byte	1
00000a68 83               7060		.byte	131
00000a69 33               7061		.byte	51
00000a6a 24               7062		.byte	36
00000a6b 14               7063		.byte	20
00000a6c 06               7064		.byte	6
00000a6d 02               7065		.byte	2
00000a6e 02               7066		.byte	2
00000a6f 02               7067		.byte	2
00000a70 0c               7068		.byte	12
00000a71 000101           7069		.byte	0,1,1
                          7070		.section	.debug_info
                          7071	.LDW_5c1f070:
000013e6 11               7072		.byte	17
000013e7 626c6f636b446573 7073		.strz	"blockDescriptor"
000013ef 63726970746f7200
000013f7 a707             7074		.byte	167,7
000013f9 33               7075		.byte	51
000013fa 01               7076		.byte	1
000013fb 00000000         7077		.long	.LDW_49cb870
000013ff 00               7078		.byte	0
00001400 0273             7079		.byte	2,115
00001402 00               7080		.byte	0
                          7081	
                          7082	.LDW_5c1ef10:
00001403 11               7083		.byte	17
00001404 70726f67436f756e 7084		.strz	"progCounts"
0000140c 747300          
0000140f a707             7085		.byte	167,7
00001411 6c               7086		.byte	108
00001412 01               7087		.byte	1
00001413 00000000         7088		.long	.LDW_498c500
00001417 00               7089		.byte	0
00001418 016e             7090		.byte	1,110
                          7091	
                          7092	.LDW_4983868:
0000141a 1f               7093		.byte	31
0000141b 00000000         7094		.long	.LDW83
0000141f 00000000         7095		.long	.LDW93
                          7096	
                          7097	.LDW_5c1ee60:
00001423 07               7098		.byte	7

                                   Fri Apr 10 08:31:56 2020           Page 128
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001424 73746174757300   7099		.strz	"status"
0000142b a907             7100		.byte	169,7
0000142d 0f               7101		.byte	15
0000142e 01               7102		.byte	1
0000142f 00000000         7103		.long	.LDW_49cb7c0
00001433 00               7104		.byte	0
00001434 00               7105		.byte	0
                          7106	
                          7107	.LDW_5c1efc0:
00001435 06               7108		.byte	6
00001436 6e76427566666572 7109		.strz	"nvBuffer"
0000143e 00              
0000143f aa07             7110		.byte	170,7
00001441 0b               7111		.byte	11
00001442 01               7112		.byte	1
00001443 00000000         7113		.long	.LDW_5c4d930
00001447 00               7114		.byte	0
00001448 00               7115		.byte	0
00001449 0271             7116		.byte	2,113
0000144b 08               7117		.byte	8
                          7118	
                          7119	.LDW_5c1f0c8:
0000144c 06               7120		.byte	6
0000144d 74656d70436f756e 7121		.strz	"tempCount"
00001455 7400            
00001457 ab07             7122		.byte	171,7
00001459 1a               7123		.byte	26
0000145a 01               7124		.byte	1
0000145b 00000000         7125		.long	.LDW_5c1edb0
0000145f 00               7126		.byte	0
00001460 00               7127		.byte	0
00001461 0153             7128		.byte	1,83
                          7129	
00001463 00               7130		.byte	0
                          7131	
00001464 00               7132		.byte	0
                          7133	
                          7134	.LDW_5c4d9b8:
00001465 16               7135		.byte	22
00001466 4170706c46626c49 7136		.strz	"ApplFblIncProgAttempts"
0000146e 6e6350726f674174
00001476 74656d70747300  
0000147d bd07             7137		.byte	189,7
0000147f 0c               7138		.byte	12
00001480 01               7139		.byte	1
00001481 00000000         7140		.long	.LDW_49cb7c0
00001485 00000000         7141		.long	ApplFblIncProgAttempts
00001489 00000000         7142		.long	__ghs_eofn_ApplFblIncProgAttempts
0000148d 0151             7143		.byte	1,81
0000148f 808080800c       7144		.byte	128,128,128,128,12
00001494 10               7145		.byte	16
00001495 00               7146		.byte	0
00001496 18               7147		.byte	24
00001497 00               7148		.byte	0
00001498 00               7149		.byte	0
00001499 00               7150		.byte	0
0000149a 01               7151		.byte	1
0000149b 01               7152		.byte	1
0000149c 00               7153		.byte	0
0000149d 01               7154		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 129
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
                          7155	
                          7156		.section	.debug_frame
                          7157	.LDW_5dd4830:
000001e0 00000014         7158		.long	.LDW_unq_20-.LDW_unq_1f
                          7159	.LDW_unq_1f:
000001e4 00000000         7160		.long	.LDW_5d355a0
000001e8 00000000         7161		.long	ApplFblIncProgAttempts
000001ec 00000078         7162		.long	__ghs_eofn_ApplFblIncProgAttempts-ApplFblIncProgAttempts
000001f0 01               7163		.byte	1
000001f1 00000000         7164		.long	.LDW14
000001f5 00               7165		.byte	0
000001f6 00               7166		.byte	0
000001f7 00               7167		.byte	0
                          7168	.LDW_unq_20:
                          7169		.section	.debug_line
00000a74 000502           7170		.byte	0,5,2
00000a77 00000000         7171		.long	ApplFblIncProgAttempts
00000a7b 06               7172		.byte	6
00000a7c 03               7173		.byte	3
00000a7d bd07             7174		.byte	189,7
00000a7f 02               7175		.byte	2
00000a80 00               7176		.byte	0
00000a81 01               7177		.byte	1
00000a82 03               7178		.byte	3
00000a83 05               7179		.byte	5
00000a84 02               7180		.byte	2
00000a85 0c               7181		.byte	12
00000a86 01               7182		.byte	1
00000a87 83               7183		.byte	131
00000a88 34               7184		.byte	52
00000a89 000502           7185		.byte	0,5,2
00000a8c 00000000         7186		.long	.LDWlin49
00000a90 0b               7187		.byte	11
00000a91 0c               7188		.byte	12
00000a92 23               7189		.byte	35
00000a93 1b               7190		.byte	27
00000a94 1c               7191		.byte	28
00000a95 33               7192		.byte	51
00000a96 73               7193		.byte	115
00000a97 02               7194		.byte	2
00000a98 00               7195		.byte	0
00000a99 0c               7196		.byte	12
00000a9a 06               7197		.byte	6
00000a9b 02               7198		.byte	2
00000a9c 02               7199		.byte	2
00000a9d 02               7200		.byte	2
00000a9e 0c               7201		.byte	12
00000a9f 000101           7202		.byte	0,1,1
                          7203		.section	.debug_info
                          7204	.LDW_5c1f120:
0000149e 11               7205		.byte	17
0000149f 626c6f636b446573 7206		.strz	"blockDescriptor"
000014a7 63726970746f7200
000014af bd07             7207		.byte	189,7
000014b1 35               7208		.byte	53
000014b2 01               7209		.byte	1
000014b3 00000000         7210		.long	.LDW_49cb870

                                   Fri Apr 10 08:31:56 2020           Page 130
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000014b7 00               7211		.byte	0
000014b8 0273             7212		.byte	2,115
000014ba 00               7213		.byte	0
                          7214	
                          7215	.LDW_4983778:
000014bb 1f               7216		.byte	31
000014bc 00000000         7217		.long	.LDW04
000014c0 00000000         7218		.long	.LDW14
                          7219	
                          7220	.LDW_5c1f018:
000014c4 06               7221		.byte	6
000014c5 70726f6741747465 7222		.strz	"progAttempts"
000014cd 6d70747300      
000014d2 bf07             7223		.byte	191,7
000014d4 1a               7224		.byte	26
000014d5 01               7225		.byte	1
000014d6 00000000         7226		.long	.LDW_5c1edb0
000014da 00               7227		.byte	0
000014db 00               7228		.byte	0
000014dc 0154             7229		.byte	1,84
                          7230	
                          7231	.LDW_5c1ee08:
000014de 06               7232		.byte	6
000014df 6e76427566666572 7233		.strz	"nvBuffer"
000014e7 00              
000014e8 c007             7234		.byte	192,7
000014ea 0b               7235		.byte	11
000014eb 01               7236		.byte	1
000014ec 00000000         7237		.long	.LDW_5c4da50
000014f0 00               7238		.byte	0
000014f1 00               7239		.byte	0
000014f2 0271             7240		.byte	2,113
000014f4 08               7241		.byte	8
                          7242	
                          7243	.LDW_5c1eca8:
000014f5 06               7244		.byte	6
000014f6 73746174757300   7245		.strz	"status"
000014fd c107             7246		.byte	193,7
000014ff 0f               7247		.byte	15
00001500 01               7248		.byte	1
00001501 00000000         7249		.long	.LDW_49cb7c0
00001505 00               7250		.byte	0
00001506 00               7251		.byte	0
00001507 016f             7252		.byte	1,111
                          7253	
00001509 00               7254		.byte	0
                          7255	
0000150a 00               7256		.byte	0
                          7257	
                          7258	.LDW_5c4dad8:
0000150b 16               7259		.byte	22
0000150c 4170706c46626c47 7260		.strz	"ApplFblGetProgAttempts"
00001514 657450726f674174
0000151c 74656d70747300  
00001523 dc07             7261		.byte	220,7
00001525 0c               7262		.byte	12
00001526 01               7263		.byte	1
00001527 00000000         7264		.long	.LDW_49cb7c0
0000152b 00000000         7265		.long	ApplFblGetProgAttempts
0000152f 00000000         7266		.long	__ghs_eofn_ApplFblGetProgAttempts

                                   Fri Apr 10 08:31:56 2020           Page 131
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001533 0151             7267		.byte	1,81
00001535 808080800c       7268		.byte	128,128,128,128,12
0000153a 10               7269		.byte	16
0000153b 00               7270		.byte	0
0000153c 18               7271		.byte	24
0000153d 00               7272		.byte	0
0000153e 00               7273		.byte	0
0000153f 00               7274		.byte	0
00001540 01               7275		.byte	1
00001541 01               7276		.byte	1
00001542 00               7277		.byte	0
00001543 01               7278		.byte	1
                          7279	
                          7280		.section	.debug_frame
                          7281	.LDW_5dd48f0:
000001f8 00000014         7282		.long	.LDW_unq_22-.LDW_unq_21
                          7283	.LDW_unq_21:
000001fc 00000000         7284		.long	.LDW_5d355a0
00000200 00000000         7285		.long	ApplFblGetProgAttempts
00000204 0000004c         7286		.long	__ghs_eofn_ApplFblGetProgAttempts-ApplFblGetProgAttempts
00000208 01               7287		.byte	1
00000209 00000000         7288		.long	.LDW34
0000020d 00               7289		.byte	0
0000020e 00               7290		.byte	0
0000020f 00               7291		.byte	0
                          7292	.LDW_unq_22:
                          7293		.section	.debug_line
00000aa2 000502           7294		.byte	0,5,2
00000aa5 00000000         7295		.long	ApplFblGetProgAttempts
00000aa9 06               7296		.byte	6
00000aaa 03               7297		.byte	3
00000aab dc07             7298		.byte	220,7
00000aad 02               7299		.byte	2
00000aae 00               7300		.byte	0
00000aaf 01               7301		.byte	1
00000ab0 03               7302		.byte	3
00000ab1 05               7303		.byte	5
00000ab2 02               7304		.byte	2
00000ab3 0e               7305		.byte	14
00000ab4 01               7306		.byte	1
00000ab5 83               7307		.byte	131
00000ab6 33               7308		.byte	51
00000ab7 23               7309		.byte	35
00000ab8 14               7310		.byte	20
00000ab9 06               7311		.byte	6
00000aba 02               7312		.byte	2
00000abb 02               7313		.byte	2
00000abc 02               7314		.byte	2
00000abd 0c               7315		.byte	12
00000abe 000101           7316		.byte	0,1,1
                          7317		.section	.debug_info
                          7318	.LDW_5d3d3a8:
00001544 11               7319		.byte	17
00001545 626c6f636b446573 7320		.strz	"blockDescriptor"
0000154d 63726970746f7200
00001555 dc07             7321		.byte	220,7
00001557 35               7322		.byte	53

                                   Fri Apr 10 08:31:56 2020           Page 132
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001558 01               7323		.byte	1
00001559 00000000         7324		.long	.LDW_49cb870
0000155d 00               7325		.byte	0
0000155e 0273             7326		.byte	2,115
00001560 00               7327		.byte	0
                          7328	
                          7329	.LDW_5d3d458:
00001561 11               7330		.byte	17
00001562 70726f6741747465 7331		.strz	"progAttempts"
0000156a 6d70747300      
0000156f dc07             7332		.byte	220,7
00001571 6e               7333		.byte	110
00001572 01               7334		.byte	1
00001573 00000000         7335		.long	.LDW_498c500
00001577 00               7336		.byte	0
00001578 016e             7337		.byte	1,110
                          7338	
                          7339	.LDW_5d3e8a8:
0000157a 1f               7340		.byte	31
0000157b 00000000         7341		.long	.LDW24
0000157f 00000000         7342		.long	.LDW34
                          7343	
                          7344	.LDW_5d3da88:
00001583 07               7345		.byte	7
00001584 73746174757300   7346		.strz	"status"
0000158b de07             7347		.byte	222,7
0000158d 0f               7348		.byte	15
0000158e 01               7349		.byte	1
0000158f 00000000         7350		.long	.LDW_49cb7c0
00001593 00               7351		.byte	0
00001594 00               7352		.byte	0
                          7353	
                          7354	.LDW_5d3dc98:
00001595 06               7355		.byte	6
00001596 6e76427566666572 7356		.strz	"nvBuffer"
0000159e 00              
0000159f df07             7357		.byte	223,7
000015a1 0b               7358		.byte	11
000015a2 01               7359		.byte	1
000015a3 00000000         7360		.long	.LDW_5d3ea80
000015a7 00               7361		.byte	0
000015a8 00               7362		.byte	0
000015a9 0271             7363		.byte	2,113
000015ab 08               7364		.byte	8
                          7365	
                          7366	.LDW_5d3d2a0:
000015ac 06               7367		.byte	6
000015ad 74656d70436f756e 7368		.strz	"tempCount"
000015b5 7400            
000015b7 e007             7369		.byte	224,7
000015b9 1a               7370		.byte	26
000015ba 01               7371		.byte	1
000015bb 00000000         7372		.long	.LDW_5c1edb0
000015bf 00               7373		.byte	0
000015c0 00               7374		.byte	0
000015c1 0153             7375		.byte	1,83
                          7376	
000015c3 00               7377		.byte	0
                          7378	

                                   Fri Apr 10 08:31:56 2020           Page 133
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000015c4 00               7379		.byte	0
                          7380	
                          7381	.LDW_5d3eb08:
000015c5 16               7382		.byte	22
000015c6 4170706c46626c57 7383		.strz	"ApplFblWriteCRCTotal"
000015ce 7269746543524354
000015d6 6f74616c00      
000015db f607             7384		.byte	246,7
000015dd 0c               7385		.byte	12
000015de 01               7386		.byte	1
000015df 00000000         7387		.long	.LDW_49cb7c0
000015e3 00000000         7388		.long	ApplFblWriteCRCTotal
000015e7 00000000         7389		.long	__ghs_eofn_ApplFblWriteCRCTotal
000015eb 0151             7390		.byte	1,81
000015ed 808080e00f       7391		.byte	128,128,128,224,15
000015f2 10               7392		.byte	16
000015f3 00               7393		.byte	0
000015f4 28               7394		.byte	40
000015f5 00               7395		.byte	0
000015f6 00               7396		.byte	0
000015f7 00               7397		.byte	0
000015f8 01               7398		.byte	1
000015f9 01               7399		.byte	1
000015fa 00               7400		.byte	0
000015fb 01               7401		.byte	1
                          7402	
                          7403		.section	.debug_frame
                          7404	.LDW_5dd4670:
00000210 00000014         7405		.long	.LDW_unq_24-.LDW_unq_23
                          7406	.LDW_unq_23:
00000214 00000000         7407		.long	.LDW_5d355a0
00000218 00000000         7408		.long	ApplFblWriteCRCTotal
0000021c 0000009e         7409		.long	__ghs_eofn_ApplFblWriteCRCTotal-ApplFblWriteCRCTotal
00000220 01               7410		.byte	1
00000221 00000000         7411		.long	.LDW54
00000225 00               7412		.byte	0
00000226 00               7413		.byte	0
00000227 00               7414		.byte	0
                          7415	.LDW_unq_24:
                          7416		.section	.debug_line
00000ac1 000502           7417		.byte	0,5,2
00000ac4 00000000         7418		.long	ApplFblWriteCRCTotal
00000ac8 06               7419		.byte	6
00000ac9 03               7420		.byte	3
00000aca f607             7421		.byte	246,7
00000acc 02               7422		.byte	2
00000acd 00               7423		.byte	0
00000ace 01               7424		.byte	1
00000acf 03               7425		.byte	3
00000ad0 0c               7426		.byte	12
00000ad1 02               7427		.byte	2
00000ad2 12               7428		.byte	18
00000ad3 01               7429		.byte	1
00000ad4 33               7430		.byte	51
00000ad5 a4               7431		.byte	164
00000ad6 3b               7432		.byte	59
00000ad7 7c               7433		.byte	124
00000ad8 3b               7434		.byte	59

                                   Fri Apr 10 08:31:56 2020           Page 134
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000ad9 6c               7435		.byte	108
00000ada 06               7436		.byte	6
00000adb 02               7437		.byte	2
00000adc 02               7438		.byte	2
00000add 02               7439		.byte	2
00000ade 0e               7440		.byte	14
00000adf 000101           7441		.byte	0,1,1
                          7442		.section	.debug_info
                          7443	.LDW_5d3d980:
000015fc 11               7444		.byte	17
000015fd 626c6f636b446573 7445		.strz	"blockDescriptor"
00001605 63726970746f7200
0000160d f607             7446		.byte	246,7
0000160f 53               7447		.byte	83
00001610 01               7448		.byte	1
00001611 00000000         7449		.long	.LDW_498c9d0
00001615 00               7450		.byte	0
00001616 016e             7451		.byte	1,110
                          7452	
                          7453	.LDW_5d3d718:
00001618 11               7454		.byte	17
00001619 6372635374617274 7455		.strz	"crcStart"
00001621 00              
00001622 f607             7456		.byte	246,7
00001624 6c               7457		.byte	108
00001625 01               7458		.byte	1
00001626 00000000         7459		.long	.LDW_49cd9d8
0000162a 00               7460		.byte	0
0000162b 0154             7461		.byte	1,84
                          7462	
                          7463	.LDW_5d3db90:
0000162d 11               7464		.byte	17
0000162e 6372634c656e6774 7465		.strz	"crcLength"
00001636 6800            
00001638 f607             7466		.byte	246,7
0000163a 7e               7467		.byte	126
0000163b 01               7468		.byte	1
0000163c 00000000         7469		.long	.LDW_49cd9d8
00001640 00               7470		.byte	0
00001641 016b             7471		.byte	1,107
                          7472	
                          7473	.LDW_5d3d770:
00001643 11               7474		.byte	17
00001644 63726356616c7565 7475		.strz	"crcValue"
0000164c 00              
0000164d f607             7476		.byte	246,7
0000164f 9101             7477		.byte	145,1
00001651 01               7478		.byte	1
00001652 00000000         7479		.long	.LDW_49cd9d8
00001656 00               7480		.byte	0
00001657 016c             7481		.byte	1,108
                          7482	
                          7483	.LDW_5d3e908:
00001659 1f               7484		.byte	31
0000165a 00000000         7485		.long	.LDW44
0000165e 00000000         7486		.long	.LDW54
                          7487	
                          7488	.LDW_5d3d560:
00001662 07               7489		.byte	7
00001663 73746174757300   7490		.strz	"status"

                                   Fri Apr 10 08:31:56 2020           Page 135
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000166a f807             7491		.byte	248,7
0000166c 0f               7492		.byte	15
0000166d 01               7493		.byte	1
0000166e 00000000         7494		.long	.LDW_49cb7c0
00001672 00               7495		.byte	0
00001673 00               7496		.byte	0
                          7497	
                          7498	.LDW_5d3dbe8:
00001674 06               7499		.byte	6
00001675 737472436f6e7665 7500		.strz	"strConversionBuffer"
0000167d 7273696f6e427566
00001685 66657200        
00001689 f907             7501		.byte	249,7
0000168b 0b               7502		.byte	11
0000168c 01               7503		.byte	1
0000168d 00000000         7504		.long	.LDW_5d3eba0
00001691 00               7505		.byte	0
00001692 00               7506		.byte	0
00001693 0271             7507		.byte	2,113
00001695 08               7508		.byte	8
                          7509	
00001696 00               7510		.byte	0
                          7511	
00001697 00               7512		.byte	0
                          7513	
                          7514	.LDW_5db83a8:
00001698 16               7515		.byte	22
00001699 4170706c46626c56 7516		.strz	"ApplFblValidateApp"
000016a1 616c696461746541
000016a9 707000          
000016ac 9708             7517		.byte	151,8
000016ae 0c               7518		.byte	12
000016af 01               7519		.byte	1
000016b0 00000000         7520		.long	.LDW_49cb7c0
000016b4 00000000         7521		.long	ApplFblValidateApp
000016b8 00000000         7522		.long	__ghs_eofn_ApplFblValidateApp
000016bc 0151             7523		.byte	1,81
000016be 03               7524		.byte	3
000016bf 00               7525		.byte	0
000016c0 00               7526		.byte	0
000016c1 00               7527		.byte	0
000016c2 00               7528		.byte	0
000016c3 00               7529		.byte	0
000016c4 00               7530		.byte	0
000016c5 01               7531		.byte	1
000016c6 01               7532		.byte	1
000016c7 00               7533		.byte	0
000016c8 01               7534		.byte	1
                          7535	
                          7536		.section	.debug_frame
                          7537	.LDW_5dd4430:
00000228 00000014         7538		.long	.LDW_unq_26-.LDW_unq_25
                          7539	.LDW_unq_25:
0000022c 00000000         7540		.long	.LDW_5d355a0
00000230 00000000         7541		.long	ApplFblValidateApp
00000234 0000000c         7542		.long	__ghs_eofn_ApplFblValidateApp-ApplFblValidateApp
00000238 01               7543		.byte	1
00000239 00000000         7544		.long	.LDW74
0000023d 00               7545		.byte	0
0000023e 00               7546		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 136
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000023f 00               7547		.byte	0
                          7548	.LDW_unq_26:
                          7549		.section	.debug_line
00000ae2 000502           7550		.byte	0,5,2
00000ae5 00000000         7551		.long	ApplFblValidateApp
00000ae9 06               7552		.byte	6
00000aea 03               7553		.byte	3
00000aeb a008             7554		.byte	160,8
00000aed 02               7555		.byte	2
00000aee 00               7556		.byte	0
00000aef 01               7557		.byte	1
00000af0 000502           7558		.byte	0,5,2
00000af3 00000000         7559		.long	__ghs_eofn_ApplFblValidateApp
00000af7 03               7560		.byte	3
00000af8 06               7561		.byte	6
00000af9 02               7562		.byte	2
00000afa 00               7563		.byte	0
00000afb 01               7564		.byte	1
00000afc 000101           7565		.byte	0,1,1
                          7566		.section	.debug_info
                          7567	.LDW_5d3ea28:
000016c9 1f               7568		.byte	31
000016ca 00000000         7569		.long	.LDW64
000016ce 00000000         7570		.long	.LDW74
                          7571	
                          7572	.LDW_5d3d400:
000016d2 07               7573		.byte	7
000016d3 726573756c7400   7574		.strz	"result"
000016da 9908             7575		.byte	153,8
000016dc 0f               7576		.byte	15
000016dd 01               7577		.byte	1
000016de 00000000         7578		.long	.LDW_49cb7c0
000016e2 00               7579		.byte	0
000016e3 00               7580		.byte	0
                          7581	
000016e4 00               7582		.byte	0
                          7583	
000016e5 00               7584		.byte	0
                          7585	
                          7586	.LDW_5db8570:
000016e6 16               7587		.byte	22
000016e7 4170706c46626c49 7588		.strz	"ApplFblInvalidateApp"
000016ef 6e76616c69646174
000016f7 6541707000      
000016fc b008             7589		.byte	176,8
000016fe 0c               7590		.byte	12
000016ff 01               7591		.byte	1
00001700 00000000         7592		.long	.LDW_49cb7c0
00001704 00000000         7593		.long	ApplFblInvalidateApp
00001708 00000000         7594		.long	__ghs_eofn_ApplFblInvalidateApp
0000170c 0151             7595		.byte	1,81
0000170e 8080808008       7596		.byte	128,128,128,128,8
00001713 24               7597		.byte	36
00001714 00               7598		.byte	0
00001715 28               7599		.byte	40
00001716 00               7600		.byte	0
00001717 00               7601		.byte	0
00001718 00               7602		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 137
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001719 01               7603		.byte	1
0000171a 01               7604		.byte	1
0000171b 00               7605		.byte	0
0000171c 01               7606		.byte	1
                          7607	
                          7608		.section	.debug_frame
                          7609	.LDW_5dd5030:
00000240 00000014         7610		.long	.LDW_unq_28-.LDW_unq_27
                          7611	.LDW_unq_27:
00000244 00000000         7612		.long	.LDW_5d355a0
00000248 00000000         7613		.long	ApplFblInvalidateApp
0000024c 00000044         7614		.long	__ghs_eofn_ApplFblInvalidateApp-ApplFblInvalidateApp
00000250 01               7615		.byte	1
00000251 00000000         7616		.long	.LDW92
00000255 00               7617		.byte	0
00000256 00               7618		.byte	0
00000257 00               7619		.byte	0
                          7620	.LDW_unq_28:
                          7621		.section	.debug_line
00000aff 000502           7622		.byte	0,5,2
00000b02 00000000         7623		.long	ApplFblInvalidateApp
00000b06 06               7624		.byte	6
00000b07 03               7625		.byte	3
00000b08 b008             7626		.byte	176,8
00000b0a 02               7627		.byte	2
00000b0b 00               7628		.byte	0
00000b0c 01               7629		.byte	1
00000b0d 03               7630		.byte	3
00000b0e 0b               7631		.byte	11
00000b0f 02               7632		.byte	2
00000b10 0a               7633		.byte	10
00000b11 01               7634		.byte	1
00000b12 14               7635		.byte	20
00000b13 0c               7636		.byte	12
00000b14 73               7637		.byte	115
00000b15 000502           7638		.byte	0,5,2
00000b18 00000000         7639		.long	.LDWlin40
00000b1c 0d               7640		.byte	13
00000b1d 03               7641		.byte	3
00000b1e 7a               7642		.byte	122
00000b1f 02               7643		.byte	2
00000b20 02               7644		.byte	2
00000b21 01               7645		.byte	1
00000b22 000502           7646		.byte	0,5,2
00000b25 00000000         7647		.long	.LDWlin41
00000b29 03               7648		.byte	3
00000b2a 07               7649		.byte	7
00000b2b 02               7650		.byte	2
00000b2c 00               7651		.byte	0
00000b2d 01               7652		.byte	1
00000b2e 03               7653		.byte	3
00000b2f 06               7654		.byte	6
00000b30 02               7655		.byte	2
00000b31 00               7656		.byte	0
00000b32 01               7657		.byte	1
00000b33 02               7658		.byte	2

                                   Fri Apr 10 08:31:56 2020           Page 138
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000b34 0c               7659		.byte	12
00000b35 000101           7660		.byte	0,1,1
                          7661		.section	.debug_info
                          7662	.LDW_5d3e938:
0000171d 1f               7663		.byte	31
0000171e 00000000         7664		.long	.LDW82
00001722 00000000         7665		.long	.LDW92
                          7666	
                          7667	.LDW_5d3d350:
00001726 06               7668		.byte	6
00001727 726573756c7400   7669		.strz	"result"
0000172e b208             7670		.byte	178,8
00001730 0f               7671		.byte	15
00001731 01               7672		.byte	1
00001732 00000000         7673		.long	.LDW_49cb7c0
00001736 00               7674		.byte	0
00001737 00               7675		.byte	0
00001738 0153             7676		.byte	1,83
                          7677	
                          7678	.LDW_5d3dcf0:
0000173a 06               7679		.byte	6
0000173b 63757272656e7442 7680		.strz	"currentBlockNr"
00001743 6c6f636b4e7200  
0000174a b408             7681		.byte	180,8
0000174c 0b               7682		.byte	11
0000174d 01               7683		.byte	1
0000174e 00000000         7684		.long	.LDW_49cd9d8
00001752 00               7685		.byte	0
00001753 00               7686		.byte	0
00001754 016f             7687		.byte	1,111
                          7688	
                          7689	.LDW_5d3dd48:
00001756 06               7690		.byte	6
00001757 74656d70426c6f63 7691		.strz	"tempBlockDescriptor"
0000175f 6b44657363726970
00001767 746f7200        
0000176b b508             7692		.byte	181,8
0000176d 15               7693		.byte	21
0000176e 01               7694		.byte	1
0000176f 00000000         7695		.long	.LDW_49cb870
00001773 00               7696		.byte	0
00001774 00               7697		.byte	0
00001775 0271             7698		.byte	2,113
00001777 08               7699		.byte	8
                          7700	
00001778 00               7701		.byte	0
                          7702	
00001779 00               7703		.byte	0
                          7704	
0000177a 00               7705		.byte	0
                          7706	
                          7707		.section	.debug_line
                          7708	.Ldw_line_end:
                          7709		.section	.debug_macinfo
00000000 01               7710		.byte	1
00000001 00               7711		.byte	0
00000002 5f5f4c494e455f5f 7712		.strz	"__LINE__"
0000000a 00              
0000000b 01               7713		.byte	1
0000000c 00               7714		.byte	0

                                   Fri Apr 10 08:31:56 2020           Page 139
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000000d 5f5f46494c455f5f 7715		.strz	"__FILE__"
00000015 00              
00000016 01               7716		.byte	1
00000017 00               7717		.byte	0
00000018 4252535f44455249 7718		.strz	"BRS_DERIVATIVE_SPC570S50 1"
00000020 5641544956455f53
00000028 5043353730533530
00000030 203100          
00000033 01               7719		.byte	1
00000034 00               7720		.byte	0
00000035 4252535f4f535f55 7721		.strz	"BRS_OS_USECASE_BRS 1"
0000003d 5345434153455f42
00000045 5253203100      
0000004a 01               7722		.byte	1
0000004b 00               7723		.byte	0
0000004c 4252535f434f4d50 7724		.strz	"BRS_COMP_GHS 1"
00000054 5f474853203100  
0000005b 01               7725		.byte	1
0000005c 00               7726		.byte	0
0000005d 42525348575f494e 7727		.strz	"BRSHW_INSTRUCTION_SET_VLE 1"
00000065 535452554354494f
0000006d 4e5f5345545f564c
00000075 45203100        
00000079 03               7728		.byte	3
0000007a 00               7729		.byte	0
0000007b 01               7730		.byte	1
0000007c 03               7731		.byte	3
0000007d f501             7732		.byte	245,1
0000007f 02               7733		.byte	2
00000080 01               7734		.byte	1
00000081 4a               7735		.byte	74
00000082 5f5f46424c5f494e 7736		.strz	"__FBL_INC_H__ "
0000008a 435f485f5f2000  
00000091 03               7737		.byte	3
00000092 59               7738		.byte	89
00000093 03               7739		.byte	3
00000094 01               7740		.byte	1
00000095 46               7741		.byte	70
00000096 5f46424c4b424150 7742		.strz	"_FBLKBAPI_FRAMENV_OEM_VERSION 0x0200u"
0000009e 495f4652414d454e
000000a6 565f4f454d5f5645
000000ae 5253494f4e203078
000000b6 303230307500    
000000bc 01               7743		.byte	1
000000bd 47               7744		.byte	71
000000be 5f46424c4b424150 7745		.strz	"_FBLKBAPI_FRAMENV_OEM_RELEASE_VERSION 0x00u"
000000c6 495f4652414d454e
000000ce 565f4f454d5f5245
000000d6 4c454153455f5645
000000de 5253494f4e203078
000000e6 30307500        
000000ea 04               7746		.byte	4
000000eb 03               7747		.byte	3
000000ec 5a               7748		.byte	90
000000ed 04               7749		.byte	4
000000ee 01               7750		.byte	1
000000ef 30               7751		.byte	48
000000f0 5647454e5f47454e 7752		.strz	"VGEN_GENY "
000000f8 592000          
000000fb 01               7753		.byte	1
000000fc 4a               7754		.byte	74
000000fd 435f435055545950 7755		.strz	"C_CPUTYPE_32BIT "
00000105 455f333242495420
0000010d 00              
0000010e 01               7756		.byte	1
0000010f 54               7757		.byte	84
00000110 435f435055545950 7758		.strz	"C_CPUTYPE_BIGENDIAN "
00000118 455f424947454e44
00000120 49414e2000      
00000125 01               7759		.byte	1
00000126 59               7760		.byte	89
00000127 435f435055545950 7761		.strz	"C_CPUTYPE_BITORDER_MSB2LSB "
0000012f 455f4249544f5244
00000137 45525f4d5342324c
0000013f 53422000        
00000143 01               7762		.byte	1
00000144 63               7763		.byte	99
00000145 565f454e41424c45 7764		.strz	"V_ENABLE_USE_DUMMY_STATEMENT "
0000014d 5f5553455f44554d
00000155 4d595f5354415445
0000015d 4d454e542000    
00000163 01               7765		.byte	1
00000164 8901             7766		.byte	137,1
00000166 5647454e5f454e41 7767		.strz	"VGEN_ENABLE_CANFBL "
0000016e 424c455f43414e46
00000176 424c2000        
0000017a 01               7768		.byte	1
0000017b be01             7769		.byte	190,1
0000017d 565f434f4d505f47 7770		.strz	"V_COMP_GHS_MPC5700 "
00000185 48535f4d50433537
0000018d 30302000        

                                   Fri Apr 10 08:31:56 2020           Page 140
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000191 01               7771		.byte	1
00000192 bf01             7772		.byte	191,1
00000194 565f4350555f4d50 7773		.strz	"V_CPU_MPC5700 "
0000019c 43353730302000  
000001a3 01               7774		.byte	1
000001a4 ca01             7775		.byte	202,1
000001a6 4d414749435f4e55 7776		.strz	"MAGIC_NUMBER 312540478"
000001ae 4d42455220333132
000001b6 35343034373800  
000001bd 04               7777		.byte	4
000001be 03               7778		.byte	3
000001bf 5c               7779		.byte	92
000001c0 05               7780		.byte	5
000001c1 03               7781		.byte	3
000001c2 31               7782		.byte	49
000001c3 06               7783		.byte	6
000001c4 03               7784		.byte	3
000001c5 34               7785		.byte	52
000001c6 07               7786		.byte	7
000001c7 01               7787		.byte	1
000001c8 8704             7788		.byte	135,4
000001ca 565f4445465f5355 7789		.strz	"V_DEF_SUPPORTED_PLATFORM "
000001d2 50504f525445445f
000001da 504c4154464f524d
000001e2 2000            
000001e4 01               7790		.byte	1
000001e5 e104             7791		.byte	225,4
000001e7 7675696e74782076 7792		.strz	"vuintx vuint32"
000001ef 75696e74333200  
000001f6 01               7793		.byte	1
000001f7 da06             7794		.byte	218,6
000001f9 4c4f43414c5f494e 7795		.strz	"LOCAL_INLINE static inline"
00000201 4c494e4520737461
00000209 74696320696e6c69
00000211 6e6500          
00000214 01               7796		.byte	1
00000215 e406             7797		.byte	228,6
00000217 565f4d454d524f4d 7798		.strz	"V_MEMROM0 "
0000021f 302000          
00000222 01               7799		.byte	1
00000223 ec06             7800		.byte	236,6
00000225 565f4d454d524f4d 7801		.strz	"V_MEMROM1 "
0000022d 312000          
00000230 01               7802		.byte	1
00000231 f006             7803		.byte	240,6
00000233 565f4d454d524f4d 7804		.strz	"V_MEMROM1_FAR "
0000023b 315f4641522000  
00000242 01               7805		.byte	1
00000243 8007             7806		.byte	128,7
00000245 565f4d454d524f4d 7807		.strz	"V_MEMROM2 const"
0000024d 3220636f6e737400
00000255 01               7808		.byte	1
00000256 8307             7809		.byte	131,7
00000258 4d454d4f52595f52 7810		.strz	"MEMORY_ROM V_MEMROM2"
00000260 4f4d20565f4d454d
00000268 524f4d3200      
0000026d 01               7811		.byte	1
0000026e 8a07             7812		.byte	138,7
00000270 565f4d454d524f4d 7813		.strz	"V_MEMROM2_FAR const"
00000278 325f46415220636f
00000280 6e737400        
00000284 01               7814		.byte	1
00000285 9307             7815		.byte	147,7
00000287 565f4d454d524f4d 7816		.strz	"V_MEMROM3 "
0000028f 332000          
00000292 01               7817		.byte	1
00000293 9907             7818		.byte	153,7
00000295 565f4d454d52414d 7819		.strz	"V_MEMRAM0 "
0000029d 302000          
000002a0 01               7820		.byte	1
000002a1 9d07             7821		.byte	157,7
000002a3 565f4d454d52414d 7822		.strz	"V_MEMRAM1_NEAR "
000002ab 315f4e4541522000
000002b3 01               7823		.byte	1
000002b4 a107             7824		.byte	161,7
000002b6 565f4d454d52414d 7825		.strz	"V_MEMRAM1 "
000002be 312000          
000002c1 01               7826		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 141
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000002c2 ab07             7827		.byte	171,7
000002c4 565f4d454d52414d 7828		.strz	"V_MEMRAM2_NEAR "
000002cc 325f4e4541522000
000002d4 01               7829		.byte	1
000002d5 ae07             7830		.byte	174,7
000002d7 4d454d4f52595f4e 7831		.strz	"MEMORY_NEAR V_MEMRAM2_NEAR"
000002df 45415220565f4d45
000002e7 4d52414d325f4e45
000002ef 415200          
000002f2 01               7832		.byte	1
000002f3 b507             7833		.byte	181,7
000002f5 565f4d454d52414d 7834		.strz	"V_MEMRAM2 "
000002fd 322000          
00000300 01               7835		.byte	1
00000301 bf07             7836		.byte	191,7
00000303 565f4d454d52414d 7837		.strz	"V_MEMRAM2_FAR "
0000030b 325f4641522000  
00000312 01               7838		.byte	1
00000313 c207             7839		.byte	194,7
00000315 4d454d4f52595f46 7840		.strz	"MEMORY_FAR V_MEMRAM2_FAR"
0000031d 415220565f4d454d
00000325 52414d325f464152
0000032d 00              
0000032e 01               7841		.byte	1
0000032f cc07             7842		.byte	204,7
00000331 565f4d454d52414d 7843		.strz	"V_MEMRAM3 "
00000339 332000          
0000033c 01               7844		.byte	1
0000033d fe07             7845		.byte	254,7
0000033f 4e554c4c20565f4e 7846		.strz	"NULL V_NULL"
00000347 554c4c00        
0000034b 04               7847		.byte	4
0000034c 01               7848		.byte	1
0000034d 45               7849		.byte	69
0000034e 6b47454e79566572 7850		.strz	"kGENyVersionNumberOfBytes 10"
00000356 73696f6e4e756d62
0000035e 65724f6642797465
00000366 7320313000      
0000036b 04               7851		.byte	4
0000036c 04               7852		.byte	4
0000036d 03               7853		.byte	3
0000036e 60               7854		.byte	96
0000036f 08               7855		.byte	8
00000370 03               7856		.byte	3
00000371 44               7857		.byte	68
00000372 09               7858		.byte	9
00000373 03               7859		.byte	3
00000374 55               7860		.byte	85
00000375 0a               7861		.byte	10
00000376 01               7862		.byte	1
00000377 45               7863		.byte	69
00000378 5f5f5345435f494e 7864		.strz	"__SEC_INC_H__ "
00000380 435f485f5f2000  
00000387 03               7865		.byte	3
00000388 56               7866		.byte	86
00000389 0b               7867		.byte	11
0000038a 01               7868		.byte	1
0000038b 2f               7869		.byte	47
0000038c 5345435f434c4153 7870		.strz	"SEC_CLASS_DDD 0"
00000394 535f444444203000
0000039c 01               7871		.byte	1
0000039d 30               7872		.byte	48
0000039e 5345435f434c4153 7873		.strz	"SEC_CLASS_C 1"
000003a6 535f43203100    
000003ac 01               7874		.byte	1
000003ad 31               7875		.byte	49
000003ae 5345435f434c4153 7876		.strz	"SEC_CLASS_CCC 2"
000003b6 535f434343203200
000003be 01               7877		.byte	1
000003bf 32               7878		.byte	50
000003c0 5345435f434c4153 7879		.strz	"SEC_CLASS_VENDOR 3"
000003c8 535f56454e444f52
000003d0 203300          
000003d3 01               7880		.byte	1
000003d4 39               7881		.byte	57
000003d5 5345435f52495045 7882		.strz	"SEC_RIPEMD160 0"
000003dd 4d44313630203000

                                   Fri Apr 10 08:31:56 2020           Page 142
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000003e5 01               7883		.byte	1
000003e6 3a               7884		.byte	58
000003e7 5345435f53484131 7885		.strz	"SEC_SHA1 1"
000003ef 203100          
000003f2 01               7886		.byte	1
000003f3 3b               7887		.byte	59
000003f4 5345435f53484132 7888		.strz	"SEC_SHA256 2"
000003fc 3536203200      
00000401 01               7889		.byte	1
00000402 44               7890		.byte	68
00000403 5345435f4b45595f 7891		.strz	"SEC_KEY_TIMEOUT 0"
0000040b 54494d454f555420
00000413 3000            
00000415 01               7892		.byte	1
00000416 48               7893		.byte	72
00000417 5345435f48415348 7894		.strz	"SEC_HASH_ALGORITHM SEC_SHA1"
0000041f 5f414c474f524954
00000427 484d205345435f53
0000042f 48413100        
00000433 01               7895		.byte	1
00000434 49               7896		.byte	73
00000435 5345435f53454355 7897		.strz	"SEC_SECURITY_CLASS SEC_CLASS_DDD"
0000043d 524954595f434c41
00000445 5353205345435f43
0000044d 4c4153535f444444
00000455 00              
00000456 01               7898		.byte	1
00000457 4f               7899		.byte	79
00000458 5345435f454e4142 7900		.strz	"SEC_ENABLE_VERIFICATION_KEY_INTERNAL "
00000460 4c455f5645524946
00000468 49434154494f4e5f
00000470 4b45595f494e5445
00000478 524e414c2000    
0000047e 01               7901		.byte	1
0000047f 50               7902		.byte	80
00000480 5345435f53495a45 7903		.strz	"SEC_SIZE_CHECKSUM_VENDOR 0"
00000488 5f434845434b5355
00000490 4d5f56454e444f52
00000498 203000          
0000049b 01               7904		.byte	1
0000049c 52               7905		.byte	82
0000049d 5345435f56455249 7906		.strz	"SEC_VERIFY_BYTES 64"
000004a5 46595f4259544553
000004ad 20363400        
000004b1 01               7907		.byte	1
000004b2 53               7908		.byte	83
000004b3 5345435f454e4142 7909		.strz	"SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH "
000004bb 4c455f5645524946
000004c3 49434154494f4e5f
000004cb 414444524553535f
000004d3 4c454e4754482000
000004db 01               7910		.byte	1
000004dc 54               7911		.byte	84
000004dd 5345435f454e4142 7912		.strz	"SEC_ENABLE_CRC_TOTAL "
000004e5 4c455f4352435f54
000004ed 4f54414c2000    
000004f3 01               7913		.byte	1
000004f4 57               7914		.byte	87
000004f5 5345435f5645525f 7915		.strz	"SEC_VER_SIG_OFFSET 0"
000004fd 5349475f4f464653
00000505 4554203000      
0000050a 01               7916		.byte	1
0000050b 58               7917		.byte	88
0000050c 5345435f5645525f 7918		.strz	"SEC_VER_CRC_OFFSET 0"
00000514 4352435f4f464653
0000051c 4554203000      
00000521 04               7919		.byte	4
00000522 03               7920		.byte	3
00000523 59               7921		.byte	89
00000524 0c               7922		.byte	12
00000525 03               7923		.byte	3
00000526 4d               7924		.byte	77
00000527 0a               7925		.byte	10
00000528 04               7926		.byte	4
00000529 01               7927		.byte	1
0000052a 59               7928		.byte	89
0000052b 5345435f57415443 7929		.strz	"SEC_WATCHDOG_CYCLE_COUNT (0x20u)"
00000533 48444f475f435943
0000053b 4c455f434f554e54
00000543 2028307832307529
0000054b 00              
0000054c 01               7930		.byte	1
0000054d 60               7931		.byte	96
0000054e 5345435f454e4142 7932		.strz	"SEC_ENABLE_WORKSPACE_INTERNAL "
00000556 4c455f574f524b53
0000055e 504143455f494e54
00000566 45524e414c2000  
0000056d 01               7933		.byte	1
0000056e 66               7934		.byte	102
0000056f 5345435f43484543 7935		.strz	"SEC_CHECKSUM_TYPE_CRC 0u"
00000577 4b53554d5f545950
0000057f 455f435243203075
00000587 00              
00000588 01               7936		.byte	1
00000589 6b               7937		.byte	107
0000058a 5345435f43484543 7938		.strz	"SEC_CHECKSUM_TYPE_HASH (SEC_CHECKSUM_TYPE_CRC + 1u)"
00000592 4b53554d5f545950
0000059a 455f484153482028
000005a2 5345435f43484543
000005aa 4b53554d5f545950
000005b2 455f435243202b20
000005ba 31752900        

                                   Fri Apr 10 08:31:56 2020           Page 143
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000005be 01               7939		.byte	1
000005bf 71               7940		.byte	113
000005c0 5345435f4d41435f 7941		.strz	"SEC_MAC_TYPE_HMAC 0u"
000005c8 545950455f484d41
000005d0 4320307500      
000005d5 01               7942		.byte	1
000005d6 8601             7943		.byte	134,1
000005d8 5345435f43524333 7944		.strz	"SEC_CRC32 0u"
000005e0 3220307500      
000005e5 01               7945		.byte	1
000005e6 8e01             7946		.byte	142,1
000005e8 5345435f43524331 7947		.strz	"SEC_CRC16 (SEC_CRC32 + 1u)"
000005f0 3620285345435f43
000005f8 52433332202b2031
00000600 752900          
00000603 01               7948		.byte	1
00000604 ca01             7949		.byte	202,1
00000606 5345435f5349474e 7950		.strz	"SEC_SIGNATURE_SCHEME_RSA_V15 0u"
0000060e 41545552455f5343
00000616 48454d455f525341
0000061e 5f56313520307500
00000626 01               7951		.byte	1
00000627 e301             7952		.byte	227,1
00000629 5345435f43414c4c 7953		.strz	"SEC_CALL_TYPE "
00000631 5f545950452000  
00000638 04               7954		.byte	4
00000639 03               7955		.byte	3
0000063a 5c               7956		.byte	92
0000063b 0d               7957		.byte	13
0000063c 03               7958		.byte	3
0000063d 2f               7959		.byte	47
0000063e 0e               7960		.byte	14
0000063f 04               7961		.byte	4
00000640 04               7962		.byte	4
00000641 04               7963		.byte	4
00000642 03               7964		.byte	3
00000643 58               7965		.byte	88
00000644 0f               7966		.byte	15
00000645 01               7967		.byte	1
00000646 6d               7968		.byte	109
00000647 5345435f4352435f 7969		.strz	"SEC_CRC_TYPE SEC_CRC32"
0000064f 5459504520534543
00000657 5f435243333200  
0000065e 01               7970		.byte	1
0000065f 78               7971		.byte	120
00000660 5345435f454e4142 7972		.strz	"SEC_ENABLE_CRC_TYPE_CRC32 "
00000668 4c455f4352435f54
00000670 5950455f43524333
00000678 322000          
0000067b 04               7973		.byte	4
0000067c 03               7974		.byte	3
0000067d 59               7975		.byte	89
0000067e 10               7976		.byte	16
0000067f 03               7977		.byte	3
00000680 55               7978		.byte	85
00000681 11               7979		.byte	17
00000682 01               7980		.byte	1
00000683 3e               7981		.byte	62
00000684 5345435f53454544 7982		.strz	"SEC_SEED_LENGTH 8u"
0000068c 5f4c454e47544820
00000694 387500          
00000697 01               7983		.byte	1
00000698 40               7984		.byte	64
00000699 5345435f4b45595f 7985		.strz	"SEC_KEY_LENGTH 4u"
000006a1 4c454e4754482034
000006a9 7500            
000006ab 04               7986		.byte	4
000006ac 01               7987		.byte	1
000006ad 7e               7988		.byte	126
000006ae 5345435f50524e47 7989		.strz	"SEC_PRNG_LCG 0u"
000006b6 5f4c434720307500
000006be 01               7990		.byte	1
000006bf 8301             7991		.byte	131,1
000006c1 5345435f50524e47 7992		.strz	"SEC_PRNG_FIPS186 (SEC_PRNG_LCG + 1u)"
000006c9 5f46495053313836
000006d1 20285345435f5052
000006d9 4e475f4c4347202b
000006e1 2031752900      
000006e6 01               7993		.byte	1
000006e7 8901             7994		.byte	137,1

                                   Fri Apr 10 08:31:56 2020           Page 144
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000006e9 5345435f50524e47 7995		.strz	"SEC_PRNG SEC_PRNG_LCG"
000006f1 205345435f50524e
000006f9 475f4c434700    
000006ff 04               7996		.byte	4
00000700 03               7997		.byte	3
00000701 5a               7998		.byte	90
00000702 12               7999		.byte	18
00000703 01               8000		.byte	1
00000704 ba01             8001		.byte	186,1
00000706 5345435f53454355 8002		.strz	"SEC_SECURITY_CLASS_VERIFY SEC_SECURITY_CLASS"
0000070e 524954595f434c41
00000716 53535f5645524946
0000071e 59205345435f5345
00000726 4355524954595f43
0000072e 4c41535300      
00000733 01               8003		.byte	1
00000734 c001             8004		.byte	192,1
00000736 5345435f53454355 8005		.strz	"SEC_SECURITY_CLASS_VERIFICATION SEC_SECURITY_CLASS"
0000073e 524954595f434c41
00000746 53535f5645524946
0000074e 49434154494f4e20
00000756 5345435f53454355
0000075e 524954595f434c41
00000766 535300          
00000769 01               8006		.byte	1
0000076a c701             8007		.byte	199,1
0000076c 5345435f43484543 8008		.strz	"SEC_CHECKSUM_TYPE SEC_CHECKSUM_TYPE_CRC"
00000774 4b53554d5f545950
0000077c 45205345435f4348
00000784 45434b53554d5f54
0000078c 5950455f43524300
00000794 01               8009		.byte	1
00000795 cd01             8010		.byte	205,1
00000797 5345435f4d41435f 8011		.strz	"SEC_MAC_TYPE SEC_MAC_TYPE_HMAC"
0000079f 5459504520534543
000007a7 5f4d41435f545950
000007af 455f484d414300  
000007b6 01               8012		.byte	1
000007b7 d301             8013		.byte	211,1
000007b9 5345435f5349474e 8014		.strz	"SEC_SIGNATURE_SCHEME SEC_SIGNATURE_SCHEME_RSA_V15"
000007c1 41545552455f5343
000007c9 48454d4520534543
000007d1 5f5349474e415455
000007d9 52455f534348454d
000007e1 455f5253415f5631
000007e9 3500            
000007eb 01               8015		.byte	1
000007ec fd01             8016		.byte	253,1
000007ee 5345435f454e4142 8017		.strz	"SEC_ENABLE_SECURITY_CLASS_DDD "
000007f6 4c455f5345435552
000007fe 4954595f434c4153
00000806 535f4444442000  
0000080d 01               8018		.byte	1
0000080e 8f02             8019		.byte	143,2
00000810 5345435f454e4142 8020		.strz	"SEC_ENABLE_CHECKSUM_TYPE_CRC "
00000818 4c455f434845434b
00000820 53554d5f54595045
00000828 5f4352432000    
0000082e 01               8021		.byte	1
0000082f db02             8022		.byte	219,2
00000831 5345435f454e4142 8023		.strz	"SEC_ENABLE_VERIFY_CHECKSUM_CRC "
00000839 4c455f5645524946
00000841 595f434845434b53
00000849 554d5f4352432000
00000851 04               8024		.byte	4
00000852 04               8025		.byte	4
00000853 04               8026		.byte	4
00000854 03               8027		.byte	3
00000855 62               8028		.byte	98
00000856 13               8029		.byte	19
00000857 03               8030		.byte	3
00000858 48               8031		.byte	72
00000859 14               8032		.byte	20
0000085a 01               8033		.byte	1
0000085b 33               8034		.byte	51
0000085c 46424c5f5553455f 8035		.strz	"FBL_USE_OWN_MEMCPY "
00000864 4f574e5f4d454d43
0000086c 50592000        
00000870 01               8036		.byte	1
00000871 34               8037		.byte	52
00000872 46424c5f57415443 8038		.strz	"FBL_WATCHDOG_ON "
0000087a 48444f475f4f4e20
00000882 00              
00000883 01               8039		.byte	1
00000884 35               8040		.byte	53
00000885 46424c5f57415443 8041		.strz	"FBL_WATCHDOG_TIME (1 / FBL_REPEAT_CALL_CYCLE)"
0000088d 48444f475f54494d
00000895 45202831202f2046
0000089d 424c5f5245504541
000008a5 545f43414c4c5f43
000008ad 59434c452900    
000008b3 01               8042		.byte	1
000008b4 36               8043		.byte	54
000008b5 46424c5f48454144 8044		.strz	"FBL_HEADER_ADDRESS 0xFC0400u"
000008bd 45525f4144445245
000008c5 5353203078464330
000008cd 3430307500      
000008d2 01               8045		.byte	1
000008d3 37               8046		.byte	55
000008d4 46424c5f454e4142 8047		.strz	"FBL_ENABLE_APPL_TASK "
000008dc 4c455f4150504c5f
000008e4 5441534b2000    
000008ea 01               8048		.byte	1
000008eb 39               8049		.byte	57
000008ec 46424c5f44494147 8050		.strz	"FBL_DIAG_BUFFER_LENGTH 4095"
000008f4 5f4255464645525f
000008fc 4c454e4754482034
00000904 30393500        

                                   Fri Apr 10 08:31:56 2020           Page 145
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000908 01               8051		.byte	1
00000909 3b               8052		.byte	59
0000090a 46424c5f44494147 8053		.strz	"FBL_DIAG_TIME_P3MAX (2000 / FBL_REPEAT_CALL_CYCLE)"
00000912 5f54494d455f5033
0000091a 4d41582028323030
00000922 30202f2046424c5f
0000092a 5245504541545f43
00000932 414c4c5f4359434c
0000093a 452900          
0000093d 01               8054		.byte	1
0000093e 3c               8055		.byte	60
0000093f 46424c5f454e4142 8056		.strz	"FBL_ENABLE_SLEEPMODE "
00000947 4c455f534c454550
0000094f 4d4f44452000    
00000955 01               8057		.byte	1
00000956 3e               8058		.byte	62
00000957 46424c5f454e4142 8059		.strz	"FBL_ENABLE_GAP_FILL "
0000095f 4c455f4741505f46
00000967 494c4c2000      
0000096c 01               8060		.byte	1
0000096d 40               8061		.byte	64
0000096e 46424c5f454e4142 8062		.strz	"FBL_ENABLE_MULTIPLE_MEM_DEVICES "
00000976 4c455f4d554c5449
0000097e 504c455f4d454d5f
00000986 4445564943455320
0000098e 00              
0000098f 01               8063		.byte	1
00000990 41               8064		.byte	65
00000991 46424c5f4d454d44 8065		.strz	"FBL_MEMDRV_SEGMENT_SIZE 8"
00000999 52565f5345474d45
000009a1 4e545f53495a4520
000009a9 3800            
000009ab 01               8066		.byte	1
000009ac 42               8067		.byte	66
000009ad 46424c5f454e4142 8068		.strz	"FBL_ENABLE_PRESENCE_PATTERN "
000009b5 4c455f5052455345
000009bd 4e43455f50415454
000009c5 45524e2000      
000009ca 01               8069		.byte	1
000009cb 43               8070		.byte	67
000009cc 46424c5f454e4142 8071		.strz	"FBL_ENABLE_FBL_START "
000009d4 4c455f46424c5f53
000009dc 544152542000    
000009e2 01               8072		.byte	1
000009e3 45               8073		.byte	69
000009e4 46424c5f44495341 8074		.strz	"FBL_DISABLE_USERSUBFUNCTION "
000009ec 424c455f55534552
000009f4 53554246554e4354
000009fc 494f4e2000      
00000a01 01               8075		.byte	1
00000a02 47               8076		.byte	71
00000a03 46424c5f4d544142 8077		.strz	"FBL_MTAB_NO_OF_BLOCKS 2"
00000a0b 5f4e4f5f4f465f42
00000a13 4c4f434b53203200
00000a1b 01               8078		.byte	1
00000a1c 49               8079		.byte	73
00000a1d 46424c5f44495341 8080		.strz	"FBL_DISABLE_DATA_PROCESSING "
00000a25 424c455f44415441
00000a2d 5f50524f43455353
00000a35 494e472000      
00000a3a 01               8081		.byte	1
00000a3b 4e               8082		.byte	78
00000a3c 46424c5f494e5445 8083		.strz	"FBL_INTEGRATION 2"
00000a44 47524154494f4e20
00000a4c 3200            
00000a4e 01               8084		.byte	1
00000a4f 50               8085		.byte	80
00000a50 46424c5f50524f4a 8086		.strz	"FBL_PROJECT_STATE FBL_INTEGRATION"
00000a58 4543545f53544154
00000a60 452046424c5f494e
00000a68 544547524154494f
00000a70 4e00            
00000a72 01               8087		.byte	1
00000a73 51               8088		.byte	81
00000a74 46424c5f454e4142 8089		.strz	"FBL_ENABLE_SYSTEM_CHECK "
00000a7c 4c455f5359535445
00000a84 4d5f434845434b20
00000a8c 00              
00000a8d 01               8090		.byte	1
00000a8e 52               8091		.byte	82
00000a8f 46424c5f454e4142 8092		.strz	"FBL_ENABLE_DEBUG_STATUS "
00000a97 4c455f4445425547
00000a9f 5f53544154555320
00000aa7 00              
00000aa8 01               8093		.byte	1
00000aa9 53               8094		.byte	83
00000aaa 46424c5f454e4142 8095		.strz	"FBL_ENABLE_ASSERTION "
00000ab2 4c455f4153534552
00000aba 54494f4e2000    
00000ac0 01               8096		.byte	1
00000ac1 56               8097		.byte	86
00000ac2 46424c5f4d454d5f 8098		.strz	"FBL_MEM_ENABLE_VERIFY_OUTPUT "
00000aca 454e41424c455f56
00000ad2 45524946595f4f55
00000ada 545055542000    
00000ae0 01               8099		.byte	1
00000ae1 5f               8100		.byte	95
00000ae2 464c4153485f5349 8101		.strz	"FLASH_SIZE 1536"
00000aea 5a45203135333600
00000af2 01               8102		.byte	1
00000af3 72               8103		.byte	114
00000af4 53574d5f44415441 8104		.strz	"SWM_DATA_MAX_NOAR 8"
00000afc 5f4d41585f4e4f41
00000b04 52203800        
00000b08 01               8105		.byte	1
00000b09 74               8106		.byte	116

                                   Fri Apr 10 08:31:56 2020           Page 146
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000b0a 46424c5f454e4142 8107		.strz	"FBL_ENABLE_SEC_ACCESS_DELAY "
00000b12 4c455f5345435f41
00000b1a 43434553535f4445
00000b22 4c41592000      
00000b27 01               8108		.byte	1
00000b28 8201             8109		.byte	130,1
00000b2a 46424c5f454e4142 8110		.strz	"FBL_ENABLE_CAN_CONFIRMATION "
00000b32 4c455f43414e5f43
00000b3a 4f4e4649524d4154
00000b42 494f4e2000      
00000b47 01               8111		.byte	1
00000b48 8301             8112		.byte	131,1
00000b4a 46424c5f454e4142 8113		.strz	"FBL_ENABLE_SECMOD_VECTOR "
00000b52 4c455f5345434d4f
00000b5a 445f564543544f52
00000b62 2000            
00000b64 01               8114		.byte	1
00000b65 8501             8115		.byte	133,1
00000b67 46424c5f454e4142 8116		.strz	"FBL_ENABLE_WRAPPER_NV "
00000b6f 4c455f5752415050
00000b77 45525f4e562000  
00000b7e 01               8117		.byte	1
00000b7f 8d01             8118		.byte	141,1
00000b81 46424c5f454e4142 8119		.strz	"FBL_ENABLE_APPL_STATE_TASK "
00000b89 4c455f4150504c5f
00000b91 53544154455f5441
00000b99 534b2000        
00000b9d 01               8120		.byte	1
00000b9e 9001             8121		.byte	144,1
00000ba0 46424c5f454e4142 8122		.strz	"FBL_ENABLE_APPL_TIMER_TASK "
00000ba8 4c455f4150504c5f
00000bb0 54494d45525f5441
00000bb8 534b2000        
00000bbc 01               8123		.byte	1
00000bbd 9901             8124		.byte	153,1
00000bbf 46424c5f5346525f 8125		.strz	"FBL_SFR_SIU_TYPE 2u"
00000bc7 5349555f54595045
00000bcf 20327500        
00000bd3 01               8126		.byte	1
00000bd4 9f01             8127		.byte	159,1
00000bd6 46424c5f4d455f42 8128		.strz	"FBL_ME_BASE 0xFFFB8000ul"
00000bde 4153452030784646
00000be6 464238303030756c
00000bee 00              
00000bef 01               8129		.byte	1
00000bf0 a001             8130		.byte	160,1
00000bf2 46424c5f434d555f 8131		.strz	"FBL_CMU_BASE 0xC3FE0100ul"
00000bfa 4241534520307843
00000c02 3346453031303075
00000c0a 6c00            
00000c0c 01               8132		.byte	1
00000c0d a101             8133		.byte	161,1
00000c0f 46424c5f434d555f 8134		.strz	"FBL_CMU_PLL_BASE 0xFFFB0200ul"
00000c17 504c4c5f42415345
00000c1f 2030784646464230
00000c27 323030756c00    
00000c2d 01               8135		.byte	1
00000c2e a201             8136		.byte	162,1
00000c30 46424c5f43474d5f 8137		.strz	"FBL_CGM_BASE 0xFFFB0000ul"
00000c38 4241534520307846
00000c40 4646423030303075
00000c48 6c00            
00000c4a 01               8138		.byte	1
00000c4b a301             8139		.byte	163,1
00000c4d 46424c5f52474d5f 8140		.strz	"FBL_RGM_BASE 0xFFFA8000ul"
00000c55 4241534520307846
00000c5d 4646413830303075
00000c65 6c00            
00000c67 01               8141		.byte	1
00000c68 a901             8142		.byte	169,1
00000c6a 46424c5f5346525f 8143		.strz	"FBL_SFR_BASE_ADRESSES_PRECONFIGURED "
00000c72 424153455f414452
00000c7a 45535345535f5052
00000c82 45434f4e46494755
00000c8a 5245442000      
00000c8f 04               8144		.byte	4
00000c90 03               8145		.byte	3
00000c91 5a               8146		.byte	90
00000c92 15               8147		.byte	21
00000c93 03               8148		.byte	3
00000c94 54               8149		.byte	84
00000c95 16               8150		.byte	22
00000c96 04               8151		.byte	4
00000c97 01               8152		.byte	1
00000c98 5a               8153		.byte	90
00000c99 46424c5f4445434c 8154		.strz	"FBL_DECL_ASSERT_EXTENDED_INFO(n) n"
00000ca1 5f4153534552545f
00000ca9 455854454e444544
00000cb1 5f494e464f286e29
00000cb9 206e00          
00000cbc 04               8155		.byte	4
00000cbd 01               8156		.byte	1
00000cbe 6c               8157		.byte	108
00000cbf 46424c5f4445465f 8158		.strz	"FBL_DEF_ENABLE_NON_KB_MAIN "
00000cc7 454e41424c455f4e
00000ccf 4f4e5f4b425f4d41
00000cd7 494e2000        
00000cdb 01               8159		.byte	1
00000cdc 7e               8160		.byte	126
00000cdd 6b46626c4f6b2030 8161		.strz	"kFblOk 0x00u"
00000ce5 7830307500      
00000cea 01               8162		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 147
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000ceb 7f               8163		.byte	127
00000cec 6b46626c4661696c 8164		.strz	"kFblFailed 0x01u"
00000cf4 6564203078303175
00000cfc 00              
00000cfd 01               8165		.byte	1
00000cfe 8601             8166		.byte	134,1
00000d00 6b50726f67526571 8167		.strz	"kProgRequest 0x00u"
00000d08 7565737420307830
00000d10 307500          
00000d13 01               8168		.byte	1
00000d14 8801             8169		.byte	136,1
00000d16 6b4e6f50726f6752 8170		.strz	"kNoProgRequest 0xFFu"
00000d1e 6571756573742030
00000d26 7846467500      
00000d2b 01               8171		.byte	1
00000d2c 8b01             8172		.byte	139,1
00000d2e 6b4170706c56616c 8173		.strz	"kApplValid 1"
00000d36 6964203100      
00000d3b 01               8174		.byte	1
00000d3c 8c01             8175		.byte	140,1
00000d3e 6b4170706c496e76 8176		.strz	"kApplInvalid 0"
00000d46 616c6964203000  
00000d4d 01               8177		.byte	1
00000d4e 9501             8178		.byte	149,1
00000d50 46424c5f52455045 8179		.strz	"FBL_REPEAT_CALL_CYCLE 1"
00000d58 41545f43414c4c5f
00000d60 4359434c45203100
00000d68 01               8180		.byte	1
00000d69 9a01             8181		.byte	154,1
00000d6b 46424c5f43414c4c 8182		.strz	"FBL_CALL_TYPE "
00000d73 5f545950452000  
00000d7a 01               8183		.byte	1
00000d7b 9e01             8184		.byte	158,1
00000d7d 565f43414c4c4241 8185		.strz	"V_CALLBACK_NEAR "
00000d85 434b5f4e45415220
00000d8d 00              
00000d8e 01               8186		.byte	1
00000d8f a101             8187		.byte	161,1
00000d91 565f4150495f4e45 8188		.strz	"V_API_NEAR "
00000d99 41522000        
00000d9d 01               8189		.byte	1
00000d9e d701             8190		.byte	215,1
00000da0 46626c496e766572 8191		.strz	"FblInvert8Bit(x) ((vuint8) ((x) ^ ((vuint8)0xFFu)))"
00000da8 7438426974287829
00000db0 2028287675696e74
00000db8 3829202828782920
00000dc0 5e2028287675696e
00000dc8 7438293078464675
00000dd0 29292900        
00000dd4 01               8192		.byte	1
00000dd5 d801             8193		.byte	216,1
00000dd7 46626c496e766572 8194		.strz	"FblInvert16Bit(x) ((vuint16)((x) ^ ((vuint16)0xFFFFu)))"
00000ddf 7431364269742878
00000de7 292028287675696e
00000def 7431362928287829
00000df7 205e202828767569
00000dff 6e74313629307846
00000e07 4646467529292900
00000e0f 01               8195		.byte	1
00000e10 8502             8196		.byte	133,2
00000e12 46424c5f53544154 8197		.strz	"FBL_STATE_BITS 32"
00000e1a 455f424954532033
00000e22 3200            
00000e24 01               8198		.byte	1
00000e25 9302             8199		.byte	147,2
00000e27 46424c5f53544154 8200		.strz	"FBL_STATE_INDEX(bit) ((bit) / FBL_STATE_BITS)"
00000e2f 455f494e44455828
00000e37 6269742920282862
00000e3f 697429202f204642
00000e47 4c5f53544154455f
00000e4f 424954532900    
00000e55 01               8201		.byte	1
00000e56 b002             8202		.byte	176,2
00000e58 4d454d53495a455f 8203		.strz	"MEMSIZE_OK "
00000e60 4f4b2000        
00000e64 04               8204		.byte	4
00000e65 03               8205		.byte	3
00000e66 68               8206		.byte	104
00000e67 17               8207		.byte	23
00000e68 01               8208		.byte	1
00000e69 3b               8209		.byte	59
00000e6a 6b4e724f6656616c 8210		.strz	"kNrOfValidationBytes 1"
00000e72 69646174696f6e42
00000e7a 79746573203100  
00000e81 01               8211		.byte	1
00000e82 5c               8212		.byte	92
00000e83 46424c5f4c42545f 8213		.strz	"FBL_LBT_START_SEC_CONST "
00000e8b 53544152545f5345
00000e93 435f434f4e535420
00000e9b 00              
00000e9c 03               8214		.byte	3
00000e9d 5d               8215		.byte	93
00000e9e 18               8216		.byte	24
00000e9f 01               8217		.byte	1
00000ea0 2b               8218		.byte	43

                                   Fri Apr 10 08:31:56 2020           Page 148
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000ea1 46424c5f4d454d4d 8219		.strz	"FBL_MEMMAP_ERROR "
00000ea9 41505f4552524f52
00000eb1 2000            
00000eb3 04               8220		.byte	4
00000eb4 01               8221		.byte	1
00000eb5 5f               8222		.byte	95
00000eb6 46424c5f4c42545f 8223		.strz	"FBL_LBT_STOP_SEC_CONST "
00000ebe 53544f505f534543
00000ec6 5f434f4e53542000
00000ece 03               8224		.byte	3
00000ecf 60               8225		.byte	96
00000ed0 18               8226		.byte	24
00000ed1 01               8227		.byte	1
00000ed2 2b               8228		.byte	43
00000ed3 46424c5f4d454d4d 8229		.strz	"FBL_MEMMAP_ERROR "
00000edb 41505f4552524f52
00000ee3 2000            
00000ee5 04               8230		.byte	4
00000ee6 04               8231		.byte	4
00000ee7 03               8232		.byte	3
00000ee8 6e               8233		.byte	110
00000ee9 19               8234		.byte	25
00000eea 01               8235		.byte	1
00000eeb 52               8236		.byte	82
00000eec 46424c5f464c4153 8237		.strz	"FBL_FLASH_DELETED 0xFFu"
00000ef4 485f44454c455445
00000efc 4420307846467500
00000f04 01               8238		.byte	1
00000f05 54               8239		.byte	84
00000f06 464c4153485f5345 8240		.strz	"FLASH_SEGMENT_SIZE 8u"
00000f0e 474d454e545f5349
00000f16 5a4520387500    
00000f1c 04               8241		.byte	4
00000f1d 03               8242		.byte	3
00000f1e 6f               8243		.byte	111
00000f1f 1a               8244		.byte	26
00000f20 04               8245		.byte	4
00000f21 03               8246		.byte	3
00000f22 75               8247		.byte	117
00000f23 1b               8248		.byte	27
00000f24 01               8249		.byte	1
00000f25 7c               8250		.byte	124
00000f26 494e495457415443 8251		.strz	"INITWATCHDOG_START_SEC_CODE_EXPORT "
00000f2e 48444f475f535441
00000f36 52545f5345435f43
00000f3e 4f44455f4558504f
00000f46 52542000        
00000f4a 03               8252		.byte	3
00000f4b 7d               8253		.byte	125
00000f4c 18               8254		.byte	24
00000f4d 01               8255		.byte	1
00000f4e 2b               8256		.byte	43
00000f4f 46424c5f4d454d4d 8257		.strz	"FBL_MEMMAP_ERROR "
00000f57 41505f4552524f52
00000f5f 2000            
00000f61 04               8258		.byte	4
00000f62 01               8259		.byte	1
00000f63 8001             8260		.byte	128,1
00000f65 494e495457415443 8261		.strz	"INITWATCHDOG_STOP_SEC_CODE_EXPORT "
00000f6d 48444f475f53544f
00000f75 505f5345435f434f
00000f7d 44455f4558504f52
00000f85 542000          
00000f88 03               8262		.byte	3
00000f89 8101             8263		.byte	129,1
00000f8b 18               8264		.byte	24
00000f8c 01               8265		.byte	1
00000f8d 2b               8266		.byte	43
00000f8e 46424c5f4d454d4d 8267		.strz	"FBL_MEMMAP_ERROR "
00000f96 41505f4552524f52
00000f9e 2000            
00000fa0 04               8268		.byte	4
00000fa1 01               8269		.byte	1
00000fa2 8301             8270		.byte	131,1
00000fa4 4c4f4f4b464f5257 8271		.strz	"LOOKFORWATCHDOG_START_SEC_CODE_EXPORT "
00000fac 41544348444f475f
00000fb4 53544152545f5345
00000fbc 435f434f44455f45
00000fc4 58504f52542000  
00000fcb 03               8272		.byte	3
00000fcc 8401             8273		.byte	132,1
00000fce 18               8274		.byte	24

                                   Fri Apr 10 08:31:56 2020           Page 149
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00000fcf 01               8275		.byte	1
00000fd0 2b               8276		.byte	43
00000fd1 46424c5f4d454d4d 8277		.strz	"FBL_MEMMAP_ERROR "
00000fd9 41505f4552524f52
00000fe1 2000            
00000fe3 04               8278		.byte	4
00000fe4 01               8279		.byte	1
00000fe5 8801             8280		.byte	136,1
00000fe7 4c4f4f4b464f5257 8281		.strz	"LOOKFORWATCHDOG_STOP_SEC_CODE_EXPORT "
00000fef 41544348444f475f
00000ff7 53544f505f534543
00000fff 5f434f44455f4558
00001007 504f52542000    
0000100d 03               8282		.byte	3
0000100e 8901             8283		.byte	137,1
00001010 18               8284		.byte	24
00001011 01               8285		.byte	1
00001012 2b               8286		.byte	43
00001013 46424c5f4d454d4d 8287		.strz	"FBL_MEMMAP_ERROR "
0000101b 41505f4552524f52
00001023 2000            
00001025 04               8288		.byte	4
00001026 01               8289		.byte	1
00001027 8b01             8290		.byte	139,1
00001029 4c4f4f4b464f5257 8291		.strz	"LOOKFORWATCHDOG_START_SEC_CODE_EXPORT "
00001031 41544348444f475f
00001039 53544152545f5345
00001041 435f434f44455f45
00001049 58504f52542000  
00001050 03               8292		.byte	3
00001051 8c01             8293		.byte	140,1
00001053 18               8294		.byte	24
00001054 01               8295		.byte	1
00001055 2b               8296		.byte	43
00001056 46424c5f4d454d4d 8297		.strz	"FBL_MEMMAP_ERROR "
0000105e 41505f4552524f52
00001066 2000            
00001068 04               8298		.byte	4
00001069 01               8299		.byte	1
0000106a 9001             8300		.byte	144,1
0000106c 4c4f4f4b464f5257 8301		.strz	"LOOKFORWATCHDOG_STOP_SEC_CODE_EXPORT "
00001074 41544348444f475f
0000107c 53544f505f534543
00001084 5f434f44455f4558
0000108c 504f52542000    
00001092 03               8302		.byte	3
00001093 9101             8303		.byte	145,1
00001095 18               8304		.byte	24
00001096 01               8305		.byte	1
00001097 2b               8306		.byte	43
00001098 46424c5f4d454d4d 8307		.strz	"FBL_MEMMAP_ERROR "
000010a0 41505f4552524f52
000010a8 2000            
000010aa 04               8308		.byte	4
000010ab 04               8309		.byte	4
000010ac 03               8310		.byte	3
000010ad 76               8311		.byte	118
000010ae 1c               8312		.byte	28
000010af 01               8313		.byte	1
000010b0 4d               8314		.byte	77
000010b1 494f5f455f4f4b20 8315		.strz	"IO_E_OK ((vuint8)0x00u)"
000010b9 28287675696e7438
000010c1 2930783030752900
000010c9 01               8316		.byte	1
000010ca 4f               8317		.byte	79
000010cb 494f5f455f455241 8318		.strz	"IO_E_ERASED ((vuint8)0xE5u)"
000010d3 5345442028287675
000010db 696e743829307845
000010e3 35752900        
000010e7 04               8319		.byte	4
000010e8 03               8320		.byte	3
000010e9 7e               8321		.byte	126
000010ea 1d               8322		.byte	29
000010eb 01               8323		.byte	1
000010ec c001             8324		.byte	192,1
000010ee 4d656d4472697665 8325		.strz	"MemDriver_RReadSync (*memDrvLst[FlashBlock[memSegment].device].read)"
000010f6 725f525265616453
000010fe 796e6320282a6d65
00001106 6d4472764c73745b
0000110e 466c617368426c6f
00001116 636b5b6d656d5365
0000111e 676d656e745d2e64
00001126 65766963655d2e72
0000112e 6561642900      
00001133 01               8326		.byte	1
00001134 c101             8327		.byte	193,1
00001136 4d656d4472697665 8328		.strz	"MemDriver_SegmentSize (memDrvLst[FlashBlock[memSegment].device].segmentSize)"
0000113e 725f5365676d656e
00001146 7453697a6520286d
0000114e 656d4472764c7374
00001156 5b466c617368426c
0000115e 6f636b5b6d656d53
00001166 65676d656e745d2e
0000116e 6465766963655d2e
00001176 7365676d656e7453
0000117e 697a652900      
00001183 01               8329		.byte	1
00001184 ca01             8330		.byte	202,1

                                   Fri Apr 10 08:31:56 2020           Page 150
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001186 46424c5f4d41585f 8331		.strz	"FBL_MAX_SEGMENT_SIZE_MIO FBL_MEMDRV_SEGMENT_SIZE"
0000118e 5345474d454e545f
00001196 53495a455f4d494f
0000119e 2046424c5f4d454d
000011a6 4452565f5345474d
000011ae 454e545f53495a45
000011b6 00              
000011b7 01               8332		.byte	1
000011b8 e601             8333		.byte	230,1
000011ba 46424c5f4d41585f 8334		.strz	"FBL_MAX_SEGMENT_SIZE FBL_MAX_SEGMENT_SIZE_MIO"
000011c2 5345474d454e545f
000011ca 53495a452046424c
000011d2 5f4d41585f534547
000011da 4d454e545f53495a
000011e2 455f4d494f00    
000011e8 01               8335		.byte	1
000011e9 8702             8336		.byte	135,2
000011eb 46424c5f4d494f5f 8337		.strz	"FBL_MIO_DEFAULT_FCT_PTR "
000011f3 44454641554c545f
000011fb 4643545f50545220
00001203 00              
00001204 01               8338		.byte	1
00001205 a002             8339		.byte	160,2
00001207 46424c4d494f5f53 8340		.strz	"FBLMIO_START_SEC_CODE "
0000120f 544152545f534543
00001217 5f434f44452000  
0000121e 03               8341		.byte	3
0000121f a102             8342		.byte	161,2
00001221 18               8343		.byte	24
00001222 01               8344		.byte	1
00001223 2b               8345		.byte	43
00001224 46424c5f4d454d4d 8346		.strz	"FBL_MEMMAP_ERROR "
0000122c 41505f4552524f52
00001234 2000            
00001236 04               8347		.byte	4
00001237 01               8348		.byte	1
00001238 b102             8349		.byte	177,2
0000123a 46424c4d494f5f53 8350		.strz	"FBLMIO_STOP_SEC_CODE "
00001242 544f505f5345435f
0000124a 434f44452000    
00001250 03               8351		.byte	3
00001251 b202             8352		.byte	178,2
00001253 18               8353		.byte	24
00001254 01               8354		.byte	1
00001255 2b               8355		.byte	43
00001256 46424c5f4d454d4d 8356		.strz	"FBL_MEMMAP_ERROR "
0000125e 41505f4552524f52
00001266 2000            
00001268 04               8357		.byte	4
00001269 04               8358		.byte	4
0000126a 03               8359		.byte	3
0000126b 7f               8360		.byte	127
0000126c 1e               8361		.byte	30
0000126d 01               8362		.byte	1
0000126e 66               8363		.byte	102
0000126f 46424c464c494f5f 8364		.strz	"FBLFLIO_FLASHCODE_START_SEC_VAR "
00001277 464c415348434f44
0000127f 455f53544152545f
00001287 5345435f56415220
0000128f 00              
00001290 03               8365		.byte	3
00001291 67               8366		.byte	103
00001292 18               8367		.byte	24
00001293 01               8368		.byte	1
00001294 2b               8369		.byte	43
00001295 46424c5f4d454d4d 8370		.strz	"FBL_MEMMAP_ERROR "
0000129d 41505f4552524f52
000012a5 2000            
000012a7 04               8371		.byte	4
000012a8 01               8372		.byte	1
000012a9 69               8373		.byte	105
000012aa 46424c464c494f5f 8374		.strz	"FBLFLIO_FLASHCODE_STOP_SEC_VAR "
000012b2 464c415348434f44
000012ba 455f53544f505f53
000012c2 45435f5641522000
000012ca 03               8375		.byte	3
000012cb 6a               8376		.byte	106
000012cc 18               8377		.byte	24
000012cd 01               8378		.byte	1
000012ce 2b               8379		.byte	43
000012cf 46424c5f4d454d4d 8380		.strz	"FBL_MEMMAP_ERROR "
000012d7 41505f4552524f52
000012df 2000            
000012e1 04               8381		.byte	4
000012e2 04               8382		.byte	4
000012e3 03               8383		.byte	3
000012e4 8001             8384		.byte	128,1
000012e6 1f               8385		.byte	31
000012e7 04               8386		.byte	4

                                   Fri Apr 10 08:31:56 2020           Page 151
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000012e8 03               8387		.byte	3
000012e9 8101             8388		.byte	129,1
000012eb 20               8389		.byte	32
000012ec 03               8390		.byte	3
000012ed 2a               8391		.byte	42
000012ee 02               8392		.byte	2
000012ef 04               8393		.byte	4
000012f0 03               8394		.byte	3
000012f1 2b               8395		.byte	43
000012f2 21               8396		.byte	33
000012f3 01               8397		.byte	1
000012f4 49               8398		.byte	73
000012f5 45455044554d4d59 8399		.strz	"EEPDUMMY_FULL_START_SEC_CODE "
000012fd 5f46554c4c5f5354
00001305 4152545f5345435f
0000130d 434f44452000    
00001313 03               8400		.byte	3
00001314 4a               8401		.byte	74
00001315 18               8402		.byte	24
00001316 01               8403		.byte	1
00001317 2b               8404		.byte	43
00001318 46424c5f4d454d4d 8405		.strz	"FBL_MEMMAP_ERROR "
00001320 41505f4552524f52
00001328 2000            
0000132a 04               8406		.byte	4
0000132b 01               8407		.byte	1
0000132c 54               8408		.byte	84
0000132d 45455044554d4d59 8409		.strz	"EEPDUMMY_FULL_STOP_SEC_CODE "
00001335 5f46554c4c5f5354
0000133d 4f505f5345435f43
00001345 4f44452000      
0000134a 03               8410		.byte	3
0000134b 55               8411		.byte	85
0000134c 18               8412		.byte	24
0000134d 01               8413		.byte	1
0000134e 2b               8414		.byte	43
0000134f 46424c5f4d454d4d 8415		.strz	"FBL_MEMMAP_ERROR "
00001357 41505f4552524f52
0000135f 2000            
00001361 04               8416		.byte	4
00001362 04               8417		.byte	4
00001363 04               8418		.byte	4
00001364 03               8419		.byte	3
00001365 8401             8420		.byte	132,1
00001367 22               8421		.byte	34
00001368 01               8422		.byte	1
00001369 49               8423		.byte	73
0000136a 4150504c56454354 8424		.strz	"APPLVECT_FROM_BOOT 0xA5000000UL"
00001372 5f46524f4d5f424f
0000137a 4f54203078413530
00001382 3030303030554c00
0000138a 01               8425		.byte	1
0000138b 55               8426		.byte	85
0000138c 46424c5f4150504c 8427		.strz	"FBL_APPLVECT_START_SEC_CONST "
00001394 564543545f535441
0000139c 52545f5345435f43
000013a4 4f4e53542000    
000013aa 03               8428		.byte	3
000013ab 56               8429		.byte	86
000013ac 18               8430		.byte	24
000013ad 01               8431		.byte	1
000013ae 2b               8432		.byte	43
000013af 46424c5f4d454d4d 8433		.strz	"FBL_MEMMAP_ERROR "
000013b7 41505f4552524f52
000013bf 2000            
000013c1 04               8434		.byte	4
000013c2 01               8435		.byte	1
000013c3 5a               8436		.byte	90
000013c4 46424c5f4150504c 8437		.strz	"FBL_APPLVECT_STOP_SEC_CONST "
000013cc 564543545f53544f
000013d4 505f5345435f434f
000013dc 4e53542000      
000013e1 03               8438		.byte	3
000013e2 5b               8439		.byte	91
000013e3 18               8440		.byte	24
000013e4 01               8441		.byte	1
000013e5 2b               8442		.byte	43

                                   Fri Apr 10 08:31:56 2020           Page 152
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000013e6 46424c5f4d454d4d 8443		.strz	"FBL_MEMMAP_ERROR "
000013ee 41505f4552524f52
000013f6 2000            
000013f8 04               8444		.byte	4
000013f9 04               8445		.byte	4
000013fa 03               8446		.byte	3
000013fb 8801             8447		.byte	136,1
000013fd 23               8448		.byte	35
000013fe 03               8449		.byte	3
000013ff 3c               8450		.byte	60
00001400 24               8451		.byte	36
00001401 01               8452		.byte	1
00001402 49               8453		.byte	73
00001403 46424c5f43414e5f 8454		.strz	"FBL_CAN_NUMBER_OF_RX_ID 2u"
0000140b 4e554d4245525f4f
00001413 465f52585f494420
0000141b 327500          
0000141e 01               8455		.byte	1
0000141f 4a               8456		.byte	74
00001420 46424c5f43414e5f 8457		.strz	"FBL_CAN_NUMBER_OF_RANGES 0u"
00001428 4e554d4245525f4f
00001430 465f52414e474553
00001438 20307500        
0000143c 01               8458		.byte	1
0000143d 4b               8459		.byte	75
0000143e 46424c5f4e554d42 8460		.strz	"FBL_NUMBER_OF_RX_ID (FBL_CAN_NUMBER_OF_RX_ID + FBL_CAN_NUMBER_OF_RANGES)"
00001446 45525f4f465f5258
0000144e 5f4944202846424c
00001456 5f43414e5f4e554d
0000145e 4245525f4f465f52
00001466 585f4944202b2046
0000146e 424c5f43414e5f4e
00001476 554d4245525f4f46
0000147e 5f52414e47455329
00001486 00              
00001487 01               8461		.byte	1
00001488 54               8462		.byte	84
00001489 46424c5f4e554d42 8463		.strz	"FBL_NUMBER_OF_TX_ID 1u"
00001491 45525f4f465f5458
00001499 5f494420317500  
000014a0 01               8464		.byte	1
000014a1 57               8465		.byte	87
000014a2 46424c5f43575f43 8466		.strz	"FBL_CW_CFG_START_SEC_CONST "
000014aa 46475f5354415254
000014b2 5f5345435f434f4e
000014ba 53542000        
000014be 03               8467		.byte	3
000014bf 58               8468		.byte	88
000014c0 18               8469		.byte	24
000014c1 01               8470		.byte	1
000014c2 2b               8471		.byte	43
000014c3 46424c5f4d454d4d 8472		.strz	"FBL_MEMMAP_ERROR "
000014cb 41505f4552524f52
000014d3 2000            
000014d5 04               8473		.byte	4
000014d6 01               8474		.byte	1
000014d7 67               8475		.byte	103
000014d8 46424c5f43575f43 8476		.strz	"FBL_CW_CFG_STOP_SEC_CONST "
000014e0 46475f53544f505f
000014e8 5345435f434f4e53
000014f0 542000          
000014f3 03               8477		.byte	3
000014f4 68               8478		.byte	104
000014f5 18               8479		.byte	24
000014f6 01               8480		.byte	1
000014f7 2b               8481		.byte	43
000014f8 46424c5f4d454d4d 8482		.strz	"FBL_MEMMAP_ERROR "
00001500 41505f4552524f52
00001508 2000            
0000150a 04               8483		.byte	4
0000150b 01               8484		.byte	1
0000150c 6d               8485		.byte	109
0000150d 46424c5f43575f45 8486		.strz	"FBL_CW_ENABLE_PHYSICAL_REQUEST_HANDLER "
00001515 4e41424c455f5048
0000151d 59534943414c5f52
00001525 4551554553545f48
0000152d 414e444c45522000
00001535 01               8487		.byte	1
00001536 6e               8488		.byte	110
00001537 46424c5f43575f45 8489		.strz	"FBL_CW_ENABLE_FUNCTIONAL_REQUEST_HANDLER "
0000153f 4e41424c455f4655
00001547 4e4354494f4e414c
0000154f 5f52455155455354
00001557 5f48414e444c4552
0000155f 2000            
00001561 04               8490		.byte	4
00001562 03               8491		.byte	3
00001563 4d               8492		.byte	77
00001564 25               8493		.byte	37
00001565 03               8494		.byte	3
00001566 54               8495		.byte	84
00001567 26               8496		.byte	38
00001568 04               8497		.byte	4
00001569 01               8498		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 153
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000156a 6c               8499		.byte	108
0000156b 46626c436865636b 8500		.strz	"FblCheckBootVectTableIsValid() (((volatile vuint32*)ApplIntJmpTable)[0] == APPLVECT_FROM_BOOT)"
00001573 426f6f7456656374
0000157b 5461626c65497356
00001583 616c696428292028
0000158b 2828766f6c617469
00001593 6c65207675696e74
0000159b 33322a294170706c
000015a3 496e744a6d705461
000015ab 626c65295b305d20
000015b3 3d3d204150504c56
000015bb 4543545f46524f4d
000015c3 5f424f4f542900  
000015ca 01               8501		.byte	1
000015cb 74               8502		.byte	116
000015cc 4d554c5449504c45 8503		.strz	"MULTIPLE_RECEIVE_BUFFER "
000015d4 5f52454345495645
000015dc 5f42554646455220
000015e4 00              
000015e5 01               8504		.byte	1
000015e6 9902             8505		.byte	153,2
000015e8 6b46626c43616e4d 8506		.strz	"kFblCanMaxMB 16"
000015f0 61784d4220313600
000015f8 01               8507		.byte	1
000015f9 cd03             8508		.byte	205,3
000015fb 46424c48575f5241 8509		.strz	"FBLHW_RAMCODE_START_SEC_CODE "
00001603 4d434f44455f5354
0000160b 4152545f5345435f
00001613 434f44452000    
00001619 03               8510		.byte	3
0000161a ce03             8511		.byte	206,3
0000161c 18               8512		.byte	24
0000161d 01               8513		.byte	1
0000161e 2b               8514		.byte	43
0000161f 46424c5f4d454d4d 8515		.strz	"FBL_MEMMAP_ERROR "
00001627 41505f4552524f52
0000162f 2000            
00001631 04               8516		.byte	4
00001632 01               8517		.byte	1
00001633 d003             8518		.byte	208,3
00001635 46424c48575f5241 8519		.strz	"FBLHW_RAMCODE_STOP_SEC_CODE "
0000163d 4d434f44455f5354
00001645 4f505f5345435f43
0000164d 4f44452000      
00001652 03               8520		.byte	3
00001653 d103             8521		.byte	209,3
00001655 18               8522		.byte	24
00001656 01               8523		.byte	1
00001657 2b               8524		.byte	43
00001658 46424c5f4d454d4d 8525		.strz	"FBL_MEMMAP_ERROR "
00001660 41505f4552524f52
00001668 2000            
0000166a 04               8526		.byte	4
0000166b 01               8527		.byte	1
0000166c d703             8528		.byte	215,3
0000166e 46424c48575f5354 8529		.strz	"FBLHW_START_SEC_CODE "
00001676 4152545f5345435f
0000167e 434f44452000    
00001684 03               8530		.byte	3
00001685 d803             8531		.byte	216,3
00001687 18               8532		.byte	24
00001688 01               8533		.byte	1
00001689 2b               8534		.byte	43
0000168a 46424c5f4d454d4d 8535		.strz	"FBL_MEMMAP_ERROR "
00001692 41505f4552524f52
0000169a 2000            
0000169c 04               8536		.byte	4
0000169d 01               8537		.byte	1
0000169e da03             8538		.byte	218,3
000016a0 46424c48575f5354 8539		.strz	"FBLHW_STOP_SEC_CODE "
000016a8 4f505f5345435f43
000016b0 4f44452000      
000016b5 03               8540		.byte	3
000016b6 db03             8541		.byte	219,3
000016b8 18               8542		.byte	24
000016b9 01               8543		.byte	1
000016ba 2b               8544		.byte	43
000016bb 46424c5f4d454d4d 8545		.strz	"FBL_MEMMAP_ERROR "
000016c3 41505f4552524f52
000016cb 2000            
000016cd 04               8546		.byte	4
000016ce 01               8547		.byte	1
000016cf df03             8548		.byte	223,3
000016d1 46424c48575f4642 8549		.strz	"FBLHW_FBLCANTRANSMITTED_START_SEC_CODE "
000016d9 4c43414e5452414e
000016e1 534d49545445445f
000016e9 53544152545f5345
000016f1 435f434f44452000
000016f9 03               8550		.byte	3
000016fa e003             8551		.byte	224,3
000016fc 18               8552		.byte	24
000016fd 01               8553		.byte	1
000016fe 2b               8554		.byte	43

                                   Fri Apr 10 08:31:56 2020           Page 154
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000016ff 46424c5f4d454d4d 8555		.strz	"FBL_MEMMAP_ERROR "
00001707 41505f4552524f52
0000170f 2000            
00001711 04               8556		.byte	4
00001712 01               8557		.byte	1
00001713 e203             8558		.byte	226,3
00001715 46424c48575f4642 8559		.strz	"FBLHW_FBLCANTRANSMITTED_STOP_SEC_CODE "
0000171d 4c43414e5452414e
00001725 534d49545445445f
0000172d 53544f505f534543
00001735 5f434f44452000  
0000173c 03               8560		.byte	3
0000173d e303             8561		.byte	227,3
0000173f 18               8562		.byte	24
00001740 01               8563		.byte	1
00001741 2b               8564		.byte	43
00001742 46424c5f4d454d4d 8565		.strz	"FBL_MEMMAP_ERROR "
0000174a 41505f4552524f52
00001752 2000            
00001754 04               8566		.byte	4
00001755 01               8567		.byte	1
00001756 e503             8568		.byte	229,3
00001758 46424c48575f5354 8569		.strz	"FBLHW_START_SEC_CODE "
00001760 4152545f5345435f
00001768 434f44452000    
0000176e 03               8570		.byte	3
0000176f e603             8571		.byte	230,3
00001771 18               8572		.byte	24
00001772 01               8573		.byte	1
00001773 2b               8574		.byte	43
00001774 46424c5f4d454d4d 8575		.strz	"FBL_MEMMAP_ERROR "
0000177c 41505f4552524f52
00001784 2000            
00001786 04               8576		.byte	4
00001787 01               8577		.byte	1
00001788 e803             8578		.byte	232,3
0000178a 46424c48575f5354 8579		.strz	"FBLHW_STOP_SEC_CODE "
00001792 4f505f5345435f43
0000179a 4f44452000      
0000179f 03               8580		.byte	3
000017a0 e903             8581		.byte	233,3
000017a2 18               8582		.byte	24
000017a3 01               8583		.byte	1
000017a4 2b               8584		.byte	43
000017a5 46424c5f4d454d4d 8585		.strz	"FBL_MEMMAP_ERROR "
000017ad 41505f4552524f52
000017b5 2000            
000017b7 04               8586		.byte	4
000017b8 01               8587		.byte	1
000017b9 f903             8588		.byte	249,3
000017bb 4d454d4350595f53 8589		.strz	"MEMCPY_START_SEC_CODE "
000017c3 544152545f534543
000017cb 5f434f44452000  
000017d2 03               8590		.byte	3
000017d3 fa03             8591		.byte	250,3
000017d5 18               8592		.byte	24
000017d6 01               8593		.byte	1
000017d7 2b               8594		.byte	43
000017d8 46424c5f4d454d4d 8595		.strz	"FBL_MEMMAP_ERROR "
000017e0 41505f4552524f52
000017e8 2000            
000017ea 04               8596		.byte	4
000017eb 01               8597		.byte	1
000017ec fd03             8598		.byte	253,3
000017ee 4d454d4350595f53 8599		.strz	"MEMCPY_STOP_SEC_CODE "
000017f6 544f505f5345435f
000017fe 434f44452000    
00001804 03               8600		.byte	3
00001805 fe03             8601		.byte	254,3
00001807 18               8602		.byte	24
00001808 01               8603		.byte	1
00001809 2b               8604		.byte	43
0000180a 46424c5f4d454d4d 8605		.strz	"FBL_MEMMAP_ERROR "
00001812 41505f4552524f52
0000181a 2000            
0000181c 04               8606		.byte	4
0000181d 04               8607		.byte	4
0000181e 03               8608		.byte	3
0000181f 4e               8609		.byte	78
00001820 27               8610		.byte	39

                                   Fri Apr 10 08:31:56 2020           Page 155
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001821 01               8611		.byte	1
00001822 3b               8612		.byte	59
00001823 46424c5f54505f45 8613		.strz	"FBL_TP_ENABLE_ISO15765_2_2 "
0000182b 4e41424c455f4953
00001833 4f31353736355f32
0000183b 5f322000        
0000183f 01               8614		.byte	1
00001840 41               8615		.byte	65
00001841 46424c5f54505f45 8616		.strz	"FBL_TP_ENABLE_CONFIRMATION_INTERRUPT "
00001849 4e41424c455f434f
00001851 4e4649524d415449
00001859 4f4e5f494e544552
00001861 525550542000    
00001867 04               8617		.byte	4
00001868 03               8618		.byte	3
00001869 4f               8619		.byte	79
0000186a 28               8620		.byte	40
0000186b 01               8621		.byte	1
0000186c b101             8622		.byte	177,1
0000186e 46424c54505f5241 8623		.strz	"FBLTP_RAMCODE_START_SEC_CODE "
00001876 4d434f44455f5354
0000187e 4152545f5345435f
00001886 434f44452000    
0000188c 03               8624		.byte	3
0000188d b201             8625		.byte	178,1
0000188f 18               8626		.byte	24
00001890 01               8627		.byte	1
00001891 2b               8628		.byte	43
00001892 46424c5f4d454d4d 8629		.strz	"FBL_MEMMAP_ERROR "
0000189a 41505f4552524f52
000018a2 2000            
000018a4 04               8630		.byte	4
000018a5 01               8631		.byte	1
000018a6 c301             8632		.byte	195,1
000018a8 46424c54505f5241 8633		.strz	"FBLTP_RAMCODE_STOP_SEC_CODE "
000018b0 4d434f44455f5354
000018b8 4f505f5345435f43
000018c0 4f44452000      
000018c5 03               8634		.byte	3
000018c6 c401             8635		.byte	196,1
000018c8 18               8636		.byte	24
000018c9 01               8637		.byte	1
000018ca 2b               8638		.byte	43
000018cb 46424c5f4d454d4d 8639		.strz	"FBL_MEMMAP_ERROR "
000018d3 41505f4552524f52
000018db 2000            
000018dd 04               8640		.byte	4
000018de 04               8641		.byte	4
000018df 01               8642		.byte	1
000018e0 c601             8643		.byte	198,1
000018e2 46424c5f43575f46 8644		.strz	"FBL_CW_FULL_START_SEC_CODE "
000018ea 554c4c5f53544152
000018f2 545f5345435f434f
000018fa 44452000        
000018fe 03               8645		.byte	3
000018ff c701             8646		.byte	199,1
00001901 18               8647		.byte	24
00001902 01               8648		.byte	1
00001903 2b               8649		.byte	43
00001904 46424c5f4d454d4d 8650		.strz	"FBL_MEMMAP_ERROR "
0000190c 41505f4552524f52
00001914 2000            
00001916 04               8651		.byte	4
00001917 01               8652		.byte	1
00001918 cd01             8653		.byte	205,1
0000191a 46424c5f43575f54 8654		.strz	"FBL_CW_TASK_START_SEC_CODE "
00001922 41534b5f53544152
0000192a 545f5345435f434f
00001932 44452000        
00001936 03               8655		.byte	3
00001937 ce01             8656		.byte	206,1
00001939 18               8657		.byte	24
0000193a 01               8658		.byte	1
0000193b 2b               8659		.byte	43
0000193c 46424c5f4d454d4d 8660		.strz	"FBL_MEMMAP_ERROR "
00001944 41505f4552524f52
0000194c 2000            
0000194e 04               8661		.byte	4
0000194f 01               8662		.byte	1
00001950 d101             8663		.byte	209,1
00001952 46424c5f43575f54 8664		.strz	"FBL_CW_TASK_STOP_SEC_CODE "
0000195a 41534b5f53544f50
00001962 5f5345435f434f44
0000196a 452000          
0000196d 03               8665		.byte	3
0000196e d201             8666		.byte	210,1

                                   Fri Apr 10 08:31:56 2020           Page 156
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001970 18               8667		.byte	24
00001971 01               8668		.byte	1
00001972 2b               8669		.byte	43
00001973 46424c5f4d454d4d 8670		.strz	"FBL_MEMMAP_ERROR "
0000197b 41505f4552524f52
00001983 2000            
00001985 04               8671		.byte	4
00001986 01               8672		.byte	1
00001987 fa01             8673		.byte	250,1
00001989 46424c5f43575f46 8674		.strz	"FBL_CW_FULL_STOP_SEC_CODE "
00001991 554c4c5f53544f50
00001999 5f5345435f434f44
000019a1 452000          
000019a4 03               8675		.byte	3
000019a5 fb01             8676		.byte	251,1
000019a7 18               8677		.byte	24
000019a8 01               8678		.byte	1
000019a9 2b               8679		.byte	43
000019aa 46424c5f4d454d4d 8680		.strz	"FBL_MEMMAP_ERROR "
000019b2 41505f4552524f52
000019ba 2000            
000019bc 04               8681		.byte	4
000019bd 04               8682		.byte	4
000019be 03               8683		.byte	3
000019bf 8e01             8684		.byte	142,1
000019c1 29               8685		.byte	41
000019c2 03               8686		.byte	3
000019c3 39               8687		.byte	57
000019c4 2a               8688		.byte	42
000019c5 03               8689		.byte	3
000019c6 3b               8690		.byte	59
000019c7 2b               8691		.byte	43
000019c8 01               8692		.byte	1
000019c9 31               8693		.byte	49
000019ca 4e565f454e41424c 8694		.strz	"NV_ENABLE_ADDRESS_LOOKUP "
000019d2 455f414444524553
000019da 535f4c4f4f4b5550
000019e2 2000            
000019e4 01               8695		.byte	1
000019e5 5c               8696		.byte	92
000019e6 6b45657053697a65 8697		.strz	"kEepSizeProgReqFlag 0x01u"
000019ee 50726f6752657146
000019f6 6c61672030783031
000019fe 7500            
00001a00 01               8698		.byte	1
00001a01 5d               8699		.byte	93
00001a02 6b45657053697a65 8700		.strz	"kEepSizeResetResponseFlag 0x01u"
00001a0a 5265736574526573
00001a12 706f6e7365466c61
00001a1a 6720307830317500
00001a22 01               8701		.byte	1
00001a23 5e               8702		.byte	94
00001a24 6b45657053697a65 8703		.strz	"kEepSizeApplValidity 0x01u"
00001a2c 4170706c56616c69
00001a34 6469747920307830
00001a3c 317500          
00001a3f 01               8704		.byte	1
00001a40 5f               8705		.byte	95
00001a41 6b45657053697a65 8706		.strz	"kEepSizeValidityFlags 0x01u"
00001a49 56616c6964697479
00001a51 466c616773203078
00001a59 30317500        
00001a5d 01               8707		.byte	1
00001a5e 60               8708		.byte	96
00001a5f 6b45657053697a65 8709		.strz	"kEepSizeTesterSerialNumber 0x08u"
00001a67 5465737465725365
00001a6f 7269616c4e756d62
00001a77 6572203078303875
00001a7f 00              
00001a80 01               8710		.byte	1
00001a81 61               8711		.byte	97
00001a82 6b45657053697a65 8712		.strz	"kEepSizeProgrammingDate 0x03u"
00001a8a 50726f6772616d6d
00001a92 696e674461746520
00001a9a 307830337500    
00001aa0 01               8713		.byte	1
00001aa1 62               8714		.byte	98
00001aa2 6b45657053697a65 8715		.strz	"kEepSizeSymcPartNumber 0x0Au"
00001aaa 53796d6350617274
00001ab2 4e756d6265722030
00001aba 7830417500      
00001abf 01               8716		.byte	1
00001ac0 63               8717		.byte	99
00001ac1 6b45657053697a65 8718		.strz	"kEepSizeSymcSoftwareVersion 0x02u"
00001ac9 53796d63536f6674
00001ad1 7761726556657273
00001ad9 696f6e2030783032
00001ae1 7500            
00001ae3 01               8719		.byte	1
00001ae4 64               8720		.byte	100
00001ae5 6b45657053697a65 8721		.strz	"kEepSizeSystemSupplierCode 0x05u"
00001aed 53797374656d5375
00001af5 70706c696572436f
00001afd 6465203078303575
00001b05 00              
00001b06 01               8722		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 157
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001b07 65               8723		.byte	101
00001b08 6b45657053697a65 8724		.strz	"kEepSizeProcessData (kEepSizeTesterSerialNumber + kEepSizeProgrammingDate + kEepSizeSymcPartNumber + kEepSizeSymcSoftwareVersion + kEepSizeSystemSupplierCode)"
00001b10 50726f6365737344
00001b18 61746120286b4565
00001b20 7053697a65546573
00001b28 7465725365726961
00001b30 6c4e756d62657220
00001b38 2b206b4565705369
00001b40 7a6550726f677261
00001b48 6d6d696e67446174
00001b50 65202b206b456570
00001b58 53697a6553796d63
00001b60 506172744e756d62
00001b68 6572202b206b4565
00001b70 7053697a6553796d
00001b78 63536f6674776172
00001b80 6556657273696f6e
00001b88 202b206b45657053
00001b90 697a655379737465
00001b98 6d537570706c6965
00001ba0 72436f64652900  
00001ba7 01               8725		.byte	1
00001ba8 66               8726		.byte	102
00001ba9 6b45657053697a65 8727		.strz	"kEepSizeProgCounter 0x02u"
00001bb1 50726f67436f756e
00001bb9 7465722030783032
00001bc1 7500            
00001bc3 01               8728		.byte	1
00001bc4 67               8729		.byte	103
00001bc5 6b45657053697a65 8730		.strz	"kEepSizeProgAttempts 0x02u"
00001bcd 50726f6741747465
00001bd5 6d70747320307830
00001bdd 327500          
00001be0 01               8731		.byte	1
00001be1 68               8732		.byte	104
00001be2 6b45657053697a65 8733		.strz	"kEepSizeCRCValue 0x04u"
00001bea 43524356616c7565
00001bf2 20307830347500  
00001bf9 01               8734		.byte	1
00001bfa 69               8735		.byte	105
00001bfb 6b45657053697a65 8736		.strz	"kEepSizeCRCStart 0x04u"
00001c03 4352435374617274
00001c0b 20307830347500  
00001c12 01               8737		.byte	1
00001c13 6a               8738		.byte	106
00001c14 6b45657053697a65 8739		.strz	"kEepSizeCRCLength 0x04u"
00001c1c 4352434c656e6774
00001c24 6820307830347500
00001c2c 01               8740		.byte	1
00001c2d 6b               8741		.byte	107
00001c2e 6b45657053697a65 8742		.strz	"kEepSizeMetadata (kEepSizeProgCounter + kEepSizeProgAttempts + kEepSizeCRCValue + kEepSizeCRCStart + kEepSizeCRCLength)"
00001c36 4d65746164617461
00001c3e 20286b4565705369
00001c46 7a6550726f67436f
00001c4e 756e746572202b20
00001c56 6b45657053697a65
00001c5e 50726f6741747465
00001c66 6d707473202b206b
00001c6e 45657053697a6543
00001c76 524356616c756520
00001c7e 2b206b4565705369
00001c86 7a65435243537461
00001c8e 7274202b206b4565
00001c96 7053697a65435243
00001c9e 4c656e6774682900
00001ca6 01               8743		.byte	1
00001ca7 6f               8744		.byte	111
00001ca8 6b45657046626c42 8745		.strz	"kEepFblBaseAddress 0x40008B00u"
00001cb0 6173654164647265
00001cb8 7373203078343030
00001cc0 30384230307500  
00001cc7 01               8746		.byte	1
00001cc8 70               8747		.byte	112
00001cc9 6b45657053746172 8748		.strz	"kEepStartAddress kEepFblBaseAddress"
00001cd1 7441646472657373
00001cd9 206b45657046626c
00001ce1 4261736541646472
00001ce9 65737300        
00001ced 01               8749		.byte	1
00001cee 71               8750		.byte	113
00001cef 6b45657041646472 8751		.strz	"kEepAddressProgReqFlag kEepStartAddress"
00001cf7 65737350726f6752
00001cff 6571466c6167206b
00001d07 4565705374617274
00001d0f 4164647265737300
00001d17 01               8752		.byte	1
00001d18 72               8753		.byte	114
00001d19 6b45657041646472 8754		.strz	"kEepAddressResetResponseFlag (kEepAddressProgReqFlag + kEepSizeProgReqFlag)"
00001d21 6573735265736574
00001d29 526573706f6e7365
00001d31 466c616720286b45
00001d39 6570416464726573
00001d41 7350726f67526571
00001d49 466c6167202b206b
00001d51 45657053697a6550
00001d59 726f67526571466c
00001d61 61672900        
00001d65 01               8755		.byte	1
00001d66 73               8756		.byte	115
00001d67 6b45657041646472 8757		.strz	"kEepAddressApplValidity (kEepAddressResetResponseFlag + kEepSizeResetResponseFlag)"
00001d6f 6573734170706c56
00001d77 616c696469747920
00001d7f 286b456570416464
00001d87 7265737352657365
00001d8f 74526573706f6e73
00001d97 65466c6167202b20
00001d9f 6b45657053697a65
00001da7 5265736574526573
00001daf 706f6e7365466c61
00001db7 672900          
00001dba 01               8758		.byte	1
00001dbb 74               8759		.byte	116
00001dbc 6b45657041646472 8760		.strz	"kEepAddressValidityFlags (kEepAddressApplValidity + kEepSizeApplValidity)"
00001dc4 65737356616c6964
00001dcc 697479466c616773
00001dd4 20286b4565704164
00001ddc 6472657373417070
00001de4 6c56616c69646974
00001dec 79202b206b456570
00001df4 53697a654170706c
00001dfc 56616c6964697479
00001e04 2900            
00001e06 01               8761		.byte	1
00001e07 75               8762		.byte	117
00001e08 6b45657041646472 8763		.strz	"kEepAddressProcessData (kEepAddressValidityFlags + kEepSizeValidityFlags)"
00001e10 65737350726f6365
00001e18 7373446174612028
00001e20 6b45657041646472
00001e28 65737356616c6964
00001e30 697479466c616773
00001e38 202b206b45657053
00001e40 697a6556616c6964
00001e48 697479466c616773
00001e50 2900            
00001e52 01               8764		.byte	1
00001e53 7b               8765		.byte	123
00001e54 6b45657041646472 8766		.strz	"kEepAddressMetadata (kEepAddressProcessData + kEepSizeProcessData)"
00001e5c 6573734d65746164
00001e64 61746120286b4565
00001e6c 7041646472657373
00001e74 50726f6365737344
00001e7c 617461202b206b45
00001e84 657053697a655072
00001e8c 6f63657373446174
00001e94 612900          
00001e97 01               8767		.byte	1
00001e98 7c               8768		.byte	124
00001e99 6b45657041646472 8769		.strz	"kEepAddressProgCounter kEepAddressMetadata"
00001ea1 65737350726f6743
00001ea9 6f756e746572206b
00001eb1 4565704164647265
00001eb9 73734d6574616461
00001ec1 746100          
00001ec4 01               8770		.byte	1
00001ec5 7d               8771		.byte	125
00001ec6 6b45657041646472 8772		.strz	"kEepAddressProgAttempts (kEepAddressProgCounter + kEepSizeProgCounter)"
00001ece 65737350726f6741
00001ed6 7474656d70747320
00001ede 286b456570416464
00001ee6 7265737350726f67
00001eee 436f756e74657220
00001ef6 2b206b4565705369
00001efe 7a6550726f67436f
00001f06 756e7465722900  
00001f0d 01               8773		.byte	1
00001f0e 7e               8774		.byte	126
00001f0f 6b45657041646472 8775		.strz	"kEepAddressCRCValue (kEepAddressProgAttempts + kEepSizeProgAttempts)"
00001f17 6573734352435661
00001f1f 6c756520286b4565
00001f27 7041646472657373
00001f2f 50726f6741747465
00001f37 6d707473202b206b
00001f3f 45657053697a6550
00001f47 726f67417474656d
00001f4f 7074732900      
00001f54 01               8776		.byte	1
00001f55 7f               8777		.byte	127
00001f56 6b45657041646472 8778		.strz	"kEepAddressCRCStart (kEepAddressCRCValue + kEepSizeCRCValue)"
00001f5e 6573734352435374
00001f66 61727420286b4565
00001f6e 7041646472657373
00001f76 43524356616c7565
00001f7e 202b206b45657053
00001f86 697a654352435661
00001f8e 6c75652900      

                                   Fri Apr 10 08:31:56 2020           Page 158
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00001f93 01               8779		.byte	1
00001f94 8001             8780		.byte	128,1
00001f96 6b45657041646472 8781		.strz	"kEepAddressCRCLength (kEepAddressCRCStart + kEepSizeCRCStart)"
00001f9e 6573734352434c65
00001fa6 6e67746820286b45
00001fae 6570416464726573
00001fb6 7343524353746172
00001fbe 74202b206b456570
00001fc6 53697a6543524353
00001fce 746172742900    
00001fd4 01               8782		.byte	1
00001fd5 c301             8783		.byte	195,1
00001fd7 4170706c46626c4e 8784		.strz	"ApplFblNvReadValidityFlags(buf) ((EepromDriver_RReadSync(buf, kEepSizeValidityFlags, kEepAddressValidityFlags) == IO_E_OK) ? kFblOk : kFblFailed)"
00001fdf 765265616456616c
00001fe7 6964697479466c61
00001fef 6773286275662920
00001ff7 2828456570726f6d
00001fff 4472697665725f52
00002007 5265616453796e63
0000200f 286275662c206b45
00002017 657053697a655661
0000201f 6c6964697479466c
00002027 6167732c206b4565
0000202f 7041646472657373
00002037 56616c6964697479
0000203f 466c61677329203d
00002047 3d20494f5f455f4f
0000204f 4b29203f206b4662
00002057 6c4f6b203a206b46
0000205f 626c4661696c6564
00002067 2900            
00002069 01               8785		.byte	1
0000206a c401             8786		.byte	196,1
0000206c 4170706c46626c4e 8787		.strz	"ApplFblNvWriteValidityFlags(buf) ((EepromDriver_RWriteSync(buf, kEepSizeValidityFlags, kEepAddressValidityFlags) == IO_E_OK) ? kFblOk : kFblFailed)"
00002074 7657726974655661
0000207c 6c6964697479466c
00002084 6167732862756629
0000208c 202828456570726f
00002094 6d4472697665725f
0000209c 5257726974655379
000020a4 6e63286275662c20
000020ac 6b45657053697a65
000020b4 56616c6964697479
000020bc 466c6167732c206b
000020c4 4565704164647265
000020cc 737356616c696469
000020d4 7479466c61677329
000020dc 203d3d20494f5f45
000020e4 5f4f4b29203f206b
000020ec 46626c4f6b203a20
000020f4 6b46626c4661696c
000020fc 65642900        
00002100 01               8788		.byte	1
00002101 f301             8789		.byte	243,1
00002103 4170706c46626c4e 8790		.strz	"ApplFblNvReadProgCounter(idx,buf) ((EepromDriver_RReadSync(buf, kEepSizeProgCounter, kEepAddressProgCounter + (idx * kEepSizeMetadata)) == IO_E_OK) ? kFblOk : kFblFailed)"
0000210b 765265616450726f
00002113 67436f756e746572
0000211b 286964782c627566
00002123 2920282845657072
0000212b 6f6d447269766572
00002133 5f52526561645379
0000213b 6e63286275662c20
00002143 6b45657053697a65
0000214b 50726f67436f756e
00002153 7465722c206b4565
0000215b 7041646472657373
00002163 50726f67436f756e
0000216b 746572202b202869
00002173 6478202a206b4565
0000217b 7053697a654d6574
00002183 6164617461292920
0000218b 3d3d20494f5f455f
00002193 4f4b29203f206b46
0000219b 626c4f6b203a206b
000021a3 46626c4661696c65
000021ab 642900          
000021ae 01               8791		.byte	1
000021af f401             8792		.byte	244,1
000021b1 4170706c46626c4e 8793		.strz	"ApplFblNvWriteProgCounter(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeProgCounter, kEepAddressProgCounter + (idx * kEepSizeMetadata)) == IO_E_OK) ? kFblOk : kFblFailed)"
000021b9 7657726974655072
000021c1 6f67436f756e7465
000021c9 72286964782c6275
000021d1 6629202828456570
000021d9 726f6d4472697665
000021e1 725f525772697465
000021e9 53796e6328627566
000021f1 2c206b4565705369
000021f9 7a6550726f67436f
00002201 756e7465722c206b
00002209 4565704164647265
00002211 737350726f67436f
00002219 756e746572202b20
00002221 28696478202a206b
00002229 45657053697a654d
00002231 6574616461746129
00002239 29203d3d20494f5f
00002241 455f4f4b29203f20
00002249 6b46626c4f6b203a
00002251 206b46626c466169
00002259 6c65642900      
0000225e 01               8794		.byte	1
0000225f fb01             8795		.byte	251,1
00002261 4170706c46626c4e 8796		.strz	"ApplFblNvReadProgAttempts(idx,buf) ((EepromDriver_RReadSync(buf, kEepSizeProgAttempts, kEepAddressProgAttempts + (idx * kEepSizeMetadata)) == IO_E_OK) ? kFblOk : kFblFailed)"
00002269 765265616450726f
00002271 67417474656d7074
00002279 73286964782c6275
00002281 6629202828456570
00002289 726f6d4472697665
00002291 725f525265616453
00002299 796e63286275662c
000022a1 206b45657053697a
000022a9 6550726f67417474
000022b1 656d7074732c206b
000022b9 4565704164647265
000022c1 737350726f674174
000022c9 74656d707473202b
000022d1 2028696478202a20
000022d9 6b45657053697a65
000022e1 4d65746164617461
000022e9 2929203d3d20494f
000022f1 5f455f4f4b29203f
000022f9 206b46626c4f6b20
00002301 3a206b46626c4661
00002309 696c65642900    
0000230f 01               8797		.byte	1
00002310 fc01             8798		.byte	252,1
00002312 4170706c46626c4e 8799		.strz	"ApplFblNvWriteProgAttempts(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeProgAttempts, kEepAddressProgAttempts + (idx * kEepSizeMetadata)) == IO_E_OK) ? kFblOk : kFblFailed)"
0000231a 7657726974655072
00002322 6f67417474656d70
0000232a 7473286964782c62
00002332 7566292028284565
0000233a 70726f6d44726976
00002342 65725f5257726974
0000234a 6553796e63286275
00002352 662c206b45657053
0000235a 697a6550726f6741
00002362 7474656d7074732c
0000236a 206b456570416464
00002372 7265737350726f67
0000237a 417474656d707473
00002382 202b202869647820
0000238a 2a206b4565705369
00002392 7a654d6574616461
0000239a 74612929203d3d20
000023a2 494f5f455f4f4b29
000023aa 203f206b46626c4f
000023b2 6b203a206b46626c
000023ba 4661696c65642900
000023c2 01               8800		.byte	1
000023c3 8402             8801		.byte	132,2
000023c5 4170706c46626c4e 8802		.strz	"ApplFblNvWriteCRCValue(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeCRCValue, kEepAddressCRCValue + (idx * kEepSizeMetadata)) == IO_E_OK) ? kFblOk : kFblFailed)"
000023cd 7657726974654352
000023d5 4356616c75652869
000023dd 64782c6275662920
000023e5 2828456570726f6d
000023ed 4472697665725f52
000023f5 577269746553796e
000023fd 63286275662c206b
00002405 45657053697a6543
0000240d 524356616c75652c
00002415 206b456570416464
0000241d 7265737343524356
00002425 616c7565202b2028
0000242d 696478202a206b45
00002435 657053697a654d65
0000243d 7461646174612929
00002445 203d3d20494f5f45
0000244d 5f4f4b29203f206b
00002455 46626c4f6b203a20
0000245d 6b46626c4661696c
00002465 65642900        
00002469 01               8803		.byte	1
0000246a 8c02             8804		.byte	140,2
0000246c 4170706c46626c4e 8805		.strz	"ApplFblNvWriteCRCStart(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeCRCStart, kEepAddressCRCStart + (idx * kEepSizeMetadata)) == IO_E_OK) ? kFblOk : kFblFailed)"
00002474 7657726974654352
0000247c 4353746172742869
00002484 64782c6275662920
0000248c 2828456570726f6d
00002494 4472697665725f52
0000249c 577269746553796e
000024a4 63286275662c206b
000024ac 45657053697a6543
000024b4 524353746172742c
000024bc 206b456570416464
000024c4 7265737343524353
000024cc 74617274202b2028
000024d4 696478202a206b45
000024dc 657053697a654d65
000024e4 7461646174612929
000024ec 203d3d20494f5f45
000024f4 5f4f4b29203f206b
000024fc 46626c4f6b203a20
00002504 6b46626c4661696c
0000250c 65642900        
00002510 01               8806		.byte	1
00002511 9402             8807		.byte	148,2
00002513 4170706c46626c4e 8808		.strz	"ApplFblNvWriteCRCLength(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeCRCLength, kEepAddressCRCLength + (idx * kEepSizeMetadata)) == IO_E_OK) ? kFblOk : kFblFailed)"
0000251b 7657726974654352
00002523 434c656e67746828
0000252b 6964782c62756629
00002533 202828456570726f
0000253b 6d4472697665725f
00002543 5257726974655379
0000254b 6e63286275662c20
00002553 6b45657053697a65
0000255b 4352434c656e6774
00002563 682c206b45657041
0000256b 6464726573734352
00002573 434c656e67746820
0000257b 2b2028696478202a
00002583 206b45657053697a
0000258b 654d657461646174
00002593 612929203d3d2049
0000259b 4f5f455f4f4b2920
000025a3 3f206b46626c4f6b
000025ab 203a206b46626c46
000025b3 61696c65642900  
000025ba 04               8809		.byte	4
000025bb 04               8810		.byte	4
000025bc 04               8811		.byte	4
000025bd 03               8812		.byte	3
000025be 9501             8813		.byte	149,1
000025c0 2c               8814		.byte	44
000025c1 01               8815		.byte	1
000025c2 40               8816		.byte	64
000025c3 46424c5f4642545f 8817		.strz	"FBL_FBT_START_SEC_CONST "
000025cb 53544152545f5345
000025d3 435f434f4e535420
000025db 00              
000025dc 03               8818		.byte	3
000025dd 41               8819		.byte	65
000025de 18               8820		.byte	24
000025df 01               8821		.byte	1
000025e0 2b               8822		.byte	43
000025e1 46424c5f4d454d4d 8823		.strz	"FBL_MEMMAP_ERROR "
000025e9 41505f4552524f52
000025f1 2000            
000025f3 04               8824		.byte	4
000025f4 01               8825		.byte	1
000025f5 47               8826		.byte	71
000025f6 46424c5f4642545f 8827		.strz	"FBL_FBT_STOP_SEC_CONST "
000025fe 53544f505f534543
00002606 5f434f4e53542000
0000260e 03               8828		.byte	3
0000260f 48               8829		.byte	72
00002610 18               8830		.byte	24
00002611 01               8831		.byte	1
00002612 2b               8832		.byte	43
00002613 46424c5f4d454d4d 8833		.strz	"FBL_MEMMAP_ERROR "
0000261b 41505f4552524f52
00002623 2000            
00002625 04               8834		.byte	4

                                   Fri Apr 10 08:31:56 2020           Page 159
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00002626 04               8835		.byte	4
00002627 03               8836		.byte	3
00002628 a101             8837		.byte	161,1
0000262a 2d               8838		.byte	45
0000262b 03               8839		.byte	3
0000262c 4b               8840		.byte	75
0000262d 2e               8841		.byte	46
0000262e 01               8842		.byte	1
0000262f 56               8843		.byte	86
00002630 46424c5f44494147 8844		.strz	"FBL_DIAG_ENABLE_CORE_SEGMENTHANDLING "
00002638 5f454e41424c455f
00002640 434f52455f534547
00002648 4d454e5448414e44
00002650 4c494e472000    
00002656 01               8845		.byte	1
00002657 61               8846		.byte	97
00002658 6b44696167537461 8847		.strz	"kDiagStateIdxSecurityKeyAllowed (kDiagLastCoreStateIdx + 1u)"
00002660 7465496478536563
00002668 75726974794b6579
00002670 416c6c6f77656420
00002678 286b446961674c61
00002680 7374436f72655374
00002688 617465496478202b
00002690 2031752900      
00002695 01               8848		.byte	1
00002696 62               8849		.byte	98
00002697 6b44696167537461 8850		.strz	"kDiagStateIdxSecurityUnlock (kDiagStateIdxSecurityKeyAllowed + 1u)"
0000269f 7465496478536563
000026a7 7572697479556e6c
000026af 6f636b20286b4469
000026b7 6167537461746549
000026bf 6478536563757269
000026c7 74794b6579416c6c
000026cf 6f776564202b2031
000026d7 752900          
000026da 01               8851		.byte	1
000026db 63               8852		.byte	99
000026dc 6b44696167537461 8853		.strz	"kDiagStateIdxFingerprintValid (kDiagStateIdxSecurityUnlock + 1u)"
000026e4 746549647846696e
000026ec 6765727072696e74
000026f4 56616c696420286b
000026fc 4469616753746174
00002704 6549647853656375
0000270c 72697479556e6c6f
00002714 636b202b20317529
0000271c 00              
0000271d 01               8854		.byte	1
0000271e 64               8855		.byte	100
0000271f 6b44696167537461 8856		.strz	"kDiagStateIdxEraseSucceeded (kDiagStateIdxFingerprintValid + 1u)"
00002727 7465496478457261
0000272f 7365537563636565
00002737 64656420286b4469
0000273f 6167537461746549
00002747 647846696e676572
0000274f 7072696e7456616c
00002757 6964202b20317529
0000275f 00              
00002760 01               8857		.byte	1
00002761 65               8858		.byte	101
00002762 6b44696167537461 8859		.strz	"kDiagStateIdxTransferDataAllowed (kDiagStateIdxEraseSucceeded + 1u)"
0000276a 7465496478547261
00002772 6e73666572446174
0000277a 61416c6c6f776564
00002782 20286b4469616753
0000278a 7461746549647845
00002792 7261736553756363
0000279a 6565646564202b20
000027a2 31752900        
000027a6 01               8860		.byte	1
000027a7 66               8861		.byte	102
000027a8 6b44696167537461 8862		.strz	"kDiagStateIdxTransferDataSucceeded (kDiagStateIdxTransferDataAllowed + 1u)"
000027b0 7465496478547261
000027b8 6e73666572446174
000027c0 6153756363656564
000027c8 656420286b446961
000027d0 6753746174654964
000027d8 785472616e736665
000027e0 7244617461416c6c
000027e8 6f776564202b2031
000027f0 752900          
000027f3 01               8863		.byte	1
000027f4 67               8864		.byte	103
000027f5 6b44696167537461 8865		.strz	"kDiagStateIdxChecksumAllowed (kDiagStateIdxTransferDataSucceeded + 1u)"
000027fd 7465496478436865
00002805 636b73756d416c6c
0000280d 6f77656420286b44
00002815 6961675374617465
0000281d 4964785472616e73
00002825 6665724461746153
0000282d 7563636565646564
00002835 202b2031752900  
0000283c 01               8866		.byte	1
0000283d 69               8867		.byte	105
0000283e 6b446961674c6173 8868		.strz	"kDiagLastOemStateIdx kDiagStateIdxChecksumAllowed"
00002846 744f656d53746174
0000284e 65496478206b4469
00002856 6167537461746549
0000285e 6478436865636b73
00002866 756d416c6c6f7765
0000286e 6400            
00002870 04               8869		.byte	4
00002871 01               8870		.byte	1
00002872 5a               8871		.byte	90
00002873 6b4469616743616c 8872		.strz	"kDiagCallCycle 1u"
0000287b 6c4379636c652031
00002883 7500            
00002885 01               8873		.byte	1
00002886 7d               8874		.byte	125
00002887 6b44696167537461 8875		.strz	"kDiagStateIdxMemDriverInitialized 17u"
0000288f 74654964784d656d
00002897 447269766572496e
0000289f 697469616c697a65
000028a7 642031377500    
000028ad 01               8876		.byte	1
000028ae 7f               8877		.byte	127
000028af 6b446961674c6173 8878		.strz	"kDiagLastCoreStateIdx kDiagStateIdxMemDriverInitialized"
000028b7 74436f7265537461
000028bf 7465496478206b44
000028c7 6961675374617465
000028cf 4964784d656d4472
000028d7 69766572496e6974
000028df 69616c697a656400
000028e7 01               8879		.byte	1
000028e8 8201             8880		.byte	130,1
000028ea 6b446961674e756d 8881		.strz	"kDiagNumberOfStates ( kDiagLastOemStateIdx + 1u )"
000028f2 6265724f66537461
000028fa 7465732028206b44
00002902 6961674c6173744f
0000290a 656d537461746549
00002912 6478202b20317520
0000291a 2900            
0000291c 01               8882		.byte	1
0000291d 8301             8883		.byte	131,1
0000291f 6b446961674e756d 8884		.strz	"kDiagNumberOfDispatchStates kDiagNumberOfStates"
00002927 6265724f66446973
0000292f 7061746368537461
00002937 746573206b446961
0000293f 674e756d6265724f
00002947 6653746174657300
0000294f 01               8885		.byte	1
00002950 c801             8886		.byte	200,1
00002952 46424c5f44494147 8887		.strz	"FBL_DIAG_STATECHECK_ARRAYSIZE (((kDiagNumberOfDispatchStates - 1u) / FBL_STATE_BITS) + 1u)"
0000295a 5f53544154454348
00002962 45434b5f41525241
0000296a 5953495a45202828
00002972 286b446961674e75
0000297a 6d6265724f664469
00002982 7370617463685374
0000298a 61746573202d2031
00002992 7529202f2046424c
0000299a 5f53544154455f42
000029a2 49545329202b2031
000029aa 752900          
000029ad 01               8888		.byte	1
000029ae ae02             8889		.byte	174,2
000029b0 6b44696167457272 8890		.strz	"kDiagErrorNone 0x00u"
000029b8 6f724e6f6e652030
000029c0 7830307500      

                                   Fri Apr 10 08:31:56 2020           Page 160
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000029c5 01               8891		.byte	1
000029c6 af02             8892		.byte	175,2
000029c8 6b446961674e7263 8893		.strz	"kDiagNrcGeneralReject 0x10u"
000029d0 47656e6572616c52
000029d8 656a656374203078
000029e0 31307500        
000029e4 01               8894		.byte	1
000029e5 b502             8895		.byte	181,2
000029e7 6b446961674e7263 8896		.strz	"kDiagNrcConditionsNotCorrect 0x22u"
000029ef 436f6e646974696f
000029f7 6e734e6f74436f72
000029ff 7265637420307832
00002a07 327500          
00002a0a 01               8897		.byte	1
00002a0b b602             8898		.byte	182,2
00002a0d 6b446961674e7263 8899		.strz	"kDiagNrcRequestSequenceError 0x24u"
00002a15 5265717565737453
00002a1d 657175656e636545
00002a25 72726f7220307832
00002a2d 347500          
00002a30 01               8900		.byte	1
00002a31 b702             8901		.byte	183,2
00002a33 6b446961674e7263 8902		.strz	"kDiagNrcRequestOutOfRange 0x31u"
00002a3b 526571756573744f
00002a43 75744f6652616e67
00002a4b 6520307833317500
00002a53 01               8903		.byte	1
00002a54 bc02             8904		.byte	188,2
00002a56 6b446961674e7263 8905		.strz	"kDiagNrcUploadDownloadNotAccepted 0x70u"
00002a5e 55706c6f6164446f
00002a66 776e6c6f61644e6f
00002a6e 7441636365707465
00002a76 6420307837307500
00002a7e 01               8906		.byte	1
00002a7f bd02             8907		.byte	189,2
00002a81 6b446961674e7263 8908		.strz	"kDiagNrcTransferDataSuspended 0x71u"
00002a89 5472616e73666572
00002a91 4461746153757370
00002a99 656e646564203078
00002aa1 37317500        
00002aa5 01               8909		.byte	1
00002aa6 be02             8910		.byte	190,2
00002aa8 6b446961674e7263 8911		.strz	"kDiagNrcGeneralProgrammingFailure 0x72u"
00002ab0 47656e6572616c50
00002ab8 726f6772616d6d69
00002ac0 6e674661696c7572
00002ac8 6520307837327500
00002ad0 01               8912		.byte	1
00002ad1 cf03             8913		.byte	207,3
00002ad3 46424c444941475f 8914		.strz	"FBLDIAG_RAMCODE_START_SEC_CODE "
00002adb 52414d434f44455f
00002ae3 53544152545f5345
00002aeb 435f434f44452000
00002af3 03               8915		.byte	3
00002af4 d003             8916		.byte	208,3
00002af6 18               8917		.byte	24
00002af7 01               8918		.byte	1
00002af8 2b               8919		.byte	43
00002af9 46424c5f4d454d4d 8920		.strz	"FBL_MEMMAP_ERROR "
00002b01 41505f4552524f52
00002b09 2000            
00002b0b 04               8921		.byte	4
00002b0c 01               8922		.byte	1
00002b0d dc03             8923		.byte	220,3
00002b0f 46424c444941475f 8924		.strz	"FBLDIAG_RAMCODE_STOP_SEC_CODE "
00002b17 52414d434f44455f
00002b1f 53544f505f534543
00002b27 5f434f44452000  
00002b2e 03               8925		.byte	3
00002b2f dd03             8926		.byte	221,3
00002b31 18               8927		.byte	24
00002b32 01               8928		.byte	1
00002b33 2b               8929		.byte	43
00002b34 46424c5f4d454d4d 8930		.strz	"FBL_MEMMAP_ERROR "
00002b3c 41505f4552524f52
00002b44 2000            
00002b46 04               8931		.byte	4
00002b47 04               8932		.byte	4
00002b48 03               8933		.byte	3
00002b49 a301             8934		.byte	163,1
00002b4b 2f               8935		.byte	47
00002b4c 03               8936		.byte	3
00002b4d b201             8937		.byte	178,1
00002b4f 30               8938		.byte	48
00002b50 01               8939		.byte	1
00002b51 79               8940		.byte	121
00002b52 46424c5f4d454d5f 8941		.strz	"FBL_MEM_BUFFER_SIZE FBL_DIAG_BUFFER_LENGTH"
00002b5a 4255464645525f53
00002b62 495a452046424c5f
00002b6a 444941475f425546
00002b72 4645525f4c454e47
00002b7a 544800          
00002b7d 01               8942		.byte	1
00002b7e 7b               8943		.byte	123
00002b7f 46424c5f4d454d5f 8944		.strz	"FBL_MEM_DEFAULT_PREAMBLE_LENGTH 2u"
00002b87 44454641554c545f
00002b8f 505245414d424c45
00002b97 5f4c454e47544820
00002b9f 327500          
00002ba2 01               8945		.byte	1
00002ba3 7d               8946		.byte	125

                                   Fri Apr 10 08:31:56 2020           Page 161
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00002ba4 46424c5f4d454d5f 8947		.strz	"FBL_MEM_MAX_PREAMBLE_LENGTH 2u"
00002bac 4d41585f50524541
00002bb4 4d424c455f4c454e
00002bbc 47544820327500  
00002bc3 01               8948		.byte	1
00002bc4 ad01             8949		.byte	173,1
00002bc6 5f5f4170706c4662 8950		.strz	"__ApplFblMemPreWrite() FblDiagMemPreWrite()"
00002bce 6c4d656d50726557
00002bd6 7269746528292046
00002bde 626c446961674d65
00002be6 6d50726557726974
00002bee 65282900        
00002bf2 01               8951		.byte	1
00002bf3 ae01             8952		.byte	174,1
00002bf5 5f5f4170706c4662 8953		.strz	"__ApplFblMemPostWrite() FblDiagMemPostWrite()"
00002bfd 6c4d656d506f7374
00002c05 5772697465282920
00002c0d 46626c446961674d
00002c15 656d506f73745772
00002c1d 697465282900    
00002c23 01               8954		.byte	1
00002c24 b301             8955		.byte	179,1
00002c26 5f5f4170706c4662 8956		.strz	"__ApplFblMemPreErase() FblDiagMemPreWrite()"
00002c2e 6c4d656d50726545
00002c36 7261736528292046
00002c3e 626c446961674d65
00002c46 6d50726557726974
00002c4e 65282900        
00002c52 01               8957		.byte	1
00002c53 b401             8958		.byte	180,1
00002c55 5f5f4170706c4662 8959		.strz	"__ApplFblMemPostErase() FblDiagMemPostWrite()"
00002c5d 6c4d656d506f7374
00002c65 4572617365282920
00002c6d 46626c446961674d
00002c75 656d506f73745772
00002c7d 697465282900    
00002c83 01               8960		.byte	1
00002c84 bd01             8961		.byte	189,1
00002c86 46424c5f4d454d5f 8962		.strz	"FBL_MEM_WD_TRIGGER_DEFAULT (FBL_NO_TRIGGER)"
00002c8e 57445f5452494747
00002c96 45525f4445464155
00002c9e 4c54202846424c5f
00002ca6 4e4f5f5452494747
00002cae 45522900        
00002cb2 01               8963		.byte	1
00002cb3 c201             8964		.byte	194,1
00002cb5 46424c5f4d454d5f 8965		.strz	"FBL_MEM_TRIGGER_STATUS_OVERWRITE vuint8"
00002cbd 545249474745525f
00002cc5 5354415455535f4f
00002ccd 5645525752495445
00002cd5 207675696e743800
00002cdd 01               8966		.byte	1
00002cde e601             8967		.byte	230,1
00002ce0 46424c5f4d454d5f 8968		.strz	"FBL_MEM_ENABLE_STATUS_OVERWRITE "
00002ce8 454e41424c455f53
00002cf0 54415455535f4f56
00002cf8 4552575249544520
00002d00 00              
00002d01 01               8969		.byte	1
00002d02 ef01             8970		.byte	239,1
00002d04 46424c5f4d454d5f 8971		.strz	"FBL_MEM_STATUS_Ok kDiagErrorNone"
00002d0c 5354415455535f4f
00002d14 6b206b4469616745
00002d1c 72726f724e6f6e65
00002d24 00              
00002d25 01               8972		.byte	1
00002d26 f001             8973		.byte	240,1
00002d28 46424c5f4d454d5f 8974		.strz	"FBL_MEM_STATUS_Failed kDiagNrcConditionsNotCorrect"
00002d30 5354415455535f46
00002d38 61696c6564206b44
00002d40 6961674e7263436f
00002d48 6e646974696f6e73
00002d50 4e6f74436f727265
00002d58 637400          
00002d5b 01               8975		.byte	1
00002d5c f201             8976		.byte	242,1
00002d5e 46424c5f4d454d5f 8977		.strz	"FBL_MEM_STATUS_BlockEraseSequence kDiagNrcRequestSequenceError"
00002d66 5354415455535f42
00002d6e 6c6f636b45726173
00002d76 6553657175656e63
00002d7e 65206b446961674e
00002d86 7263526571756573
00002d8e 7453657175656e63
00002d96 654572726f7200  
00002d9d 01               8978		.byte	1
00002d9e f401             8979		.byte	244,1
00002da0 46424c5f4d454d5f 8980		.strz	"FBL_MEM_STATUS_BlockStartSequence kDiagNrcRequestSequenceError"
00002da8 5354415455535f42
00002db0 6c6f636b53746172
00002db8 7453657175656e63
00002dc0 65206b446961674e
00002dc8 7263526571756573
00002dd0 7453657175656e63
00002dd8 654572726f7200  
00002ddf 01               8981		.byte	1
00002de0 f501             8982		.byte	245,1
00002de2 46424c5f4d454d5f 8983		.strz	"FBL_MEM_STATUS_BlockStartParam kDiagNrcConditionsNotCorrect"
00002dea 5354415455535f42
00002df2 6c6f636b53746172
00002dfa 74506172616d206b
00002e02 446961674e726343
00002e0a 6f6e646974696f6e
00002e12 734e6f74436f7272
00002e1a 65637400        
00002e1e 01               8984		.byte	1
00002e1f f701             8985		.byte	247,1
00002e21 46424c5f4d454d5f 8986		.strz	"FBL_MEM_STATUS_BlockEndSequence kDiagNrcRequestSequenceError"
00002e29 5354415455535f42
00002e31 6c6f636b456e6453
00002e39 657175656e636520
00002e41 6b446961674e7263
00002e49 5265717565737453
00002e51 657175656e636545
00002e59 72726f7200      
00002e5e 01               8987		.byte	1
00002e5f f801             8988		.byte	248,1
00002e61 46424c5f4d454d5f 8989		.strz	"FBL_MEM_STATUS_BlockEndVerifyFinalize kDiagNrcGeneralProgrammingFailure"
00002e69 5354415455535f42
00002e71 6c6f636b456e6456
00002e79 657269667946696e
00002e81 616c697a65206b44
00002e89 6961674e72634765
00002e91 6e6572616c50726f
00002e99 6772616d6d696e67
00002ea1 4661696c75726500
00002ea9 01               8990		.byte	1
00002eaa fa01             8991		.byte	250,1
00002eac 46424c5f4d454d5f 8992		.strz	"FBL_MEM_STATUS_BlockVerifySequence kDiagNrcRequestSequenceError"
00002eb4 5354415455535f42
00002ebc 6c6f636b56657269
00002ec4 667953657175656e
00002ecc 6365206b44696167
00002ed4 4e72635265717565
00002edc 737453657175656e
00002ee4 63654572726f7200
00002eec 01               8993		.byte	1
00002eed fb01             8994		.byte	251,1
00002eef 46424c5f4d454d5f 8995		.strz	"FBL_MEM_STATUS_BlockVerifyInputVerify kDiagNrcGeneralReject"
00002ef7 5354415455535f42
00002eff 6c6f636b56657269
00002f07 6679496e70757456
00002f0f 6572696679206b44
00002f17 6961674e72634765
00002f1f 6e6572616c52656a
00002f27 65637400        
00002f2b 01               8996		.byte	1
00002f2c fc01             8997		.byte	252,1
00002f2e 46424c5f4d454d5f 8998		.strz	"FBL_MEM_STATUS_BlockVerifyProcessedVerify kDiagNrcGeneralReject"
00002f36 5354415455535f42
00002f3e 6c6f636b56657269
00002f46 667950726f636573
00002f4e 7365645665726966
00002f56 79206b446961674e
00002f5e 726347656e657261
00002f66 6c52656a65637400
00002f6e 01               8999		.byte	1
00002f6f fd01             9000		.byte	253,1
00002f71 46424c5f4d454d5f 9001		.strz	"FBL_MEM_STATUS_BlockVerifyPipeVerify kDiagNrcGeneralReject"
00002f79 5354415455535f42
00002f81 6c6f636b56657269
00002f89 6679506970655665
00002f91 72696679206b4469
00002f99 61674e726347656e
00002fa1 6572616c52656a65
00002fa9 637400          
00002fac 01               9002		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 162
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00002fad fe01             9003		.byte	254,1
00002faf 46424c5f4d454d5f 9004		.strz	"FBL_MEM_STATUS_BlockVerifyOutputVerify kDiagNrcGeneralReject"
00002fb7 5354415455535f42
00002fbf 6c6f636b56657269
00002fc7 66794f7574707574
00002fcf 566572696679206b
00002fd7 446961674e726347
00002fdf 656e6572616c5265
00002fe7 6a65637400      
00002fec 01               9005		.byte	1
00002fed 8002             9006		.byte	128,2
00002fef 46424c5f4d454d5f 9007		.strz	"FBL_MEM_STATUS_SegmentStartSequence kDiagNrcRequestSequenceError"
00002ff7 5354415455535f53
00002fff 65676d656e745374
00003007 6172745365717565
0000300f 6e6365206b446961
00003017 674e726352657175
0000301f 6573745365717565
00003027 6e63654572726f72
0000302f 00              
00003030 01               9008		.byte	1
00003031 8102             9009		.byte	129,2
00003033 46424c5f4d454d5f 9010		.strz	"FBL_MEM_STATUS_SegmentStartDataProcInit kDiagNrcUploadDownloadNotAccepted"
0000303b 5354415455535f53
00003043 65676d656e745374
0000304b 6172744461746150
00003053 726f63496e697420
0000305b 6b446961674e7263
00003063 55706c6f6164446f
0000306b 776e6c6f61644e6f
00003073 7441636365707465
0000307b 6400            
0000307d 01               9011		.byte	1
0000307e 8202             9012		.byte	130,2
00003080 46424c5f4d454d5f 9013		.strz	"FBL_MEM_STATUS_SegmentStartStreamOutInit kDiagNrcUploadDownloadNotAccepted"
00003088 5354415455535f53
00003090 65676d656e745374
00003098 6172745374726561
000030a0 6d4f7574496e6974
000030a8 206b446961674e72
000030b0 6355706c6f616444
000030b8 6f776e6c6f61644e
000030c0 6f74416363657074
000030c8 656400          
000030cb 01               9014		.byte	1
000030cc 8302             9015		.byte	131,2
000030ce 46424c5f4d454d5f 9016		.strz	"FBL_MEM_STATUS_SegmentStartVerifyInit kDiagNrcConditionsNotCorrect"
000030d6 5354415455535f53
000030de 65676d656e745374
000030e6 6172745665726966
000030ee 79496e6974206b44
000030f6 6961674e7263436f
000030fe 6e646974696f6e73
00003106 4e6f74436f727265
0000310e 637400          
00003111 01               9017		.byte	1
00003112 8402             9018		.byte	132,2
00003114 46424c5f4d454d5f 9019		.strz	"FBL_MEM_STATUS_SegmentStartVerifyCompute kDiagNrcGeneralProgrammingFailure"
0000311c 5354415455535f53
00003124 65676d656e745374
0000312c 6172745665726966
00003134 79436f6d70757465
0000313c 206b446961674e72
00003144 6347656e6572616c
0000314c 50726f6772616d6d
00003154 696e674661696c75
0000315c 726500          
0000315f 01               9020		.byte	1
00003160 8502             9021		.byte	133,2
00003162 46424c5f4d454d5f 9022		.strz	"FBL_MEM_STATUS_SegmentStartSegmentCount kDiagNrcRequestOutOfRange"
0000316a 5354415455535f53
00003172 65676d656e745374
0000317a 6172745365676d65
00003182 6e74436f756e7420
0000318a 6b446961674e7263
00003192 526571756573744f
0000319a 75744f6652616e67
000031a2 6500            
000031a4 01               9023		.byte	1
000031a5 8702             9024		.byte	135,2
000031a7 46424c5f4d454d5f 9025		.strz	"FBL_MEM_STATUS_SegmentEndSequence kDiagNrcRequestSequenceError"
000031af 5354415455535f53
000031b7 65676d656e74456e
000031bf 6453657175656e63
000031c7 65206b446961674e
000031cf 7263526571756573
000031d7 7453657175656e63
000031df 654572726f7200  
000031e6 01               9026		.byte	1
000031e7 8802             9027		.byte	136,2
000031e9 46424c5f4d454d5f 9028		.strz	"FBL_MEM_STATUS_SegmentEndInsufficientData kDiagNrcRequestSequenceError"
000031f1 5354415455535f53
000031f9 65676d656e74456e
00003201 64496e7375666669
00003209 6369656e74446174
00003211 61206b446961674e
00003219 7263526571756573
00003221 7453657175656e63
00003229 654572726f7200  
00003230 01               9029		.byte	1
00003231 8902             9030		.byte	137,2
00003233 46424c5f4d454d5f 9031		.strz	"FBL_MEM_STATUS_SegmentEndPost kDiagNrcConditionsNotCorrect"
0000323b 5354415455535f53
00003243 65676d656e74456e
0000324b 64506f7374206b44
00003253 6961674e7263436f
0000325b 6e646974696f6e73
00003263 4e6f74436f727265
0000326b 637400          
0000326e 01               9032		.byte	1
0000326f 8b02             9033		.byte	139,2
00003271 46424c5f4d454d5f 9034		.strz	"FBL_MEM_STATUS_DataIndSequence kDiagNrcRequestSequenceError"
00003279 5354415455535f44
00003281 617461496e645365
00003289 7175656e6365206b
00003291 446961674e726352
00003299 6571756573745365
000032a1 7175656e63654572
000032a9 726f7200        
000032ad 01               9035		.byte	1
000032ae 8c02             9036		.byte	140,2
000032b0 46424c5f4d454d5f 9037		.strz	"FBL_MEM_STATUS_DataIndParam kDiagNrcGeneralProgrammingFailure"
000032b8 5354415455535f44
000032c0 617461496e645061
000032c8 72616d206b446961
000032d0 674e726347656e65
000032d8 72616c50726f6772
000032e0 616d6d696e674661
000032e8 696c75726500    
000032ee 01               9038		.byte	1
000032ef 8d02             9039		.byte	141,2
000032f1 46424c5f4d454d5f 9040		.strz	"FBL_MEM_STATUS_DataIndOverflow kDiagNrcTransferDataSuspended"
000032f9 5354415455535f44
00003301 617461496e644f76
00003309 6572666c6f77206b
00003311 446961674e726354
00003319 72616e7366657244
00003321 6174615375737065
00003329 6e64656400      
0000332e 01               9041		.byte	1
0000332f 8f02             9042		.byte	143,2
00003331 46424c5f4d454d5f 9043		.strz	"FBL_MEM_STATUS_DataProc kDiagNrcGeneralProgrammingFailure"
00003339 5354415455535f44
00003341 61746150726f6320
00003349 6b446961674e7263
00003351 47656e6572616c50
00003359 726f6772616d6d69
00003361 6e674661696c7572
00003369 6500            
0000336b 01               9044		.byte	1
0000336c 9002             9045		.byte	144,2
0000336e 46424c5f4d454d5f 9046		.strz	"FBL_MEM_STATUS_DataProcConsume kDiagNrcGeneralProgrammingFailure"
00003376 5354415455535f44
0000337e 61746150726f6343
00003386 6f6e73756d65206b
0000338e 446961674e726347
00003396 656e6572616c5072
0000339e 6f6772616d6d696e
000033a6 674661696c757265
000033ae 00              
000033af 01               9047		.byte	1
000033b0 9102             9048		.byte	145,2
000033b2 46424c5f4d454d5f 9049		.strz	"FBL_MEM_STATUS_DataProcDeinit kDiagNrcConditionsNotCorrect"
000033ba 5354415455535f44
000033c2 61746150726f6344
000033ca 65696e6974206b44
000033d2 6961674e7263436f
000033da 6e646974696f6e73
000033e2 4e6f74436f727265
000033ea 637400          
000033ed 01               9050		.byte	1
000033ee 9302             9051		.byte	147,2
000033f0 46424c5f4d454d5f 9052		.strz	"FBL_MEM_STATUS_StreamOutput kDiagNrcGeneralProgrammingFailure"
000033f8 5354415455535f53
00003400 747265616d4f7574
00003408 707574206b446961
00003410 674e726347656e65
00003418 72616c50726f6772
00003420 616d6d696e674661
00003428 696c75726500    
0000342e 01               9053		.byte	1
0000342f 9402             9054		.byte	148,2
00003431 46424c5f4d454d5f 9055		.strz	"FBL_MEM_STATUS_StreamOutputConsume kDiagNrcGeneralProgrammingFailure"
00003439 5354415455535f53
00003441 747265616d4f7574
00003449 707574436f6e7375
00003451 6d65206b44696167
00003459 4e726347656e6572
00003461 616c50726f677261
00003469 6d6d696e67466169
00003471 6c75726500      
00003476 01               9056		.byte	1
00003477 9502             9057		.byte	149,2
00003479 46424c5f4d454d5f 9058		.strz	"FBL_MEM_STATUS_StreamOutputOverflow kDiagNrcTransferDataSuspended"
00003481 5354415455535f53
00003489 747265616d4f7574
00003491 7075744f76657266
00003499 6c6f77206b446961
000034a1 674e72635472616e
000034a9 7366657244617461
000034b1 53757370656e6465
000034b9 6400            

                                   Fri Apr 10 08:31:56 2020           Page 163
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
000034bb 01               9059		.byte	1
000034bc 9602             9060		.byte	150,2
000034be 46424c5f4d454d5f 9061		.strz	"FBL_MEM_STATUS_StreamOutputDeinit kDiagNrcConditionsNotCorrect"
000034c6 5354415455535f53
000034ce 747265616d4f7574
000034d6 7075744465696e69
000034de 74206b446961674e
000034e6 7263436f6e646974
000034ee 696f6e734e6f7443
000034f6 6f727265637400  
000034fd 01               9062		.byte	1
000034fe 9802             9063		.byte	152,2
00003500 46424c5f4d454d5f 9064		.strz	"FBL_MEM_STATUS_DriverResumeWrite kDiagNrcGeneralProgrammingFailure"
00003508 5354415455535f44
00003510 7269766572526573
00003518 756d655772697465
00003520 206b446961674e72
00003528 6347656e6572616c
00003530 50726f6772616d6d
00003538 696e674661696c75
00003540 726500          
00003543 01               9065		.byte	1
00003544 9902             9066		.byte	153,2
00003546 46424c5f4d454d5f 9067		.strz	"FBL_MEM_STATUS_DriverWrite kDiagNrcGeneralProgrammingFailure"
0000354e 5354415455535f44
00003556 7269766572577269
0000355e 7465206b44696167
00003566 4e726347656e6572
0000356e 616c50726f677261
00003576 6d6d696e67466169
0000357e 6c75726500      
00003583 01               9068		.byte	1
00003584 9a02             9069		.byte	154,2
00003586 46424c5f4d454d5f 9070		.strz	"FBL_MEM_STATUS_DriverErase kDiagNrcGeneralProgrammingFailure"
0000358e 5354415455535f44
00003596 7269766572457261
0000359e 7365206b44696167
000035a6 4e726347656e6572
000035ae 616c50726f677261
000035b6 6d6d696e67466169
000035be 6c75726500      
000035c3 01               9071		.byte	1
000035c4 9b02             9072		.byte	155,2
000035c6 46424c5f4d454d5f 9073		.strz	"FBL_MEM_STATUS_DriverRemainder kDiagNrcGeneralProgrammingFailure"
000035ce 5354415455535f44
000035d6 726976657252656d
000035de 61696e646572206b
000035e6 446961674e726347
000035ee 656e6572616c5072
000035f6 6f6772616d6d696e
000035fe 674661696c757265
00003606 00              
00003607 01               9074		.byte	1
00003608 9c02             9075		.byte	156,2
0000360a 46424c5f4d454d5f 9076		.strz	"FBL_MEM_STATUS_DriverSuspendWrite kDiagNrcGeneralProgrammingFailure"
00003612 5354415455535f44
0000361a 7269766572537573
00003622 70656e6457726974
0000362a 65206b446961674e
00003632 726347656e657261
0000363a 6c50726f6772616d
00003642 6d696e674661696c
0000364a 75726500        
0000364e 01               9077		.byte	1
0000364f 9e02             9078		.byte	158,2
00003651 46424c5f4d454d5f 9079		.strz	"FBL_MEM_STATUS_ProgramOverflow kDiagNrcTransferDataSuspended"
00003659 5354415455535f50
00003661 726f6772616d4f76
00003669 6572666c6f77206b
00003671 446961674e726354
00003679 72616e7366657244
00003681 6174615375737065
00003689 6e64656400      
0000368e 01               9080		.byte	1
0000368f 9f02             9081		.byte	159,2
00003691 46424c5f4d454d5f 9082		.strz	"FBL_MEM_STATUS_ProgramOutsideFbt kDiagNrcTransferDataSuspended"
00003699 5354415455535f50
000036a1 726f6772616d4f75
000036a9 7473696465466274
000036b1 206b446961674e72
000036b9 635472616e736665
000036c1 7244617461537573
000036c9 70656e64656400  
000036d0 01               9083		.byte	1
000036d1 a002             9084		.byte	160,2
000036d3 46424c5f4d454d5f 9085		.strz	"FBL_MEM_STATUS_ProgramUnalignedAddress kDiagNrcGeneralProgrammingFailure"
000036db 5354415455535f50
000036e3 726f6772616d556e
000036eb 616c69676e656441
000036f3 646472657373206b
000036fb 446961674e726347
00003703 656e6572616c5072
0000370b 6f6772616d6d696e
00003713 674661696c757265
0000371b 00              
0000371c 01               9086		.byte	1
0000371d a102             9087		.byte	161,2
0000371f 46424c5f4d454d5f 9088		.strz	"FBL_MEM_STATUS_ProgramDriverNotReady kDiagNrcRequestSequenceError"
00003727 5354415455535f50
0000372f 726f6772616d4472
00003737 697665724e6f7452
0000373f 65616479206b4469
00003747 61674e7263526571
0000374f 7565737453657175
00003757 656e63654572726f
0000375f 7200            
00003761 01               9089		.byte	1
00003762 a202             9090		.byte	162,2
00003764 46424c5f4d454d5f 9091		.strz	"FBL_MEM_STATUS_ProgramPreWrite kDiagNrcGeneralProgrammingFailure"
0000376c 5354415455535f50
00003774 726f6772616d5072
0000377c 655772697465206b
00003784 446961674e726347
0000378c 656e6572616c5072
00003794 6f6772616d6d696e
0000379c 674661696c757265
000037a4 00              
000037a5 01               9092		.byte	1
000037a6 a302             9093		.byte	163,2
000037a8 46424c5f4d454d5f 9094		.strz	"FBL_MEM_STATUS_ProgramPostWrite kDiagNrcGeneralProgrammingFailure"
000037b0 5354415455535f50
000037b8 726f6772616d506f
000037c0 7374577269746520
000037c8 6b446961674e7263
000037d0 47656e6572616c50
000037d8 726f6772616d6d69
000037e0 6e674661696c7572
000037e8 6500            
000037ea 01               9095		.byte	1
000037eb a502             9096		.byte	165,2
000037ed 46424c5f4d454d5f 9097		.strz	"FBL_MEM_STATUS_EraseOutsideFbt kDiagNrcRequestOutOfRange"
000037f5 5354415455535f45
000037fd 726173654f757473
00003805 696465466274206b
0000380d 446961674e726352
00003815 6571756573744f75
0000381d 744f6652616e6765
00003825 00              
00003826 01               9098		.byte	1
00003827 a602             9099		.byte	166,2
00003829 46424c5f4d454d5f 9100		.strz	"FBL_MEM_STATUS_EraseDriverNotReady kDiagNrcConditionsNotCorrect"
00003831 5354415455535f45
00003839 7261736544726976
00003841 65724e6f74526561
00003849 6479206b44696167
00003851 4e7263436f6e6469
00003859 74696f6e734e6f74
00003861 436f727265637400
00003869 01               9101		.byte	1
0000386a a702             9102		.byte	167,2
0000386c 46424c5f4d454d5f 9103		.strz	"FBL_MEM_STATUS_ErasePreErase kDiagNrcConditionsNotCorrect"
00003874 5354415455535f45
0000387c 7261736550726545
00003884 72617365206b4469
0000388c 61674e7263436f6e
00003894 646974696f6e734e
0000389c 6f74436f72726563
000038a4 7400            
000038a6 01               9104		.byte	1
000038a7 a802             9105		.byte	168,2
000038a9 46424c5f4d454d5f 9106		.strz	"FBL_MEM_STATUS_ErasePostErase kDiagNrcConditionsNotCorrect"
000038b1 5354415455535f45
000038b9 72617365506f7374
000038c1 4572617365206b44
000038c9 6961674e7263436f
000038d1 6e646974696f6e73
000038d9 4e6f74436f727265
000038e1 637400          
000038e4 01               9107		.byte	1
000038e5 aa02             9108		.byte	170,2
000038e7 46424c5f4d454d5f 9109		.strz	"FBL_MEM_STATUS_VerifyCompute kDiagNrcGeneralProgrammingFailure"
000038ef 5354415455535f56
000038f7 6572696679436f6d
000038ff 70757465206b4469
00003907 61674e726347656e
0000390f 6572616c50726f67
00003917 72616d6d696e6746
0000391f 61696c75726500  
00003926 01               9110		.byte	1
00003927 ab02             9111		.byte	171,2
00003929 46424c5f4d454d5f 9112		.strz	"FBL_MEM_STATUS_VerifyFinalize kDiagNrcGeneralProgrammingFailure"
00003931 5354415455535f56
00003939 657269667946696e
00003941 616c697a65206b44
00003949 6961674e72634765
00003951 6e6572616c50726f
00003959 6772616d6d696e67
00003961 4661696c75726500
00003969 01               9113		.byte	1
0000396a ad02             9114		.byte	173,2

                                   Fri Apr 10 08:31:56 2020           Page 164
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000396c 46424c5f4d454d5f 9115		.strz	"FBL_MEM_STATUS_PassThroughLocal kDiagNrcConditionsNotCorrect"
00003974 5354415455535f50
0000397c 6173735468726f75
00003984 67684c6f63616c20
0000398c 6b446961674e7263
00003994 436f6e646974696f
0000399c 6e734e6f74436f72
000039a4 7265637400      
000039a9 01               9116		.byte	1
000039aa ae02             9117		.byte	174,2
000039ac 46424c5f4d454d5f 9118		.strz	"FBL_MEM_STATUS_PassThroughRemote kDiagNrcConditionsNotCorrect"
000039b4 5354415455535f50
000039bc 6173735468726f75
000039c4 676852656d6f7465
000039cc 206b446961674e72
000039d4 63436f6e64697469
000039dc 6f6e734e6f74436f
000039e4 727265637400    
000039ea 01               9119		.byte	1
000039eb b302             9120		.byte	179,2
000039ed 46424c5f4d454d5f 9121		.strz	"FBL_MEM_ENABLE_EXT_STATUS "
000039f5 454e41424c455f45
000039fd 58545f5354415455
00003a05 532000          
00003a08 01               9122		.byte	1
00003a09 b602             9123		.byte	182,2
00003a0b 46424c5f4d454d5f 9124		.strz	"FBL_MEM_EXT_STATUS_Ok(status) "
00003a13 4558545f53544154
00003a1b 55535f4f6b287374
00003a23 61747573292000  
00003a2a 01               9125		.byte	1
00003a2b b702             9126		.byte	183,2
00003a2d 46424c5f4d454d5f 9127		.strz	"FBL_MEM_EXT_STATUS_Failed(status) "
00003a35 4558545f53544154
00003a3d 55535f4661696c65
00003a45 6428737461747573
00003a4d 292000          
00003a50 04               9128		.byte	4
00003a51 01               9129		.byte	1
00003a52 e901             9130		.byte	233,1
00003a54 46424c5f4d454d5f 9131		.strz	"FBL_MEM_ENABLE_GAP_FILL "
00003a5c 454e41424c455f47
00003a64 41505f46494c4c20
00003a6c 00              
00003a6d 01               9132		.byte	1
00003a6e f901             9133		.byte	249,1
00003a70 46424c5f4d454d5f 9134		.strz	"FBL_MEM_ENABLE_SEGMENT_HANDLING "
00003a78 454e41424c455f53
00003a80 45474d454e545f48
00003a88 414e444c494e4720
00003a90 00              
00003a91 01               9135		.byte	1
00003a92 a902             9136		.byte	169,2
00003a94 46424c5f4d454d5f 9137		.strz	"FBL_MEM_STATUS_NAME(name) kFblMemStatus_ ## name"
00003a9c 5354415455535f4e
00003aa4 414d45286e616d65
00003aac 29206b46626c4d65
00003ab4 6d5374617475735f
00003abc 202323206e616d65
00003ac4 00              
00003ac5 01               9138		.byte	1
00003ac6 aa02             9139		.byte	170,2
00003ac8 46424c5f4d454d5f 9140		.strz	"FBL_MEM_STATUS_DEFINE(name) FBL_MEM_STATUS_ ## name"
00003ad0 5354415455535f44
00003ad8 4546494e45286e61
00003ae0 6d65292046424c5f
00003ae8 4d454d5f53544154
00003af0 55535f202323206e
00003af8 616d6500        
00003afc 01               9141		.byte	1
00003afd ae02             9142		.byte	174,2
00003aff 46424c5f4d454d5f 9143		.strz	"FBL_MEM_STATUS_DEFINITION(name) FBL_MEM_STATUS_NAME(name) = FBL_MEM_STATUS_DEFINE(name)"
00003b07 5354415455535f44
00003b0f 4546494e4954494f
00003b17 4e286e616d652920
00003b1f 46424c5f4d454d5f
00003b27 5354415455535f4e
00003b2f 414d45286e616d65
00003b37 29203d2046424c5f
00003b3f 4d454d5f53544154
00003b47 55535f444546494e
00003b4f 45286e616d652900
00003b57 01               9144		.byte	1
00003b58 e006             9145		.byte	224,6
00003b5a 46424c4c49425f4d 9146		.strz	"FBLLIB_MEM_RAMCODE_START_SEC_CODE_EXPORT "
00003b62 454d5f52414d434f
00003b6a 44455f5354415254
00003b72 5f5345435f434f44
00003b7a 455f4558504f5254
00003b82 2000            
00003b84 03               9147		.byte	3
00003b85 e106             9148		.byte	225,6
00003b87 18               9149		.byte	24
00003b88 01               9150		.byte	1
00003b89 2b               9151		.byte	43
00003b8a 46424c5f4d454d4d 9152		.strz	"FBL_MEMMAP_ERROR "
00003b92 41505f4552524f52
00003b9a 2000            
00003b9c 04               9153		.byte	4
00003b9d 01               9154		.byte	1
00003b9e e506             9155		.byte	229,6
00003ba0 46424c4c49425f4d 9156		.strz	"FBLLIB_MEM_RAMCODE_STOP_SEC_CODE_EXPORT "
00003ba8 454d5f52414d434f
00003bb0 44455f53544f505f
00003bb8 5345435f434f4445
00003bc0 5f4558504f525420
00003bc8 00              
00003bc9 03               9157		.byte	3
00003bca e606             9158		.byte	230,6
00003bcc 18               9159		.byte	24
00003bcd 01               9160		.byte	1
00003bce 2b               9161		.byte	43
00003bcf 46424c5f4d454d4d 9162		.strz	"FBL_MEMMAP_ERROR "
00003bd7 41505f4552524f52
00003bdf 2000            
00003be1 04               9163		.byte	4
00003be2 01               9164		.byte	1
00003be3 f106             9165		.byte	241,6
00003be5 46424c4c49425f4d 9166		.strz	"FBLLIB_MEM_START_SEC_VAR_EXPORT "
00003bed 454d5f5354415254
00003bf5 5f5345435f564152
00003bfd 5f4558504f525420
00003c05 00              
00003c06 03               9167		.byte	3
00003c07 f206             9168		.byte	242,6
00003c09 18               9169		.byte	24
00003c0a 01               9170		.byte	1

                                   Fri Apr 10 08:31:56 2020           Page 165
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00003c0b 2b               9171		.byte	43
00003c0c 46424c5f4d454d4d 9172		.strz	"FBL_MEMMAP_ERROR "
00003c14 41505f4552524f52
00003c1c 2000            
00003c1e 04               9173		.byte	4
00003c1f 01               9174		.byte	1
00003c20 f606             9175		.byte	246,6
00003c22 46424c4c49425f4d 9176		.strz	"FBLLIB_MEM_STOP_SEC_VAR_EXPORT "
00003c2a 454d5f53544f505f
00003c32 5345435f5641525f
00003c3a 4558504f52542000
00003c42 03               9177		.byte	3
00003c43 f706             9178		.byte	247,6
00003c45 18               9179		.byte	24
00003c46 01               9180		.byte	1
00003c47 2b               9181		.byte	43
00003c48 46424c5f4d454d4d 9182		.strz	"FBL_MEMMAP_ERROR "
00003c50 41505f4552524f52
00003c58 2000            
00003c5a 04               9183		.byte	4
00003c5b 04               9184		.byte	4
00003c5c 03               9185		.byte	3
00003c5d a901             9186		.byte	169,1
00003c5f 31               9187		.byte	49
00003c60 01               9188		.byte	1
00003c61 ac02             9189		.byte	172,2
00003c63 46424c41505f5241 9190		.strz	"FBLAP_RAMCODE_START_SEC_CODE_EXPORT "
00003c6b 4d434f44455f5354
00003c73 4152545f5345435f
00003c7b 434f44455f455850
00003c83 4f52542000      
00003c88 03               9191		.byte	3
00003c89 ad02             9192		.byte	173,2
00003c8b 18               9193		.byte	24
00003c8c 01               9194		.byte	1
00003c8d 2b               9195		.byte	43
00003c8e 46424c5f4d454d4d 9196		.strz	"FBL_MEMMAP_ERROR "
00003c96 41505f4552524f52
00003c9e 2000            
00003ca0 04               9197		.byte	4
00003ca1 01               9198		.byte	1
00003ca2 af02             9199		.byte	175,2
00003ca4 46424c41505f5241 9200		.strz	"FBLAP_RAMCODE_STOP_SEC_CODE_EXPORT "
00003cac 4d434f44455f5354
00003cb4 4f505f5345435f43
00003cbc 4f44455f4558504f
00003cc4 52542000        
00003cc8 03               9201		.byte	3
00003cc9 b002             9202		.byte	176,2
00003ccb 18               9203		.byte	24
00003ccc 01               9204		.byte	1
00003ccd 2b               9205		.byte	43
00003cce 46424c5f4d454d4d 9206		.strz	"FBL_MEMMAP_ERROR "
00003cd6 41505f4552524f52
00003cde 2000            
00003ce0 04               9207		.byte	4
00003ce1 04               9208		.byte	4
00003ce2 03               9209		.byte	3
00003ce3 aa01             9210		.byte	170,1
00003ce5 32               9211		.byte	50
00003ce6 01               9212		.byte	1
00003ce7 9402             9213		.byte	148,2
00003ce9 5744545249474745 9214		.strz	"WDTRIGGER_START_SEC_CODE_EXPORT "
00003cf1 525f53544152545f
00003cf9 5345435f434f4445
00003d01 5f4558504f525420
00003d09 00              
00003d0a 03               9215		.byte	3
00003d0b 9502             9216		.byte	149,2
00003d0d 18               9217		.byte	24
00003d0e 01               9218		.byte	1
00003d0f 2b               9219		.byte	43
00003d10 46424c5f4d454d4d 9220		.strz	"FBL_MEMMAP_ERROR "
00003d18 41505f4552524f52
00003d20 2000            
00003d22 04               9221		.byte	4
00003d23 01               9222		.byte	1
00003d24 9702             9223		.byte	151,2
00003d26 5744545249474745 9224		.strz	"WDTRIGGER_STOP_SEC_CODE_EXPORT "
00003d2e 525f53544f505f53
00003d36 45435f434f44455f
00003d3e 4558504f52542000
00003d46 03               9225		.byte	3
00003d47 9802             9226		.byte	152,2

                                   Fri Apr 10 08:31:56 2020           Page 166
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00003d49 18               9227		.byte	24
00003d4a 01               9228		.byte	1
00003d4b 2b               9229		.byte	43
00003d4c 46424c5f4d454d4d 9230		.strz	"FBL_MEMMAP_ERROR "
00003d54 41505f4552524f52
00003d5c 2000            
00003d5e 04               9231		.byte	4
00003d5f 04               9232		.byte	4
00003d60 03               9233		.byte	3
00003d61 ab01             9234		.byte	171,1
00003d63 33               9235		.byte	51
00003d64 04               9236		.byte	4
00003d65 03               9237		.byte	3
00003d66 ac01             9238		.byte	172,1
00003d68 34               9239		.byte	52
00003d69 01               9240		.byte	1
00003d6a ed01             9241		.byte	237,1
00003d6c 46424c4b42415049 9242		.strz	"FBLKBAPI_FRAMENV_SYMC_VERSION 0x0200u"
00003d74 5f4652414d454e56
00003d7c 5f53594d435f5645
00003d84 5253494f4e203078
00003d8c 303230307500    
00003d92 01               9243		.byte	1
00003d93 ee01             9244		.byte	238,1
00003d95 46424c4b42415049 9245		.strz	"FBLKBAPI_FRAMENV_SYMC_RELEASE_VERSION 0x00u"
00003d9d 5f4652414d454e56
00003da5 5f53594d435f5245
00003dad 4c454153455f5645
00003db5 5253494f4e203078
00003dbd 30307500        
00003dc1 01               9246		.byte	1
00003dc2 f501             9247		.byte	245,1
00003dc4 6b46626c50726573 9248		.strz	"kFblPresencePatternSize 4u"
00003dcc 656e636550617474
00003dd4 65726e53697a6520
00003ddc 347500          
00003ddf 01               9249		.byte	1
00003de0 f601             9250		.byte	246,1
00003de2 6b46626c50726573 9251		.strz	"kFblPresencePattern {0x73u, 0x6Au, 0x29u, 0x3Eu}"
00003dea 656e636550617474
00003df2 65726e207b307837
00003dfa 33752c2030783641
00003e02 752c203078323975
00003e0a 2c2030783345757d
00003e12 00              
00003e13 01               9252		.byte	1
00003e14 fd01             9253		.byte	253,1
00003e16 46424c5f50505f53 9254		.strz	"FBL_PP_SEGMENT_SIZE FBL_MAX_SEGMENT_SIZE"
00003e1e 45474d454e545f53
00003e26 495a452046424c5f
00003e2e 4d41585f5345474d
00003e36 454e545f53495a45
00003e3e 00              
00003e3f 01               9255		.byte	1
00003e40 8202             9256		.byte	130,2
00003e42 6b45657056616c69 9257		.strz	"kEepValidateBlock 0x01u"
00003e4a 64617465426c6f63
00003e52 6b20307830317500
00003e5a 01               9258		.byte	1
00003e5b 8302             9259		.byte	131,2
00003e5d 6b456570496e7661 9260		.strz	"kEepInvalidateBlock 0x02u"
00003e65 6c6964617465426c
00003e6d 6f636b2030783032
00003e75 7500            
00003e77 04               9261		.byte	4
00003e78 03               9262		.byte	3
00003e79 b201             9263		.byte	178,1
00003e7b 35               9264		.byte	53
00003e7c 01               9265		.byte	1
00003e7d 47               9266		.byte	71
00003e7e 6b46626c4d61696e 9267		.strz	"kFblMainNumberOfStates 7u"
00003e86 4e756d6265724f66
00003e8e 5374617465732037
00003e96 7500            
00003e98 01               9268		.byte	1
00003e99 7f               9269		.byte	127
00003e9a 6b46626c53746172 9270		.strz	"kFblStartMagicByte0 0x50u"
00003ea2 744d616769634279
00003eaa 7465302030783530
00003eb2 7500            
00003eb4 01               9271		.byte	1
00003eb5 8001             9272		.byte	128,1
00003eb7 6b46626c53746172 9273		.strz	"kFblStartMagicByte1 0x72u"
00003ebf 744d616769634279
00003ec7 7465312030783732
00003ecf 7500            
00003ed1 01               9274		.byte	1
00003ed2 8101             9275		.byte	129,1
00003ed4 6b46626c53746172 9276		.strz	"kFblStartMagicByte2 0x6Fu"
00003edc 744d616769634279
00003ee4 7465322030783646
00003eec 7500            
00003eee 01               9277		.byte	1
00003eef 8201             9278		.byte	130,1
00003ef1 6b46626c53746172 9279		.strz	"kFblStartMagicByte3 0x67u"
00003ef9 744d616769634279
00003f01 7465332030783637
00003f09 7500            
00003f0b 01               9280		.byte	1
00003f0c 8301             9281		.byte	131,1
00003f0e 6b46626c53746172 9282		.strz	"kFblStartMagicByte4 0x53u"
00003f16 744d616769634279
00003f1e 7465342030783533
00003f26 7500            

                                   Fri Apr 10 08:31:56 2020           Page 167
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00003f28 01               9283		.byte	1
00003f29 8401             9284		.byte	132,1
00003f2b 6b46626c53746172 9285		.strz	"kFblStartMagicByte5 0x69u"
00003f33 744d616769634279
00003f3b 7465352030783639
00003f43 7500            
00003f45 01               9286		.byte	1
00003f46 8501             9287		.byte	133,1
00003f48 6b46626c53746172 9288		.strz	"kFblStartMagicByte6 0x67u"
00003f50 744d616769634279
00003f58 7465362030783637
00003f60 7500            
00003f62 01               9289		.byte	1
00003f63 8601             9290		.byte	134,1
00003f65 6b46626c53746172 9291		.strz	"kFblStartMagicByte7 0x6Eu"
00003f6d 744d616769634279
00003f75 7465372030783645
00003f7d 7500            
00003f7f 01               9292		.byte	1
00003f80 8701             9293		.byte	135,1
00003f82 6b46626c4e6f4f66 9294		.strz	"kFblNoOfMagicBytes 8u"
00003f8a 4d61676963427974
00003f92 657320387500    
00003f98 01               9295		.byte	1
00003f99 8801             9296		.byte	136,1
00003f9b 6b46626c436c6561 9297		.strz	"kFblClearMagicByte 0x00u"
00003fa3 724d616769634279
00003fab 7465203078303075
00003fb3 00              
00003fb4 01               9298		.byte	1
00003fb5 9601             9299		.byte	150,1
00003fb7 46626c43686b4662 9300		.byte	70,98,108,67,104,107,70,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,40,41,32,40,40,32,40,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,48,93,32,61,61,32,107,70,98,108,83,116,97
00003fbf 6c53746172744d61
00003fc7 676963466c616728
00003fcf 2920282820286662
00003fd7 6c53746172744d61
00003fdf 676963466c61675b
00003fe7 305d203d3d206b46
00003fef 626c537461      
00003ff4 72744d6167696342 9301		.byte	114,116,77,97,103,105,99,66,121,116,101,48,41,32,38,38,32,40,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,49,93,32,61,61,32,107,70,98,108,83,116,97,114,116,77,97,103,105,99,66,121,116,101,49
00003ffc 7974653029202626
00004004 202866626c537461
0000400c 72744d6167696346
00004014 6c61675b315d203d
0000401c 3d206b46626c5374
00004024 6172744d61676963
0000402c 4279746531      
00004031 2920262620286662 9302		.byte	41,32,38,38,32,40,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,50,93,32,61,61,32,107,70,98,108,83,116,97,114,116,77,97,103,105,99,66,121,116,101,50,41,32,38,38,32,40,102,98,108,83,116,97
00004039 6c53746172744d61
00004041 676963466c61675b
00004049 325d203d3d206b46
00004051 626c53746172744d
00004059 6167696342797465
00004061 3229202626202866
00004069 626c537461      
0000406e 72744d6167696346 9303		.byte	114,116,77,97,103,105,99,70,108,97,103,91,51,93,32,61,61,32,107,70,98,108,83,116,97,114,116,77,97,103,105,99,66,121,116,101,51,41,32,38,38,32,40,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91
00004076 6c61675b335d203d
0000407e 3d206b46626c5374
00004086 6172744d61676963
0000408e 4279746533292026
00004096 26202866626c5374
0000409e 6172744d61676963
000040a6 466c61675b      
000040ab 345d203d3d206b46 9304		.byte	52,93,32,61,61,32,107,70,98,108,83,116,97,114,116,77,97,103,105,99,66,121,116,101,52,41,32,38,38,32,40,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,53,93,32,61,61,32,107,70,98,108,83,116
000040b3 626c53746172744d
000040bb 6167696342797465
000040c3 3429202626202866
000040cb 626c53746172744d
000040d3 61676963466c6167
000040db 5b355d203d3d206b
000040e3 46626c5374      
000040e8 6172744d61676963 9305		.byte	97,114,116,77,97,103,105,99,66,121,116,101,53,41,32,38,38,32,40,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,54,93,32,61,61,32,107,70,98,108,83,116,97,114,116,77,97,103,105,99,66,121,116,101
000040f0 4279746535292026
000040f8 26202866626c5374
00004100 6172744d61676963
00004108 466c61675b365d20
00004110 3d3d206b46626c53
00004118 746172744d616769
00004120 6342797465      
00004125 3629202626202866 9306		.byte	54,41,32,38,38,32,40,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,55,93,32,61,61,32,107,70,98,108,83,116,97,114,116,77,97,103,105,99,66,121,116,101,55,41,41,32,63,32,49,117,32,58,32,48
0000412d 626c53746172744d
00004135 61676963466c6167
0000413d 5b375d203d3d206b
00004145 46626c5374617274
0000414d 4d61676963427974
00004155 65372929203f2031
0000415d 75203a2030      
00004162 752900           9307		.byte	117,41,0
00004165 01               9308		.byte	1
00004166 a001             9309		.byte	160,1
00004168 46626c436c724662 9310		.byte	70,98,108,67,108,114,70,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,40,41,32,123,32,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,48,93,32,61,32,107,70,98,108,67,108,101,97,114,77
00004170 6c53746172744d61
00004178 676963466c616728
00004180 29207b2066626c53
00004188 746172744d616769
00004190 63466c61675b305d
00004198 203d206b46626c43
000041a0 6c6561724d      
000041a5 6167696342797465 9311		.byte	97,103,105,99,66,121,116,101,59,32,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,49,93,32,61,32,107,70,98,108,67,108,101,97,114,77,97,103,105,99,66,121,116,101,59,32,102,98,108,83,116,97,114,116
000041ad 3b2066626c537461
000041b5 72744d6167696346
000041bd 6c61675b315d203d
000041c5 206b46626c436c65
000041cd 61724d6167696342
000041d5 7974653b2066626c
000041dd 5374617274      
000041e2 4d61676963466c61 9312		.byte	77,97,103,105,99,70,108,97,103,91,50,93,32,61,32,107,70,98,108,67,108,101,97,114,77,97,103,105,99,66,121,116,101,59,32,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,51,93,32,61,32,107,70,98
000041ea 675b325d203d206b
000041f2 46626c436c656172
000041fa 4d61676963427974
00004202 653b2066626c5374
0000420a 6172744d61676963
00004212 466c61675b335d20
0000421a 3d206b4662      
0000421f 6c436c6561724d61 9313		.byte	108,67,108,101,97,114,77,97,103,105,99,66,121,116,101,59,32,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,52,93,32,61,32,107,70,98,108,67,108,101,97,114,77,97,103,105,99,66,121,116,101,59,32,102
00004227 676963427974653b
0000422f 2066626c53746172
00004237 744d61676963466c
0000423f 61675b345d203d20
00004247 6b46626c436c6561
0000424f 724d616769634279
00004257 74653b2066      
0000425c 626c53746172744d 9314		.byte	98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,53,93,32,61,32,107,70,98,108,67,108,101,97,114,77,97,103,105,99,66,121,116,101,59,32,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,54
00004264 61676963466c6167
0000426c 5b355d203d206b46
00004274 626c436c6561724d
0000427c 6167696342797465
00004284 3b2066626c537461
0000428c 72744d6167696346
00004294 6c61675b36      
00004299 5d203d206b46626c 9315		.byte	93,32,61,32,107,70,98,108,67,108,101,97,114,77,97,103,105,99,66,121,116,101,59,32,102,98,108,83,116,97,114,116,77,97,103,105,99,70,108,97,103,91,55,93,32,61,32,107,70,98,108,67,108,101,97,114,77,97,103,105,99
000042a1 436c6561724d6167
000042a9 6963427974653b20
000042b1 66626c5374617274
000042b9 4d61676963466c61
000042c1 675b375d203d206b
000042c9 46626c436c656172
000042d1 4d61676963      
000042d6 427974653b207d00 9316		.byte	66,121,116,101,59,32,125,0
000042de 01               9317		.byte	1
000042df e501             9318		.byte	229,1
000042e1 46424c4845414445 9319		.strz	"FBLHEADER_START_SEC_CONST "
000042e9 525f53544152545f
000042f1 5345435f434f4e53
000042f9 542000          
000042fc 03               9320		.byte	3
000042fd e601             9321		.byte	230,1
000042ff 18               9322		.byte	24
00004300 01               9323		.byte	1
00004301 2b               9324		.byte	43
00004302 46424c5f4d454d4d 9325		.strz	"FBL_MEMMAP_ERROR "
0000430a 41505f4552524f52
00004312 2000            
00004314 04               9326		.byte	4
00004315 01               9327		.byte	1
00004316 e801             9328		.byte	232,1
00004318 46424c4845414445 9329		.strz	"FBLHEADER_STOP_SEC_CONST "
00004320 525f53544f505f53
00004328 45435f434f4e5354
00004330 2000            
00004332 03               9330		.byte	3
00004333 e901             9331		.byte	233,1
00004335 18               9332		.byte	24
00004336 01               9333		.byte	1
00004337 2b               9334		.byte	43
00004338 46424c5f4d454d4d 9335		.strz	"FBL_MEMMAP_ERROR "
00004340 41505f4552524f52
00004348 2000            
0000434a 04               9336		.byte	4
0000434b 01               9337		.byte	1
0000434c ec01             9338		.byte	236,1

                                   Fri Apr 10 08:31:56 2020           Page 168
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
0000434e 46424c5f4d41494e 9339		.strz	"FBL_MAIN_MAGICFLAG_START_SEC_VAR "
00004356 5f4d41474943464c
0000435e 41475f5354415254
00004366 5f5345435f564152
0000436e 2000            
00004370 03               9340		.byte	3
00004371 ed01             9341		.byte	237,1
00004373 18               9342		.byte	24
00004374 01               9343		.byte	1
00004375 2b               9344		.byte	43
00004376 46424c5f4d454d4d 9345		.strz	"FBL_MEMMAP_ERROR "
0000437e 41505f4552524f52
00004386 2000            
00004388 04               9346		.byte	4
00004389 01               9347		.byte	1
0000438a f301             9348		.byte	243,1
0000438c 46424c5f4d41494e 9349		.strz	"FBL_MAIN_MAGICFLAG_STOP_SEC_VAR "
00004394 5f4d41474943464c
0000439c 41475f53544f505f
000043a4 5345435f56415220
000043ac 00              
000043ad 03               9350		.byte	3
000043ae f401             9351		.byte	244,1
000043b0 18               9352		.byte	24
000043b1 01               9353		.byte	1
000043b2 2b               9354		.byte	43
000043b3 46424c5f4d454d4d 9355		.strz	"FBL_MEMMAP_ERROR "
000043bb 41505f4552524f52
000043c3 2000            
000043c5 04               9356		.byte	4
000043c6 01               9357		.byte	1
000043c7 fc01             9358		.byte	252,1
000043c9 46424c5f4d41494e 9359		.strz	"FBL_MAIN_FBLSTART_START_SEC_CODE "
000043d1 5f46424c53544152
000043d9 545f53544152545f
000043e1 5345435f434f4445
000043e9 2000            
000043eb 03               9360		.byte	3
000043ec fd01             9361		.byte	253,1
000043ee 18               9362		.byte	24
000043ef 01               9363		.byte	1
000043f0 2b               9364		.byte	43
000043f1 46424c5f4d454d4d 9365		.strz	"FBL_MEMMAP_ERROR "
000043f9 41505f4552524f52
00004401 2000            
00004403 04               9366		.byte	4
00004404 01               9367		.byte	1
00004405 8302             9368		.byte	131,2
00004407 46424c5f4d41494e 9369		.strz	"FBL_MAIN_FBLSTART_STOP_SEC_CODE "
0000440f 5f46424c53544152
00004417 545f53544f505f53
0000441f 45435f434f444520
00004427 00              
00004428 03               9370		.byte	3
00004429 8402             9371		.byte	132,2
0000442b 18               9372		.byte	24
0000442c 01               9373		.byte	1
0000442d 2b               9374		.byte	43
0000442e 46424c5f4d454d4d 9375		.strz	"FBL_MEMMAP_ERROR "
00004436 41505f4552524f52
0000443e 2000            
00004440 04               9376		.byte	4
00004441 04               9377		.byte	4
00004442 04               9378		.byte	4
00004443 03               9379		.byte	3
00004444 f701             9380		.byte	247,1
00004446 36               9381		.byte	54
00004447 03               9382		.byte	3
00004448 27               9383		.byte	39
00004449 37               9384		.byte	55
0000444a 01               9385		.byte	1
0000444b ec02             9386		.byte	236,2
0000444d 42525348575f454e 9387		.strz	"BRSHW_ENABLE_ISR_SW_DISPATCHING "
00004455 41424c455f495352
0000445d 5f53575f44495350
00004465 41544348494e4720
0000446d 00              
0000446e 04               9388		.byte	4
0000446f 03               9389		.byte	3
00004470 2f               9390		.byte	47
00004471 38               9391		.byte	56
00004472 03               9392		.byte	3
00004473 34               9393		.byte	52
00004474 39               9394		.byte	57

                                   Fri Apr 10 08:31:56 2020           Page 169
                                   Fri Apr 10 08:31:56 2020   gh_0000csc1.si
00004475 04               9395		.byte	4
00004476 01               9396		.byte	1
00004477 55               9397		.byte	85
00004478 4252535f454e4142 9398		.strz	"BRS_ENABLE_SUPPORT_LEDS "
00004480 4c455f535550504f
00004488 52545f4c45445320
00004490 00              
00004491 01               9399		.byte	1
00004492 67               9400		.byte	103
00004493 4252535f454e4142 9401		.strz	"BRS_ENABLE_FBL_SUPPORT "
0000449b 4c455f46424c5f53
000044a3 5550504f52542000
000044ab 04               9402		.byte	4
000044ac 01               9403		.byte	1
000044ad 8403             9404		.byte	132,3
000044af 4252535f53544152 9405		.strz	"BRS_START_SEC_RAM_CODE "
000044b7 545f5345435f5241
000044bf 4d5f434f44452000
000044c7 03               9406		.byte	3
000044c8 8503             9407		.byte	133,3
000044ca 3a               9408		.byte	58
000044cb 01               9409		.byte	1
000044cc 2c               9410		.byte	44
000044cd 4252535f4d454d4d 9411		.strz	"BRS_MEMMAP_ERROR "
000044d5 41505f4552524f52
000044dd 2000            
000044df 04               9412		.byte	4
000044e0 01               9413		.byte	1
000044e1 9903             9414		.byte	153,3
000044e3 4252535f53544f50 9415		.strz	"BRS_STOP_SEC_RAM_CODE "
000044eb 5f5345435f52414d
000044f3 5f434f44452000  
000044fa 03               9416		.byte	3
000044fb 9a03             9417		.byte	154,3
000044fd 3a               9418		.byte	58
000044fe 01               9419		.byte	1
000044ff 2c               9420		.byte	44
00004500 4252535f4d454d4d 9421		.strz	"BRS_MEMMAP_ERROR "
00004508 41505f4552524f52
00004510 2000            
00004512 04               9422		.byte	4
00004513 04               9423		.byte	4
00004514 01               9424		.byte	1
00004515 8e02             9425		.byte	142,2
00004517 4170706c46626c52 9426		.strz	"ApplFblReadPattern(buffer,address) (MemDriver_RReadSync((IO_MemPtrType)(buffer), (IO_SizeType)kFblPresencePatternSize, (IO_PositionType)(address)))"
0000451f 6561645061747465
00004527 726e286275666665
0000452f 722c616464726573
00004537 732920284d656d44
0000453f 72697665725f5252
00004547 65616453796e6328
0000454f 28494f5f4d656d50
00004557 7472547970652928
0000455f 627566666572292c
00004567 2028494f5f53697a
0000456f 6554797065296b46
00004577 626c50726573656e
0000457f 6365506174746572
00004587 6e53697a652c2028
0000458f 494f5f506f736974
00004597 696f6e5479706529
0000459f 2861646472657373
000045a7 29292900        
000045ab 01               9427		.byte	1
000045ac 8f02             9428		.byte	143,2
000045ae 4170706c46626c57 9429		.strz	"ApplFblWritePattern(buffer,length,address) (MemDriver_RWriteSync((IO_MemPtrType)(buffer), (IO_SizeType)(length), (IO_PositionType)(address)) == IO_E_OK)"
000045b6 7269746550617474
000045be 65726e2862756666
000045c6 65722c6c656e6774
000045ce 682c616464726573
000045d6 732920284d656d44
000045de 72697665725f5257
000045e6 7269746553796e63
000045ee 2828494f5f4d656d
000045f6 5074725479706529
000045fe 2862756666657229
00004606 2c2028494f5f5369
0000460e 7a65547970652928
00004616 6c656e677468292c
0000461e 2028494f5f506f73
00004626 6974696f6e547970
0000462e 6529286164647265
00004636 73732929203d3d20
0000463e 494f5f455f4f4b29
00004646 00              
00004647 04               9430		.byte	4
00004648 00               9431		.byte	0
                          9432		.section	.debug_abbrev
00000189 00               9433		.byte	0
                          9434		.section	.debug_info
                          9435	.Ldw_end:
