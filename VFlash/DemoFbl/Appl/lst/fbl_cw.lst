
                                   Fri Apr 10 08:32:01 2020           Page 1
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
Command Line:   C:\ghs\comp_201754\asppc.exe -noundefined -stderr=err/fbl_cw.err
                -elf -b1 -I../../../bsw/_common -I../../../bsw/eep
                -I../../../bsw/fbl -I../../../bsw/flash -I../../../bsw/flash_xd1
                -I../../../bsw/secmod -I../../../bsw/wrapnv
                -Ic:/ghs/comp_201754/ansi -Ic:/ghs/comp_201754/include/ppc
                -Ic:/ghs/comp_201754/src/libsys -Igendata -Iinclude
                -IC:\ghs\comp_201754\lib\ppc5514 -cpu=ppc560xp
                -patch_dbo=C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl\obj\fbl_cw.dbo
                -source=fbl_cw.c -o obj\gh_00002fo1.o -list=lst/fbl_cw.lst
                C:\Users\owner\AppData\Local\Temp\gh_00002fo1.si
Source File:    C:\Users\owner\AppData\Local\Temp\gh_00002fo1.si
Directory:      C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
Host OS:        Windows
AS: Copyright (C) 1983-2017 Green Hills Software.  All Rights Reserved.
Release: Compiler v2017.5.4
Build Directory: [Directory] COMP-VAL-WIN50:c:/autoval2/v2017.5-2017-10-03/win32-comp-ecom
Revision: [VCInfo] http://toolsvc/branches/release-branch-2017-5-comp/src@603870 (built by auto-compiler)
Revision Date: Wed Oct 04 11:30:08 2017

Release Date: Wed Oct 04 09:00:05 2017

                             1	#Driver Command: ccppc -DBRS_DERIVATIVE_SPC570S50 -DBRS_OSC_CLK=40
                             2	#		-DBRS_TIMEBASE_CLOCK=80 -DBRS_OS_USECASE_BRS
                             3	#		-DBRS_EVA_BOARD_DEFAULT -DBRS_PLATFORM_MPC57XX -DBRS_COMP_GHS
                             4	#		-DBRSHW_INSTRUCTION_SET_VLE -DBRS_CPU_STARTUP_ID=0
                             5	#		-object_dir=obj -list=lst/fbl_cw.lst -stderr=err/fbl_cw.err -c
                             6	#		-vle -DC_ENABLE_INSTRUCTION_SET_VLE -D__vle --prototype_warnings
                             7	#		-Odebug -Osize -Ospace -G -dual_debug -nofloatio -cpu=ppc560xp
                             8	#		-noobj -DRAM_48K -inline_prologue -pragma_asm_inline -noSPE
                             9	#		--no_exceptions --no_commons -nokeeptempfiles -pnone
                            10	#		--incorrect_pragma_warnings --slash_comment --long_long
                            11	#		-preprocess_assembly_files -passsource -I../../../bsw/_common
                            12	#		-I../../../bsw/eep -I../../../bsw/fbl -I../../../bsw/flash
                            13	#		-I../../../bsw/flash_xd1 -I../../../bsw/secmod
                            14	#		-I../../../bsw/wrapnv -Ic:/ghs/comp_201754/ansi
                            15	#		-Ic:/ghs/comp_201754/include/ppc -Ic:/ghs/comp_201754/src/libsys
                            16	#		-Igendata -Iinclude ../../../BSW/Fbl/fbl_cw.c
                            17	#Source File:   ../../../BSW/Fbl/fbl_cw.c
                            18	#Directory:     C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
                            19	#Compile Date:  Fri Apr 10 08:32:01 2020
                            20	#Host OS:       Win32
                            21	#Version:       C-POWERPC 2017.5.4 RELEASE VERSION
                            22	#Release:       Compiler v2017.5.4
                            23	#Revision Date: Wed Oct 04 11:39:37 2017
                            24	#Release Date:  Wed Oct 04 09:00:05 2017
                            25	# ecom  -g -w -OMS
                            26	
                            27	#1: /***********************************************************************************************************************
                            28	#2:  *  FILE DESCRIPTION
                            29	#3:  *  ------------------------------------------------------------------------------------------------------------------*/
                            30	#4: /** \file
                            31	#5:  *  \brief         Communication wrapper layer for CAN
                            32	#6:  *
                            33	#7:  *  --------------------------------------------------------------------------------------------------------------------
                            34	#8:  *  COPYRIGHT
                            35	#9:  *  --------------------------------------------------------------------------------------------------------------------
                            36	#10:  *  \par Copyright
                            37	#11:  *  \verbatim
                            38	#12:  *  Copyright (c) 2018 by Vector Informatik GmbH.                                                  All rights reserved.
                            39	#13:  *
                            40	#14:  *                This software is copyright protected and proprietary to Vector Informatik GmbH.
                            41	#15:  *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
                            42	#16:  *                All other rights remain with Vector Informatik GmbH.
                            43	#17:  *  \endverbatim

                                   Fri Apr 10 08:32:01 2020           Page 2
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                            44	#18:  */
                            45	#19: /**********************************************************************************************************************/
                            46	#21: /***********************************************************************************************************************
                            47	#22:  *  AUTHOR IDENTITY
                            48	#23:  *  --------------------------------------------------------------------------------------------------------------------
                            49	#24:  *  Name                          Initials      Company
                            50	#25:  *  --------------------------------------------------------------------------------------------------------------------
                            51	#26:  *  Achim Strobelt                Ach           Vector Informatik GmbH
                            52	#27:  *  Christian Baeuerle            CB            Vector Informatik GmbH
                            53	#28:  *  Torben Stoessel               TnS           Vector Informatik GmbH
                            54	#29:  *  Andreas Wenckebach            AWh           Vector Informatik GmbH
                            55	#30:  *  Johannes Rebmann              JRe           Vector Informatik GmbH
                            56	#31:  *  Johannes Krimmel              KJs           Vector Informatik GmbH
                            57	#32:  *  Marcel Viole                  MVi           Vector Informatik GmbH
                            58	#33:  *  --------------------------------------------------------------------------------------------------------------------
                            59	#34:  *  REVISION HISTORY
                            60	#35:  *  --------------------------------------------------------------------------------------------------------------------
                            61	#36:  *  Version    Date        Author  Change Id        Description
                            62	#37:  *  --------------------------------------------------------------------------------------------------------------------
                            63	#38:  *  02.00.00   2016-06-24  Ach     ESCAN00080145    Wrong precopy functions are called for several configurations
                            64	#39:  *                                 ESCAN00084071    Rework CAN ID configuration
                            65	#40:  *  02.01.00   2016-07-25  Ach     ESCAN00090777    No changes
                            66	#41:  *  02.02.00   2016-08-24  Rie     ESCAN00091656    Added support for extended addressing
                            67	#42:  *  02.03.00   2016-10-31  CB      ESCAN00092598    Added call for fblCwIndicationHandler for single receive buffer
                            68	#43:  *  02.04.00   2016-11-08  TnS     ESCAN00092701    Added support for Mixed Addressing
                            69	#44:  *  02.05.00   2016-11-28  AWh     ESCAN00093054    MISRA deviation: MISRA-C:2004 Rule 5.6
                            70	#45:  *             2016-12-13  AWh     ESCAN00093277    Normal Fixed Addr with 11 Bit Rx: Differentiate CF and response addr
                            71	#46:  *             2016-12-15  JRe     ESCAN00093298    No changes
                            72	#47:  *  02.06.00   2017-05-26  KJs     ESCAN00093406    Add support for CAN baud rate switch
                            73	#48:  *  02.07.00   2017-08-17  MVi     ESCAN00096233    Add support for multiple connections
                            74	#49:  *  02.08.00   2018-03-14  Ach     ESCAN00098739    Support decline of requests while another connection is used
                            75	#50:  *                                 ESCAN00098744    Fix compilation of functional requests with extended addressing
                            76	#51:  *  02.08.01   2018-04-06  Ach     ESCAN00098961    Discarded message requests on the same connection are declined
                            77	#52:  *                                                  by the bootloader
                            78	#53:  **********************************************************************************************************************/
                            79	#55: /***********************************************************************************************************************
                            80	#56:  *  INCLUDES
                            81	#57:  **********************************************************************************************************************/
                            82	#59: #include "fbl_inc.h"
                            83	#61: /***********************************************************************************************************************
                            84	#62:  *  VERSION
                            85	#63:  **********************************************************************************************************************/
                            86	#65: #if ( FBLWRAPPERCOM_CAN_VERSION != 0x0208u ) || \
                            87	#66:     ( FBLWRAPPERCOM_CAN_RELEASE_VERSION != 0x01u )
                            88	#67: # error "Error in fbl_cw.c: Source and header file are inconsistent!"
                            89	#68: #endif
                            90	#70: #if ( FBLWRAPPERCOM_CAN_VERSION != _FBLWRAPPERCOM_CAN_VERSION ) || \
                            91	#71:     ( FBLWRAPPERCOM_CAN_RELEASE_VERSION != _FBLWRAPPERCOM_CAN_RELEASE_VERSION)
                            92	#72: # error "Error in fbl_cw.c: Source and v_ver.h are inconsistent!"
                            93	#73: #endif
                            94	#75: /***********************************************************************************************************************
                            95	#76:  *  DEFINES
                            96	#77:  **********************************************************************************************************************/
                            97	#79: #ifndef FBLDRVCAN_REFERENCE_IMPLEMENTATION
                            98	#80: # define FBLDRVCAN_REFERENCE_IMPLEMENTATION  0x0100
                            99	#81: #endif

                                   Fri Apr 10 08:32:01 2020           Page 3
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           100	#83: /* To access the AllNode request databuffer (extended-addressing)   */
                           101	#84: /* CAN Hardware access support for diagnostic                       */
                           102	#86: #if defined( MULTIPLE_RECEIVE_BUFFER )
                           103	#87: # define CANTPMSG_TPCI                    (data[0])
                           104	#88: # define CANTPMSG_SID                     (data[1])
                           105	#89: # define CANTPMSG_PARAM                   (data[2])
                           106	#91: # define pCanData                         data
                           107	#92: #endif
                           108	#95: /* Defines for transport layer data buffer access, same defines also in FBL_TP.C */
                           109	#96: # define kTpciPos                         0x00u
                           110	#97: # define kSFDataPos                       0x01u
                           111	#99: /* Defines to indicate the transmission state */
                           112	#100: #define kFblCwTxStateIdle                 0x00u    /**< Idle state */
                           113	#101: #define kFblCwTxStateRpInProgress         0x01u    /**< RP was forwarded, wait for the confirmation */
                           114	#102: #define kFblCwTxStateTxInProgress         0x02u    /**< Final answer was sent, wait for the confirmation */
                           115	#103: #define kFblCwTxStateRpPending            0x03u    /**< RP was not sent, try to send it again until timeout */
                           116	#104: #define kFblCwTxStateTxPending            0x04u    /**< Final answer was not sent, try to send it again until timeout */
                           117	#106: #define kFblCwCanRxMsgStatePhysical       0x00u
                           118	#107: #define kFblCwCanRxMsgStateFunctional     0x01u
                           119	#108: #define kFblCwCanRxMsgStateDiscard        0x02u
                           120	#110: /* Flags indicate, which task is currently running */
                           121	#111: #define kFblCwStateTaskRunning            FBL_BIT0
                           122	#112: #define kFblCwTimerTaskRunning            FBL_BIT1
                           123	#114: /* Flags used to control the call to the CW layer */
                           124	#115: #define SetCwStateTaskRunning()           (cwTaskState |= kFblCwStateTaskRunning)
                           125	#116: #define ClrCwStateTaskRunning()           (cwTaskState &= FblInvert8Bit(kFblCwStateTaskRunning))
                           126	#117: #define GetCwStateTaskRunning()           ((cwTaskState & kFblCwStateTaskRunning) == kFblCwStateTaskRunning)
                           127	#119: #define SetCwTimerTaskRunning()           (cwTaskState |= kFblCwTimerTaskRunning)
                           128	#120: #define ClrCwTimerTaskRunning()           (cwTaskState &= FblInvert8Bit(kFblCwTimerTaskRunning))
                           129	#121: #define GetCwTimerTaskRunning()           ((cwTaskState & kFblCwTimerTaskRunning) == kFblCwTimerTaskRunning)
                           130	#123: /***********************************************************************************************************************
                           131	#124:  *  GLOBAL DATA
                           132	#125:  **********************************************************************************************************************/
                           133	#127: /** Communication wrapper initialized flag */
                           134	#128: V_MEMRAM0 V_MEMRAM1 vuint8 V_MEMRAM2 fblCwInitFlag;
                           135	#131: /** CAN initialization structure */
                           136	#132: V_MEMROM0 extern V_MEMROM1 tFblCanIdTable V_MEMROM2 kFblCanIdTable; /* PRQA S 3447, 3451 */ /* MD_FblCw_3447, MD_FblCw_3451 */
                           137	#133: /** RAM copy of CAN initialization structure */
                           138	#134: V_MEMRAM0 V_MEMRAM1 tFblCanIdTable V_MEMRAM2 fblCanIdTable;
                           139	#135: /** CAN transmit buffers. */
                           140	#136: V_MEMRAM0 V_MEMRAM1_NEAR tMsgObject V_MEMRAM2_NEAR fblCanTxObj[FBL_NUMBER_OF_TX_ID];
                           141	#137: /** Diagnostic transmit object number (RAM). Used as index into fblCanTxObj list. */
                           142	#138: V_MEMRAM0 V_MEMRAM1 vuintx V_MEMRAM2 fblCwDiagTransmitObject;
                           143	#143: /***********************************************************************************************************************
                           144	#144:  *  LOCAL DATA
                           145	#145:  **********************************************************************************************************************/
                           146	#147: #if ( TpCallCycle > 1 )
                           147	#148: V_MEMRAM0 static V_MEMRAM1 vuint8  V_MEMRAM2 tpCycleCounter;
                           148	#149: #endif
                           149	#150: V_MEMRAM0 static V_MEMRAM1 vuint8  V_MEMRAM2 cwTxState;
                           150	#151: V_MEMRAM0 static V_MEMRAM1 vuint16 V_MEMRAM2 cwTxTimer;
                           151	#152: V_MEMRAM0 static V_MEMRAM1 tCwDataLengthType V_MEMRAM2 cwTxPendingLength;
                           152	#153: V_MEMRAM0 static V_MEMRAM1 vuint8  V_MEMRAM2 cwCanRxMsgState;     /* 0 = Physical; 1 = Functional */
                           153	#155: /* Variable tracks which tasks are running */
                           154	#156: V_MEMRAM0 static V_MEMRAM1 vuint8  V_MEMRAM2 cwTaskState;
                           155	#160: #define FBL_CW_FULL_START_SEC_CODE

                                   Fri Apr 10 08:32:01 2020           Page 4
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           156	#161: #include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_19.1 */
                           157	#163: /***********************************************************************************************************************
                           158	#164:  *  LOCAL FUNCTION PROTOTYPES
                           159	#165:  **********************************************************************************************************************/
                           160	#167: static void FblCwInitRxIdentifier(void);
                           161	#170: /***********************************************************************************************************************
                           162	#171:  *   LOCAL FUNCTIONS
                           163	#172:  **********************************************************************************************************************/
                           164	#175: /***********************************************************************************************************************
                           165	#176:  *  USE-CASE SPECIFIC MESSAGE HANDLING FUNCTIONS
                           166	#177:  **********************************************************************************************************************/
                           167	#179: #if defined( FBL_CW_ENABLE_PHYSICAL_REQUEST_HANDLER )
                           168	#180: /***********************************************************************************************************************
                           169	#181:  *  FblCwProcessPhysicalRequest
                           170	#182:  **********************************************************************************************************************/
                           171	#183: /*! \brief       Physical request handling function (Normal Addressing)
                           172	#184:  *  \pre         Physical request has been received
                           173	#185:  *  \param[in]   fblRxCanMsgHdl RX CAN message handle
                           174	#186:  *  \param[in]   canDataPtr In case of multiple receive buffer configuration: Pointer to CAN object.
                           175	#187:  *  \param[in]   connectionIndex Index of diagnostic connection
                           176	#188:  **********************************************************************************************************************/
                           177	#189: /* PRQA S 3206 1 */ /* MD_FblCw_3206 */
                           178		.section ".vletext", "vax"
                           179		.vle
                           180		.vle
                           181	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB071..0::
                           182		.align	1
                           183	..gh.f.p.5.a.1.r.0.e.0:
                           184		.type	..gh.f.p.5.a.1.r.0.e.0,@object
                           185		.size	..gh.f.p.5.a.1.r.0.e.0,0
                           186		.global	FblCwProcessPhysicalRequest
                           187	FblCwProcessPhysicalRequest:
                           188	#	    .bf
                           189	.LDW01:
                           190	#190: void FblCwProcessPhysicalRequest(vuint8 fblRxCanMsgHdl, pChipDataPtr canDataPtr, vuintx connectionIndex)
                           191	#191: {
                           192	#192: #  if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                           193	#193:    (void)connectionIndex; /* PRQA S 3112 */ /* MD_MSR_14.2  */
                           194	#194: #  endif
                           195	#196:       /* Discard messages if a diagnostic response is currently processed */
                           196	#197:       if (kFblCwCanRxMsgStateDiscard != cwCanRxMsgState)
00000000 7000e000          197		e_lis	r0, %hiadj(cwCanRxMsgState)
00000004 1c000000          198		e_add16i	r0, r0, %lo(cwCanRxMsgState)
00000008 8070              199		se_lbz	r7, 0(r0)
0000000a 2a27              200		se_cmpi	r7, 2
0000000c e600              201		se_beq	.L2
                           202	#198:       {
                           203	#199:             cwCanRxMsgState = kFblCwCanRxMsgStatePhysical;
                           204	#line199
                           205	..lin.5de73d6a..aebc758.0_1::
                           206	.LDWlin1:
0000000e 4807              207		se_li	r7, 0
00000010 9070              208		se_stb	r7, 0(r0)
                           209	#200:             (void)FblTpPrecopy(canDataPtr);
00000012 0143              210		se_mr	r3, r4
00000014 78000000          211		e_b	FblTpPrecopy

                                   Fri Apr 10 08:32:01 2020           Page 5
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           212	.L2:
                           213	#201:       }
                           214	#203: }
                           215	#	    .ef
                           216	.LDW11:
00000018 0004              217		se_blr
                           218		.global	__ghs_eofn_FblCwProcessPhysicalRequest
                           219	__ghs_eofn_FblCwProcessPhysicalRequest:
                           220		.type	FblCwProcessPhysicalRequest,@function
                           221		.size	FblCwProcessPhysicalRequest,$-FblCwProcessPhysicalRequest
                           222		.align	1
                           223	
                           224	#function:			FblCwProcessPhysicalRequest
                           225	#stack frame size:		0
                           226	#
                           227	
                           228	#fblRxCanMsgHdl	none	param
                           229	#canDataPtr	r4	param
                           230	#connectionIndex	none	param
                           231	
                           232		.section ".bss","awb"
                           233		.align	1
                           234		.global	cwTxTimer..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                           235	cwTxTimer..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.:
00000000                   236	cwTxTimer:	.space	2
                           237		.type	cwTxTimer..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,@object
                           238		.size	cwTxTimer..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,2
                           239		.type	cwTxTimer,@object
                           240		.size	cwTxTimer,2
                           241		.global	cwTxPendingLength..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                           242	cwTxPendingLength..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.:
00000002                   243	cwTxPendingLength:	.space	2
                           244		.type	cwTxPendingLength..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,@object
                           245		.size	cwTxPendingLength..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,2
                           246		.type	cwTxPendingLength,@object
                           247		.size	cwTxPendingLength,2
                           248		.global	cwTxState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                           249	cwTxState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.:
00000004                   250	cwTxState:	.space	1
                           251		.type	cwTxState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,@object
                           252		.size	cwTxState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,1
                           253		.type	cwTxState,@object
                           254		.size	cwTxState,1
                           255		.global	cwCanRxMsgState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                           256	cwCanRxMsgState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.:
00000005                   257	cwCanRxMsgState:	.space	1
                           258		.type	cwCanRxMsgState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,@object
                           259		.size	cwCanRxMsgState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,1
                           260		.type	cwCanRxMsgState,@object
                           261		.size	cwCanRxMsgState,1
                           262		.global	cwTaskState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                           263	cwTaskState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.:
00000006                   264	cwTaskState:	.space	1
                           265		.type	cwTaskState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,@object
                           266		.size	cwTaskState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,1
                           267		.type	cwTaskState,@object

                                   Fri Apr 10 08:32:01 2020           Page 6
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           268		.size	cwTaskState,1
                           269		.data
                           270		.section ".vletext", "vax"
                           271		.vle
                           272		.vle
                           273	
                           274	
                           275	#204: #endif /* FBL_CW_ENABLE_PHYSICAL_REQUEST_HANDLER */
                           276	#207: #if defined( FBL_CW_ENABLE_FUNCTIONAL_REQUEST_HANDLER )
                           277	#208: /***********************************************************************************************************************
                           278	#209:  *  FblCwProcessFunctionalRequest
                           279	#210:  **********************************************************************************************************************/
                           280	#211: /*! \brief       Functional request handling function (Normal Addressing)
                           281	#212:  *  \pre         Functional request has been received
                           282	#213:  *  \param[in]   fblRxCanMsgHdl RX CAN message handle
                           283	#214:  *  \param[in]   canDataPtr In case of multiple receive buffer configuration: Pointer to CAN object.
                           284	#215:  *  \param[in]   connectionIndex Index of diagnostic connection
                           285	#216: **********************************************************************************************************************/
                           286	#217: /* PRQA S 3206 1 */ /* MD_FblCw_3206 */
                           287	#218: void FblCwProcessFunctionalRequest(vuint8 fblRxCanMsgHdl, pChipDataPtr canDataPtr, vuintx connectionIndex)
                           288	#219: {
                           289	#220: #  if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                           290	#221:    (void)connectionIndex; /* PRQA S 3112 */ /* MD_MSR_14.2  */
                           291	#222: #  endif
                           292	#224:       /* Discard messages if a diagnostic response is currently processed */
                           293	#225:       if (kFblCwCanRxMsgStateDiscard != cwCanRxMsgState)
                           294	#226:       {
                           295	#227:             /* cwCanRxMsgState will be set in FblCwPrecopy if the functional request is accepted */
                           296	#228:             FblCwPrecopy(canDataPtr);
                           297	#229:       }
                           298	#230: }
                           299	#231: #endif /* FBL_CW_ENABLE_FUNCTIONAL_REQUEST_HANDLER */
                           300	#235: /***********************************************************************************************************************
                           301	#236:  *   GLOBAL FUNCTIONS
                           302	#237:  **********************************************************************************************************************/
                           303	#239: /***********************************************************************************************************************
                           304	#240:  *  FblCwTransmitRP
                           305	#241:  **********************************************************************************************************************/
                           306	#242: /*! \brief       Transmit given data buffer with RCR-RP
                           307	#243:  *  \pre         CW is initialized
                           308	#244:  *  \param[in]   data Pointer to the data to be transmitted
                           309	#245:  **********************************************************************************************************************/
                           310	#246: void FblCwTransmitRP( const vuint8 * data )
                           311	#247: {
                           312	#248: #if defined( FBL_TP_ENABLE_TX_FRAME_PADDING )
                           313	#249:    vuintx i;
                           314	#250: #endif
                           315	#251:    {
                           316	#252:       /* Transmission if ComWrapper is idle */
                           317	#253:       if (cwTxState == kFblCwTxStateIdle)
                           318	#254:       {
                           319	#255:          tpCanTxData[kTpciPos]        = kFblCwRcrRpMsgLength;
                           320	#256:          tpCanTxData[kSFDataPos]      = data[0u];
                           321	#257:          tpCanTxData[kSFDataPos + 1u] = data[1u];
                           322	#258:          tpCanTxData[kSFDataPos + 2u] = data[2u];
                           323	#259: #if defined( FBL_TP_ENABLE_TX_FRAME_PADDING )

                                   Fri Apr 10 08:32:01 2020           Page 7
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           324	#260:          for (i = kSFDataPos + 3u; i < 8u; i++)
                           325	#261:          {
                           326	#262:             tpCanTxData[i] = kFblTpFillPattern;
                           327	#263:          }
                           328	#264: #endif
                           329	#265: #if defined( FBL_TP_ENABLE_VARIABLE_TX_DLC )
                           330	#266:          /* Set DLC value for next TP message */
                           331	#267:          FblCanSetTxDLC(fblCanTxObj[fblCwDiagTransmitObject], kTpciPos + 4u);
                           332	#268: #endif
                           333	#270:          /* To dispatch confirmation */
                           334	#271:          cwTxState = kFblCwTxStateRpInProgress;
                           335	#272:          if (FblTpTransmitSF(kFblCwRcrRpMsgLength) != kTpSuccess)
                           336	#273:          {
                           337	#274:             /* Transmission request failed. Retry in timer task, observed by timeout */
                           338	#275:             cwTxTimer = kFblCwTxPendingTimeout;
                           339	#276:             cwTxState = kFblCwTxStateRpPending;
                           340	#278:             /* Store request length for retransmission */
                           341	#279:             cwTxPendingLength = (tCwDataLengthType)kFblCwRcrRpMsgLength;
                           342	#280:          }
                           343	#281:       }
                           344	#282:    }
                           345	#283: }
                           346	#285: #define FBL_CW_TASK_START_SEC_CODE
                           347	#286: #include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_19.1 */
                           348	#287: /***********************************************************************************************************************
                           349	#288:  *  FblCwTimerTask
                           350	#289:  **********************************************************************************************************************/
                           351	#290: /*! \brief       Communication wrapper timer task function
                           352	#291:  *  \pre         CW is initialized.
                           353	#292:  **********************************************************************************************************************/
                           354	#293: void V_API_NEAR FblCwTimerTask( void )
                           355	#294: {
                           356	#295:    /* Check if communication wrapper already initialized */
                           357	#296:    if (FblCwGetInit())
                           358	#297:    {
                           359	#298:       if (!GetCwTimerTaskRunning())
                           360	#299:       {
                           361	#300:          SetCwTimerTaskRunning();
                           362	#302: #if ( TpCallCycle > 1 )
                           363	#303:          tpCycleCounter++;
                           364	#304:          if (tpCycleCounter >= TpCallCycle)
                           365	#305:          {
                           366	#306: #endif
                           367	#307:             /* Call transport layer cyclic function */
                           368	#308:             FblTpTask();
                           369	#309: #if ( TpCallCycle > 1 )
                           370	#310:             tpCycleCounter = 0u;
                           371	#311:          }
                           372	#312: #endif
                           373	#313:          /* Check for pending operation */
                           374	#314:          if (cwTxTimer != 0u)
                           375	#315:          {
                           376	#316:             /* decrement timer */
                           377	#317:             cwTxTimer--;
                           378	#319:             /* Evaluation of the txState only necessary if the timer is running */
                           379	#320:             switch (cwTxState)

                                   Fri Apr 10 08:32:01 2020           Page 8
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           380	#321:             {
                           381	#322:                case kFblCwTxStateIdle:         /* Intentional fall-through */
                           382	#323:                case kFblCwTxStateRpInProgress: /* Intentional fall-through */
                           383	#324:                case kFblCwTxStateTxInProgress:
                           384	#325:                {
                           385	#326:                   /* Timer is irrelevant in these states */
                           386	#327:                   cwTxTimer = 0u;
                           387	#328:                   break;
                           388	#329:                }
                           389	#330:                case kFblCwTxStateRpPending:
                           390	#331:                {
                           391	#332:                   /* Check if the timer is expired */
                           392	#333:                   if (cwTxTimer == 0u)
                           393	#334:                   {
                           394	#335:                      cwTxState = kFblCwTxStateIdle;
                           395	#336:                      FblDiagTxErrorIndication(kFblCwMsgTypeRcrRp);
                           396	#337:                   }
                           397	#338:                   else
                           398	#339:                   {
                           399	#340:                      /* Change state before call to TpTransmit because indication may be done within the function */
                           400	#341:                      cwTxState = kFblCwTxStateRpInProgress;
                           401	#342:                      if (FblTpTransmitSF((vuint8)cwTxPendingLength) != kTpSuccess)
                           402	#343:                      {
                           403	#344:                         /* Revert to previous state */
                           404	#345:                         cwTxState = kFblCwTxStateRpPending;
                           405	#346:                      }
                           406	#347:                      else
                           407	#348:                      {
                           408	#349:                         /* Now successful. Stop the timer */
                           409	#350:                         cwTxTimer = 0u;
                           410	#351:                      }
                           411	#352:                   }
                           412	#353:                   break;
                           413	#354:                }
                           414	#355:                case kFblCwTxStateTxPending:
                           415	#356:                {
                           416	#357:                   /* Check if the timer is expired */
                           417	#358:                   if (cwTxTimer == 0u)
                           418	#359:                   {
                           419	#360:                      cwTxState = kFblCwTxStateIdle;
                           420	#361:                      FblDiagTxErrorIndication(kFblCwMsgTypeNormal);
                           421	#362:                   }
                           422	#363:                   else
                           423	#364:                   {
                           424	#365:                      /* Change state before call to TpTransmit             */
                           425	#366:                      /* because indication may be done within the function */
                           426	#367:                      cwTxState = kFblCwTxStateTxInProgress;
                           427	#368:                      if (FblTpTransmit(cwTxPendingLength) != kTpSuccess)
                           428	#369:                      {
                           429	#370:                         /* revert to previous state */
                           430	#371:                         cwTxState = kFblCwTxStateTxPending;
                           431	#372:                      }
                           432	#373:                      else
                           433	#374:                      {
                           434	#375:                         /* Now successful. Stop the timer */
                           435	#376:                         cwTxTimer = 0u;

                                   Fri Apr 10 08:32:01 2020           Page 9
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           436	#377:                      }
                           437	#378:                   }
                           438	#379:                   break;
                           439	#380:                }
                           440	#381:                default:
                           441	#382:                {
                           442	#383:                   /* Illegal state */
                           443	#384:                   cwTxState = kFblCwTxStateIdle;
                           444	#385:                   cwTxTimer = 0u;
                           445	#386:                   break;
                           446	#387:                }
                           447	#388:             }
                           448	#389:          }
                           449	#391:          ClrCwTimerTaskRunning(); /* PRQA S 0277 */ /* MD_FblCw_0277 */
                           450	#392:       }
                           451	#393:    }
                           452	#394: } /* PRQA S 6030, 6080 */ /* MD_MSR_STCYC, MD_MSR_STMIF */
                           453	#396: /***********************************************************************************************************************
                           454	#397:  *  FblCwStateTask
                           455	#398:  **********************************************************************************************************************/
                           456	#399: /*! \brief       Polling of CAN receive messages and CAN message confirmation
                           457	#400:  *  \pre         CW is initialized
                           458	#401:  **********************************************************************************************************************/
                           459	#402: void V_API_NEAR FblCwStateTask( void )
                           460	#403: {
                           461	#404:    if (FblCwGetInit())
                           462	#405:    {
                           463	#406:       if (!GetCwStateTaskRunning())
                           464	#407:       {
                           465	#408:          SetCwStateTaskRunning();
                           466	#410:          (void)FblCanMsgTransmitted();
                           467	#412: # if defined( FBL_CW_ENABLE_TASK_CODE_IN_RAM ) || \
                           468	#413:      defined( FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK )
                           469	#414:          /* Polling of CAN receive messages */
                           470	#415:          if (FblCanReceive() != 0u) /* PRQA S 0303 */ /* MD_FblCw_0303 */
                           471	#416:          {
                           472	#417:             /*-----------------------------------------------------------------*/
                           473	#418:             /*--- CAN messages has been received. Check for new data.          */
                           474	#419:             /*-----------------------------------------------------------------*/
                           475	#420:             /* Process the RxMsg if the ID is valid                            */
                           476	#421:             /* and call FblCanHandleRxMsg with a handle                        */
                           477	#422:             {
                           478	#423:                FblCanProcessRxMsg();
                           479	#424:             }
                           480	#425:          }
                           481	#426: # endif /* FBL_CW_ENABLE_TASK_CODE_IN_RAM || FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK */
                           482	#427:          ClrCwStateTaskRunning(); /* PRQA S 0277 */ /* MD_FblCw_0277 */
                           483	#428:       }
                           484	#429:    }
                           485	#430: }
                           486	#432: # define FBL_CW_TASK_STOP_SEC_CODE
                           487	#433: # include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_19.1 */
                           488	#435: /***********************************************************************************************************************
                           489	#436:  *  FblCwIdleTask
                           490	#437:  **********************************************************************************************************************/
                           491	#438: /*! \brief       Communication wrapper idle task function

                                   Fri Apr 10 08:32:01 2020           Page 10
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           492	#439:  *  \details     The function polls the CAN, it also executes some pending actions, which could not fulfilled in the
                           493	#440:  *               event function.
                           494	#441:  *               Note, that the order of polling is a design decision: Error-Task, TX-Task, RX-Task.
                           495	#442:  *  \pre         CW is initialized
                           496	#443:  **********************************************************************************************************************/
                           497	#444: void FblCwIdleTask( void )
                           498	#445: {
                           499	#446:    /* Check for CAN errors */
                           500	#447:    FblCanErrorTask();
                           501	#449: #if defined( FBL_CW_ENABLE_TASK_CODE_IN_RAM ) || \
                           502	#450:     defined( FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK )
                           503	#451: #else
                           504	#452:    /* Polling of CAN receive messages */
                           505	#453:    if (FblCanReceive() != 0u) /* PRQA S 0303 */ /* MD_FblCw_0303 */
                           506	#454:    {
                           507	#455:       /*-----------------------------------------------------------------*/
                           508	#456:       /*--- CAN messages has been received. Check for new data.          */
                           509	#457:       /*-----------------------------------------------------------------*/
                           510	#458:       /* Process the RxMsg if the ID is valid                            */
                           511	#459:       /* and call FblCanHandleRxMsg with a handle                        */
                           512	#460:       {
                           513	#461:          FblCanProcessRxMsg();
                           514	#462:       }
                           515	#463:    }
                           516	#464: #endif /* FBL_ENABLE_COM_RX_INTERRUPT || FBL_CW_ENABLE_TASK_CODE_IN_RAM || FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK */
                           517	#466: }
                           518	#468: /***********************************************************************************************************************
                           519	#469:  *  FblCwInitRxIdentifier
                           520	#470:  **********************************************************************************************************************/
                           521	#471: /*! \brief       Initialization of receive CAN identifiers
                           522	#472:  **********************************************************************************************************************/
                           523	#473: static void FblCwInitRxIdentifier(void)
                           524	#474: {
                           525	#475:    vuintx i;
                           526	#476:    vuintx idIndex;
                           527	#478:    for (i = 0u; i < FBL_NUMBER_OF_RX_ID; i++)
                           528	#479:    {
                           529	#480:       idIndex = 0u;
                           530	#482:       /* Calculate ID position */
                           531	#483: #if defined( FBL_CW_ENABLE_MULTIPLE_NODES )
                           532	#484:       if (fblCanIdRxConfiguration[i].nrOfNodes > 1u)
                           533	#485:       {
                           534	#486:          idIndex += fblEcuHandle;
                           535	#487:       }
                           536	#488: #endif
                           537	#489:       /* Set Rx Id */
                           538	#490:       fblCanIdTable.CanRxId[fblCanIdRxConfiguration[i].fblCanIdTableIndex] = fblCanIdRxConfiguration[i].idList[idIndex];
                           539	#491:    }
                           540	#493: }
                           541	#495: /***********************************************************************************************************************
                           542	#496:  *  FblCwInit
                           543	#497:  **********************************************************************************************************************/
                           544	#498: /*! \brief       Initialization of communication layer
                           545	#499:  **********************************************************************************************************************/
                           546	#500: void FblCwInit(void)
                           547	#501: {

                                   Fri Apr 10 08:32:01 2020           Page 11
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           548	#503:    /* Init local variables */
                           549	#504: #if ( TpCallCycle > 1 )
                           550	#505:    tpCycleCounter = 0u;
                           551	#506: #endif
                           552	#507:    cwTxTimer = 0u;
                           553	#508:    cwTxState = kFblCwTxStateIdle;
                           554	#509:    cwCanRxMsgState = kFblCwCanRxMsgStatePhysical;
                           555	#511:    /* Copy CAN initialization data into RAM */
                           556	#512:    fblCanIdTable = kFblCanIdTable;
                           557	#514: #if defined( FBL_CW_ENABLE_MULTIPLE_NODES ) || \
                           558	#515:     defined( FBL_ENABLE_CAN_CONFIGURATION )
                           559	#516:    /* Callback function for ECU-specific CAN initialization */
                           560	#517:    ApplFblCanParamInit();
                           561	#518: #endif
                           562	#520:    /* Prepare CAN identifiers */
                           563	#521:    FblCwInitRxIdentifier();
                           564	#523: #if defined( FBL_DEF_ENABLE_NON_KB_MAIN )
                           565	#524:    /* Activate Transceiver */
                           566	#525:    ApplTrcvrNormalMode();
                           567	#526: #endif /* FBL_DEF_ENABLE_NON_KB_MAIN */
                           568	#527:    /* Initialize CAN interface */
                           569	#528:    FblCanInit();
                           570	#530:    /* Initialize Transport Layer */
                           571	#531:    FblTpInitPowerOn();
                           572	#534: #if defined( FBL_DEF_ENABLE_NON_KB_MAIN )
                           573	#535: #endif /* FBL_DEF_ENABLE_NON_KB_MAIN */
                           574	#537:    cwTaskState = 0u;
                           575	#540:    FblCwSetInit();
                           576	#541: }
                           577	#543: /***********************************************************************************************************************
                           578	#544:  *  FblCwDeinit
                           579	#545:  **********************************************************************************************************************/
                           580	#546: /*! \brief       Deinitialization of communication layer
                           581	#547:  **********************************************************************************************************************/
                           582	#548: void FblCwDeinit( void )
                           583	#549: {
                           584	#550: #if ( FBLDRVCAN_REFERENCE_IMPLEMENTATION >= 0x0102 )
                           585	#551:    FblCanStop();
                           586	#552: #endif
                           587	#553:    FblCwClrInit();
                           588	#554: }
                           589	#556: /***********************************************************************************************************************
                           590	#557:  *  FblCwSetTxInit
                           591	#558:  **********************************************************************************************************************/
                           592	#559: /*! \brief       Set transmit init parameter
                           593	#560:  *  \pre         fblEcuHandle has to be configured by user callback (Multiple Nodes configuration)
                           594	#561:  **********************************************************************************************************************/
                           595	#562: void FblCwSetTxInit( void )
                           596	#563: {
                           597	#564:    vuintx i;
                           598	#565:    vuintx idIndex;
                           599	#566:    vuintx txObjectIndex;
                           600	#568:    /* Initialize configured TX objects */
                           601	#569:    for (i = 0u; i < FBL_NUMBER_OF_TX_ID; i++)
                           602	#570:    {
                           603	#571:       idIndex = 0u;

                                   Fri Apr 10 08:32:01 2020           Page 12
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           604	#573: #if defined( FBL_CW_ENABLE_MULTIPLE_NODES )
                           605	#574:       if (fblCanIdTxConfiguration[i].nrOfNodes > 1u)
                           606	#575:       {
                           607	#576:          idIndex += fblEcuHandle;
                           608	#577:       }
                           609	#578: #endif
                           610	#580:       txObjectIndex = fblCanIdTxConfiguration[i].txObject;
                           611	#582:       /* Prepare send objects */
                           612	#583:       FblCanSetTxId(fblCanTxObj[txObjectIndex], fblCanIdTxConfiguration[i].idList[idIndex]);
                           613	#584:       FblCanSetTxDLC(fblCanTxObj[txObjectIndex], 8u);
                           614	#585:       FblCanSetTxConfirmation(fblCanTxObj[txObjectIndex], fblCanIdTxConfiguration[i].fblCwConfirmationHandler);
                           615	#587:    }
                           616	#589:    /* Set transmit object index */
                           617	#590:    fblCwDiagTransmitObject = fblCanIdTxConfiguration[kFblCwDiagTxObject].txObject;
                           618	#591: }
                           619	#593: #if defined( FBL_CW_ENABLE_BAUDRATE_SWITCH )
                           620	#594: /***********************************************************************************************************************
                           621	#595:  *  FblCwCheckBaudrate
                           622	#596:  **********************************************************************************************************************/
                           623	#597: /*! \brief       Check whether requested baud rate is supported for active connection
                           624	#598:  *  \param[in]   baudrate  Requested baud rate (in kBaud)
                           625	#599:  *  \return      kFblOk if baud rate is supported for active connection, kFblFailed otherwise
                           626	#600:  **********************************************************************************************************************/
                           627	#601: tFblResult FblCwCheckBaudrate( vuint32 baudrate )
                           628	#602: {
                           629	#603:    tFblResult result;
                           630	#605:    result = kFblFailed;
                           631	#607:    if (baudrate != 0u)
                           632	#608:    {
                           633	#609:       if (kFblOk == ApplFblCheckBaudrate(baudrate))
                           634	#610:       {
                           635	#611:          result = kFblOk;
                           636	#612:       }
                           637	#613:    }
                           638	#615:    return result;
                           639	#616: }
                           640	#618: /***********************************************************************************************************************
                           641	#619:  *  FblCwSwitchBaudrate
                           642	#620:  **********************************************************************************************************************/
                           643	#621: /*! \brief       Switch baud rate of active connection
                           644	#622:  *  \param[in]   baudrate Requested baud rate (in kBaud)
                           645	#623:  *  \return      kFblOk if baud rate was successfully switched, kFblFailed otherwise
                           646	#624:  **********************************************************************************************************************/
                           647	#625: tFblResult FblCwSwitchBaudrate( vuint32 baudrate )
                           648	#626: {
                           649	#627:    /* Reinitialize ComWrapper to apply new baudrate */
                           650	#628:    FblCwClrInit();
                           651	#629:    FblCwInit();
                           652	#631:    return kFblOk;
                           653	#632: }
                           654	#633: #endif /* FBL_CW_ENABLE_BAUDRATE_SWITCH */
                           655	#635: /***********************************************************************************************************************
                           656	#636:  *  FblCwDiscardReception
                           657	#637:  **********************************************************************************************************************/
                           658	#638: /*! \brief       Received messages are discarded
                           659	#639:  **********************************************************************************************************************/

                                   Fri Apr 10 08:32:01 2020           Page 13
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           660	#640: void FblCwDiscardReception( void )
                           661	#641: {
                           662	#642:    /* Discard all incoming messages */
                           663	#643:    cwCanRxMsgState = kFblCwCanRxMsgStateDiscard;
                           664	#645:    /* Handle all rx messages */
                           665	#646:    while ((FblCanReceive() != 0u)) /* PRQA S 0303 */ /* MD_FblCw_0303 */
                           666	#647:    {
                           667	#648:       FblCanProcessRxMsg();
                           668	#649:    }
                           669	#651:    /* Reset to further process RX CAN messages */
                           670	#652:    cwCanRxMsgState = kFblCwCanRxMsgStatePhysical;
                           671	#653: }
                           672	#655: /***********************************************************************************************************************
                           673	#656:  *  FblCwSetRxBlock
                           674	#657:  **********************************************************************************************************************/
                           675	#658: /*! \brief       Reset transport layer
                           676	#659:  **********************************************************************************************************************/
                           677	#660: void FblCwSetRxBlock( void )
                           678	#661: {
                           679	#662:    /* Block DiagBuffer to refuse reception on TP */
                           680	#663:    FblTpSetRxBlock();
                           681	#664: }
                           682	#666: /***********************************************************************************************************************
                           683	#667:  *  FblCwResetRxBlock
                           684	#668:  **********************************************************************************************************************/
                           685	#669: /*! \brief       Reset transport layer
                           686	#670:  **********************************************************************************************************************/
                           687	#671: void FblCwResetRxBlock( void )
                           688	#672: {
                           689	#673:    cwTxTimer = 0u;
                           690	#674:    cwTxState = kFblCwTxStateIdle;
                           691	#676:    /* No response via TP - reset all functions */
                           692	#677:    FblTpResetRxBlock();
                           693	#679: }
                           694	#681: /***********************************************************************************************************************
                           695	#682:  *  FblCwCanTransmit
                           696	#683:  **********************************************************************************************************************/
                           697	#684: /*! \brief       Schedule data for transmission.
                           698	#685:  *  \pre         CW is initialized
                           699	#686:  *  \param[in]   data Pointer to transmit data
                           700	#687:  *  \param[in]   length Length of data
                           701	#688:  **********************************************************************************************************************/
                           702	#689: void FblCwCanTransmit( const V_MEMRAM1 vuint8 V_MEMRAM2 V_MEMRAM3 * data, tCwDataLengthType length )
                           703	#690: {
                           704	#691:    vuint16 maxWaitTime;
                           705	#692: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                           706	#693:    (void)data; /* PRQA S 3112 */ /* MD_MSR_14.2  */
                           707	#694: #endif
                           708	#696:    /* Wait in case response pending is in progress */
                           709	#697:    maxWaitTime = kFblCwMaxWaitTime;
                           710	#699:    /* Retransmit response in FblCwStateTask if necessary */
                           711	#700:    while ((maxWaitTime > 0u) && (cwTxState != kFblCwTxStateIdle))
                           712	#701:    {
                           713	#702:       if (FblLookForWatchdog() != FBL_NO_TRIGGER)
                           714	#703:       {
                           715	#704:          maxWaitTime--;

                                   Fri Apr 10 08:32:01 2020           Page 14
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           716	#705:       }
                           717	#706:    }
                           718	#708:    /* To dispatch confirmation */
                           719	#709:    cwTxState = kFblCwTxStateTxInProgress;
                           720	#710:    if (FblTpTransmit(length) != kTpSuccess)
                           721	#711:    {
                           722	#712:       cwTxTimer = kFblCwTxPendingTimeout;
                           723	#713:       cwTxState = kFblCwTxStateTxPending;
                           724	#715:       /* Temporary store length */
                           725	#716:       cwTxPendingLength = length;
                           726	#717:    }
                           727	#718: }
                           728	#723: /***********************************************************************************************************************
                           729	#724:  *  CALLBACK FUNCTIONS FROM TP LAYER
                           730	#725:  **********************************************************************************************************************/
                           731	#728: /***********************************************************************************************************************
                           732	#729:  *  FblCwTpDataInd
                           733	#730:  **********************************************************************************************************************/
                           734	#731: /*! \brief       Indication function for a transport layer message
                           735	#732:  *  \param[in]   rxDataLen Number of received bytes
                           736	#733:  **********************************************************************************************************************/
                           737	#734: void FblCwTpDataInd( tCwDataLengthType rxDataLen )
                           738	#735: {
                           739	#737:    if (rxDataLen > 0u)
                           740	#738:    {
                           741	#739:       FblDiagRxIndication(DiagBuffer, rxDataLen);
                           742	#740:    }
                           743	#741: }
                           744	#743: /***********************************************************************************************************************
                           745	#744:  *  FblCwTpConfirmation
                           746	#745:  **********************************************************************************************************************/
                           747	#746: /*! \brief       TP message transmission completed
                           748	#747:  *  \details     This function is called by the TP to confirm a message has been sent
                           749	#748:  *               successful or terminated with an error. The message transmission state
                           750	#749:  *               is handed over to the diagnostic module.
                           751	#750:  *  \param[in]   state TP confirmation state: kTpBusy, kTpSuccess, kTpErrTxFCNotExpected,
                           752	#751:  *               kTpTimeoutFC, kTpErrTxOverrun, kTpErrTxFSInvalid, kTpCanTxFailed
                           753	#752:  **********************************************************************************************************************/
                           754	#753: void FblCwTpConfirmation( vuint8 state )
                           755	#754: {
                           756	#755:    vuint8 resetState;
                           757	#757:    /* TpConfirm called from TP. This can have several reasons */
                           758	#758:    if ((state != kTpErrTxFCNotExpected) && (state != kTpBusy) && (state != kTpFailed))
                           759	#759:    {
                           760	#760:       /* State is reset per default */
                           761	#761:       resetState = (vuint8)1u;
                           762	#763:       if (state == kTpSuccess)
                           763	#764:       {
                           764	#765:          switch (cwTxState)
                           765	#766:          {
                           766	#767:             case kFblCwTxStateIdle:
                           767	#768:             {
                           768	#769:                break;
                           769	#770:             }
                           770	#771:             case kFblCwTxStateRpInProgress:
                           771	#772:             {

                                   Fri Apr 10 08:32:01 2020           Page 15
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           772	#773:                FblDiagTxConfirmation(kFblCwMsgTypeRcrRp);
                           773	#774:                break;
                           774	#775:             }
                           775	#776:             case kFblCwTxStateTxInProgress:
                           776	#777:             {
                           777	#778:                FblDiagTxConfirmation(kFblCwMsgTypeNormal);
                           778	#779:                break;
                           779	#780:             }
                           780	#781:             case kFblCwTxStateRpPending: /* Intentional fall-through */
                           781	#782:             case kFblCwTxStateTxPending:
                           782	#783:             {
                           783	#784:                /* Confirmation while another request is pending.           */
                           784	#785:                /* Bus is now probably available for next transmission.     */
                           785	#786:                /* This can be issued at next. No action required at least. */
                           786	#787:                resetState = (vuint8)0u;
                           787	#788:                break;
                           788	#789:             }
                           789	#790:             default:
                           790	#791:             {
                           791	#792:                /* Illegal state */
                           792	#793:                break;
                           793	#794:             }
                           794	#795:          }
                           795	#796:       }
                           796	#797:       else
                           797	#798:       {
                           798	#799:          /* Evaluate the parameter type and indicate the error */
                           799	#800:          switch (cwTxState)
                           800	#801:          {
                           801	#802:             case kFblCwTxStateRpInProgress: /* Intentional fall-through */
                           802	#803:             case kFblCwTxStateRpPending:
                           803	#804:             {
                           804	#805:                FblDiagTxErrorIndication(kFblCwMsgTypeRcrRp);
                           805	#806:                break;
                           806	#807:             }
                           807	#808:             default:
                           808	#809:             {
                           809	#810:                FblDiagTxErrorIndication(kFblCwMsgTypeNormal);
                           810	#811:                break;
                           811	#812:             }
                           812	#813:          }
                           813	#814: #if defined( FBL_CW_ENABLE_CANCEL_REQUEST )
                           814	#815:          if (state == kTpCanTxFailed)
                           815	#816:          {
                           816	#817:             /* Reset CAN channel if TxTimeout occurs */
                           817	#818:             FblCanInit();
                           818	#819:          }
                           819	#820: #endif /* FBL_CW_ENABLE_CANCEL_REQUEST */
                           820	#821:       }
                           821	#823:       /* Current TX operation completed */
                           822	#824:       if (resetState != (vuint8)0u)
                           823	#825:       {
                           824	#826:          cwTxState = kFblCwTxStateIdle;
                           825	#827:          cwTxTimer = 0u;
                           826	#828:       }
                           827	#829:    }

                                   Fri Apr 10 08:32:01 2020           Page 16
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           828	#830: }
                           829	#832: /***********************************************************************************************************************
                           830	#833:  *  FblCwTpRxStartIndication
                           831	#834:  **********************************************************************************************************************/
                           832	#835: /*! \brief       Start of TP frame has been received.
                           833	#836:  *  \details     Indicate start of TP frame to ComWrapper
                           834	#837:  **********************************************************************************************************************/
                           835	#838: void FblCwTpRxStartIndication( void )
                           836	#839: {
                           837	#840:     /* Dummy call of FblDiagRxGetPhysBuffer to clear functional requests and make it conform to the CW-specification.
                           838	#841:      * The GetDiagBufferLocked concept is not applicable for CAN, the FblTp Module copies the received data into the
                           839	#842:      * DiagBuffer independently of it is locked or not. */
                           840	#844:    if (cwCanRxMsgState == kFblCwCanRxMsgStatePhysical)
                           841	#845:    {
                           842	#846:       (void)FblDiagRxGetPhysBuffer(gbTpRxLength);
                           843	#847:    }
                           844	#849:    FblDiagRxStartIndication();
                           845	#850: }
                           846	#852: /***********************************************************************************************************************
                           847	#853:  *  FblCwTpErrorIndication
                           848	#854:  **********************************************************************************************************************/
                           849	#855: /*! \brief       TP-layer error indication function
                           850	#856:  *  \details     Indicates that an error occurred during reception of a multi-frame message.
                           851	#857:  *               In case of error codes kTpErrRxWrongSN or kTpErrRxTimeout, the diagnostic module is informed.
                           852	#858:  *  \param[in]   errorCode Details the error that has occurred during reception.
                           853	#859:  **********************************************************************************************************************/
                           854	#860: void FblCwTpErrorIndication( vuint8 errorCode )
                           855	#861: {
                           856	#862:    if ((errorCode == kTpErrRxWrongSN) || (errorCode == kTpErrRxTimeout))
                           857	#863:    {
                           858	#864:       /* Clear all other flags for service management */
                           859	#866:       /* Important: Indicate only those errors, that aborts reception or service transmission */
                           860	#867:       FblDiagRxErrorIndication();
                           861	#868:    }
                           862	#869: }
                           863	#871: /***********************************************************************************************************************
                           864	#872:  *  CALLBACK FUNCTIONS FROM CAN LAYER
                           865	#873:  **********************************************************************************************************************/
                           866	#875: /***********************************************************************************************************************
                           867	#876:  *  FblCwPrecopy
                           868	#877:  **********************************************************************************************************************/
                           869	#878: /*! \brief       Function to support functional(broadcast) requests
                           870	#879:  *  \param[in]   data Receive data value (not used in each case)
                           871	#880:  **********************************************************************************************************************/
                           872	#881: #if defined( MULTIPLE_RECEIVE_BUFFER )
                           873		.align	1
                           874		.align	1
                           875	..gh.f.p.3.a.1.r.0.e.1:
                           876		.type	..gh.f.p.3.a.1.r.0.e.1,@object
                           877		.size	..gh.f.p.3.a.1.r.0.e.1,0
                           878		.global	FblCwPrecopy
                           879	FblCwPrecopy:
0000001a 182106f0          880		e_stwu	sp, -16(sp)
0000001e 0080              881		se_mflr	r0
00000020 d3f1              882		se_stw	r31, 12(sp)
00000022 d501              883		se_stw	r0, 20(sp)

                                   Fri Apr 10 08:32:01 2020           Page 17
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000024 013f              884		se_mr	r31, r3
                           885	#	    .bf
                           886	.LDW21:
00000026 70e0e000          887		e_lis	r7, %hiadj(CanRxActualDLC)
0000002a 50e70000          888		e_lwz	r7, %lo(CanRxActualDLC)(r7)
                           889	#882: void FblCwPrecopy( pChipDataPtr data )
                           890	#883: {
                           891	#884: #endif
                           892	#885:    vuint8 * pFuncBuffer;
                           893	#887: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                           894	#888:    (void)data; /* PRQA S 3112 */ /* MD_MSR_14.2 */
                           895	#889: #endif
                           896	#891: #if defined( FBL_TP_ENABLE_FIX_RX_DLC_CHECK )
                           897	#892: # if defined( FBL_TP_ENABLE_VARIABLE_RX_DLC )
                           898	#893: # else
                           899	#894:    if (CanRxActualDLC != 8u)
0000002e 2a87              900		se_cmpi	r7, 8
00000030 e200              901		se_bne	.L61
                           902	#895:    {
                           903	#896:       return;
                           904	#897:    }
                           905	#898: # endif
                           906	#899: #endif
                           907	#900:    if ((pCanData[kTpciPos] != 0u) && (pCanData[kTpciPos] < CanRxActualDLC))
                           908	#line900
                           909	..lin.5de73d6a..ebc76135.0_2::
                           910	.LDWlin2:
00000032 8003              911		se_lbz	r0, 0(r3)
00000034 2a00              912		se_cmpi	r0, 0
00000036 e600              913		se_beq	.L61
00000038 8003              914		se_lbz	r0, 0(r3)
0000003a 2270              915		se_cmpli	r0, 8
0000003c e000              916		se_bge	.L61
                           917	#901:    {
                           918	#902:       /* Try to get the functional request buffer */
                           919	#903:       pFuncBuffer = FblDiagRxGetFuncBuffer(pCanData[kTpciPos]);
                           920	#line903
                           921	..lin.5de73d6a..ebc76135.0_3::
                           922	.LDWlin3:
0000003e 8033              923		se_lbz	r3, 0(r3)
00000040 78000001          924		e_bl	FblDiagRxGetFuncBuffer
                           925	#905:       /* Physical buffer is available. Service can be processed. */
                           926	#906:       if (NULL != pFuncBuffer)
00000044 2a03              927		se_cmpi	r3, 0
00000046 e600              928		se_beq	.L61
                           929	#907:       {
                           930	#908:          cwCanRxMsgState = kFblCwCanRxMsgStateFunctional;
                           931	#line908
                           932	..lin.5de73d6a..ebc76135.0_4::
                           933	.LDWlin4:
00000048 4810              934		se_li	r0, 1
0000004a 70e0e000          935		e_lis	r7, %hiadj(cwCanRxMsgState)
0000004e 34070000          936		e_stb	r0, %lo(cwCanRxMsgState)(r7)
                           937	#909:          (void)FblTpPrecopy(data);
00000052 01f3              938		se_mr	r3, r31
00000054 78000001          939		e_bl	FblTpPrecopy

                                   Fri Apr 10 08:32:01 2020           Page 18
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           940	.L61:
                           941	#910:       }
                           942	#911:    }
                           943	#913: }  /* PRQA S 2006 */ /* MD_MSR_14.7 */
                           944	#	    .ef
                           945	.LDW31:
00000058 c501              946		se_lwz	r0, 20(sp)
0000005a c3f1              947		se_lwz	r31, 12(sp)
0000005c 20f1              948		se_addi	sp, 16
0000005e 0090              949		se_mtlr	r0
00000060 0004              950		se_blr
                           951		.global	__ghs_eofn_FblCwPrecopy
                           952	__ghs_eofn_FblCwPrecopy:
                           953		.type	FblCwPrecopy,@function
                           954		.size	FblCwPrecopy,$-FblCwPrecopy
                           955		.align	1
                           956	
                           957	#function:			FblCwPrecopy
                           958	#stack frame size:		16
                           959	#link area offset:		0
                           960	#local storage area offset:	12
                           961	#gpr save area offset:		12
                           962	#
                           963	
                           964	#data	r31	param
                           965	
                           966		.data
                           967		.section ".vletext", "vax"
                           968		.vle
                           969		.vle
                           970	
                           971	
                           972		.align	1
                           973		.align	1
                           974	..gh.f.p.5.a.1.r.0.e.2:
                           975		.type	..gh.f.p.5.a.1.r.0.e.2,@object
                           976		.size	..gh.f.p.5.a.1.r.0.e.2,0
                           977		.global	FblCwProcessFunctionalRequest
                           978	FblCwProcessFunctionalRequest:
                           979	#	    .bf
                           980	.LDW41:
                           981	#218: void FblCwProcessFunctionalRequest(vuint8 fblRxCanMsgHdl, pChipDataPtr canDataPtr, vuintx connectionIndex)
                           982	#219: {
                           983	#220: #  if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                           984	#221:    (void)connectionIndex; /* PRQA S 3112 */ /* MD_MSR_14.2  */
                           985	#222: #  endif
                           986	#224:       /* Discard messages if a diagnostic response is currently processed */
                           987	#225:       if (kFblCwCanRxMsgStateDiscard != cwCanRxMsgState)
00000062 70e0e000          988		e_lis	r7, %hiadj(cwCanRxMsgState)
00000066 30070000          989		e_lbz	r0, %lo(cwCanRxMsgState)(r7)
0000006a 2a20              990		se_cmpi	r0, 2
0000006c e600              991		se_beq	.L152
                           992	#226:       {
                           993	#227:             /* cwCanRxMsgState will be set in FblCwPrecopy if the functional request is accepted */
                           994	#228:             FblCwPrecopy(canDataPtr);
                           995	#line228

                                   Fri Apr 10 08:32:01 2020           Page 19
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                           996	..lin.5de73d6a..5358030e.0_5::
                           997	.LDWlin5:
0000006e 0143              998		se_mr	r3, r4
00000070 e800              999		se_b	FblCwPrecopy
                          1000	.L152:
                          1001	#229:       }
                          1002	#230: }
                          1003	#	    .ef
                          1004	.LDW51:
                          1005	#line230
                          1006	..lin.5de73d6a..5358030e.0_6::
                          1007	.LDWlin6:
00000072 0004             1008		se_blr
                          1009		.global	__ghs_eofn_FblCwProcessFunctionalRequest
                          1010	__ghs_eofn_FblCwProcessFunctionalRequest:
                          1011		.type	FblCwProcessFunctionalRequest,@function
                          1012		.size	FblCwProcessFunctionalRequest,$-FblCwProcessFunctionalRequest
                          1013		.align	1
                          1014	
                          1015	#function:			FblCwProcessFunctionalRequest
                          1016	#stack frame size:		0
                          1017	#
                          1018	
                          1019	#fblRxCanMsgHdl	none	param
                          1020	#canDataPtr	r4	param
                          1021	#connectionIndex	none	param
                          1022	
                          1023		.data
                          1024		.section ".vletext", "vax"
                          1025		.vle
                          1026		.vle
                          1027	
                          1028	
                          1029	#231: #endif /* FBL_CW_ENABLE_FUNCTIONAL_REQUEST_HANDLER */
                          1030	#235: /***********************************************************************************************************************
                          1031	#236:  *   GLOBAL FUNCTIONS
                          1032	#237:  **********************************************************************************************************************/
                          1033	#239: /***********************************************************************************************************************
                          1034	#240:  *  FblCwTransmitRP
                          1035	#241:  **********************************************************************************************************************/
                          1036	#242: /*! \brief       Transmit given data buffer with RCR-RP
                          1037	#243:  *  \pre         CW is initialized
                          1038	#244:  *  \param[in]   data Pointer to the data to be transmitted
                          1039	#245:  **********************************************************************************************************************/
                          1040		.align	1
                          1041		.align	1
                          1042	..gh.f.p.3.a.1.r.0.e.3:
                          1043		.type	..gh.f.p.3.a.1.r.0.e.3,@object
                          1044		.size	..gh.f.p.3.a.1.r.0.e.3,0
                          1045		.global	FblCwTransmitRP
                          1046	FblCwTransmitRP:
00000074 182106f0         1047		e_stwu	sp, -16(sp)
00000078 0080             1048		se_mflr	r0
0000007a d3f1             1049		se_stw	r31, 12(sp)
0000007c d501             1050		se_stw	r0, 20(sp)
                          1051	#	    .bf

                                   Fri Apr 10 08:32:01 2020           Page 20
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1052	.LDW61:
                          1053	#246: void FblCwTransmitRP( const vuint8 * data )
                          1054	#247: {
                          1055	#248: #if defined( FBL_TP_ENABLE_TX_FRAME_PADDING )
                          1056	#249:    vuintx i;
                          1057	#250: #endif
                          1058	#251:    {
                          1059	#252:       /* Transmission if ComWrapper is idle */
                          1060	#253:       if (cwTxState == kFblCwTxStateIdle)
0000007e 73e0e000         1061		e_lis	r31, %hiadj(cwTxState)
00000082 1fff0000         1062		e_add16i	r31, r31, %lo(cwTxState)
00000086 800f             1063		se_lbz	r0, 0(r31)
00000088 2a00             1064		se_cmpi	r0, 0
0000008a e200             1065		se_bne	.L205
                          1066	#line254
                          1067	..lin.5de73d6a..16afe9a7.0_7::
                          1068	.LDWlin7:
0000008c 70e0e000         1069		e_lis	r7, %hiadj(fblCwDiagTransmitObject)
00000090 50e70000         1070		e_lwz	r7, %lo(fblCwDiagTransmitObject)(r7)
                          1071	#254:       {
                          1072	#255:          tpCanTxData[kTpciPos]        = kFblCwRcrRpMsgLength;
00000094 4830             1073		se_li	r0, 3
00000096 18e7a014         1074		e_mulli	r7, r7, 20
0000009a 1ce70000         1075		e_add16i	r7, r7, %lo(fblCanTxObj)
0000009e 70079000         1076		e_add2is	r7, %hiadj(fblCanTxObj)
000000a2 9807             1077		se_stb	r0, 8(r7)
000000a4 8003             1078		se_lbz	r0, 0(r3)
                          1079	#256:          tpCanTxData[kSFDataPos]      = data[0u];
000000a6 9907             1080		se_stb	r0, 9(r7)
000000a8 8103             1081		se_lbz	r0, 1(r3)
                          1082	#257:          tpCanTxData[kSFDataPos + 1u] = data[1u];
000000aa 9a07             1083		se_stb	r0, 10(r7)
000000ac 8203             1084		se_lbz	r0, 2(r3)
                          1085	#258:          tpCanTxData[kSFDataPos + 2u] = data[2u];
000000ae 18c78008         1086		e_addi	r6, r7, 8
000000b2 9b07             1087		se_stb	r0, 11(r7)
                          1088	#259: #if defined( FBL_TP_ENABLE_TX_FRAME_PADDING )
                          1089	#260:          for (i = kSFDataPos + 3u; i < 8u; i++)
000000b4 4840             1090		se_li	r0, 4
                          1091	.L211:
                          1092	#261:          {
                          1093	#262:             tpCanTxData[i] = kFblTpFillPattern;
000000b6 70e000aa         1094		e_li	r7, 170
000000ba 7ce601ae         1095		stbx	r7, r6, r0
000000be 2000             1096		se_addi	r0, 1
000000c0 2270             1097		se_cmpli	r0, 8
000000c2 e400             1098		se_blt	.L211
                          1099	#263:          }
                          1100	#264: #endif
                          1101	#265: #if defined( FBL_TP_ENABLE_VARIABLE_TX_DLC )
                          1102	#266:          /* Set DLC value for next TP message */
                          1103	#267:          FblCanSetTxDLC(fblCanTxObj[fblCwDiagTransmitObject], kTpciPos + 4u);
                          1104	#268: #endif
                          1105	#270:          /* To dispatch confirmation */
                          1106	#271:          cwTxState = kFblCwTxStateRpInProgress;
                          1107	#line271

                                   Fri Apr 10 08:32:01 2020           Page 21
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1108	..lin.5de73d6a..16afe9a7.0_8::
                          1109	.LDWlin8:
000000c4 4810             1110		se_li	r0, 1
000000c6 900f             1111		se_stb	r0, 0(r31)
                          1112	#272:          if (FblTpTransmitSF(kFblCwRcrRpMsgLength) != kTpSuccess)
000000c8 4833             1113		se_li	r3, 3
000000ca 78000001         1114		e_bl	FblTpTransmitSF
000000ce 2a03             1115		se_cmpi	r3, 0
000000d0 e600             1116		se_beq	.L205
                          1117	#273:          {
                          1118	#274:             /* Transmission request failed. Retry in timer task, observed by timeout */
                          1119	#275:             cwTxTimer = kFblCwTxPendingTimeout;
                          1120	#line275
                          1121	..lin.5de73d6a..16afe9a7.0_9::
                          1122	.LDWlin9:
000000d2 4e40             1123		se_li	r0, 100
000000d4 70e0e000         1124		e_lis	r7, %hiadj(cwTxTimer)
000000d8 5c070000         1125		e_sth	r0, %lo(cwTxTimer)(r7)
                          1126	#276:             cwTxState = kFblCwTxStateRpPending;
000000dc 4830             1127		se_li	r0, 3
000000de 70e0e000         1128		e_lis	r7, %hiadj(cwTxPendingLength)
                          1129	#278:             /* Store request length for retransmission */
                          1130	#279:             cwTxPendingLength = (tCwDataLengthType)kFblCwRcrRpMsgLength;
000000e2 5c070000         1131		e_sth	r0, %lo(cwTxPendingLength)(r7)
000000e6 900f             1132		se_stb	r0, 0(r31)
                          1133	.L205:
                          1134	#280:          }
                          1135	#281:       }
                          1136	#282:    }
                          1137	#283: }
                          1138	#	    .ef
                          1139	.LDW71:
000000e8 c501             1140		se_lwz	r0, 20(sp)
000000ea c3f1             1141		se_lwz	r31, 12(sp)
000000ec 20f1             1142		se_addi	sp, 16
000000ee 0090             1143		se_mtlr	r0
000000f0 0004             1144		se_blr
                          1145		.global	__ghs_eofn_FblCwTransmitRP
                          1146	__ghs_eofn_FblCwTransmitRP:
                          1147		.type	FblCwTransmitRP,@function
                          1148		.size	FblCwTransmitRP,$-FblCwTransmitRP
                          1149		.align	1
                          1150	
                          1151	#function:			FblCwTransmitRP
                          1152	#stack frame size:		16
                          1153	#link area offset:		0
                          1154	#local storage area offset:	12
                          1155	#gpr save area offset:		12
                          1156	#
                          1157	#i	r0	local
                          1158	
                          1159	#data	r3	param
                          1160	
                          1161		.data
                          1162		.section ".vletext", "vax"
                          1163		.vle

                                   Fri Apr 10 08:32:01 2020           Page 22
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1164		.vle
                          1165	
                          1166	
                          1167	#285: #define FBL_CW_TASK_START_SEC_CODE
                          1168	#286: #include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_19.1 */
                          1169	#287: /***********************************************************************************************************************
                          1170	#288:  *  FblCwTimerTask
                          1171	#289:  **********************************************************************************************************************/
                          1172	#290: /*! \brief       Communication wrapper timer task function
                          1173	#291:  *  \pre         CW is initialized.
                          1174	#292:  **********************************************************************************************************************/
                          1175		.align	1
                          1176		.align	1
                          1177	..gh.f.p.0.a.1.r.0.e.4:
                          1178		.type	..gh.f.p.0.a.1.r.0.e.4,@object
                          1179		.size	..gh.f.p.0.a.1.r.0.e.4,0
                          1180		.global	FblCwTimerTask
                          1181	FblCwTimerTask:
000000f2 182106e8         1182		e_stwu	sp, -24(sp)
000000f6 1ba1090c         1183		e_stmw	r29, 12(sp)
000000fa 0080             1184		se_mflr	r0
000000fc d701             1185		se_stw	r0, 28(sp)
                          1186	#	    .bf
                          1187	.LDW81:
                          1188	#293: void V_API_NEAR FblCwTimerTask( void )
                          1189	#294: {
                          1190	#295:    /* Check if communication wrapper already initialized */
                          1191	#296:    if (FblCwGetInit())
000000fe 70e0e000         1192		e_lis	r7, %hiadj(fblCwInitFlag)
00000102 30070000         1193		e_lbz	r0, %lo(fblCwInitFlag)(r7)
00000106 2a10             1194		se_cmpi	r0, 1
00000108 e200             1195		se_bne	.L296
                          1196	#297:    {
                          1197	#298:       if (!GetCwTimerTaskRunning())
                          1198	#line298
                          1199	..lin.5de73d6a..eb6899e7.0_10::
                          1200	.LDWlin10:
0000010a 73e0e000         1201		e_lis	r31, %hiadj(cwTaskState)
0000010e 1fff0000         1202		e_add16i	r31, r31, %lo(cwTaskState)
00000112 800f             1203		se_lbz	r0, 0(r31)
00000114 67e0             1204		se_btsti	r0, 30
00000116 e200             1205		se_bne	.L296
                          1206	#299:       {
                          1207	#300:          SetCwTimerTaskRunning();
                          1208	#line300
                          1209	..lin.5de73d6a..eb6899e7.0_11::
                          1210	.LDWlin11:
00000118 65e0             1211		se_bseti	r0, 30
0000011a 900f             1212		se_stb	r0, 0(r31)
                          1213	#302: #if ( TpCallCycle > 1 )
                          1214	#303:          tpCycleCounter++;
                          1215	#304:          if (tpCycleCounter >= TpCallCycle)
                          1216	#305:          {
                          1217	#306: #endif
                          1218	#307:             /* Call transport layer cyclic function */
                          1219	#308:             FblTpTask();

                                   Fri Apr 10 08:32:01 2020           Page 23
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000011c 78000001         1220		e_bl	FblTpTask
                          1221	#309: #if ( TpCallCycle > 1 )
                          1222	#310:             tpCycleCounter = 0u;
                          1223	#311:          }
                          1224	#312: #endif
                          1225	#313:          /* Check for pending operation */
                          1226	#314:          if (cwTxTimer != 0u)
00000120 73a0e000         1227		e_lis	r29, %hiadj(cwTxTimer)
00000124 1fbd0000         1228		e_add16i	r29, r29, %lo(cwTxTimer)
00000128 a00d             1229		se_lhz	r0, 0(r29)
0000012a 2a00             1230		se_cmpi	r0, 0
0000012c e600             1231		se_beq	.L302
                          1232	#315:          {
                          1233	#316:             /* decrement timer */
                          1234	#317:             cwTxTimer--;
                          1235	#line317
                          1236	..lin.5de73d6a..eb6899e7.0_12::
                          1237	.LDWlin12:
0000012e 73c0e000         1238		e_lis	r30, %hiadj(cwTxState)
00000132 1fde0000         1239		e_add16i	r30, r30, %lo(cwTxState)
00000136 2400             1240		se_subi	r0, 1
                          1241	#319:             /* Evaluation of the txState only necessary if the timer is running */
                          1242	#320:             switch (cwTxState)
00000138 806e             1243		se_lbz	r6, 0(r30)
0000013a 00e0             1244		se_extzh	r0
0000013c 70e0e000         1245		e_lis	r7, %hiadj(cwTxPendingLength)
00000140 b00d             1246		se_sth	r0, 0(r29)
00000142 1ce70000         1247		e_add16i	r7, r7, %lo(cwTxPendingLength)
00000146 2226             1248		se_cmpli	r6, 3
00000148 e400             1249		se_blt	.L322
0000014a e600             1250		se_beq	.L306
0000014c 2236             1251		se_cmpli	r6, 4
0000014e e600             1252		se_beq	.L307
                          1253	#377:                      }
                          1254	#378:                   }
                          1255	#379:                   break;
                          1256	#380:                }
                          1257	#381:                default:
                          1258	#382:                {
                          1259	#383:                   /* Illegal state */
                          1260	#384:                   cwTxState = kFblCwTxStateIdle;
                          1261	#line384
                          1262	..lin.5de73d6a..eb6899e7.0_13::
                          1263	.LDWlin13:
00000150 4800             1264		se_li	r0, 0
00000152 900e             1265		se_stb	r0, 0(r30)
                          1266	#385:                   cwTxTimer = 0u;
                          1267	#386:                   break;
00000154 e800             1268		se_b	.L949
                          1269	.L306:
                          1270	#321:             {
                          1271	#322:                case kFblCwTxStateIdle:         /* Intentional fall-through */
                          1272	#323:                case kFblCwTxStateRpInProgress: /* Intentional fall-through */
                          1273	#324:                case kFblCwTxStateTxInProgress:
                          1274	#325:                {
                          1275	#326:                   /* Timer is irrelevant in these states */

                                   Fri Apr 10 08:32:01 2020           Page 24
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1276	#327:                   cwTxTimer = 0u;
                          1277	#328:                   break;
                          1278	#329:                }
                          1279	#330:                case kFblCwTxStateRpPending:
                          1280	#331:                {
                          1281	#332:                   /* Check if the timer is expired */
                          1282	#333:                   if (cwTxTimer == 0u)
                          1283	#line333
                          1284	..lin.5de73d6a..eb6899e7.0_14::
                          1285	.LDWlin14:
00000156 2a00             1286		se_cmpi	r0, 0
00000158 e200             1287		se_bne	.L312
                          1288	#334:                   {
                          1289	#335:                      cwTxState = kFblCwTxStateIdle;
                          1290	#line335
                          1291	..lin.5de73d6a..eb6899e7.0_15::
                          1292	.LDWlin15:
0000015a 900e             1293		se_stb	r0, 0(r30)
                          1294	#336:                      FblDiagTxErrorIndication(kFblCwMsgTypeRcrRp);
0000015c 4833             1295		se_li	r3, 3
0000015e e800             1296		se_b	.L951
                          1297	.L312:
                          1298	#337:                   }
                          1299	#338:                   else
                          1300	#339:                   {
                          1301	#340:                      /* Change state before call to TpTransmit because indication may be done within the function */
                          1302	#341:                      cwTxState = kFblCwTxStateRpInProgress;
                          1303	#line341
                          1304	..lin.5de73d6a..eb6899e7.0_16::
                          1305	.LDWlin16:
00000160 8137             1306		se_lbz	r3, 1(r7)
00000162 4810             1307		se_li	r0, 1
                          1308	#342:                      if (FblTpTransmitSF((vuint8)cwTxPendingLength) != kTpSuccess)
00000164 900e             1309		se_stb	r0, 0(r30)
00000166 78000001         1310		e_bl	FblTpTransmitSF
0000016a 2a03             1311		se_cmpi	r3, 0
0000016c e600             1312		se_beq	.L322
                          1313	#343:                      {
                          1314	#344:                         /* Revert to previous state */
                          1315	#345:                         cwTxState = kFblCwTxStateRpPending;
                          1316	#line345
                          1317	..lin.5de73d6a..eb6899e7.0_17::
                          1318	.LDWlin17:
0000016e 4830             1319		se_li	r0, 3
00000170 e800             1320		se_b	.L950
                          1321	.L307:
                          1322	#346:                      }
                          1323	#347:                      else
                          1324	#348:                      {
                          1325	#349:                         /* Now successful. Stop the timer */
                          1326	#350:                         cwTxTimer = 0u;
                          1327	#351:                      }
                          1328	#352:                   }
                          1329	#353:                   break;
                          1330	#354:                }
                          1331	#355:                case kFblCwTxStateTxPending:

                                   Fri Apr 10 08:32:01 2020           Page 25
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1332	#356:                {
                          1333	#357:                   /* Check if the timer is expired */
                          1334	#358:                   if (cwTxTimer == 0u)
                          1335	#line358
                          1336	..lin.5de73d6a..eb6899e7.0_18::
                          1337	.LDWlin18:
00000172 2a00             1338		se_cmpi	r0, 0
00000174 e200             1339		se_bne	.L319
                          1340	.L320:
                          1341	#359:                   {
                          1342	#360:                      cwTxState = kFblCwTxStateIdle;
                          1343	#line360
                          1344	..lin.5de73d6a..eb6899e7.0_19::
                          1345	.LDWlin19:
00000176 900e             1346		se_stb	r0, 0(r30)
                          1347	#361:                      FblDiagTxErrorIndication(kFblCwMsgTypeNormal);
00000178 4803             1348		se_li	r3, 0
                          1349	.L951:
0000017a 78000001         1350		e_bl	FblDiagTxErrorIndication
0000017e e800             1351		se_b	.L302
                          1352	.L319:
                          1353	#362:                   }
                          1354	#363:                   else
                          1355	#364:                   {
                          1356	#365:                      /* Change state before call to TpTransmit             */
                          1357	#366:                      /* because indication may be done within the function */
                          1358	#367:                      cwTxState = kFblCwTxStateTxInProgress;
                          1359	#line367
                          1360	..lin.5de73d6a..eb6899e7.0_20::
                          1361	.LDWlin20:
00000180 a037             1362		se_lhz	r3, 0(r7)
00000182 4820             1363		se_li	r0, 2
                          1364	#368:                      if (FblTpTransmit(cwTxPendingLength) != kTpSuccess)
00000184 900e             1365		se_stb	r0, 0(r30)
00000186 78000001         1366		e_bl	FblTpTransmit
0000018a 2a03             1367		se_cmpi	r3, 0
0000018c e600             1368		se_beq	.L322
                          1369	.L323:
                          1370	#369:                      {
                          1371	#370:                         /* revert to previous state */
                          1372	#371:                         cwTxState = kFblCwTxStateTxPending;
                          1373	#line371
                          1374	..lin.5de73d6a..eb6899e7.0_21::
                          1375	.LDWlin21:
0000018e 4840             1376		se_li	r0, 4
                          1377	.L950:
00000190 900e             1378		se_stb	r0, 0(r30)
00000192 e800             1379		se_b	.L302
                          1380	.L322:
                          1381	#372:                      }
                          1382	#373:                      else
                          1383	#374:                      {
                          1384	#375:                         /* Now successful. Stop the timer */
                          1385	#376:                         cwTxTimer = 0u;
                          1386	#line376
                          1387	..lin.5de73d6a..eb6899e7.0_22::

                                   Fri Apr 10 08:32:01 2020           Page 26
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1388	.LDWlin22:
00000194 4800             1389		se_li	r0, 0
                          1390	.L949:
00000196 b00d             1391		se_sth	r0, 0(r29)
                          1392	.L302:
                          1393	#387:                }
                          1394	#388:             }
                          1395	#389:          }
                          1396	#391:          ClrCwTimerTaskRunning(); /* PRQA S 0277 */ /* MD_FblCw_0277 */
00000198 800f             1397		se_lbz	r0, 0(r31)
0000019a 61e0             1398		se_bclri	r0, 30
0000019c 900f             1399		se_stb	r0, 0(r31)
                          1400	.L296:
                          1401	#392:       }
                          1402	#393:    }
                          1403	#394: } /* PRQA S 6030, 6080 */ /* MD_MSR_STCYC, MD_MSR_STMIF */
                          1404	#	    .ef
                          1405	.LDW91:
0000019e c701             1406		se_lwz	r0, 28(sp)
000001a0 1ba1080c         1407		e_lmw	r29, 12(sp)
000001a4 2171             1408		se_addi	sp, 24
000001a6 0090             1409		se_mtlr	r0
000001a8 0004             1410		se_blr
                          1411		.global	__ghs_eofn_FblCwTimerTask
                          1412	__ghs_eofn_FblCwTimerTask:
                          1413		.type	FblCwTimerTask,@function
                          1414		.size	FblCwTimerTask,$-FblCwTimerTask
                          1415		.align	1
                          1416	
                          1417	#function:			FblCwTimerTask
                          1418	#stack frame size:		24
                          1419	#link area offset:		0
                          1420	#local storage area offset:	12
                          1421	#gpr save area offset:		12
                          1422	#
                          1423	
                          1424		.data
                          1425		.section ".vletext", "vax"
                          1426		.vle
                          1427		.vle
                          1428	
                          1429	
                          1430	#396: /***********************************************************************************************************************
                          1431	#397:  *  FblCwStateTask
                          1432	#398:  **********************************************************************************************************************/
                          1433	#399: /*! \brief       Polling of CAN receive messages and CAN message confirmation
                          1434	#400:  *  \pre         CW is initialized
                          1435	#401:  **********************************************************************************************************************/
                          1436		.align	1
                          1437		.align	1
                          1438	..gh.f.p.0.a.1.r.0.e.5:
                          1439		.type	..gh.f.p.0.a.1.r.0.e.5,@object
                          1440		.size	..gh.f.p.0.a.1.r.0.e.5,0
                          1441		.global	FblCwStateTask
                          1442	FblCwStateTask:
000001aa 182106f0         1443		e_stwu	sp, -16(sp)

                                   Fri Apr 10 08:32:01 2020           Page 27
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000001ae 0080             1444		se_mflr	r0
000001b0 d3f1             1445		se_stw	r31, 12(sp)
000001b2 d501             1446		se_stw	r0, 20(sp)
                          1447	#	    .bf
                          1448	.LDW02:
                          1449	#402: void V_API_NEAR FblCwStateTask( void )
                          1450	#403: {
                          1451	#404:    if (FblCwGetInit())
000001b4 70e0e000         1452		e_lis	r7, %hiadj(fblCwInitFlag)
000001b8 30070000         1453		e_lbz	r0, %lo(fblCwInitFlag)(r7)
000001bc 2a10             1454		se_cmpi	r0, 1
000001be e200             1455		se_bne	.L952
                          1456	#405:    {
                          1457	#406:       if (!GetCwStateTaskRunning())
                          1458	#line406
                          1459	..lin.5de73d6a..24179867.0_23::
                          1460	.LDWlin23:
000001c0 73e0e000         1461		e_lis	r31, %hiadj(cwTaskState)
000001c4 1fff0000         1462		e_add16i	r31, r31, %lo(cwTaskState)
000001c8 800f             1463		se_lbz	r0, 0(r31)
000001ca 67f0             1464		se_btsti	r0, 31
000001cc e200             1465		se_bne	.L952
                          1466	#407:       {
                          1467	#408:          SetCwStateTaskRunning();
                          1468	#line408
                          1469	..lin.5de73d6a..24179867.0_24::
                          1470	.LDWlin24:
000001ce 65f0             1471		se_bseti	r0, 31
000001d0 900f             1472		se_stb	r0, 0(r31)
                          1473	#410:          (void)FblCanMsgTransmitted();
000001d2 78000001         1474		e_bl	FblCanMsgTransmitted
                          1475	#412: # if defined( FBL_CW_ENABLE_TASK_CODE_IN_RAM ) || \
                          1476	#413:      defined( FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK )
                          1477	#414:          /* Polling of CAN receive messages */
                          1478	#415:          if (FblCanReceive() != 0u) /* PRQA S 0303 */ /* MD_FblCw_0303 */
                          1479	#416:          {
                          1480	#417:             /*-----------------------------------------------------------------*/
                          1481	#418:             /*--- CAN messages has been received. Check for new data.          */
                          1482	#419:             /*-----------------------------------------------------------------*/
                          1483	#420:             /* Process the RxMsg if the ID is valid                            */
                          1484	#421:             /* and call FblCanHandleRxMsg with a handle                        */
                          1485	#422:             {
                          1486	#423:                FblCanProcessRxMsg();
                          1487	#424:             }
                          1488	#425:          }
                          1489	#426: # endif /* FBL_CW_ENABLE_TASK_CODE_IN_RAM || FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK */
                          1490	#427:          ClrCwStateTaskRunning(); /* PRQA S 0277 */ /* MD_FblCw_0277 */
000001d6 800f             1491		se_lbz	r0, 0(r31)
000001d8 61f0             1492		se_bclri	r0, 31
000001da 900f             1493		se_stb	r0, 0(r31)
                          1494	.L952:
                          1495	#428:       }
                          1496	#429:    }
                          1497	#430: }
                          1498	#	    .ef
                          1499	.LDW12:

                                   Fri Apr 10 08:32:01 2020           Page 28
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000001dc c501             1500		se_lwz	r0, 20(sp)
000001de c3f1             1501		se_lwz	r31, 12(sp)
000001e0 20f1             1502		se_addi	sp, 16
000001e2 0090             1503		se_mtlr	r0
000001e4 0004             1504		se_blr
                          1505		.global	__ghs_eofn_FblCwStateTask
                          1506	__ghs_eofn_FblCwStateTask:
                          1507		.type	FblCwStateTask,@function
                          1508		.size	FblCwStateTask,$-FblCwStateTask
                          1509		.align	1
                          1510	
                          1511	#function:			FblCwStateTask
                          1512	#stack frame size:		16
                          1513	#link area offset:		0
                          1514	#local storage area offset:	12
                          1515	#gpr save area offset:		12
                          1516	#
                          1517	
                          1518		.data
                          1519		.section ".vletext", "vax"
                          1520		.vle
                          1521		.vle
                          1522	
                          1523	
                          1524	#432: # define FBL_CW_TASK_STOP_SEC_CODE
                          1525	#433: # include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_19.1 */
                          1526	#435: /***********************************************************************************************************************
                          1527	#436:  *  FblCwIdleTask
                          1528	#437:  **********************************************************************************************************************/
                          1529	#438: /*! \brief       Communication wrapper idle task function
                          1530	#439:  *  \details     The function polls the CAN, it also executes some pending actions, which could not fulfilled in the
                          1531	#440:  *               event function.
                          1532	#441:  *               Note, that the order of polling is a design decision: Error-Task, TX-Task, RX-Task.
                          1533	#442:  *  \pre         CW is initialized
                          1534	#443:  **********************************************************************************************************************/
                          1535		.align	1
                          1536		.align	1
                          1537	..gh.f.p.0.a.1.r.0.e.6:
                          1538		.type	..gh.f.p.0.a.1.r.0.e.6,@object
                          1539		.size	..gh.f.p.0.a.1.r.0.e.6,0
                          1540		.global	FblCwIdleTask
                          1541	FblCwIdleTask:
000001e6 0080             1542		se_mflr	r0
000001e8 d101             1543		se_stw	r0, 4(sp)
000001ea 182106f8         1544		e_stwu	sp, -8(sp)
                          1545	#	    .bf
                          1546	.LDW22:
                          1547	#444: void FblCwIdleTask( void )
                          1548	#445: {
                          1549	#446:    /* Check for CAN errors */
                          1550	#447:    FblCanErrorTask();
000001ee 78000001         1551		e_bl	FblCanErrorTask
                          1552	#449: #if defined( FBL_CW_ENABLE_TASK_CODE_IN_RAM ) || \
                          1553	#450:     defined( FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK )
                          1554	#451: #else
                          1555	#452:    /* Polling of CAN receive messages */

                                   Fri Apr 10 08:32:01 2020           Page 29
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1556	#453:    if (FblCanReceive() != 0u) /* PRQA S 0303 */ /* MD_FblCw_0303 */
000001f2 70ffe7ec         1557		e_lis	r7, -20
000001f6 cc07             1558		se_lwz	r0, 48(r7)
000001f8 701fce00         1559		e_and2i.	r0, 65024
000001fc e600             1560		se_beq	.L1012
                          1561	#454:    {
                          1562	#455:       /*-----------------------------------------------------------------*/
                          1563	#456:       /*--- CAN messages has been received. Check for new data.          */
                          1564	#457:       /*-----------------------------------------------------------------*/
                          1565	#458:       /* Process the RxMsg if the ID is valid                            */
                          1566	#459:       /* and call FblCanHandleRxMsg with a handle                        */
                          1567	#460:       {
                          1568	#461:          FblCanProcessRxMsg();
                          1569	#line461
                          1570	..lin.5de73d6a..c9a0a224.0_25::
                          1571	.LDWlin25:
000001fe 78000001         1572		e_bl	FblCanProcessRxMsg
                          1573	.L1012:
                          1574	#462:       }
                          1575	#463:    }
                          1576	#464: #endif /* FBL_ENABLE_COM_RX_INTERRUPT || FBL_CW_ENABLE_TASK_CODE_IN_RAM || FBL_CW_ENABLE_RECEPTION_IN_STATE_TASK */
                          1577	#466: }
                          1578	#	    .ef
                          1579	.LDW32:
00000202 c301             1580		se_lwz	r0, 12(sp)
00000204 2071             1581		se_addi	sp, 8
00000206 0090             1582		se_mtlr	r0
00000208 0004             1583		se_blr
                          1584		.global	__ghs_eofn_FblCwIdleTask
                          1585	__ghs_eofn_FblCwIdleTask:
                          1586		.type	FblCwIdleTask,@function
                          1587		.size	FblCwIdleTask,$-FblCwIdleTask
                          1588		.align	1
                          1589	
                          1590	#function:			FblCwIdleTask
                          1591	#stack frame size:		8
                          1592	#link area offset:		0
                          1593	#local storage area offset:	8
                          1594	#
                          1595	
                          1596		.data
                          1597		.section ".vletext", "vax"
                          1598		.vle
                          1599		.vle
                          1600	
                          1601	
                          1602	#468: /***********************************************************************************************************************
                          1603	#469:  *  FblCwInitRxIdentifier
                          1604	#470:  **********************************************************************************************************************/
                          1605	#471: /*! \brief       Initialization of receive CAN identifiers
                          1606	#472:  **********************************************************************************************************************/
                          1607		.align	1
                          1608		.align	1
                          1609	..gh.f.p.0.a.1.r.0.e.7:
                          1610		.type	..gh.f.p.0.a.1.r.0.e.7,@object
                          1611		.size	..gh.f.p.0.a.1.r.0.e.7,0

                                   Fri Apr 10 08:32:01 2020           Page 30
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1612		.global	FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                          1613	FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.:
                          1614	FblCwInitRxIdentifier:
                          1615	#	    .bf
                          1616	.LDW42:
                          1617	#473: static void FblCwInitRxIdentifier(void)
                          1618	#474: {
                          1619	#475:    vuintx i;
                          1620	#476:    vuintx idIndex;
                          1621	#478:    for (i = 0u; i < FBL_NUMBER_OF_RX_ID; i++)
0000020a 4806             1622		se_li	r6, 0
                          1623	.L1070:
                          1624	#479:    {
                          1625	#480:       idIndex = 0u;
                          1626	#482:       /* Calculate ID position */
                          1627	#483: #if defined( FBL_CW_ENABLE_MULTIPLE_NODES )
                          1628	#484:       if (fblCanIdRxConfiguration[i].nrOfNodes > 1u)
                          1629	#485:       {
                          1630	#486:          idIndex += fblEcuHandle;
                          1631	#487:       }
                          1632	#488: #endif
                          1633	#489:       /* Set Rx Id */
                          1634	#490:       fblCanIdTable.CanRxId[fblCanIdRxConfiguration[i].fblCanIdTableIndex] = fblCanIdRxConfiguration[i].idList[idIndex];
0000020c 18e6a01c         1635		e_mulli	r7, r6, 28
00000210 1ce70000         1636		e_add16i	r7, r7, %lo(fblCanIdRxConfiguration)
00000214 70079000         1637		e_add2is	r7, %hiadj(fblCanIdRxConfiguration)
00000218 c207             1638		se_lwz	r0, 8(r7)
0000021a c477             1639		se_lwz	r7, 16(r7)
0000021c c077             1640		se_lwz	r7, 0(r7)
0000021e 6c20             1641		se_slwi	r0, 2
00000220 1ca00004         1642		e_add16i	r5, r0, %lo(fblCanIdTable+4)
00000224 70059000         1643		e_add2is	r5, %hiadj(fblCanIdTable+4)
00000228 2006             1644		se_addi	r6, 1
0000022a d075             1645		se_stw	r7, 0(r5)
0000022c 2216             1646		se_cmpli	r6, 2
0000022e e400             1647		se_blt	.L1070
                          1648	#491:    }
                          1649	#493: }
                          1650	#	    .ef
                          1651	.LDW52:
                          1652	#line493
                          1653	..lin.5de73d6a..43a154.0_26::
                          1654	.LDWlin26:
00000230 0004             1655		se_blr
                          1656	__ghs_eofn_FblCwInitRxIdentifier:
                          1657		.type	FblCwInitRxIdentifier,@function
                          1658		.size	FblCwInitRxIdentifier,$-FblCwInitRxIdentifier
                          1659		.type	FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,@function
                          1660		.size	FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.,$-FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                          1661		.align	1
                          1662	
                          1663	#function:			FblCwInitRxIdentifier
                          1664	#stack frame size:		0
                          1665	#
                          1666	#i	r6	local
                          1667	

                                   Fri Apr 10 08:32:01 2020           Page 31
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1668		.data
                          1669		.section ".vletext", "vax"
                          1670		.vle
                          1671		.vle
                          1672	
                          1673	
                          1674	#495: /***********************************************************************************************************************
                          1675	#496:  *  FblCwInit
                          1676	#497:  **********************************************************************************************************************/
                          1677	#498: /*! \brief       Initialization of communication layer
                          1678	#499:  **********************************************************************************************************************/
                          1679		.align	1
                          1680		.align	1
                          1681	..gh.f.p.0.a.1.r.0.e.8:
                          1682		.type	..gh.f.p.0.a.1.r.0.e.8,@object
                          1683		.size	..gh.f.p.0.a.1.r.0.e.8,0
                          1684		.global	FblCwInit
                          1685	FblCwInit:
00000232 182106f0         1686		e_stwu	sp, -16(sp)
00000236 0080             1687		se_mflr	r0
00000238 d3f1             1688		se_stw	r31, 12(sp)
0000023a d501             1689		se_stw	r0, 20(sp)
                          1690	#	    .bf
                          1691	.LDW62:
                          1692	#500: void FblCwInit(void)
                          1693	#501: {
                          1694	#503:    /* Init local variables */
                          1695	#504: #if ( TpCallCycle > 1 )
                          1696	#505:    tpCycleCounter = 0u;
                          1697	#506: #endif
                          1698	#507:    cwTxTimer = 0u;
0000023c 480f             1699		se_li	r31, 0
0000023e 70e0e000         1700		e_lis	r7, %hiadj(cwTxTimer)
00000242 5fe70000         1701		e_sth	r31, %lo(cwTxTimer)(r7)
                          1702	#508:    cwTxState = kFblCwTxStateIdle;
00000246 70e0e000         1703		e_lis	r7, %hiadj(cwTxState)
0000024a 37e70000         1704		e_stb	r31, %lo(cwTxState)(r7)
                          1705	#509:    cwCanRxMsgState = kFblCwCanRxMsgStatePhysical;
0000024e 70e0e000         1706		e_lis	r7, %hiadj(cwCanRxMsgState)
00000252 37e70000         1707		e_stb	r31, %lo(cwCanRxMsgState)(r7)
                          1708	#511:    /* Copy CAN initialization data into RAM */
                          1709	#512:    fblCanIdTable = kFblCanIdTable;
00000256 4945             1710		se_li	r5, 20
00000258 7080e000         1711		e_lis	r4, %hiadj(kFblCanIdTable)
0000025c 7060e000         1712		e_lis	r3, %hiadj(fblCanIdTable)
00000260 1c840000         1713		e_add16i	r4, r4, %lo(kFblCanIdTable)
00000264 1c630000         1714		e_add16i	r3, r3, %lo(fblCanIdTable)
00000268 78000001         1715		e_bl	memcpy
                          1716	#514: #if defined( FBL_CW_ENABLE_MULTIPLE_NODES ) || \
                          1717	#515:     defined( FBL_ENABLE_CAN_CONFIGURATION )
                          1718	#516:    /* Callback function for ECU-specific CAN initialization */
                          1719	#517:    ApplFblCanParamInit();
                          1720	#518: #endif
                          1721	#520:    /* Prepare CAN identifiers */
                          1722	#521:    FblCwInitRxIdentifier();
0000026c e900             1723		se_bl	FblCwInitRxIdentifier

                                   Fri Apr 10 08:32:01 2020           Page 32
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1724	#523: #if defined( FBL_DEF_ENABLE_NON_KB_MAIN )
                          1725	#524:    /* Activate Transceiver */
                          1726	#525:    ApplTrcvrNormalMode();
                          1727	#line525
                          1728	..lin.5de73d6a..5bc58027.0_27::
                          1729	.LDWlin27:
0000026e 78000001         1730		e_bl	ApplTrcvrNormalMode
                          1731	#526: #endif /* FBL_DEF_ENABLE_NON_KB_MAIN */
                          1732	#527:    /* Initialize CAN interface */
                          1733	#528:    FblCanInit();
00000272 78000001         1734		e_bl	FblCanInit
                          1735	#530:    /* Initialize Transport Layer */
                          1736	#531:    FblTpInitPowerOn();
00000276 78000001         1737		e_bl	FblTpInitPowerOn
                          1738	#534: #if defined( FBL_DEF_ENABLE_NON_KB_MAIN )
                          1739	#535: #endif /* FBL_DEF_ENABLE_NON_KB_MAIN */
                          1740	#537:    cwTaskState = 0u;
0000027a 70e0e000         1741		e_lis	r7, %hiadj(cwTaskState)
0000027e 37e70000         1742		e_stb	r31, %lo(cwTaskState)(r7)
                          1743	#540:    FblCwSetInit();
00000282 4810             1744		se_li	r0, 1
00000284 70e0e000         1745		e_lis	r7, %hiadj(fblCwInitFlag)
00000288 34070000         1746		e_stb	r0, %lo(fblCwInitFlag)(r7)
                          1747	#541: }
                          1748	#	    .ef
                          1749	.LDW72:
0000028c c501             1750		se_lwz	r0, 20(sp)
0000028e c3f1             1751		se_lwz	r31, 12(sp)
00000290 20f1             1752		se_addi	sp, 16
00000292 0090             1753		se_mtlr	r0
00000294 0004             1754		se_blr
                          1755		.global	__ghs_eofn_FblCwInit
                          1756	__ghs_eofn_FblCwInit:
                          1757		.type	FblCwInit,@function
                          1758		.size	FblCwInit,$-FblCwInit
                          1759		.align	1
                          1760	
                          1761	#function:			FblCwInit
                          1762	#stack frame size:		16
                          1763	#link area offset:		0
                          1764	#local storage area offset:	12
                          1765	#gpr save area offset:		12
                          1766	#
                          1767	
                          1768		.data
                          1769		.section ".vletext", "vax"
                          1770		.vle
                          1771		.vle
                          1772	
                          1773	
                          1774	#543: /***********************************************************************************************************************
                          1775	#544:  *  FblCwDeinit
                          1776	#545:  **********************************************************************************************************************/
                          1777	#546: /*! \brief       Deinitialization of communication layer
                          1778	#547:  **********************************************************************************************************************/
                          1779		.align	1

                                   Fri Apr 10 08:32:01 2020           Page 33
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1780		.align	1
                          1781	..gh.f.p.0.a.1.r.0.e.9:
                          1782		.type	..gh.f.p.0.a.1.r.0.e.9,@object
                          1783		.size	..gh.f.p.0.a.1.r.0.e.9,0
                          1784		.global	FblCwDeinit
                          1785	FblCwDeinit:
                          1786	#	    .bf
                          1787	.LDW82:
                          1788	#548: void FblCwDeinit( void )
                          1789	#549: {
                          1790	#550: #if ( FBLDRVCAN_REFERENCE_IMPLEMENTATION >= 0x0102 )
                          1791	#551:    FblCanStop();
                          1792	#552: #endif
                          1793	#553:    FblCwClrInit();
00000296 4800             1794		se_li	r0, 0
00000298 70e0e000         1795		e_lis	r7, %hiadj(fblCwInitFlag)
0000029c 34070000         1796		e_stb	r0, %lo(fblCwInitFlag)(r7)
                          1797	#554: }
                          1798	#	    .ef
                          1799	.LDW92:
000002a0 0004             1800		se_blr
                          1801		.global	__ghs_eofn_FblCwDeinit
                          1802	__ghs_eofn_FblCwDeinit:
                          1803		.type	FblCwDeinit,@function
                          1804		.size	FblCwDeinit,$-FblCwDeinit
                          1805		.align	1
                          1806	
                          1807	#function:			FblCwDeinit
                          1808	#stack frame size:		0
                          1809	#
                          1810	
                          1811		.data
                          1812		.section ".vletext", "vax"
                          1813		.vle
                          1814		.vle
                          1815	
                          1816	
                          1817	#556: /***********************************************************************************************************************
                          1818	#557:  *  FblCwSetTxInit
                          1819	#558:  **********************************************************************************************************************/
                          1820	#559: /*! \brief       Set transmit init parameter
                          1821	#560:  *  \pre         fblEcuHandle has to be configured by user callback (Multiple Nodes configuration)
                          1822	#561:  **********************************************************************************************************************/
                          1823		.align	1
                          1824		.align	1
                          1825	..gh.f.p.0.a.1.r.0.e.10:
                          1826		.type	..gh.f.p.0.a.1.r.0.e.10,@object
                          1827		.size	..gh.f.p.0.a.1.r.0.e.10,0
                          1828		.global	FblCwSetTxInit
                          1829	FblCwSetTxInit:
                          1830	#	    .bf
                          1831	.LDW03:
                          1832	#562: void FblCwSetTxInit( void )
                          1833	#563: {
                          1834	#564:    vuintx i;
                          1835	#565:    vuintx idIndex;

                                   Fri Apr 10 08:32:01 2020           Page 34
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1836	#566:    vuintx txObjectIndex;
                          1837	#568:    /* Initialize configured TX objects */
                          1838	#569:    for (i = 0u; i < FBL_NUMBER_OF_TX_ID; i++)
                          1839	#570:    {
                          1840	#571:       idIndex = 0u;
                          1841	#573: #if defined( FBL_CW_ENABLE_MULTIPLE_NODES )
                          1842	#574:       if (fblCanIdTxConfiguration[i].nrOfNodes > 1u)
                          1843	#575:       {
                          1844	#576:          idIndex += fblEcuHandle;
                          1845	#577:       }
                          1846	#578: #endif
                          1847	#580:       txObjectIndex = fblCanIdTxConfiguration[i].txObject;
                          1848	#582:       /* Prepare send objects */
                          1849	#583:       FblCanSetTxId(fblCanTxObj[txObjectIndex], fblCanIdTxConfiguration[i].idList[idIndex]);
000002a2 70c0e000         1850		e_lis	r6, %hiadj(fblCanIdTxConfiguration)
000002a6 1cc60000         1851		e_add16i	r6, r6, %lo(fblCanIdTxConfiguration)
000002aa c356             1852		se_lwz	r5, 12(r6)
000002ac c005             1853		se_lwz	r0, 0(r5)
000002ae 70e0e000         1854		e_lis	r7, %hiadj(fblCanTxObj)
000002b2 1ce70000         1855		e_add16i	r7, r7, %lo(fblCanTxObj)
000002b6 6000             1856		se_bclri	r0, 0
000002b8 d107             1857		se_stw	r0, 4(r7)
000002ba a007             1858		se_lhz	r0, 0(r7)
000002bc 2ef0             1859		se_andi	r0, 15
000002be b007             1860		se_sth	r0, 0(r7)
000002c0 c005             1861		se_lwz	r0, 0(r5)
000002c2 2a00             1862		se_cmpi	r0, 0
000002c4 e000             1863		se_bge	.L1203
                          1864	#line583
                          1865	..lin.5de73d6a..b97b8cdf.0_28::
                          1866	.LDWlin28:
000002c6 a007             1867		se_lhz	r0, 0(r7)
000002c8 7000c060         1868		e_or2i	r0, 96
000002cc b007             1869		se_sth	r0, 0(r7)
                          1870	.L1203:
                          1871	#584:       FblCanSetTxDLC(fblCanTxObj[txObjectIndex], 8u);
000002ce a007             1872		se_lhz	r0, 0(r7)
000002d0 1800c060         1873		e_andi	r0, r0, 96
000002d4 65c0             1874		se_bseti	r0, 28
000002d6 b007             1875		se_sth	r0, 0(r7)
                          1876	#585:       FblCanSetTxConfirmation(fblCanTxObj[txObjectIndex], fblCanIdTxConfiguration[i].fblCwConfirmationHandler);
000002d8 c406             1877		se_lwz	r0, 16(r6)
000002da d407             1878		se_stw	r0, 16(r7)
                          1879	#587:    }
                          1880	#589:    /* Set transmit object index */
                          1881	#590:    fblCwDiagTransmitObject = fblCanIdTxConfiguration[kFblCwDiagTxObject].txObject;
000002dc c206             1882		se_lwz	r0, 8(r6)
000002de 70e0e000         1883		e_lis	r7, %hiadj(fblCwDiagTransmitObject)
000002e2 54070000         1884		e_stw	r0, %lo(fblCwDiagTransmitObject)(r7)
                          1885	#591: }
                          1886	#	    .ef
                          1887	.LDW13:
000002e6 0004             1888		se_blr
                          1889		.global	__ghs_eofn_FblCwSetTxInit
                          1890	__ghs_eofn_FblCwSetTxInit:
                          1891		.type	FblCwSetTxInit,@function

                                   Fri Apr 10 08:32:01 2020           Page 35
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1892		.size	FblCwSetTxInit,$-FblCwSetTxInit
                          1893		.align	1
                          1894	
                          1895	#function:			FblCwSetTxInit
                          1896	#stack frame size:		0
                          1897	#
                          1898	
                          1899		.data
                          1900		.section ".vletext", "vax"
                          1901		.vle
                          1902		.vle
                          1903	
                          1904	
                          1905	#593: #if defined( FBL_CW_ENABLE_BAUDRATE_SWITCH )
                          1906	#594: /***********************************************************************************************************************
                          1907	#595:  *  FblCwCheckBaudrate
                          1908	#596:  **********************************************************************************************************************/
                          1909	#597: /*! \brief       Check whether requested baud rate is supported for active connection
                          1910	#598:  *  \param[in]   baudrate  Requested baud rate (in kBaud)
                          1911	#599:  *  \return      kFblOk if baud rate is supported for active connection, kFblFailed otherwise
                          1912	#600:  **********************************************************************************************************************/
                          1913	#601: tFblResult FblCwCheckBaudrate( vuint32 baudrate )
                          1914	#602: {
                          1915	#603:    tFblResult result;
                          1916	#605:    result = kFblFailed;
                          1917	#607:    if (baudrate != 0u)
                          1918	#608:    {
                          1919	#609:       if (kFblOk == ApplFblCheckBaudrate(baudrate))
                          1920	#610:       {
                          1921	#611:          result = kFblOk;
                          1922	#612:       }
                          1923	#613:    }
                          1924	#615:    return result;
                          1925	#616: }
                          1926	#618: /***********************************************************************************************************************
                          1927	#619:  *  FblCwSwitchBaudrate
                          1928	#620:  **********************************************************************************************************************/
                          1929	#621: /*! \brief       Switch baud rate of active connection
                          1930	#622:  *  \param[in]   baudrate Requested baud rate (in kBaud)
                          1931	#623:  *  \return      kFblOk if baud rate was successfully switched, kFblFailed otherwise
                          1932	#624:  **********************************************************************************************************************/
                          1933	#625: tFblResult FblCwSwitchBaudrate( vuint32 baudrate )
                          1934	#626: {
                          1935	#627:    /* Reinitialize ComWrapper to apply new baudrate */
                          1936	#628:    FblCwClrInit();
                          1937	#629:    FblCwInit();
                          1938	#631:    return kFblOk;
                          1939	#632: }
                          1940	#633: #endif /* FBL_CW_ENABLE_BAUDRATE_SWITCH */
                          1941	#635: /***********************************************************************************************************************
                          1942	#636:  *  FblCwDiscardReception
                          1943	#637:  **********************************************************************************************************************/
                          1944	#638: /*! \brief       Received messages are discarded
                          1945	#639:  **********************************************************************************************************************/
                          1946		.align	1
                          1947		.align	1

                                   Fri Apr 10 08:32:01 2020           Page 36
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          1948	..gh.f.p.0.a.1.r.0.e.11:
                          1949		.type	..gh.f.p.0.a.1.r.0.e.11,@object
                          1950		.size	..gh.f.p.0.a.1.r.0.e.11,0
                          1951		.global	FblCwDiscardReception
                          1952	FblCwDiscardReception:
000002e8 182106f0         1953		e_stwu	sp, -16(sp)
000002ec 0080             1954		se_mflr	r0
000002ee d3f1             1955		se_stw	r31, 12(sp)
000002f0 d501             1956		se_stw	r0, 20(sp)
                          1957	#	    .bf
                          1958	.LDW23:
                          1959	#640: void FblCwDiscardReception( void )
                          1960	#641: {
                          1961	#642:    /* Discard all incoming messages */
                          1962	#643:    cwCanRxMsgState = kFblCwCanRxMsgStateDiscard;
000002f2 73e0e000         1963		e_lis	r31, %hiadj(cwCanRxMsgState)
000002f6 1fff0000         1964		e_add16i	r31, r31, %lo(cwCanRxMsgState)
000002fa 4820             1965		se_li	r0, 2
000002fc 900f             1966		se_stb	r0, 0(r31)
                          1967	#645:    /* Handle all rx messages */
                          1968	#646:    while ((FblCanReceive() != 0u)) /* PRQA S 0303 */ /* MD_FblCw_0303 */
000002fe e800             1969		se_b	.L1295
                          1970	.L1297:
                          1971	#647:    {
                          1972	#648:       FblCanProcessRxMsg();
                          1973	#line648
                          1974	..lin.5de73d6a..27434fd6.0_29::
                          1975	.LDWlin29:
00000300 78000001         1976		e_bl	FblCanProcessRxMsg
                          1977	.L1295:
00000304 70ffe7ec         1978		e_lis	r7, -20
00000308 cc07             1979		se_lwz	r0, 48(r7)
0000030a 701fce00         1980		e_and2i.	r0, 65024
0000030e e200             1981		se_bne	.L1297
                          1982	#649:    }
                          1983	#651:    /* Reset to further process RX CAN messages */
                          1984	#652:    cwCanRxMsgState = kFblCwCanRxMsgStatePhysical;
                          1985	#line652
                          1986	..lin.5de73d6a..27434fd6.0_30::
                          1987	.LDWlin30:
00000310 900f             1988		se_stb	r0, 0(r31)
                          1989	#653: }
                          1990	#	    .ef
                          1991	.LDW33:
00000312 c501             1992		se_lwz	r0, 20(sp)
00000314 c3f1             1993		se_lwz	r31, 12(sp)
00000316 20f1             1994		se_addi	sp, 16
00000318 0090             1995		se_mtlr	r0
0000031a 0004             1996		se_blr
                          1997		.global	__ghs_eofn_FblCwDiscardReception
                          1998	__ghs_eofn_FblCwDiscardReception:
                          1999		.type	FblCwDiscardReception,@function
                          2000		.size	FblCwDiscardReception,$-FblCwDiscardReception
                          2001		.align	1
                          2002	
                          2003	#function:			FblCwDiscardReception

                                   Fri Apr 10 08:32:01 2020           Page 37
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2004	#stack frame size:		16
                          2005	#link area offset:		0
                          2006	#local storage area offset:	12
                          2007	#gpr save area offset:		12
                          2008	#
                          2009	
                          2010		.data
                          2011		.section ".vletext", "vax"
                          2012		.vle
                          2013		.vle
                          2014	
                          2015	
                          2016	#655: /***********************************************************************************************************************
                          2017	#656:  *  FblCwSetRxBlock
                          2018	#657:  **********************************************************************************************************************/
                          2019	#658: /*! \brief       Reset transport layer
                          2020	#659:  **********************************************************************************************************************/
                          2021		.align	1
                          2022		.align	1
                          2023	..gh.f.p.0.a.1.r.0.e.12:
                          2024		.type	..gh.f.p.0.a.1.r.0.e.12,@object
                          2025		.size	..gh.f.p.0.a.1.r.0.e.12,0
                          2026		.global	FblCwSetRxBlock
                          2027	FblCwSetRxBlock:
                          2028	#	    .bf
                          2029	.LDW43:
                          2030	#660: void FblCwSetRxBlock( void )
                          2031	#661: {
                          2032	#662:    /* Block DiagBuffer to refuse reception on TP */
                          2033	#663:    FblTpSetRxBlock();
0000031c 78000000         2034		e_b	FblTpSetRxBlock
                          2035	#664: }
                          2036	#	    .ef
                          2037	.LDW53:
                          2038		.global	__ghs_eofn_FblCwSetRxBlock
                          2039	__ghs_eofn_FblCwSetRxBlock:
                          2040		.type	FblCwSetRxBlock,@function
                          2041		.size	FblCwSetRxBlock,$-FblCwSetRxBlock
                          2042		.align	1
                          2043	
                          2044	#function:			FblCwSetRxBlock
                          2045	#stack frame size:		0
                          2046	#
                          2047	
                          2048		.data
                          2049		.section ".vletext", "vax"
                          2050		.vle
                          2051		.vle
                          2052	
                          2053	
                          2054	#666: /***********************************************************************************************************************
                          2055	#667:  *  FblCwResetRxBlock
                          2056	#668:  **********************************************************************************************************************/
                          2057	#669: /*! \brief       Reset transport layer
                          2058	#670:  **********************************************************************************************************************/
                          2059		.align	1

                                   Fri Apr 10 08:32:01 2020           Page 38
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2060		.align	1
                          2061	..gh.f.p.0.a.1.r.0.e.13:
                          2062		.type	..gh.f.p.0.a.1.r.0.e.13,@object
                          2063		.size	..gh.f.p.0.a.1.r.0.e.13,0
                          2064		.global	FblCwResetRxBlock
                          2065	FblCwResetRxBlock:
                          2066	#	    .bf
                          2067	.LDW63:
                          2068	#671: void FblCwResetRxBlock( void )
                          2069	#672: {
                          2070	#673:    cwTxTimer = 0u;
00000320 4800             2071		se_li	r0, 0
00000322 70e0e000         2072		e_lis	r7, %hiadj(cwTxTimer)
00000326 5c070000         2073		e_sth	r0, %lo(cwTxTimer)(r7)
                          2074	#674:    cwTxState = kFblCwTxStateIdle;
0000032a 70e0e000         2075		e_lis	r7, %hiadj(cwTxState)
0000032e 34070000         2076		e_stb	r0, %lo(cwTxState)(r7)
                          2077	#676:    /* No response via TP - reset all functions */
                          2078	#677:    FblTpResetRxBlock();
00000332 78000000         2079		e_b	FblTpResetRxBlock
                          2080	#679: }
                          2081	#	    .ef
                          2082	.LDW73:
                          2083		.global	__ghs_eofn_FblCwResetRxBlock
                          2084	__ghs_eofn_FblCwResetRxBlock:
                          2085		.type	FblCwResetRxBlock,@function
                          2086		.size	FblCwResetRxBlock,$-FblCwResetRxBlock
                          2087		.align	1
                          2088	
                          2089	#function:			FblCwResetRxBlock
                          2090	#stack frame size:		0
                          2091	#
                          2092	
                          2093		.data
                          2094		.section ".vletext", "vax"
                          2095		.vle
                          2096		.vle
                          2097	
                          2098	
                          2099	#681: /***********************************************************************************************************************
                          2100	#682:  *  FblCwCanTransmit
                          2101	#683:  **********************************************************************************************************************/
                          2102	#684: /*! \brief       Schedule data for transmission.
                          2103	#685:  *  \pre         CW is initialized
                          2104	#686:  *  \param[in]   data Pointer to transmit data
                          2105	#687:  *  \param[in]   length Length of data
                          2106	#688:  **********************************************************************************************************************/
                          2107		.align	1
                          2108		.align	1
                          2109	..gh.f.p.4.a.1.r.0.e.14:
                          2110		.type	..gh.f.p.4.a.1.r.0.e.14,@object
                          2111		.size	..gh.f.p.4.a.1.r.0.e.14,0
                          2112		.global	FblCwCanTransmit
                          2113	FblCwCanTransmit:
00000336 182106e8         2114		e_stwu	sp, -24(sp)
0000033a 0080             2115		se_mflr	r0

                                   Fri Apr 10 08:32:01 2020           Page 39
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000033c 1ba1090c         2116		e_stmw	r29, 12(sp)
00000340 d701             2117		se_stw	r0, 28(sp)
00000342 014e             2118		se_mr	r30, r4
                          2119	#	    .bf
                          2120	.LDW83:
                          2121	#689: void FblCwCanTransmit( const V_MEMRAM1 vuint8 V_MEMRAM2 V_MEMRAM3 * data, tCwDataLengthType length )
                          2122	#690: {
                          2123	#691:    vuint16 maxWaitTime;
                          2124	#692: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          2125	#693:    (void)data; /* PRQA S 3112 */ /* MD_MSR_14.2  */
                          2126	#694: #endif
                          2127	#696:    /* Wait in case response pending is in progress */
                          2128	#697:    maxWaitTime = kFblCwMaxWaitTime;
00000344 48af             2129		se_li	r31, 10
                          2130	#699:    /* Retransmit response in FblCwStateTask if necessary */
                          2131	#700:    while ((maxWaitTime > 0u) && (cwTxState != kFblCwTxStateIdle))
                          2132	.L1575:
00000346 73a0e000         2133		e_lis	r29, %hiadj(cwTxState)
0000034a 1fbd0000         2134		e_add16i	r29, r29, %lo(cwTxState)
0000034e 800d             2135		se_lbz	r0, 0(r29)
00000350 2a00             2136		se_cmpi	r0, 0
00000352 e600             2137		se_beq	.L1571
                          2138	#701:    {
                          2139	#702:       if (FblLookForWatchdog() != FBL_NO_TRIGGER)
                          2140	#line702
                          2141	..lin.5de73d6a..4fd5d097.0_31::
                          2142	.LDWlin31:
00000354 78000001         2143		e_bl	FblLookForWatchdog
00000358 2a03             2144		se_cmpi	r3, 0
0000035a e600             2145		se_beq	.L1575
                          2146	#703:       {
                          2147	#704:          maxWaitTime--;
                          2148	#line704
                          2149	..lin.5de73d6a..4fd5d097.0_32::
                          2150	.LDWlin32:
0000035c 240f             2151		se_subi	r31, 1
0000035e 00ef             2152		se_extzh	r31
00000360 2a0f             2153		se_cmpi	r31, 0
00000362 e200             2154		se_bne	.L1575
                          2155	.L1571:
                          2156	#705:       }
                          2157	#706:    }
                          2158	#708:    /* To dispatch confirmation */
                          2159	#709:    cwTxState = kFblCwTxStateTxInProgress;
                          2160	#line709
                          2161	..lin.5de73d6a..4fd5d097.0_33::
                          2162	.LDWlin33:
00000364 4820             2163		se_li	r0, 2
00000366 900d             2164		se_stb	r0, 0(r29)
                          2165	#710:    if (FblTpTransmit(length) != kTpSuccess)
00000368 01e3             2166		se_mr	r3, r30
0000036a 78000001         2167		e_bl	FblTpTransmit
0000036e 2a03             2168		se_cmpi	r3, 0
00000370 e600             2169		se_beq	.L1568
                          2170	#711:    {
                          2171	#712:       cwTxTimer = kFblCwTxPendingTimeout;

                                   Fri Apr 10 08:32:01 2020           Page 40
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2172	#line712
                          2173	..lin.5de73d6a..4fd5d097.0_34::
                          2174	.LDWlin34:
00000372 4e40             2175		se_li	r0, 100
00000374 70e0e000         2176		e_lis	r7, %hiadj(cwTxTimer)
00000378 5c070000         2177		e_sth	r0, %lo(cwTxTimer)(r7)
                          2178	#713:       cwTxState = kFblCwTxStateTxPending;
0000037c 4840             2179		se_li	r0, 4
0000037e 70e0e000         2180		e_lis	r7, %hiadj(cwTxPendingLength)
                          2181	#715:       /* Temporary store length */
                          2182	#716:       cwTxPendingLength = length;
00000382 5fc70000         2183		e_sth	r30, %lo(cwTxPendingLength)(r7)
00000386 900d             2184		se_stb	r0, 0(r29)
                          2185	.L1568:
                          2186	#717:    }
                          2187	#718: }
                          2188	#	    .ef
                          2189	.LDW93:
00000388 c701             2190		se_lwz	r0, 28(sp)
0000038a 1ba1080c         2191		e_lmw	r29, 12(sp)
0000038e 2171             2192		se_addi	sp, 24
00000390 0090             2193		se_mtlr	r0
00000392 0004             2194		se_blr
                          2195		.global	__ghs_eofn_FblCwCanTransmit
                          2196	__ghs_eofn_FblCwCanTransmit:
                          2197		.type	FblCwCanTransmit,@function
                          2198		.size	FblCwCanTransmit,$-FblCwCanTransmit
                          2199		.align	1
                          2200	
                          2201	#function:			FblCwCanTransmit
                          2202	#stack frame size:		24
                          2203	#link area offset:		0
                          2204	#local storage area offset:	12
                          2205	#gpr save area offset:		12
                          2206	#
                          2207	#maxWaitTime	r31	local
                          2208	
                          2209	#data	none	param
                          2210	#length	r30	param
                          2211	
                          2212		.data
                          2213		.section ".vletext", "vax"
                          2214		.vle
                          2215		.vle
                          2216	
                          2217	
                          2218	#723: /***********************************************************************************************************************
                          2219	#724:  *  CALLBACK FUNCTIONS FROM TP LAYER
                          2220	#725:  **********************************************************************************************************************/
                          2221	#728: /***********************************************************************************************************************
                          2222	#729:  *  FblCwTpDataInd
                          2223	#730:  **********************************************************************************************************************/
                          2224	#731: /*! \brief       Indication function for a transport layer message
                          2225	#732:  *  \param[in]   rxDataLen Number of received bytes
                          2226	#733:  **********************************************************************************************************************/
                          2227		.align	1

                                   Fri Apr 10 08:32:01 2020           Page 41
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2228		.align	1
                          2229	..gh.f.p.3.a.1.r.0.e.15:
                          2230		.type	..gh.f.p.3.a.1.r.0.e.15,@object
                          2231		.size	..gh.f.p.3.a.1.r.0.e.15,0
                          2232		.global	FblCwTpDataInd
                          2233	FblCwTpDataInd:
00000394 0134             2234		se_mr	r4, r3
                          2235	#	    .bf
                          2236	.LDW04:
                          2237	#734: void FblCwTpDataInd( tCwDataLengthType rxDataLen )
                          2238	#735: {
                          2239	#737:    if (rxDataLen > 0u)
00000396 2a03             2240		se_cmpi	r3, 0
00000398 e600             2241		se_beq	.L1683
                          2242	#line738
                          2243	..lin.5de73d6a..3f7f9cc.0_35::
                          2244	.LDWlin35:
0000039a 7060e000         2245		e_lis	r3, %hiadj(DiagBuffer)
0000039e 50630000         2246		e_lwz	r3, %lo(DiagBuffer)(r3)
                          2247	#738:    {
                          2248	#739:       FblDiagRxIndication(DiagBuffer, rxDataLen);
000003a2 78000000         2249		e_b	FblDiagRxIndication
                          2250	.L1683:
                          2251	#740:    }
                          2252	#741: }
                          2253	#	    .ef
                          2254	.LDW14:
000003a6 0004             2255		se_blr
                          2256		.global	__ghs_eofn_FblCwTpDataInd
                          2257	__ghs_eofn_FblCwTpDataInd:
                          2258		.type	FblCwTpDataInd,@function
                          2259		.size	FblCwTpDataInd,$-FblCwTpDataInd
                          2260		.align	1
                          2261	
                          2262	#function:			FblCwTpDataInd
                          2263	#stack frame size:		0
                          2264	#
                          2265	
                          2266	#rxDataLen	r4	param
                          2267	
                          2268		.data
                          2269		.section ".vletext", "vax"
                          2270		.vle
                          2271		.vle
                          2272	
                          2273	
                          2274	#743: /***********************************************************************************************************************
                          2275	#744:  *  FblCwTpConfirmation
                          2276	#745:  **********************************************************************************************************************/
                          2277	#746: /*! \brief       TP message transmission completed
                          2278	#747:  *  \details     This function is called by the TP to confirm a message has been sent
                          2279	#748:  *               successful or terminated with an error. The message transmission state
                          2280	#749:  *               is handed over to the diagnostic module.
                          2281	#750:  *  \param[in]   state TP confirmation state: kTpBusy, kTpSuccess, kTpErrTxFCNotExpected,
                          2282	#751:  *               kTpTimeoutFC, kTpErrTxOverrun, kTpErrTxFSInvalid, kTpCanTxFailed
                          2283	#752:  **********************************************************************************************************************/

                                   Fri Apr 10 08:32:01 2020           Page 42
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2284		.align	1
                          2285		.align	1
                          2286	..gh.f.p.3.a.1.r.0.e.16:
                          2287		.type	..gh.f.p.3.a.1.r.0.e.16,@object
                          2288		.size	..gh.f.p.3.a.1.r.0.e.16,0
                          2289		.global	FblCwTpConfirmation
                          2290	FblCwTpConfirmation:
000003a8 182106f0         2291		e_stwu	sp, -16(sp)
000003ac 0080             2292		se_mflr	r0
000003ae d3f1             2293		se_stw	r31, 12(sp)
000003b0 d501             2294		se_stw	r0, 20(sp)
                          2295	#	    .bf
                          2296	.LDW24:
                          2297	#753: void FblCwTpConfirmation( vuint8 state )
                          2298	#754: {
                          2299	#755:    vuint8 resetState;
                          2300	#757:    /* TpConfirm called from TP. This can have several reasons */
                          2301	#758:    if ((state != kTpErrTxFCNotExpected) && (state != kTpBusy) && (state != kTpFailed))
000003b2 2a93             2302		se_cmpi	r3, 9
000003b4 e600             2303		se_beq	.L1741
000003b6 2a33             2304		se_cmpi	r3, 3
000003b8 e600             2305		se_beq	.L1741
000003ba 2a13             2306		se_cmpi	r3, 1
000003bc e600             2307		se_beq	.L1741
                          2308	#759:    {
                          2309	#760:       /* State is reset per default */
                          2310	#761:       resetState = (vuint8)1u;
                          2311	#763:       if (state == kTpSuccess)
                          2312	#line763
                          2313	..lin.5de73d6a..e74402c0.0_36::
                          2314	.LDWlin36:
000003be 73e0e000         2315		e_lis	r31, %hiadj(cwTxState)
000003c2 1fff0000         2316		e_add16i	r31, r31, %lo(cwTxState)
000003c6 800f             2317		se_lbz	r0, 0(r31)
000003c8 2a03             2318		se_cmpi	r3, 0
000003ca e200             2319		se_bne	.L1747
                          2320	#764:       {
                          2321	#765:          switch (cwTxState)
                          2322	#line765
                          2323	..lin.5de73d6a..e74402c0.0_37::
                          2324	.LDWlin37:
000003cc 2200             2325		se_cmpli	r0, 1
000003ce e400             2326		se_blt	.L1771
000003d0 e600             2327		se_beq	.L1751
000003d2 2210             2328		se_cmpli	r0, 2
000003d4 e600             2329		se_beq	.L1752
000003d6 2230             2330		se_cmpli	r0, 4
000003d8 e100             2331		se_ble	.L1741
000003da e800             2332		se_b	.L1771
                          2333	.L1751:
                          2334	#766:          {
                          2335	#767:             case kFblCwTxStateIdle:
                          2336	#768:             {
                          2337	#769:                break;
                          2338	#770:             }
                          2339	#771:             case kFblCwTxStateRpInProgress:

                                   Fri Apr 10 08:32:01 2020           Page 43
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2340	#772:             {
                          2341	#773:                FblDiagTxConfirmation(kFblCwMsgTypeRcrRp);
                          2342	#line773
                          2343	..lin.5de73d6a..e74402c0.0_38::
                          2344	.LDWlin38:
000003dc 4833             2345		se_li	r3, 3
                          2346	#774:                break;
                          2347	.L1752:
                          2348	#775:             }
                          2349	#776:             case kFblCwTxStateTxInProgress:
                          2350	#777:             {
                          2351	#778:                FblDiagTxConfirmation(kFblCwMsgTypeNormal);
000003de 78000001         2352		e_bl	FblDiagTxConfirmation
                          2353	#779:                break;
000003e2 e800             2354		se_b	.L1771
                          2355	.L1747:
                          2356	#780:             }
                          2357	#781:             case kFblCwTxStateRpPending: /* Intentional fall-through */
                          2358	#782:             case kFblCwTxStateTxPending:
                          2359	#783:             {
                          2360	#784:                /* Confirmation while another request is pending.           */
                          2361	#785:                /* Bus is now probably available for next transmission.     */
                          2362	#786:                /* This can be issued at next. No action required at least. */
                          2363	#787:                resetState = (vuint8)0u;
                          2364	#788:                break;
                          2365	#789:             }
                          2366	#790:             default:
                          2367	#791:             {
                          2368	#792:                /* Illegal state */
                          2369	#793:                break;
                          2370	#794:             }
                          2371	#795:          }
                          2372	#796:       }
                          2373	#797:       else
                          2374	#798:       {
                          2375	#799:          /* Evaluate the parameter type and indicate the error */
                          2376	#800:          switch (cwTxState)
                          2377	#line800
                          2378	..lin.5de73d6a..e74402c0.0_39::
                          2379	.LDWlin39:
000003e4 2200             2380		se_cmpli	r0, 1
000003e6 e600             2381		se_beq	.L1764
000003e8 2220             2382		se_cmpli	r0, 3
000003ea e200             2383		se_bne	.L1765
                          2384	.L1764:
                          2385	#801:          {
                          2386	#802:             case kFblCwTxStateRpInProgress: /* Intentional fall-through */
                          2387	#803:             case kFblCwTxStateRpPending:
                          2388	#804:             {
                          2389	#805:                FblDiagTxErrorIndication(kFblCwMsgTypeRcrRp);
                          2390	#line805
                          2391	..lin.5de73d6a..e74402c0.0_40::
                          2392	.LDWlin40:
000003ec 4833             2393		se_li	r3, 3
                          2394	#806:                break;
000003ee e800             2395		se_b	.L2000

                                   Fri Apr 10 08:32:01 2020           Page 44
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2396	.L1765:
                          2397	#807:             }
                          2398	#808:             default:
                          2399	#809:             {
                          2400	#810:                FblDiagTxErrorIndication(kFblCwMsgTypeNormal);
                          2401	#line810
                          2402	..lin.5de73d6a..e74402c0.0_41::
                          2403	.LDWlin41:
000003f0 4803             2404		se_li	r3, 0
                          2405	.L2000:
000003f2 78000001         2406		e_bl	FblDiagTxErrorIndication
                          2407	#811:                break;
                          2408	.L1771:
                          2409	#812:             }
                          2410	#813:          }
                          2411	#814: #if defined( FBL_CW_ENABLE_CANCEL_REQUEST )
                          2412	#815:          if (state == kTpCanTxFailed)
                          2413	#816:          {
                          2414	#817:             /* Reset CAN channel if TxTimeout occurs */
                          2415	#818:             FblCanInit();
                          2416	#819:          }
                          2417	#820: #endif /* FBL_CW_ENABLE_CANCEL_REQUEST */
                          2418	#821:       }
                          2419	#823:       /* Current TX operation completed */
                          2420	#824:       if (resetState != (vuint8)0u)
                          2421	#825:       {
                          2422	#826:          cwTxState = kFblCwTxStateIdle;
000003f6 4800             2423		se_li	r0, 0
000003f8 70e0e000         2424		e_lis	r7, %hiadj(cwTxTimer)
                          2425	#827:          cwTxTimer = 0u;
000003fc 5c070000         2426		e_sth	r0, %lo(cwTxTimer)(r7)
00000400 900f             2427		se_stb	r0, 0(r31)
                          2428	.L1741:
                          2429	#828:       }
                          2430	#829:    }
                          2431	#830: }
                          2432	#	    .ef
                          2433	.LDW34:
00000402 c501             2434		se_lwz	r0, 20(sp)
00000404 c3f1             2435		se_lwz	r31, 12(sp)
00000406 20f1             2436		se_addi	sp, 16
00000408 0090             2437		se_mtlr	r0
0000040a 0004             2438		se_blr
                          2439		.global	__ghs_eofn_FblCwTpConfirmation
                          2440	__ghs_eofn_FblCwTpConfirmation:
                          2441		.type	FblCwTpConfirmation,@function
                          2442		.size	FblCwTpConfirmation,$-FblCwTpConfirmation
                          2443		.align	1
                          2444	
                          2445	#function:			FblCwTpConfirmation
                          2446	#stack frame size:		16
                          2447	#link area offset:		0
                          2448	#local storage area offset:	12
                          2449	#gpr save area offset:		12
                          2450	#
                          2451	

                                   Fri Apr 10 08:32:01 2020           Page 45
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2452	#state	r3	param
                          2453	
                          2454		.data
                          2455		.section ".vletext", "vax"
                          2456		.vle
                          2457		.vle
                          2458	
                          2459	
                          2460	#832: /***********************************************************************************************************************
                          2461	#833:  *  FblCwTpRxStartIndication
                          2462	#834:  **********************************************************************************************************************/
                          2463	#835: /*! \brief       Start of TP frame has been received.
                          2464	#836:  *  \details     Indicate start of TP frame to ComWrapper
                          2465	#837:  **********************************************************************************************************************/
                          2466		.align	1
                          2467		.align	1
                          2468	..gh.f.p.0.a.1.r.0.e.17:
                          2469		.type	..gh.f.p.0.a.1.r.0.e.17,@object
                          2470		.size	..gh.f.p.0.a.1.r.0.e.17,0
                          2471		.global	FblCwTpRxStartIndication
                          2472	FblCwTpRxStartIndication:
0000040c 0080             2473		se_mflr	r0
0000040e d101             2474		se_stw	r0, 4(sp)
00000410 182106f8         2475		e_stwu	sp, -8(sp)
                          2476	#	    .bf
                          2477	.LDW44:
                          2478	#838: void FblCwTpRxStartIndication( void )
                          2479	#839: {
                          2480	#840:     /* Dummy call of FblDiagRxGetPhysBuffer to clear functional requests and make it conform to the CW-specification.
                          2481	#841:      * The GetDiagBufferLocked concept is not applicable for CAN, the FblTp Module copies the received data into the
                          2482	#842:      * DiagBuffer independently of it is locked or not. */
                          2483	#844:    if (cwCanRxMsgState == kFblCwCanRxMsgStatePhysical)
00000414 70e0e000         2484		e_lis	r7, %hiadj(cwCanRxMsgState)
00000418 30070000         2485		e_lbz	r0, %lo(cwCanRxMsgState)(r7)
0000041c 2a00             2486		se_cmpi	r0, 0
0000041e e200             2487		se_bne	.L2003
                          2488	#845:    {
                          2489	#846:       (void)FblDiagRxGetPhysBuffer(gbTpRxLength);
                          2490	#line846
                          2491	..lin.5de73d6a..1a86a731.0_42::
                          2492	.LDWlin42:
00000420 70e0e000         2493		e_lis	r7, %hiadj(gbTpRxLength)
00000424 58670000         2494		e_lhz	r3, %lo(gbTpRxLength)(r7)
00000428 78000001         2495		e_bl	FblDiagRxGetPhysBuffer
                          2496	.L2003:
                          2497	#847:    }
                          2498	#849:    FblDiagRxStartIndication();
0000042c 78000001         2499		e_bl	FblDiagRxStartIndication
                          2500	#850: }
                          2501	#	    .ef
                          2502	.LDW54:
00000430 c301             2503		se_lwz	r0, 12(sp)
00000432 2071             2504		se_addi	sp, 8
00000434 0090             2505		se_mtlr	r0
00000436 0004             2506		se_blr
                          2507		.global	__ghs_eofn_FblCwTpRxStartIndication

                                   Fri Apr 10 08:32:01 2020           Page 46
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2508	__ghs_eofn_FblCwTpRxStartIndication:
                          2509		.type	FblCwTpRxStartIndication,@function
                          2510		.size	FblCwTpRxStartIndication,$-FblCwTpRxStartIndication
                          2511		.align	1
                          2512	
                          2513	#function:			FblCwTpRxStartIndication
                          2514	#stack frame size:		8
                          2515	#link area offset:		0
                          2516	#local storage area offset:	8
                          2517	#
                          2518	
                          2519		.data
                          2520		.section ".vletext", "vax"
                          2521		.vle
                          2522		.vle
                          2523	
                          2524	
                          2525	#852: /***********************************************************************************************************************
                          2526	#853:  *  FblCwTpErrorIndication
                          2527	#854:  **********************************************************************************************************************/
                          2528	#855: /*! \brief       TP-layer error indication function
                          2529	#856:  *  \details     Indicates that an error occurred during reception of a multi-frame message.
                          2530	#857:  *               In case of error codes kTpErrRxWrongSN or kTpErrRxTimeout, the diagnostic module is informed.
                          2531	#858:  *  \param[in]   errorCode Details the error that has occurred during reception.
                          2532	#859:  **********************************************************************************************************************/
                          2533		.align	1
                          2534		.align	1
                          2535	..gh.f.p.3.a.1.r.0.e.18:
                          2536		.type	..gh.f.p.3.a.1.r.0.e.18,@object
                          2537		.size	..gh.f.p.3.a.1.r.0.e.18,0
                          2538		.global	FblCwTpErrorIndication
                          2539	FblCwTpErrorIndication:
                          2540	#	    .bf
                          2541	.LDW64:
                          2542	#860: void FblCwTpErrorIndication( vuint8 errorCode )
                          2543	#861: {
                          2544	#862:    if ((errorCode == kTpErrRxWrongSN) || (errorCode == kTpErrRxTimeout))
00000438 2453             2545		se_subi	r3, 6
0000043a 2203             2546		se_cmpli	r3, 1
0000043c e500             2547		se_bgt	.L2068
                          2548	#863:    {
                          2549	#864:       /* Clear all other flags for service management */
                          2550	#866:       /* Important: Indicate only those errors, that aborts reception or service transmission */
                          2551	#867:       FblDiagRxErrorIndication();
                          2552	#line867
                          2553	..lin.5de73d6a..a6bb42c3.0_43::
                          2554	.LDWlin43:
0000043e 78000000         2555		e_b	FblDiagRxErrorIndication
                          2556	.L2068:
                          2557	#868:    }
                          2558	#869: }
                          2559	#	    .ef
                          2560	.LDW74:
00000442 0004             2561		se_blr
                          2562		.global	__ghs_eofn_FblCwTpErrorIndication
                          2563	__ghs_eofn_FblCwTpErrorIndication:

                                   Fri Apr 10 08:32:01 2020           Page 47
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2564		.type	FblCwTpErrorIndication,@function
                          2565		.size	FblCwTpErrorIndication,$-FblCwTpErrorIndication
                          2566		.align	1
                          2567	
                          2568	#function:			FblCwTpErrorIndication
                          2569	#stack frame size:		0
                          2570	#
                          2571	
                          2572	#errorCode	r3	param
                          2573	
                          2574		.data
                          2575		.section ".vletext", "vax"
                          2576		.vle
                          2577		.vle
                          2578	
                          2579	
                          2580	#871: /***********************************************************************************************************************
                          2581	#872:  *  CALLBACK FUNCTIONS FROM CAN LAYER
                          2582	#873:  **********************************************************************************************************************/
                          2583	#875: /***********************************************************************************************************************
                          2584	#876:  *  FblCwPrecopy
                          2585	#877:  **********************************************************************************************************************/
                          2586	#878: /*! \brief       Function to support functional(broadcast) requests
                          2587	#879:  *  \param[in]   data Receive data value (not used in each case)
                          2588	#880:  **********************************************************************************************************************/
                          2589	#881: #if defined( MULTIPLE_RECEIVE_BUFFER )
                          2590	#882: void FblCwPrecopy( pChipDataPtr data )
                          2591	#883: {
                          2592	#884: #endif
                          2593	#885:    vuint8 * pFuncBuffer;
                          2594	#887: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          2595	#888:    (void)data; /* PRQA S 3112 */ /* MD_MSR_14.2 */
                          2596	#889: #endif
                          2597	#891: #if defined( FBL_TP_ENABLE_FIX_RX_DLC_CHECK )
                          2598	#892: # if defined( FBL_TP_ENABLE_VARIABLE_RX_DLC )
                          2599	#893: # else
                          2600	#894:    if (CanRxActualDLC != 8u)
                          2601	#895:    {
                          2602	#896:       return;
                          2603	#897:    }
                          2604	#898: # endif
                          2605	#899: #endif
                          2606	#900:    if ((pCanData[kTpciPos] != 0u) && (pCanData[kTpciPos] < CanRxActualDLC))
                          2607	#901:    {
                          2608	#902:       /* Try to get the functional request buffer */
                          2609	#903:       pFuncBuffer = FblDiagRxGetFuncBuffer(pCanData[kTpciPos]);
                          2610	#905:       /* Physical buffer is available. Service can be processed. */
                          2611	#906:       if (NULL != pFuncBuffer)
                          2612	#907:       {
                          2613	#908:          cwCanRxMsgState = kFblCwCanRxMsgStateFunctional;
                          2614	#909:          (void)FblTpPrecopy(data);
                          2615	#910:       }
                          2616	#911:    }
                          2617	#913: }  /* PRQA S 2006 */ /* MD_MSR_14.7 */
                          2618	#916: /***********************************************************************************************************************
                          2619	#917:  *  FblHandleRxMsg

                                   Fri Apr 10 08:32:01 2020           Page 48
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2620	#918:  **********************************************************************************************************************/
                          2621	#919: /*! \brief       Processing of filtered CAN receive messages. After a message was received, TpPrecopy is called.
                          2622	#920:  *  \pre         CAN hardware has to be initialized before call
                          2623	#921:  *  \param[in]   fblRxCanMsgHdl RX CAN message handle
                          2624	#922:  *  \param[in]   canDataPtr In case of multiple receive buffer configuration: Pointer to CAN object.
                          2625	#923:  **********************************************************************************************************************/
                          2626	#924: #if defined( MULTIPLE_RECEIVE_BUFFER )
                          2627		.align	1
                          2628		.align	1
                          2629	..gh.f.p.4.a.1.r.0.e.19:
                          2630		.type	..gh.f.p.4.a.1.r.0.e.19,@object
                          2631		.size	..gh.f.p.4.a.1.r.0.e.19,0
                          2632		.global	FblHandleRxMsg
                          2633	FblHandleRxMsg:
00000444 182106f0         2634		e_stwu	sp, -16(sp)
00000448 0080             2635		se_mflr	r0
0000044a 1bc10908         2636		e_stmw	r30, 8(sp)
0000044e d501             2637		se_stw	r0, 20(sp)
00000450 013f             2638		se_mr	r31, r3
00000452 014e             2639		se_mr	r30, r4
                          2640	#	    .bf
                          2641	.LDW84:
                          2642	#925: void FblHandleRxMsg( vuint8 fblRxCanMsgHdl, pChipDataPtr canDataPtr )
                          2643	#926: #endif
                          2644	#927: {
                          2645	#928:    vuint8 i;
                          2646	#930:    /* Confirmation handling before receive message is processed */
                          2647	#931:    (void)FblCanMsgTransmitted();
00000454 78000001         2648		e_bl	FblCanMsgTransmitted
                          2649	#934:    /* Check for message handler */
                          2650	#935:    i = 0u;
00000458 4806             2651		se_li	r6, 0
                          2652	#936:    while (i < FBL_NUMBER_OF_RX_ID)
                          2653	.L2136:
                          2654	#937:    {
                          2655	#938:       if (fblCanIdRxConfiguration[i].rxObject == fblRxCanMsgHdl)
0000045a 18e6a01c         2656		e_mulli	r7, r6, 28
0000045e 1ce70000         2657		e_add16i	r7, r7, %lo(fblCanIdRxConfiguration)
00000462 70079000         2658		e_add2is	r7, %hiadj(fblCanIdRxConfiguration)
00000466 c307             2659		se_lwz	r0, 12(r7)
00000468 0df0             2660		se_cmpl	r0, r31
0000046a e200             2661		se_bne	.L2137
                          2662	#939:       {
                          2663	#940:          fblCanIdRxConfiguration[i].fblCwIndicationHandler(fblRxCanMsgHdl, canDataPtr, fblCanIdRxConfiguration[i].connectionIndex);
                          2664	#line940
                          2665	..lin.5de73d6a..158018b6.0_44::
                          2666	.LDWlin44:
0000046c c507             2667		se_lwz	r0, 20(r7)
0000046e c657             2668		se_lwz	r5, 24(r7)
00000470 01e4             2669		se_mr	r4, r30
00000472 01f3             2670		se_mr	r3, r31
00000474 00b0             2671		se_mtctr	r0
00000476 0007             2672		se_bctrl
                          2673	#941:          break;
00000478 e800             2674		se_b	.L2132
                          2675	.L2137:

                                   Fri Apr 10 08:32:01 2020           Page 49
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2676	#942:       }
                          2677	#943:       i++;
                          2678	#line936
                          2679	..lin.5de73d6a..158018b6.0_45::
                          2680	.LDWlin45:
0000047a 2006             2681		se_addi	r6, 1
0000047c 2216             2682		se_cmpli	r6, 2
0000047e e400             2683		se_blt	.L2136
                          2684	.L2132:
                          2685	#944:    }
                          2686	#945: }
                          2687	#	    .ef
                          2688	.LDW94:
                          2689	#line945
                          2690	..lin.5de73d6a..158018b6.0_46::
                          2691	.LDWlin46:
00000480 c501             2692		se_lwz	r0, 20(sp)
00000482 1bc10808         2693		e_lmw	r30, 8(sp)
00000486 20f1             2694		se_addi	sp, 16
00000488 0090             2695		se_mtlr	r0
0000048a 0004             2696		se_blr
                          2697		.global	__ghs_eofn_FblHandleRxMsg
                          2698	__ghs_eofn_FblHandleRxMsg:
                          2699		.type	FblHandleRxMsg,@function
                          2700		.size	FblHandleRxMsg,$-FblHandleRxMsg
                          2701		.align	1
                          2702	
                          2703	#function:			FblHandleRxMsg
                          2704	#stack frame size:		16
                          2705	#link area offset:		0
                          2706	#local storage area offset:	8
                          2707	#gpr save area offset:		8
                          2708	#
                          2709	#i	r6	local
                          2710	
                          2711	#fblRxCanMsgHdl	r31	param
                          2712	#canDataPtr	r30	param
                          2713	
                          2714		.data
                          2715		.section ".vletext", "vax"
                          2716		.vle
                          2717		.vle
                          2718	
                          2719	
                          2720	#952: /**********************************************************************************************************************
                          2721	#953:  *  FblCw_ResetParameter
                          2722	#954:  *********************************************************************************************************************/
                          2723	#955: /*! \brief      This API function is used to reset transport layer parameters to default values
                          2724	#956:  *  \pre        CW is initialized and active
                          2725	#957:  *  \return     Success of operation
                          2726	#958:  *********************************************************************************************************************/
                          2727		.align	1
                          2728		.align	1
                          2729	..gh.f.p.0.a.1.r.0.e.20:
                          2730		.type	..gh.f.p.0.a.1.r.0.e.20,@object
                          2731		.size	..gh.f.p.0.a.1.r.0.e.20,0

                                   Fri Apr 10 08:32:01 2020           Page 50
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2732		.global	FblCw_ResetParameter
                          2733	FblCw_ResetParameter:
                          2734	#	    .bf
                          2735	.LDW05:
                          2736	#959: tFblResult FblCw_ResetParameter(void)
                          2737	#960: {
                          2738	#961:    /* PRQA S 3109 2 */ /* MD_MSR_14.3 */
                          2739	#962:    FblTpSetRxBS(kFblTpBlocksize);
0000048c 4880             2740		se_li	r0, 8
0000048e 70e0e000         2741		e_lis	r7, %hiadj(bRxBlockSize)
00000492 34070000         2742		e_stb	r0, %lo(bRxBlockSize)(r7)
00000496 70e0e000         2743		e_lis	r7, %hiadj(bRxBSCounter)
0000049a 34070000         2744		e_stb	r0, %lo(bRxBSCounter)(r7)
                          2745	#963:    FblTpSetRxSTmin(kFblTpSTMin);
0000049e 4803             2746		se_li	r3, 0
000004a0 70e0e000         2747		e_lis	r7, %hiadj(bRxSTmin)
000004a4 34670000         2748		e_stb	r3, %lo(bRxSTmin)(r7)
                          2749	#965:    return kFblOk;
                          2750	#	    .ef
                          2751	.LDW15:
000004a8 0004             2752		se_blr
                          2753		.global	__ghs_eofn_FblCw_ResetParameter
                          2754	__ghs_eofn_FblCw_ResetParameter:
                          2755		.type	FblCw_ResetParameter,@function
                          2756		.size	FblCw_ResetParameter,$-FblCw_ResetParameter
                          2757		.align	1
                          2758	
                          2759	#function:			FblCw_ResetParameter
                          2760	#stack frame size:		0
                          2761	#
                          2762	
                          2763		.data
                          2764		.section ".vletext", "vax"
                          2765		.vle
                          2766		.vle
                          2767	
                          2768	#966: }
                          2769		.align	1
                          2770	#fblCanIdRxConfiguration	fblCanIdRxConfiguration	import
                          2771	#fblCanIdTxConfiguration	fblCanIdTxConfiguration	import
                          2772	#kFblCanIdTable	kFblCanIdTable	import
                          2773	#CanRxActualDLC	CanRxActualDLC	import
                          2774	#gbTpRxLength	gbTpRxLength	import
                          2775	#bRxBlockSize	bRxBlockSize	import
                          2776	#bRxBSCounter	bRxBSCounter	import
                          2777	#bRxSTmin	bRxSTmin	import
                          2778	#DiagBuffer	DiagBuffer	import
                          2779	#cwTxState	cwTxState	static
                          2780	#cwTxTimer	cwTxTimer	static
                          2781	#cwTxPendingLength	cwTxPendingLength	static
                          2782	#cwCanRxMsgState	cwCanRxMsgState	static
                          2783	#cwTaskState	cwTaskState	static
                          2784	
                          2785		.data
                          2786		.section ".bss","awb"
00000007                  2787		.space	1

                                   Fri Apr 10 08:32:01 2020           Page 51
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2788		.align	2
                          2789		.align	2
                          2790		.global	fblCanIdTable
00000008                  2791	fblCanIdTable:	.space	20
                          2792		.type	fblCanIdTable,@object
                          2793		.size	fblCanIdTable,20
                          2794		.align	2
                          2795		.global	fblCanTxObj
0000001c                  2796	fblCanTxObj:	.space	20
                          2797		.type	fblCanTxObj,@object
                          2798		.size	fblCanTxObj,20
                          2799		.align	2
                          2800		.global	fblCwDiagTransmitObject
00000030                  2801	fblCwDiagTransmitObject:	.space	4
                          2802		.type	fblCwDiagTransmitObject,@object
                          2803		.size	fblCwDiagTransmitObject,4
                          2804		.global	fblCwInitFlag
00000034                  2805	fblCwInitFlag:	.space	1
                          2806		.type	fblCwInitFlag,@object
                          2807		.size	fblCwInitFlag,1
                          2808		.data
                          2809		.note ".PPC.EMB.apuinfo",""
00000000 00000008         2810		.long	0x00000008
00000004 00000004         2811		.long	4
00000008 00000002         2812		.long	0x00000002
                          2813		# "APUinfo\000"
0000000c 41505569         2814		.byte	65,80,85,105
00000010 6e666f00         2815		.byte	110,102,111,0
00000014 01040001         2816		.long	0x01040001
                          2817		.ghsnote version,20
                          2818		.ghsnote tools,3
                          2819		.ghsnote options,644
                          2820		.section ".vletext", "vax"
                          2821		.vle
                          2822		.vle
                          2823		.align	1
                          2824	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB071..0::
                          2825		.section	.debug_info
                          2826	.Ldw_begin:
00000000 0000146f         2827		.long	.Ldw_end-.Ldw_begin-4
00000004 0002             2828		.byte	0,2
00000006 00000000         2829		.long	.Ldw_abbr_begin
0000000a 04               2830		.byte	4
                          2831		.section	.debug_abbrev
                          2832	.Ldw_abbr_begin:
                          2833		.section	.debug_info
0000000b 01               2834		.byte	1
0000000c 00000000         2835		.long	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB071..0
00000010 00000000         2836		.long	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB071..0
00000014 2e2e2f2e2e2f2e2e 2837		.strz	"../../../BSW/Fbl/fbl_cw.c"
0000001c 2f4253572f46626c
00000024 2f66626c5f63772e
0000002c 6300            
0000002e 433a5c566563746f 2838		.strz	"C:\\Vector\\CBD1800772_D00_Mpc57xx\\Demo\\DemoFbl\\Appl"
00000036 725c434244313830
0000003e 303737325f443030
00000046 5f4d706335377878
0000004e 5c44656d6f5c4465
00000056 6d6f46626c5c4170
0000005e 706c00          
00000061 4748532043203230 2839		.strz	"GHS C 2017.5.4 [dual]"
00000069 31372e352e34205b
00000071 6475616c5d00    
00000077 0001             2840		.byte	0,1
00000079 00000000         2841		.long	.Ldw_line_begin
0000007d 00000000         2842		.long	.Ldw_macinfo_begin
00000081 00               2843		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 52
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          2844	
                          2845		.section	.debug_abbrev
00000000 01               2846		.byte	1
00000001 11               2847		.byte	17
00000002 01               2848		.byte	1
00000003 1101             2849		.byte	17,1
00000005 1201             2850		.byte	18,1
00000007 0308             2851		.byte	3,8
00000009 1b08             2852		.byte	27,8
0000000b 2508             2853		.byte	37,8
0000000d 1305             2854		.byte	19,5
0000000f 1006             2855		.byte	16,6
00000011 4306             2856		.byte	67,6
00000013 420b             2857		.byte	66,11
00000015 0000             2858		.byte	0,0
                          2859	
                          2860		.section	.debug_line
                          2861	.Ldw_line_begin:
00000000 00000a90         2862		.long	.Ldw_line_end-.Ldw_line_begin-4
00000004 0002             2863		.byte	0,2
00000006 000005ef         2864		.long	.Ldw_lpro_end-.Ldw_lpro_begin
                          2865	.Ldw_lpro_begin:
0000000a 01               2866		.byte	1
0000000b 00               2867		.byte	0
0000000c 00               2868		.byte	0
0000000d 04               2869		.byte	4
0000000e 0a               2870		.byte	10
0000000f 000101           2871		.byte	0,1,1
00000012 010100           2872		.byte	1,1,0
00000015 000001           2873		.byte	0,0,1
00000018 00               2874		.byte	0
00000019 2e2e2f2e2e2f2e2e 2875		.strz	"../../../BSW/Fbl/fbl_cw.c"
00000021 2f4253572f46626c
00000029 2f66626c5f63772e
00000031 6300            
00000033 000000           2876		.byte	0,0,0
00000036 696e636c7564655c 2877		.strz	"include\\fbl_inc.h"
0000003e 66626c5f696e632e
00000046 6800            
00000048 000000           2878		.byte	0,0,0
0000004b 2e2e2f2e2e2f2e2e 2879		.strz	"../../../bsw/fbl/v_ver.h"
00000053 2f6273772f66626c
0000005b 2f765f7665722e68
00000063 00              
00000064 000000           2880		.byte	0,0,0
00000067 67656e646174615c 2881		.strz	"gendata\\v_cfg.h"
0000006f 765f6366672e6800
00000077 000000           2882		.byte	0,0,0
0000007a 67656e646174615c 2883		.strz	"gendata\\v_inc.h"
00000082 765f696e632e6800
0000008a 000000           2884		.byte	0,0,0
0000008d 67656e646174615c 2885		.strz	"gendata\\v_par.h"
00000095 765f7061722e6800
0000009d 000000           2886		.byte	0,0,0
000000a0 2e2e2f2e2e2f2e2e 2887		.strz	"../../../bsw/_common/v_def.h"
000000a8 2f6273772f5f636f
000000b0 6d6d6f6e2f765f64
000000b8 65662e6800      
000000bd 000000           2888		.byte	0,0,0
000000c0 2e2e2f2e2e2f2e2e 2889		.strz	"../../../bsw/secmod/SecM.h"
000000c8 2f6273772f736563
000000d0 6d6f642f5365634d
000000d8 2e6800          
000000db 000000           2890		.byte	0,0,0
000000de 2e2e2f2e2e2f2e2e 2891		.strz	"../../../bsw/secmod/Sec.h"
000000e6 2f6273772f736563
000000ee 6d6f642f5365632e
000000f6 6800            
000000f8 000000           2892		.byte	0,0,0
000000fb 2e2e2f2e2e2f2e2e 2893		.strz	"../../../bsw/secmod/Sec_Inc.h"
00000103 2f6273772f736563
0000010b 6d6f642f5365635f
00000113 496e632e6800    
00000119 000000           2894		.byte	0,0,0
0000011c 67656e646174615c 2895		.strz	"gendata\\SecM_cfg.h"
00000124 5365634d5f636667
0000012c 2e6800          
0000012f 000000           2896		.byte	0,0,0
00000132 2e2e2f2e2e2f2e2e 2897		.strz	"../../../bsw/secmod/Sec_Types.h"
0000013a 2f6273772f736563
00000142 6d6f642f5365635f
0000014a 54797065732e6800
00000152 000000           2898		.byte	0,0,0
00000155 67656e646174615c 2899		.strz	"gendata\\SecMPar.h"
0000015d 5365634d5061722e
00000165 6800            

                                   Fri Apr 10 08:32:01 2020           Page 53
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000167 000000           2900		.byte	0,0,0
0000016a 2e2e2f2e2e2f2e2e 2901		.strz	"../../../bsw/secmod/SecM_inc.h"
00000172 2f6273772f736563
0000017a 6d6f642f5365634d
00000182 5f696e632e6800  
00000189 000000           2902		.byte	0,0,0
0000018c 2e2e2f2e2e2f2e2e 2903		.strz	"../../../bsw/secmod/Sec_Crc.h"
00000194 2f6273772f736563
0000019c 6d6f642f5365635f
000001a4 4372632e6800    
000001aa 000000           2904		.byte	0,0,0
000001ad 2e2e2f2e2e2f2e2e 2905		.strz	"../../../bsw/secmod/Sec_SeedKey.h"
000001b5 2f6273772f736563
000001bd 6d6f642f5365635f
000001c5 536565644b65792e
000001cd 6800            
000001cf 000000           2906		.byte	0,0,0
000001d2 696e636c7564655c 2907		.strz	"include\\Sec_SeedKey_Cfg.h"
000001da 5365635f53656564
000001e2 4b65795f4366672e
000001ea 6800            
000001ec 000000           2908		.byte	0,0,0
000001ef 2e2e2f2e2e2f2e2e 2909		.strz	"../../../bsw/secmod/Sec_Verification.h"
000001f7 2f6273772f736563
000001ff 6d6f642f5365635f
00000207 5665726966696361
0000020f 74696f6e2e6800  
00000216 000000           2910		.byte	0,0,0
00000219 2e2e2f2e2e2f2e2e 2911		.strz	"../../../bsw/fbl/fbl_def.h"
00000221 2f6273772f66626c
00000229 2f66626c5f646566
00000231 2e6800          
00000234 000000           2912		.byte	0,0,0
00000237 67656e646174615c 2913		.strz	"gendata\\fbl_cfg.h"
0000023f 66626c5f6366672e
00000247 6800            
00000249 000000           2914		.byte	0,0,0
0000024c 2e2e2f2e2e2f2e2e 2915		.strz	"../../../bsw/fbl/fbl_assert.h"
00000254 2f6273772f66626c
0000025c 2f66626c5f617373
00000264 6572742e6800    
0000026a 000000           2916		.byte	0,0,0
0000026d 2e2e2f2e2e2f2e2e 2917		.strz	"../../../bsw/fbl/fbl_assert_oem.h"
00000275 2f6273772f66626c
0000027d 2f66626c5f617373
00000285 6572745f6f656d2e
0000028d 6800            
0000028f 000000           2918		.byte	0,0,0
00000292 67656e646174615c 2919		.strz	"gendata\\fbl_mtab.h"
0000029a 66626c5f6d746162
000002a2 2e6800          
000002a5 000000           2920		.byte	0,0,0
000002a8 696e636c7564655c 2921		.strz	"include\\MemMap.h"
000002b0 4d656d4d61702e68
000002b8 00              
000002b9 000000           2922		.byte	0,0,0
000002bc 2e2e2f2e2e2f2e2e 2923		.strz	"../../../bsw/flash/flashdrv.h"
000002c4 2f6273772f666c61
000002cc 73682f666c617368
000002d4 6472762e6800    
000002da 000000           2924		.byte	0,0,0
000002dd 2e2e2f2e2e2f2e2e 2925		.strz	"../../../bsw/flash_xd1/flashdrv_xd1.h"
000002e5 2f6273772f666c61
000002ed 73685f7864312f66
000002f5 6c6173686472765f
000002fd 7864312e6800    
00000303 000000           2926		.byte	0,0,0
00000306 2e2e2f2e2e2f2e2e 2927		.strz	"../../../bsw/fbl/fbl_wd.h"
0000030e 2f6273772f66626c
00000316 2f66626c5f77642e
0000031e 6800            
00000320 000000           2928		.byte	0,0,0
00000323 2e2e2f2e2e2f2e2e 2929		.strz	"../../../bsw/fbl/iotypes.h"
0000032b 2f6273772f66626c
00000333 2f696f7479706573
0000033b 2e6800          
0000033e 000000           2930		.byte	0,0,0
00000341 2e2e2f2e2e2f2e2e 2931		.strz	"../../../bsw/fbl/fbl_mio.h"
00000349 2f6273772f66626c
00000351 2f66626c5f6d696f
00000359 2e6800          
0000035c 000000           2932		.byte	0,0,0
0000035f 2e2e2f2e2e2f2e2e 2933		.strz	"../../../bsw/fbl/fbl_flio.h"
00000367 2f6273772f66626c
0000036f 2f66626c5f666c69
00000377 6f2e6800        
0000037b 000000           2934		.byte	0,0,0
0000037e 2e2e2f2e2e2f2e2e 2935		.strz	"../../../bsw/fbl/fbl_flio_xd1.h"
00000386 2f6273772f66626c
0000038e 2f66626c5f666c69
00000396 6f5f7864312e6800
0000039e 000000           2936		.byte	0,0,0
000003a1 2e2e2f2e2e2f2e2e 2937		.strz	"../../../bsw/eep/EepInc.h"
000003a9 2f6273772f656570
000003b1 2f456570496e632e
000003b9 6800            
000003bb 000000           2938		.byte	0,0,0
000003be 2e2e2f2e2e2f2e2e 2939		.strz	"../../../bsw/eep/EepIO.h"
000003c6 2f6273772f656570
000003ce 2f456570494f2e68
000003d6 00              
000003d7 000000           2940		.byte	0,0,0
000003da 2e2e2f2e2e2f2e2e 2941		.strz	"../../../bsw/fbl/applvect.h"
000003e2 2f6273772f66626c
000003ea 2f6170706c766563
000003f2 742e6800        
000003f6 000000           2942		.byte	0,0,0
000003f9 2e2e2f2e2e2f2e2e 2943		.strz	"../../../bsw/fbl/fbl_cw.h"
00000401 2f6273772f66626c
00000409 2f66626c5f63772e
00000411 6800            
00000413 000000           2944		.byte	0,0,0
00000416 67656e646174615c 2945		.strz	"gendata\\fbl_cw_cfg.h"
0000041e 66626c5f63775f63
00000426 66672e6800      
0000042b 000000           2946		.byte	0,0,0
0000042e 2e2e2f2e2e2f2e2e 2947		.strz	"../../../bsw/fbl/fbl_hw.h"
00000436 2f6273772f66626c
0000043e 2f66626c5f68772e
00000446 6800            
00000448 000000           2948		.byte	0,0,0
0000044b 2e2e2f2e2e2f2e2e 2949		.strz	"../../../bsw/fbl/fbl_sfr.h"
00000453 2f6273772f66626c
0000045b 2f66626c5f736672
00000463 2e6800          
00000466 000000           2950		.byte	0,0,0
00000469 67656e646174615c 2951		.strz	"gendata\\ftp_cfg.h"
00000471 6674705f6366672e
00000479 6800            
0000047b 000000           2952		.byte	0,0,0
0000047e 2e2e2f2e2e2f2e2e 2953		.strz	"../../../bsw/fbl/fbl_tp.h"
00000486 2f6273772f66626c
0000048e 2f66626c5f74702e
00000496 6800            
00000498 000000           2954		.byte	0,0,0
0000049b 696e636c7564655c 2955		.strz	"include\\WrapNv_inc.h"
000004a3 577261704e765f69
000004ab 6e632e6800      

                                   Fri Apr 10 08:32:01 2020           Page 54
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000004b0 000000           2956		.byte	0,0,0
000004b3 2e2e2f2e2e2f2e2e 2957		.strz	"../../../bsw/wrapnv/WrapNv.h"
000004bb 2f6273772f777261
000004c3 706e762f57726170
000004cb 4e762e6800      
000004d0 000000           2958		.byte	0,0,0
000004d3 67656e646174615c 2959		.strz	"gendata\\WrapNv_cfg.h"
000004db 577261704e765f63
000004e3 66672e6800      
000004e8 000000           2960		.byte	0,0,0
000004eb 67656e646174615c 2961		.strz	"gendata\\fbl_apfb.h"
000004f3 66626c5f61706662
000004fb 2e6800          
000004fe 000000           2962		.byte	0,0,0
00000501 2e2e2f2e2e2f2e2e 2963		.strz	"../../../bsw/fbl/fbl_diag.h"
00000509 2f6273772f66626c
00000511 2f66626c5f646961
00000519 672e6800        
0000051d 000000           2964		.byte	0,0,0
00000520 2e2e2f2e2e2f2e2e 2965		.strz	"../../../bsw/fbl/fbl_diag_oem.h"
00000528 2f6273772f66626c
00000530 2f66626c5f646961
00000538 675f6f656d2e6800
00000540 000000           2966		.byte	0,0,0
00000543 2e2e2f2e2e2f2e2e 2967		.strz	"../../../bsw/fbl/fbl_mem.h"
0000054b 2f6273772f66626c
00000553 2f66626c5f6d656d
0000055b 2e6800          
0000055e 000000           2968		.byte	0,0,0
00000561 2e2e2f2e2e2f2e2e 2969		.strz	"../../../bsw/fbl/fbl_mem_oem.h"
00000569 2f6273772f66626c
00000571 2f66626c5f6d656d
00000579 5f6f656d2e6800  
00000580 000000           2970		.byte	0,0,0
00000583 696e636c7564655c 2971		.strz	"include\\fbl_ap.h"
0000058b 66626c5f61702e68
00000593 00              
00000594 000000           2972		.byte	0,0,0
00000597 696e636c7564655c 2973		.strz	"include\\fbl_apwd.h"
0000059f 66626c5f61707764
000005a7 2e6800          
000005aa 000000           2974		.byte	0,0,0
000005ad 696e636c7564655c 2975		.strz	"include\\fbl_apdi.h"
000005b5 66626c5f61706469
000005bd 2e6800          
000005c0 000000           2976		.byte	0,0,0
000005c3 696e636c7564655c 2977		.strz	"include\\fbl_apnv.h"
000005cb 66626c5f61706e76
000005d3 2e6800          
000005d6 000000           2978		.byte	0,0,0
000005d9 2e2e2f2e2e2f2e2e 2979		.strz	"../../../bsw/fbl/fbl_main.h"
000005e1 2f6273772f66626c
000005e9 2f66626c5f6d6169
000005f1 6e2e6800        
000005f5 000000           2980		.byte	0,0,0
000005f8 00               2981		.byte	0
                          2982	.Ldw_lpro_end:
                          2983		.section	.debug_macinfo
                          2984	.Ldw_macinfo_begin:
                          2985		.section	.debug_frame
                          2986	.LDW_5de14b0:
00000000 0000008c         2987		.long	.LDW_unq_2-.LDW_unq_1
                          2988	.LDW_unq_1:
00000004 ffffffff         2989		.byte	255,255,255,255
00000008 01               2990		.byte	1
00000009 00               2991		.byte	0
0000000a 01               2992		.byte	1
0000000b 01               2993		.byte	1
0000000c 6c               2994		.byte	108
0000000d 0c               2995		.byte	12
0000000e 01               2996		.byte	1
0000000f 00               2997		.byte	0
00000010 07               2998		.byte	7
00000011 00               2999		.byte	0
00000012 07               3000		.byte	7
00000013 01               3001		.byte	1
00000014 07               3002		.byte	7
00000015 02               3003		.byte	2
00000016 07               3004		.byte	7
00000017 03               3005		.byte	3
00000018 07               3006		.byte	7
00000019 04               3007		.byte	4
0000001a 07               3008		.byte	7
0000001b 05               3009		.byte	5
0000001c 07               3010		.byte	7
0000001d 06               3011		.byte	6

                                   Fri Apr 10 08:32:01 2020           Page 55
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000001e 07               3012		.byte	7
0000001f 07               3013		.byte	7
00000020 07               3014		.byte	7
00000021 08               3015		.byte	8
00000022 07               3016		.byte	7
00000023 09               3017		.byte	9
00000024 07               3018		.byte	7
00000025 0a               3019		.byte	10
00000026 07               3020		.byte	7
00000027 0b               3021		.byte	11
00000028 07               3022		.byte	7
00000029 0c               3023		.byte	12
0000002a 07               3024		.byte	7
0000002b 0d               3025		.byte	13
0000002c 07               3026		.byte	7
0000002d 0e               3027		.byte	14
0000002e 07               3028		.byte	7
0000002f 0f               3029		.byte	15
00000030 07               3030		.byte	7
00000031 10               3031		.byte	16
00000032 07               3032		.byte	7
00000033 11               3033		.byte	17
00000034 07               3034		.byte	7
00000035 12               3035		.byte	18
00000036 07               3036		.byte	7
00000037 13               3037		.byte	19
00000038 07               3038		.byte	7
00000039 14               3039		.byte	20
0000003a 07               3040		.byte	7
0000003b 15               3041		.byte	21
0000003c 07               3042		.byte	7
0000003d 16               3043		.byte	22
0000003e 07               3044		.byte	7
0000003f 17               3045		.byte	23
00000040 07               3046		.byte	7
00000041 18               3047		.byte	24
00000042 07               3048		.byte	7
00000043 19               3049		.byte	25
00000044 07               3050		.byte	7
00000045 1a               3051		.byte	26
00000046 07               3052		.byte	7
00000047 1b               3053		.byte	27
00000048 07               3054		.byte	7
00000049 1c               3055		.byte	28
0000004a 07               3056		.byte	7
0000004b 1d               3057		.byte	29
0000004c 07               3058		.byte	7
0000004d 1e               3059		.byte	30
0000004e 07               3060		.byte	7
0000004f 1f               3061		.byte	31
00000050 07               3062		.byte	7
00000051 20               3063		.byte	32
00000052 07               3064		.byte	7
00000053 21               3065		.byte	33
00000054 07               3066		.byte	7
00000055 22               3067		.byte	34

                                   Fri Apr 10 08:32:01 2020           Page 56
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000056 07               3068		.byte	7
00000057 23               3069		.byte	35
00000058 07               3070		.byte	7
00000059 24               3071		.byte	36
0000005a 07               3072		.byte	7
0000005b 25               3073		.byte	37
0000005c 07               3074		.byte	7
0000005d 26               3075		.byte	38
0000005e 07               3076		.byte	7
0000005f 27               3077		.byte	39
00000060 07               3078		.byte	7
00000061 28               3079		.byte	40
00000062 07               3080		.byte	7
00000063 29               3081		.byte	41
00000064 07               3082		.byte	7
00000065 2a               3083		.byte	42
00000066 07               3084		.byte	7
00000067 2b               3085		.byte	43
00000068 07               3086		.byte	7
00000069 2c               3087		.byte	44
0000006a 07               3088		.byte	7
0000006b 2d               3089		.byte	45
0000006c 07               3090		.byte	7
0000006d 2e               3091		.byte	46
0000006e 07               3092		.byte	7
0000006f 2f               3093		.byte	47
00000070 07               3094		.byte	7
00000071 30               3095		.byte	48
00000072 07               3096		.byte	7
00000073 31               3097		.byte	49
00000074 07               3098		.byte	7
00000075 32               3099		.byte	50
00000076 07               3100		.byte	7
00000077 33               3101		.byte	51
00000078 07               3102		.byte	7
00000079 34               3103		.byte	52
0000007a 07               3104		.byte	7
0000007b 35               3105		.byte	53
0000007c 07               3106		.byte	7
0000007d 36               3107		.byte	54
0000007e 07               3108		.byte	7
0000007f 37               3109		.byte	55
00000080 07               3110		.byte	7
00000081 38               3111		.byte	56
00000082 07               3112		.byte	7
00000083 39               3113		.byte	57
00000084 07               3114		.byte	7
00000085 3a               3115		.byte	58
00000086 07               3116		.byte	7
00000087 3b               3117		.byte	59
00000088 07               3118		.byte	7
00000089 3c               3119		.byte	60
0000008a 07               3120		.byte	7
0000008b 3d               3121		.byte	61
0000008c 07               3122		.byte	7
0000008d 3e               3123		.byte	62

                                   Fri Apr 10 08:32:01 2020           Page 57
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000008e 07               3124		.byte	7
0000008f 3f               3125		.byte	63
                          3126	.LDW_unq_2:
                          3127		.section	.debug_info
                          3128	.LDW_495c6f8:
00000082 27               3129		.byte	39
00000083 756e7369676e6564 3130		.strz	"unsigned char"
0000008b 206368617200    
00000091 08               3131		.byte	8
00000092 01               3132		.byte	1
                          3133	
                          3134		.section	.debug_abbrev
00000017 27               3135		.byte	39
00000018 24               3136		.byte	36
00000019 00               3137		.byte	0
0000001a 0308             3138		.byte	3,8
0000001c 3e0b             3139		.byte	62,11
0000001e 0b0b             3140		.byte	11,11
00000020 0000             3141		.byte	0,0
                          3142	
                          3143		.section	.debug_info
                          3144	.LDW_499b7c0:
00000093 2d               3145		.byte	45
00000094 00000000         3146		.long	.LDW_499b768
                          3147	
                          3148		.section	.debug_abbrev
00000022 2d               3149		.byte	45
00000023 35               3150		.byte	53
00000024 00               3151		.byte	0
00000025 4910             3152		.byte	73,16
00000027 0000             3153		.byte	0,0
                          3154	
                          3155		.section	.debug_info
                          3156	.LDW_495ca08:
00000098 31               3157		.byte	49
00000099 00000000         3158		.long	.LDW_499b7c0
                          3159	
                          3160		.section	.debug_abbrev
00000029 31               3161		.byte	49
0000002a 0f               3162		.byte	15
0000002b 00               3163		.byte	0
0000002c 4910             3164		.byte	73,16
0000002e 0000             3165		.byte	0,0
                          3166	
                          3167		.section	.debug_info
                          3168	.LDW_495c618:
0000009d 27               3169		.byte	39
0000009e 756e7369676e6564 3170		.strz	"unsigned long"
000000a6 206c6f6e6700    
000000ac 07               3171		.byte	7
000000ad 04               3172		.byte	4
                          3173	
                          3174	.LDW_495c458:
000000ae 47               3175		.byte	71
000000af 01               3176		.byte	1
                          3177	
                          3178		.section	.debug_abbrev
00000030 47               3179		.byte	71

                                   Fri Apr 10 08:32:01 2020           Page 58
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000031 15               3180		.byte	21
00000032 01               3181		.byte	1
00000033 270c             3182		.byte	39,12
00000035 0000             3183		.byte	0,0
                          3184	
                          3185		.section	.debug_info
                          3186	.LDW_49536e8:
000000b0 14               3187		.byte	20
000000b1 00000000         3188		.long	.LDW_499b768
000000b5 00               3189		.byte	0
                          3190	
                          3191		.section	.debug_abbrev
00000037 14               3192		.byte	20
00000038 05               3193		.byte	5
00000039 00               3194		.byte	0
0000003a 4910             3195		.byte	73,16
0000003c 4b0c             3196		.byte	75,12
0000003e 0000             3197		.byte	0,0
                          3198	
                          3199		.section	.debug_info
                          3200	.LDW_4953718:
000000b6 14               3201		.byte	20
000000b7 00000000         3202		.long	.LDW_499b818
000000bb 00               3203		.byte	0
                          3204	
                          3205	.LDW_4953778:
000000bc 14               3206		.byte	20
000000bd 00000000         3207		.long	.LDW_499b870
000000c1 00               3208		.byte	0
                          3209	
000000c2 00               3210		.byte	0
                          3211	
                          3212	.LDW_495c538:
000000c3 47               3213		.byte	71
000000c4 01               3214		.byte	1
                          3215	
                          3216	.LDW_49530e8:
000000c5 14               3217		.byte	20
000000c6 00000000         3218		.long	.LDW_499b768
000000ca 00               3219		.byte	0
                          3220	
                          3221	.LDW_4953118:
000000cb 14               3222		.byte	20
000000cc 00000000         3223		.long	.LDW_499b818
000000d0 00               3224		.byte	0
                          3225	
                          3226	.LDW_49534d8:
000000d1 14               3227		.byte	20
000000d2 00000000         3228		.long	.LDW_499b870
000000d6 00               3229		.byte	0
                          3230	
000000d7 00               3231		.byte	0
                          3232	
                          3233	.LDW_499d8b0:
000000d8 2b               3234		.byte	43
000000d9 00000000         3235		.long	.LDW_499b768

                                   Fri Apr 10 08:32:01 2020           Page 59
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          3236	
                          3237		.section	.debug_abbrev
00000040 2b               3238		.byte	43
00000041 26               3239		.byte	38
00000042 00               3240		.byte	0
00000043 4910             3241		.byte	73,16
00000045 0000             3242		.byte	0,0
                          3243	
                          3244		.section	.debug_info
                          3245	.LDW_495c730:
000000dd 31               3246		.byte	49
000000de 00000000         3247		.long	.LDW_499d8b0
                          3248	
                          3249	.LDW_495c500:
000000e2 47               3250		.byte	71
000000e3 01               3251		.byte	1
                          3252	
                          3253	.LDW_49536b8:
000000e4 14               3254		.byte	20
000000e5 00000000         3255		.long	.LDW_495c730
000000e9 00               3256		.byte	0
                          3257	
000000ea 00               3258		.byte	0
                          3259	
                          3260	.LDW_495c960:
000000eb 47               3261		.byte	71
000000ec 01               3262		.byte	1
                          3263	
000000ed 00               3264		.byte	0
                          3265	
                          3266	.LDW_495c768:
000000ee 47               3267		.byte	71
000000ef 01               3268		.byte	1
                          3269	
000000f0 00               3270		.byte	0
                          3271	
                          3272	.LDW_495c7a0:
000000f1 47               3273		.byte	71
000000f2 01               3274		.byte	1
                          3275	
000000f3 00               3276		.byte	0
                          3277	
                          3278	.LDW_495c7d8:
000000f4 47               3279		.byte	71
000000f5 01               3280		.byte	1
                          3281	
000000f6 00               3282		.byte	0
                          3283	
                          3284	.LDW_495c5e0:
000000f7 47               3285		.byte	71
000000f8 01               3286		.byte	1
                          3287	
000000f9 00               3288		.byte	0
                          3289	
                          3290	.LDW_495c490:
000000fa 47               3291		.byte	71

                                   Fri Apr 10 08:32:01 2020           Page 60
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000000fb 01               3292		.byte	1
                          3293	
000000fc 00               3294		.byte	0
                          3295	
                          3296	.LDW_495c8b8:
000000fd 47               3297		.byte	71
000000fe 01               3298		.byte	1
                          3299	
000000ff 00               3300		.byte	0
                          3301	
                          3302	.LDW_495c650:
00000100 47               3303		.byte	71
00000101 01               3304		.byte	1
                          3305	
00000102 00               3306		.byte	0
                          3307	
                          3308	.LDW_495c998:
00000103 47               3309		.byte	71
00000104 01               3310		.byte	1
                          3311	
00000105 00               3312		.byte	0
                          3313	
                          3314	.LDW_495c420:
00000106 47               3315		.byte	71
00000107 01               3316		.byte	1
                          3317	
00000108 00               3318		.byte	0
                          3319	
                          3320	.LDW_495c6c0:
00000109 27               3321		.byte	39
0000010a 756e7369676e6564 3322		.strz	"unsigned short"
00000112 2073686f727400  
00000119 07               3323		.byte	7
0000011a 02               3324		.byte	2
                          3325	
                          3326	.LDW_495c848:
0000011b 47               3327		.byte	71
0000011c 01               3328		.byte	1
                          3329	
                          3330	.LDW_4953328:
0000011d 14               3331		.byte	20
0000011e 00000000         3332		.long	.LDW_495c730
00000122 00               3333		.byte	0
                          3334	
                          3335	.LDW_4953358:
00000123 14               3336		.byte	20
00000124 00000000         3337		.long	.LDW_5bc5810
00000128 00               3338		.byte	0
                          3339	
00000129 00               3340		.byte	0
                          3341	
                          3342	.LDW_495c810:
0000012a 47               3343		.byte	71
0000012b 01               3344		.byte	1
                          3345	
                          3346	.LDW_49532c8:
0000012c 14               3347		.byte	20

                                   Fri Apr 10 08:32:01 2020           Page 61
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000012d 00000000         3348		.long	.LDW_5bc5810
00000131 00               3349		.byte	0
                          3350	
00000132 00               3351		.byte	0
                          3352	
                          3353	.LDW_495c4c8:
00000133 47               3354		.byte	71
00000134 01               3355		.byte	1
                          3356	
                          3357	.LDW_49533b8:
00000135 14               3358		.byte	20
00000136 00000000         3359		.long	.LDW_499b768
0000013a 00               3360		.byte	0
                          3361	
0000013b 00               3362		.byte	0
                          3363	
                          3364	.LDW_495ca40:
0000013c 47               3365		.byte	71
0000013d 01               3366		.byte	1
                          3367	
0000013e 00               3368		.byte	0
                          3369	
                          3370	.LDW_495c3b0:
0000013f 47               3371		.byte	71
00000140 01               3372		.byte	1
                          3373	
                          3374	.LDW_49533e8:
00000141 14               3375		.byte	20
00000142 00000000         3376		.long	.LDW_499b768
00000146 00               3377		.byte	0
                          3378	
00000147 00               3379		.byte	0
                          3380	
                          3381	.LDW_495c570:
00000148 47               3382		.byte	71
00000149 01               3383		.byte	1
                          3384	
                          3385	.LDW_4953448:
0000014a 14               3386		.byte	20
0000014b 00000000         3387		.long	.LDW_499b818
0000014f 00               3388		.byte	0
                          3389	
00000150 00               3390		.byte	0
                          3391	
                          3392	.LDW_495c688:
00000151 31               3393		.byte	49
00000152 00000000         3394		.long	.LDW_499b768
                          3395	
                          3396	.LDW_495c8f0:
00000156 47               3397		.byte	71
00000157 01               3398		.byte	1
                          3399	
                          3400	.LDW_4953478:
00000158 14               3401		.byte	20
00000159 00000000         3402		.long	.LDW_499b768
0000015d 00               3403		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 62
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          3404	
                          3405	.LDW_49535c8:
0000015e 14               3406		.byte	20
0000015f 00000000         3407		.long	.LDW_499b818
00000163 00               3408		.byte	0
                          3409	
00000164 00               3410		.byte	0
                          3411	
                          3412	.LDW_495c3e8:
00000165 46               3413		.byte	70
00000166 00000000         3414		.long	.LDW_5bc5600
0000016a 01               3415		.byte	1
                          3416	
                          3417		.section	.debug_abbrev
00000047 46               3418		.byte	70
00000048 15               3419		.byte	21
00000049 01               3420		.byte	1
0000004a 4910             3421		.byte	73,16
0000004c 270c             3422		.byte	39,12
0000004e 0000             3423		.byte	0,0
                          3424	
                          3425		.section	.debug_info
0000016b 00               3426		.byte	0
                          3427	
                          3428	.LDW_5d76690:
0000016c 27               3429		.byte	39
0000016d 696e7400         3430		.strz	"int"
00000171 05               3431		.byte	5
00000172 04               3432		.byte	4
                          3433	
                          3434	.LDW_5d79068:
00000173 47               3435		.byte	71
00000174 01               3436		.byte	1
                          3437	
                          3438	.LDW_5c5e430:
00000175 14               3439		.byte	20
00000176 00000000         3440		.long	.LDW_499b768
0000017a 00               3441		.byte	0
                          3442	
                          3443	.LDW_5c5e460:
0000017b 14               3444		.byte	20
0000017c 00000000         3445		.long	.LDW_495ca08
00000180 00               3446		.byte	0
                          3447	
                          3448	.LDW_5c5ea60:
00000181 14               3449		.byte	20
00000182 00000000         3450		.long	.LDW_499b870
00000186 00               3451		.byte	0
                          3452	
00000187 00               3453		.byte	0
                          3454	
                          3455	.LDW_5d791b8:
00000188 31               3456		.byte	49
00000189 00000000         3457		.long	.LDW_5d79068
                          3458	
                          3459	.LDW_5d79228:

                                   Fri Apr 10 08:32:01 2020           Page 63
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000018d 47               3460		.byte	71
0000018e 01               3461		.byte	1
                          3462	
                          3463	.LDW_5c5ea90:
0000018f 14               3464		.byte	20
00000190 00000000         3465		.long	.LDW_499b768
00000194 00               3466		.byte	0
                          3467	
00000195 00               3468		.byte	0
                          3469	
                          3470	.LDW_5d791f0:
00000196 31               3471		.byte	49
00000197 00000000         3472		.long	.LDW_5d79228
                          3473	
                          3474	.LDW_5deab68:
0000019b 2b               3475		.byte	43
0000019c 00000000         3476		.long	.LDW_499b870
                          3477	
                          3478	.LDW_5d79918:
000001a0 31               3479		.byte	49
000001a1 00000000         3480		.long	.LDW_5deab68
                          3481	
                          3482	.LDW_5c5ef00:
000001a5 3c               3483		.byte	60
000001a6 00               3484		.byte	0
000001a7 08               3485		.byte	8
000001a8 00000000         3486		.long	.LDW_499b870
                          3487	
                          3488		.section	.debug_abbrev
00000050 3c               3489		.byte	60
00000051 01               3490		.byte	1
00000052 01               3491		.byte	1
00000053 090b             3492		.byte	9,11
00000055 0b0f             3493		.byte	11,15
00000057 4910             3494		.byte	73,16
00000059 0000             3495		.byte	0,0
                          3496	
                          3497		.section	.debug_info
000001ac 34               3498		.byte	52
000001ad 00000000         3499		.long	.LDW_5d76690
000001b1 04               3500		.byte	4
000001b2 00               3501		.byte	0
000001b3 01               3502		.byte	1
                          3503	
                          3504		.section	.debug_abbrev
0000005b 34               3505		.byte	52
0000005c 21               3506		.byte	33
0000005d 00               3507		.byte	0
0000005e 4910             3508		.byte	73,16
00000060 0b0f             3509		.byte	11,15
00000062 220d             3510		.byte	34,13
00000064 2f0d             3511		.byte	47,13
00000066 0000             3512		.byte	0,0
                          3513	
                          3514		.section	.debug_info
000001b4 00               3515		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 64
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          3516	
                          3517	.LDW_5c5ef88:
000001b5 3c               3518		.byte	60
000001b6 00               3519		.byte	0
000001b7 08               3520		.byte	8
000001b8 00000000         3521		.long	.LDW_499b870
                          3522	
000001bc 34               3523		.byte	52
000001bd 00000000         3524		.long	.LDW_5d76690
000001c1 04               3525		.byte	4
000001c2 00               3526		.byte	0
000001c3 01               3527		.byte	1
                          3528	
000001c4 00               3529		.byte	0
                          3530	
                          3531	.LDW_5c5f010:
000001c5 3c               3532		.byte	60
000001c6 00               3533		.byte	0
000001c7 08               3534		.byte	8
000001c8 00000000         3535		.long	.LDW_499b768
                          3536	
000001cc 34               3537		.byte	52
000001cd 00000000         3538		.long	.LDW_5d76690
000001d1 04               3539		.byte	4
000001d2 00               3540		.byte	0
000001d3 07               3541		.byte	7
                          3542	
000001d4 00               3543		.byte	0
                          3544	
                          3545	.LDW_5d798e0:
000001d5 47               3546		.byte	71
000001d6 01               3547		.byte	1
                          3548	
                          3549	.LDW_5c5eac0:
000001d7 14               3550		.byte	20
000001d8 00000000         3551		.long	.LDW_499b768
000001dc 00               3552		.byte	0
                          3553	
000001dd 00               3554		.byte	0
                          3555	
                          3556	.LDW_5d79560:
000001de 31               3557		.byte	49
000001df 00000000         3558		.long	.LDW_5d798e0
                          3559	
                          3560	.LDW_5dea640:
000001e3 2d               3561		.byte	45
000001e4 00000000         3562		.long	.LDW_5dea590
                          3563	
                          3564	.LDW_5decf20:
000001e8 3c               3565		.byte	60
000001e9 00               3566		.byte	0
000001ea 08               3567		.byte	8
000001eb 00000000         3568		.long	.LDW_499b870
                          3569	
000001ef 34               3570		.byte	52
000001f0 00000000         3571		.long	.LDW_5d76690

                                   Fri Apr 10 08:32:01 2020           Page 65
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000001f4 04               3572		.byte	4
000001f5 00               3573		.byte	0
000001f6 01               3574		.byte	1
                          3575	
000001f7 00               3576		.byte	0
                          3577	
                          3578	.LDW_5dec480:
000001f8 3c               3579		.byte	60
000001f9 00               3580		.byte	0
000001fa 30               3581		.byte	48
000001fb 00000000         3582		.long	.LDW_499b870
                          3583	
000001ff 34               3584		.byte	52
00000200 00000000         3585		.long	.LDW_5d76690
00000204 04               3586		.byte	4
00000205 00               3587		.byte	0
00000206 0b               3588		.byte	11
                          3589	
00000207 00               3590		.byte	0
                          3591	
                          3592	.LDW_5decfa8:
00000208 3c               3593		.byte	60
00000209 00               3594		.byte	0
0000020a 8002             3595		.byte	128,2
0000020c 00000000         3596		.long	.LDW_5dea900
                          3597	
00000210 34               3598		.byte	52
00000211 00000000         3599		.long	.LDW_5d76690
00000215 04               3600		.byte	4
00000216 00               3601		.byte	0
00000217 0f               3602		.byte	15
                          3603	
00000218 00               3604		.byte	0
                          3605	
                          3606	.LDW_5d7c320:
00000219 2b               3607		.byte	43
0000021a 00000000         3608		.long	.LDW_5dea328
                          3609	
                          3610	.LDW_5decb68:
0000021e 3c               3611		.byte	60
0000021f 00               3612		.byte	0
00000220 38               3613		.byte	56
00000221 00000000         3614		.long	.LDW_5d7c320
                          3615	
00000225 34               3616		.byte	52
00000226 00000000         3617		.long	.LDW_5d76690
0000022a 04               3618		.byte	4
0000022b 00               3619		.byte	0
0000022c 01               3620		.byte	1
                          3621	
0000022d 00               3622		.byte	0
                          3623	
                          3624	.LDW_5d7c0b8:
0000022e 2b               3625		.byte	43
0000022f 00000000         3626		.long	.LDW_5deaa60
                          3627	

                                   Fri Apr 10 08:32:01 2020           Page 66
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          3628	.LDW_5dec260:
00000233 3c               3629		.byte	60
00000234 00               3630		.byte	0
00000235 18               3631		.byte	24
00000236 00000000         3632		.long	.LDW_5d7c0b8
                          3633	
0000023a 34               3634		.byte	52
0000023b 00000000         3635		.long	.LDW_5d76690
0000023f 04               3636		.byte	4
00000240 00               3637		.byte	0
00000241 00               3638		.byte	0
                          3639	
00000242 00               3640		.byte	0
                          3641	
                          3642	.LDW_5d7bcf0:
00000243 2b               3643		.byte	43
00000244 00000000         3644		.long	.LDW_5dea488
                          3645	
                          3646	.LDW_5dec8c0:
00000248 3c               3647		.byte	60
00000249 00               3648		.byte	0
0000024a 14               3649		.byte	20
0000024b 00000000         3650		.long	.LDW_5dea118
                          3651	
0000024f 34               3652		.byte	52
00000250 00000000         3653		.long	.LDW_5d76690
00000254 04               3654		.byte	4
00000255 00               3655		.byte	0
00000256 00               3656		.byte	0
                          3657	
00000257 00               3658		.byte	0
                          3659	
                          3660	.LDW_5def608:
00000258 46               3661		.byte	70
00000259 00000000         3662		.long	.LDW_499b768
0000025d 01               3663		.byte	1
                          3664	
0000025e 00               3665		.byte	0
                          3666	
                          3667	.LDW_5defc28:
0000025f 47               3668		.byte	71
00000260 01               3669		.byte	1
                          3670	
00000261 00               3671		.byte	0
                          3672	
                          3673	.LDW_5df2a10:
00000262 47               3674		.byte	71
00000263 01               3675		.byte	1
                          3676	
00000264 00               3677		.byte	0
                          3678	
                          3679	.LDW_5df2ab8:
00000265 47               3680		.byte	71
00000266 01               3681		.byte	1
                          3682	
00000267 00               3683		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 67
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          3684	
                          3685	.LDW_5df26c8:
00000268 46               3686		.byte	70
00000269 00000000         3687		.long	.LDW_499b768
0000026d 01               3688		.byte	1
                          3689	
0000026e 00               3690		.byte	0
                          3691	
                          3692	.LDW_5df2700:
0000026f 31               3693		.byte	49
00000270 00000000         3694		.long	.LDW_5dea118
                          3695	
                          3696	.LDW_5df2b98:
00000274 27               3697		.byte	39
00000275 756e7369676e6564 3698		.strz	"unsigned int"
0000027d 20696e7400      
00000282 07               3699		.byte	7
00000283 04               3700		.byte	4
                          3701	
                          3702	.LDW_5df2658:
00000284 47               3703		.byte	71
00000285 01               3704		.byte	1
                          3705	
00000286 00               3706		.byte	0
                          3707	
                          3708	.LDW_5df2690:
00000287 46               3709		.byte	70
00000288 00000000         3710		.long	.LDW_499b768
0000028c 01               3711		.byte	1
                          3712	
                          3713	.LDW_5df1d90:
0000028d 14               3714		.byte	20
0000028e 00000000         3715		.long	.LDW_5bc5918
00000292 00               3716		.byte	0
                          3717	
00000293 00               3718		.byte	0
                          3719	
                          3720	.LDW_5d7d488:
00000294 2b               3721		.byte	43
00000295 00000000         3722		.long	.LDW_499b818
                          3723	
                          3724	.LDW_5df2738:
00000299 46               3725		.byte	70
0000029a 00000000         3726		.long	.LDW_499b768
0000029e 01               3727		.byte	1
                          3728	
                          3729	.LDW_5df1df0:
0000029f 14               3730		.byte	20
000002a0 00000000         3731		.long	.LDW_5d7d488
000002a4 00               3732		.byte	0
                          3733	
000002a5 00               3734		.byte	0
                          3735	
                          3736	.LDW_5df29a0:
000002a6 46               3737		.byte	70
000002a7 00000000         3738		.long	.LDW_499b768
000002ab 01               3739		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 68
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          3740	
                          3741	.LDW_5df1f10:
000002ac 14               3742		.byte	20
000002ad 00000000         3743		.long	.LDW_499b768
000002b1 00               3744		.byte	0
                          3745	
000002b2 00               3746		.byte	0
                          3747	
                          3748	.LDW_5df2b28:
000002b3 47               3749		.byte	71
000002b4 01               3750		.byte	1
                          3751	
000002b5 00               3752		.byte	0
                          3753	
                          3754	.LDW_5df2850:
000002b6 47               3755		.byte	71
000002b7 01               3756		.byte	1
                          3757	
000002b8 00               3758		.byte	0
                          3759	
                          3760	.LDW_5df2a80:
000002b9 47               3761		.byte	71
000002ba 01               3762		.byte	1
                          3763	
000002bb 00               3764		.byte	0
                          3765	
                          3766	.LDW_5d7dca8:
000002bc 47               3767		.byte	71
000002bd 01               3768		.byte	1
                          3769	
000002be 00               3770		.byte	0
                          3771	
                          3772	.LDW_5d7de30:
000002bf 47               3773		.byte	71
000002c0 01               3774		.byte	1
                          3775	
                          3776	.LDW_5df5468:
000002c1 14               3777		.byte	20
000002c2 00000000         3778		.long	.LDW_495c688
000002c6 00               3779		.byte	0
                          3780	
                          3781	.LDW_5df5438:
000002c7 14               3782		.byte	20
000002c8 00000000         3783		.long	.LDW_5bc5810
000002cc 00               3784		.byte	0
                          3785	
000002cd 00               3786		.byte	0
                          3787	
                          3788	.LDW_5d7e370:
000002ce 46               3789		.byte	70
000002cf 00000000         3790		.long	.LDW_495c688
000002d3 01               3791		.byte	1
                          3792	
                          3793	.LDW_5df5858:
000002d4 14               3794		.byte	20
000002d5 00000000         3795		.long	.LDW_5bc5810

                                   Fri Apr 10 08:32:01 2020           Page 69
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000002d9 00               3796		.byte	0
                          3797	
000002da 00               3798		.byte	0
                          3799	
                          3800	.LDW_5d7dff0:
000002db 46               3801		.byte	70
000002dc 00000000         3802		.long	.LDW_495c688
000002e0 01               3803		.byte	1
                          3804	
                          3805	.LDW_5df58b8:
000002e1 14               3806		.byte	20
000002e2 00000000         3807		.long	.LDW_5bc5810
000002e6 00               3808		.byte	0
                          3809	
000002e7 00               3810		.byte	0
                          3811	
                          3812	.LDW_5d7e258:
000002e8 47               3813		.byte	71
000002e9 01               3814		.byte	1
                          3815	
                          3816	.LDW_5df5498:
000002ea 14               3817		.byte	20
000002eb 00000000         3818		.long	.LDW_499b768
000002ef 00               3819		.byte	0
                          3820	
000002f0 00               3821		.byte	0
                          3822	
                          3823	.LDW_5d7e220:
000002f1 47               3824		.byte	71
000002f2 01               3825		.byte	1
                          3826	
                          3827	.LDW_5df54c8:
000002f3 14               3828		.byte	20
000002f4 00000000         3829		.long	.LDW_499b768
000002f8 00               3830		.byte	0
                          3831	
000002f9 00               3832		.byte	0
                          3833	
                          3834	.LDW_5d7dd88:
000002fa 47               3835		.byte	71
000002fb 01               3836		.byte	1
                          3837	
000002fc 00               3838		.byte	0
                          3839	
                          3840	.LDW_5df6500:
000002fd 47               3841		.byte	71
000002fe 01               3842		.byte	1
                          3843	
000002ff 00               3844		.byte	0
                          3845	
                          3846	.LDW_499b768:
00000300 2a               3847		.byte	42
00000301 7675696e743800   3848		.strz	"vuint8"
00000308 9b04             3849		.byte	155,4
0000030a 18               3850		.byte	24
0000030b 07               3851		.byte	7

                                   Fri Apr 10 08:32:01 2020           Page 70
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000030c 00000000         3852		.long	.LDW_495c6f8
                          3853	
                          3854		.section	.debug_abbrev
00000068 2a               3855		.byte	42
00000069 16               3856		.byte	22
0000006a 00               3857		.byte	0
0000006b 0308             3858		.byte	3,8
0000006d 3b0f             3859		.byte	59,15
0000006f 390f             3860		.byte	57,15
00000071 3a0f             3861		.byte	58,15
00000073 4910             3862		.byte	73,16
00000075 0000             3863		.byte	0,0
                          3864	
                          3865		.section	.debug_info
                          3866	.LDW_5bc5658:
00000310 2a               3867		.byte	42
00000311 7675696e74313600 3868		.strz	"vuint16"
00000319 a604             3869		.byte	166,4
0000031b 18               3870		.byte	24
0000031c 07               3871		.byte	7
0000031d 00000000         3872		.long	.LDW_495c6c0
                          3873	
                          3874	.LDW_499b870:
00000321 2a               3875		.byte	42
00000322 7675696e74333200 3876		.strz	"vuint32"
0000032a b204             3877		.byte	178,4
0000032c 18               3878		.byte	24
0000032d 07               3879		.byte	7
0000032e 00000000         3880		.long	.LDW_495c618
                          3881	
                          3882	.LDW_5bc5600:
00000332 2a               3883		.byte	42
00000333 7446626c52657375 3884		.strz	"tFblResult"
0000033b 6c7400          
0000033e 9f02             3885		.byte	159,2
00000340 10               3886		.byte	16
00000341 13               3887		.byte	19
00000342 00000000         3888		.long	.LDW_499b768
                          3889	
                          3890	.LDW_5dea6f0:
00000346 2a               3891		.byte	42
00000347 7446626c4377496e 3892		.strz	"tFblCwIndicationHandler"
0000034f 6469636174696f6e
00000357 48616e646c657200
0000035f 30               3893		.byte	48
00000360 10               3894		.byte	16
00000361 24               3895		.byte	36
00000362 00000000         3896		.long	.LDW_5d791b8
                          3897	
                          3898	.LDW_5deaab8:
00000366 2a               3899		.byte	42
00000367 7446626c4377436f 3900		.strz	"tFblCwConfirmationHandler"
0000036f 6e6669726d617469
00000377 6f6e48616e646c65
0000037f 7200            
00000381 31               3901		.byte	49
00000382 10               3902		.byte	16
00000383 24               3903		.byte	36
00000384 00000000         3904		.long	.LDW_5d791f0
                          3905	
                          3906	.LDW_5dea4e0:
00000388 42               3907		.byte	66

                                   Fri Apr 10 08:32:01 2020           Page 71
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000389 7446626c43616e52 3908		.strz	"tFblCanRxIdListTag"
00000391 7849644c69737454
00000399 616700          
0000039c 33               3909		.byte	51
0000039d 10               3910		.byte	16
0000039e 24               3911		.byte	36
0000039f 1c               3912		.byte	28
000003a0 01               3913		.byte	1
                          3914	
                          3915		.section	.debug_abbrev
00000077 42               3916		.byte	66
00000078 13               3917		.byte	19
00000079 01               3918		.byte	1
0000007a 0308             3919		.byte	3,8
0000007c 3b0f             3920		.byte	59,15
0000007e 390f             3921		.byte	57,15
00000080 3a0f             3922		.byte	58,15
00000082 0b0f             3923		.byte	11,15
00000084 320b             3924		.byte	50,11
00000086 0000             3925		.byte	0,0
                          3926	
                          3927		.section	.debug_info
                          3928	.LDW_5de9ec8:
000003a1 25               3929		.byte	37
000003a2 6e724f664e6f6465 3930		.strz	"nrOfNodes"
000003aa 7300            
000003ac 35               3931		.byte	53
000003ad 0a               3932		.byte	10
000003ae 24               3933		.byte	36
000003af 00000000         3934		.long	.LDW_499b870
000003b3 0223             3935		.byte	2,35
000003b5 00               3936		.byte	0
000003b6 01               3937		.byte	1
                          3938	
                          3939		.section	.debug_abbrev
00000088 25               3940		.byte	37
00000089 0d               3941		.byte	13
0000008a 00               3942		.byte	0
0000008b 0308             3943		.byte	3,8
0000008d 3b0f             3944		.byte	59,15
0000008f 390f             3945		.byte	57,15
00000091 3a0f             3946		.byte	58,15
00000093 4910             3947		.byte	73,16
00000095 380a             3948		.byte	56,10
00000097 320b             3949		.byte	50,11
00000099 0000             3950		.byte	0,0
                          3951	
                          3952		.section	.debug_info
                          3953	.LDW_5de9e38:
000003b7 25               3954		.byte	37
000003b8 6e724f664368616e 3955		.strz	"nrOfChannels"
000003c0 6e656c7300      
000003c5 36               3956		.byte	54
000003c6 0a               3957		.byte	10
000003c7 24               3958		.byte	36
000003c8 00000000         3959		.long	.LDW_499b870
000003cc 0223             3960		.byte	2,35
000003ce 04               3961		.byte	4
000003cf 01               3962		.byte	1
                          3963	

                                   Fri Apr 10 08:32:01 2020           Page 72
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          3964	.LDW_5de9e80:
000003d0 25               3965		.byte	37
000003d1 66626c43616e4964 3966		.strz	"fblCanIdTableIndex"
000003d9 5461626c65496e64
000003e1 657800          
000003e4 37               3967		.byte	55
000003e5 0a               3968		.byte	10
000003e6 24               3969		.byte	36
000003e7 00000000         3970		.long	.LDW_499b870
000003eb 0223             3971		.byte	2,35
000003ed 08               3972		.byte	8
000003ee 01               3973		.byte	1
                          3974	
                          3975	.LDW_5de9d18:
000003ef 25               3976		.byte	37
000003f0 72784f626a656374 3977		.strz	"rxObject"
000003f8 00              
000003f9 38               3978		.byte	56
000003fa 0a               3979		.byte	10
000003fb 24               3980		.byte	36
000003fc 00000000         3981		.long	.LDW_499b870
00000400 0223             3982		.byte	2,35
00000402 0c               3983		.byte	12
00000403 01               3984		.byte	1
                          3985	
                          3986	.LDW_5de9fa0:
00000404 25               3987		.byte	37
00000405 69644c69737400   3988		.strz	"idList"
0000040c 39               3989		.byte	57
0000040d 2b               3990		.byte	43
0000040e 24               3991		.byte	36
0000040f 00000000         3992		.long	.LDW_5d79918
00000413 0223             3993		.byte	2,35
00000415 10               3994		.byte	16
00000416 01               3995		.byte	1
                          3996	
                          3997	.LDW_5de9fe8:
00000417 25               3998		.byte	37
00000418 66626c4377496e64 3999		.strz	"fblCwIndicationHandler"
00000420 69636174696f6e48
00000428 616e646c657200  
0000042f 3a               4000		.byte	58
00000430 1b               4001		.byte	27
00000431 24               4002		.byte	36
00000432 00000000         4003		.long	.LDW_5dea6f0
00000436 0223             4004		.byte	2,35
00000438 14               4005		.byte	20
00000439 01               4006		.byte	1
                          4007	
                          4008	.LDW_5de99b8:
0000043a 25               4009		.byte	37
0000043b 636f6e6e65637469 4010		.strz	"connectionIndex"
00000443 6f6e496e64657800
0000044b 3b               4011		.byte	59
0000044c 0a               4012		.byte	10
0000044d 24               4013		.byte	36
0000044e 00000000         4014		.long	.LDW_499b870
00000452 0223             4015		.byte	2,35
00000454 18               4016		.byte	24
00000455 01               4017		.byte	1
                          4018	
00000456 00               4019		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 73
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          4020	
                          4021	.LDW_5dea328:
00000457 2a               4022		.byte	42
00000458 7446626c43616e52 4023		.strz	"tFblCanRxIdList"
00000460 7849644c69737400
00000468 3c               4024		.byte	60
00000469 03               4025		.byte	3
0000046a 24               4026		.byte	36
0000046b 00000000         4027		.long	.LDW_5dea4e0
                          4028	
                          4029	.LDW_5dea748:
0000046f 42               4030		.byte	66
00000470 7446626c43616e54 4031		.strz	"tFblCanTxIdListTag"
00000478 7849644c69737454
00000480 616700          
00000483 3e               4032		.byte	62
00000484 10               4033		.byte	16
00000485 24               4034		.byte	36
00000486 18               4035		.byte	24
00000487 01               4036		.byte	1
                          4037	
                          4038	.LDW_5dea030:
00000488 25               4039		.byte	37
00000489 6e724f664e6f6465 4040		.strz	"nrOfNodes"
00000491 7300            
00000493 40               4041		.byte	64
00000494 0a               4042		.byte	10
00000495 24               4043		.byte	36
00000496 00000000         4044		.long	.LDW_499b870
0000049a 0223             4045		.byte	2,35
0000049c 00               4046		.byte	0
0000049d 01               4047		.byte	1
                          4048	
                          4049	.LDW_5de9f10:
0000049e 25               4050		.byte	37
0000049f 6e724f664368616e 4051		.strz	"nrOfChannels"
000004a7 6e656c7300      
000004ac 41               4052		.byte	65
000004ad 0a               4053		.byte	10
000004ae 24               4054		.byte	36
000004af 00000000         4055		.long	.LDW_499b870
000004b3 0223             4056		.byte	2,35
000004b5 04               4057		.byte	4
000004b6 01               4058		.byte	1
                          4059	
                          4060	.LDW_5de9c88:
000004b7 25               4061		.byte	37
000004b8 74784f626a656374 4062		.strz	"txObject"
000004c0 00              
000004c1 42               4063		.byte	66
000004c2 0a               4064		.byte	10
000004c3 24               4065		.byte	36
000004c4 00000000         4066		.long	.LDW_499b870
000004c8 0223             4067		.byte	2,35
000004ca 08               4068		.byte	8
000004cb 01               4069		.byte	1
                          4070	
                          4071	.LDW_5de9a00:
000004cc 25               4072		.byte	37
000004cd 69644c69737400   4073		.strz	"idList"
000004d4 43               4074		.byte	67
000004d5 2b               4075		.byte	43

                                   Fri Apr 10 08:32:01 2020           Page 74
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000004d6 24               4076		.byte	36
000004d7 00000000         4077		.long	.LDW_5d79918
000004db 0223             4078		.byte	2,35
000004dd 0c               4079		.byte	12
000004de 01               4080		.byte	1
                          4081	
                          4082	.LDW_5de9a48:
000004df 25               4083		.byte	37
000004e0 66626c4377436f6e 4084		.strz	"fblCwConfirmationHandler"
000004e8 6669726d6174696f
000004f0 6e48616e646c6572
000004f8 00              
000004f9 44               4085		.byte	68
000004fa 1d               4086		.byte	29
000004fb 24               4087		.byte	36
000004fc 00000000         4088		.long	.LDW_5deaab8
00000500 0223             4089		.byte	2,35
00000502 10               4090		.byte	16
00000503 01               4091		.byte	1
                          4092	
                          4093	.LDW_5de9d60:
00000504 25               4094		.byte	37
00000505 636f6e6e65637469 4095		.strz	"connectionIndex"
0000050d 6f6e496e64657800
00000515 45               4096		.byte	69
00000516 0a               4097		.byte	10
00000517 24               4098		.byte	36
00000518 00000000         4099		.long	.LDW_499b870
0000051c 0223             4100		.byte	2,35
0000051e 14               4101		.byte	20
0000051f 01               4102		.byte	1
                          4103	
00000520 00               4104		.byte	0
                          4105	
                          4106	.LDW_5deaa60:
00000521 2a               4107		.byte	42
00000522 7446626c43616e54 4108		.strz	"tFblCanTxIdList"
0000052a 7849644c69737400
00000532 46               4109		.byte	70
00000533 03               4110		.byte	3
00000534 24               4111		.byte	36
00000535 00000000         4112		.long	.LDW_5dea748
                          4113	
                          4114	.LDW_499b818:
00000539 2a               4115		.byte	42
0000053a 7043686970446174 4116		.strz	"pChipDataPtr"
00000542 6150747200      
00000547 df02             4117		.byte	223,2
00000549 1a               4118		.byte	26
0000054a 25               4119		.byte	37
0000054b 00000000         4120		.long	.LDW_495ca08
                          4121	
                          4122	.LDW_5dea380:
0000054f 42               4123		.byte	66
00000550 74616746626c4361 4124		.strz	"tagFblCanIdTable"
00000558 6e49645461626c65
00000560 00              
00000561 e402             4125		.byte	228,2
00000563 10               4126		.byte	16
00000564 25               4127		.byte	37
00000565 14               4128		.byte	20
00000566 01               4129		.byte	1
                          4130	
                          4131	.LDW_5de9b20:

                                   Fri Apr 10 08:32:01 2020           Page 75
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000567 25               4132		.byte	37
00000568 43616e4374726c30 4133		.strz	"CanCtrl01"
00000570 3100            
00000572 e602             4134		.byte	230,2
00000574 0c               4135		.byte	12
00000575 25               4136		.byte	37
00000576 00000000         4137		.long	.LDW_5bc5658
0000057a 0223             4138		.byte	2,35
0000057c 00               4139		.byte	0
0000057d 01               4140		.byte	1
                          4141	
                          4142	.LDW_5de9a90:
0000057e 25               4143		.byte	37
0000057f 43616e4374726c50 4144		.strz	"CanCtrlPr2"
00000587 723200          
0000058a e702             4145		.byte	231,2
0000058c 0c               4146		.byte	12
0000058d 25               4147		.byte	37
0000058e 00000000         4148		.long	.LDW_5bc5658
00000592 0223             4149		.byte	2,35
00000594 02               4150		.byte	2
00000595 01               4151		.byte	1
                          4152	
                          4153	.LDW_5de9c40:
00000596 25               4154		.byte	37
00000597 43616e5278496400 4155		.strz	"CanRxId"
0000059f ea02             4156		.byte	234,2
000005a1 0c               4157		.byte	12
000005a2 25               4158		.byte	37
000005a3 00000000         4159		.long	.LDW_5c5ef00
000005a7 0223             4160		.byte	2,35
000005a9 04               4161		.byte	4
000005aa 01               4162		.byte	1
                          4163	
                          4164	.LDW_5deb428:
000005ab 25               4165		.byte	37
000005ac 43616e52784d6173 4166		.strz	"CanRxMask"
000005b4 6b00            
000005b6 eb02             4167		.byte	235,2
000005b8 0c               4168		.byte	12
000005b9 25               4169		.byte	37
000005ba 00000000         4170		.long	.LDW_5c5ef88
000005be 0223             4171		.byte	2,35
000005c0 0c               4172		.byte	12
000005c1 01               4173		.byte	1
                          4174	
000005c2 00               4175		.byte	0
                          4176	
                          4177	.LDW_5dea488:
000005c3 2a               4178		.byte	42
000005c4 7446626c43616e49 4179		.strz	"tFblCanIdTable"
000005cc 645461626c6500  
000005d3 ed02             4180		.byte	237,2
000005d5 03               4181		.byte	3
000005d6 25               4182		.byte	37
000005d7 00000000         4183		.long	.LDW_5dea380
                          4184	
                          4185	.LDW_5dea0c0:
000005db 42               4186		.byte	66
000005dc 746167496e746572 4187		.strz	"tagInternalMsgObject"
000005e4 6e616c4d73674f62
000005ec 6a65637400      

                                   Fri Apr 10 08:32:01 2020           Page 76
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000005f1 f002             4188		.byte	240,2
000005f3 10               4189		.byte	16
000005f4 25               4190		.byte	37
000005f5 10               4191		.byte	16
000005f6 01               4192		.byte	1
                          4193	
                          4194	.LDW_5deb500:
000005f7 25               4195		.byte	37
000005f8 636f6e74726f6c00 4196		.strz	"control"
00000600 f702             4197		.byte	247,2
00000602 0d               4198		.byte	13
00000603 25               4199		.byte	37
00000604 00000000         4200		.long	.LDW_5bc5658
00000608 0223             4201		.byte	2,35
0000060a 00               4202		.byte	0
0000060b 01               4203		.byte	1
                          4204	
                          4205	.LDW_5deb350:
0000060c 25               4206		.byte	37
0000060d 74696d657374616d 4207		.strz	"timestamp"
00000615 7000            
00000617 f802             4208		.byte	248,2
00000619 0d               4209		.byte	13
0000061a 25               4210		.byte	37
0000061b 00000000         4211		.long	.LDW_5bc5658
0000061f 0223             4212		.byte	2,35
00000621 02               4213		.byte	2
00000622 01               4214		.byte	1
                          4215	
                          4216	.LDW_5deb1e8:
00000623 25               4217		.byte	37
00000624 6d7367494400     4218		.strz	"msgID"
0000062a fa02             4219		.byte	250,2
0000062c 0d               4220		.byte	13
0000062d 25               4221		.byte	37
0000062e 00000000         4222		.long	.LDW_499b870
00000632 0223             4223		.byte	2,35
00000634 04               4224		.byte	4
00000635 01               4225		.byte	1
                          4226	
                          4227	.LDW_5deb110:
00000636 25               4228		.byte	37
00000637 44617461466c6400 4229		.strz	"DataFld"
0000063f fb02             4230		.byte	251,2
00000641 0d               4231		.byte	13
00000642 25               4232		.byte	37
00000643 00000000         4233		.long	.LDW_5c5f010
00000647 0223             4234		.byte	2,35
00000649 08               4235		.byte	8
0000064a 01               4236		.byte	1
                          4237	
0000064b 00               4238		.byte	0
                          4239	
                          4240	.LDW_5dea900:
0000064c 2a               4241		.byte	42
0000064d 74496e7465726e61 4242		.strz	"tInternalMsgObject"
00000655 6c4d73674f626a65
0000065d 637400          
00000660 fc02             4243		.byte	252,2

                                   Fri Apr 10 08:32:01 2020           Page 77
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000662 03               4244		.byte	3
00000663 25               4245		.byte	37
00000664 00000000         4246		.long	.LDW_5dea0c0
                          4247	
                          4248	.LDW_5dea590:
00000668 42               4249		.byte	66
00000669 7461674d73674f62 4250		.strz	"tagMsgObject"
00000671 6a65637400      
00000676 ff02             4251		.byte	255,2
00000678 19               4252		.byte	25
00000679 25               4253		.byte	37
0000067a 14               4254		.byte	20
0000067b 01               4255		.byte	1
                          4256	
                          4257	.LDW_5deb590:
0000067c 25               4258		.byte	37
0000067d 6d73674f626a6563 4259		.strz	"msgObject"
00000685 7400            
00000687 8103             4260		.byte	129,3
00000689 17               4261		.byte	23
0000068a 25               4262		.byte	37
0000068b 00000000         4263		.long	.LDW_5dea900
0000068f 0223             4264		.byte	2,35
00000691 00               4265		.byte	0
00000692 01               4266		.byte	1
                          4267	
                          4268	.LDW_5deb818:
00000693 25               4269		.byte	37
00000694 436f6e6669726d61 4270		.strz	"ConfirmationFct"
0000069c 74696f6e46637400
000006a4 8203             4271		.byte	130,3
000006a6 0b               4272		.byte	11
000006a7 25               4273		.byte	37
000006a8 00000000         4274		.long	.LDW_5d79560
000006ac 0223             4275		.byte	2,35
000006ae 10               4276		.byte	16
000006af 01               4277		.byte	1
                          4278	
000006b0 00               4279		.byte	0
                          4280	
                          4281	.LDW_5dea118:
000006b1 2a               4282		.byte	42
000006b2 744d73674f626a65 4283		.strz	"tMsgObject"
000006ba 637400          
000006bd 8303             4284		.byte	131,3
000006bf 03               4285		.byte	3
000006c0 25               4286		.byte	37
000006c1 00000000         4287		.long	.LDW_5dea640
                          4288	
                          4289	.LDW_5dea3d8:
000006c5 42               4290		.byte	66
000006c6 746167466c657843 4291		.strz	"tagFlexCAN3"
000006ce 414e3300        
000006d2 9303             4292		.byte	147,3
000006d4 10               4293		.byte	16
000006d5 25               4294		.byte	37
000006d6 8003             4295		.byte	128,3
000006d8 01               4296		.byte	1
                          4297	
                          4298	.LDW_5deb3e0:
000006d9 25               4299		.byte	37

                                   Fri Apr 10 08:32:01 2020           Page 78
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000006da 63616e6d637200   4300		.strz	"canmcr"
000006e1 9e03             4301		.byte	158,3
000006e3 19               4302		.byte	25
000006e4 25               4303		.byte	37
000006e5 00000000         4304		.long	.LDW_5bc5658
000006e9 0223             4305		.byte	2,35
000006eb 00               4306		.byte	0
000006ec 01               4307		.byte	1
                          4308	
                          4309	.LDW_5deb860:
000006ed 25               4310		.byte	37
000006ee 63616e6d61786d62 4311		.strz	"canmaxmb"
000006f6 00              
000006f7 9f03             4312		.byte	159,3
000006f9 19               4313		.byte	25
000006fa 25               4314		.byte	37
000006fb 00000000         4315		.long	.LDW_5bc5658
000006ff 0223             4316		.byte	2,35
00000701 02               4317		.byte	2
00000702 01               4318		.byte	1
                          4319	
                          4320	.LDW_5deb8a8:
00000703 25               4321		.byte	37
00000704 636f6e74726f6c31 4322		.strz	"control1"
0000070c 00              
0000070d a003             4323		.byte	160,3
0000070f 19               4324		.byte	25
00000710 25               4325		.byte	37
00000711 00000000         4326		.long	.LDW_5bc5658
00000715 0223             4327		.byte	2,35
00000717 04               4328		.byte	4
00000718 01               4329		.byte	1
                          4330	
                          4331	.LDW_5deb0c8:
00000719 25               4332		.byte	37
0000071a 636f6e74726f6c30 4333		.strz	"control0"
00000722 00              
00000723 a103             4334		.byte	161,3
00000725 19               4335		.byte	25
00000726 25               4336		.byte	37
00000727 00000000         4337		.long	.LDW_5bc5658
0000072b 0223             4338		.byte	2,35
0000072d 06               4339		.byte	6
0000072e 01               4340		.byte	1
                          4341	
                          4342	.LDW_5deb230:
0000072f 25               4343		.byte	37
00000730 7273763000       4344		.strz	"rsv0"
00000735 a203             4345		.byte	162,3
00000737 19               4346		.byte	25
00000738 25               4347		.byte	37
00000739 00000000         4348		.long	.LDW_5bc5658
0000073d 0223             4349		.byte	2,35
0000073f 08               4350		.byte	8
00000740 01               4351		.byte	1
                          4352	
                          4353	.LDW_5deb278:
00000741 25               4354		.byte	37
00000742 74696d657200     4355		.strz	"timer"

                                   Fri Apr 10 08:32:01 2020           Page 79
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000748 a303             4356		.byte	163,3
0000074a 19               4357		.byte	25
0000074b 25               4358		.byte	37
0000074c 00000000         4359		.long	.LDW_5bc5658
00000750 0223             4360		.byte	2,35
00000752 0a               4361		.byte	10
00000753 01               4362		.byte	1
                          4363	
                          4364	.LDW_5deb8f0:
00000754 25               4365		.byte	37
00000755 7273763100       4366		.strz	"rsv1"
0000075a a503             4367		.byte	165,3
0000075c 19               4368		.byte	25
0000075d 25               4369		.byte	37
0000075e 00000000         4370		.long	.LDW_499b870
00000762 0223             4371		.byte	2,35
00000764 0c               4372		.byte	12
00000765 01               4373		.byte	1
                          4374	
                          4375	.LDW_5deb2c0:
00000766 25               4376		.byte	37
00000767 72786d676d61736b 4377		.strz	"rxmgmask"
0000076f 00              
00000770 a603             4378		.byte	166,3
00000772 19               4379		.byte	25
00000773 25               4380		.byte	37
00000774 00000000         4381		.long	.LDW_499b870
00000778 0223             4382		.byte	2,35
0000077a 10               4383		.byte	16
0000077b 01               4384		.byte	1
                          4385	
                          4386	.LDW_5deb4b8:
0000077c 25               4387		.byte	37
0000077d 727831346d61736b 4388		.strz	"rx14mask"
00000785 00              
00000786 a703             4389		.byte	167,3
00000788 19               4390		.byte	25
00000789 25               4391		.byte	37
0000078a 00000000         4392		.long	.LDW_499b870
0000078e 0223             4393		.byte	2,35
00000790 14               4394		.byte	20
00000791 01               4395		.byte	1
                          4396	
                          4397	.LDW_5deb548:
00000792 25               4398		.byte	37
00000793 727831356d61736b 4399		.strz	"rx15mask"
0000079b 00              
0000079c a803             4400		.byte	168,3
0000079e 19               4401		.byte	25
0000079f 25               4402		.byte	37
000007a0 00000000         4403		.long	.LDW_499b870
000007a4 0223             4404		.byte	2,35
000007a6 18               4405		.byte	24
000007a7 01               4406		.byte	1
                          4407	
                          4408	.LDW_5deb620:
000007a8 25               4409		.byte	37
000007a9 7273763200       4410		.strz	"rsv2"
000007ae af03             4411		.byte	175,3

                                   Fri Apr 10 08:32:01 2020           Page 80
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000007b0 19               4412		.byte	25
000007b1 25               4413		.byte	37
000007b2 00000000         4414		.long	.LDW_5bc5658
000007b6 0223             4415		.byte	2,35
000007b8 1c               4416		.byte	28
000007b9 01               4417		.byte	1
                          4418	
                          4419	.LDW_5deb6b0:
000007ba 25               4420		.byte	37
000007bb 72786563747200   4421		.strz	"rxectr"
000007c2 b003             4422		.byte	176,3
000007c4 19               4423		.byte	25
000007c5 25               4424		.byte	37
000007c6 00000000         4425		.long	.LDW_499b768
000007ca 0223             4426		.byte	2,35
000007cc 1e               4427		.byte	30
000007cd 01               4428		.byte	1
                          4429	
                          4430	.LDW_5deb938:
000007ce 25               4431		.byte	37
000007cf 74786563747200   4432		.strz	"txectr"
000007d6 b103             4433		.byte	177,3
000007d8 19               4434		.byte	25
000007d9 25               4435		.byte	37
000007da 00000000         4436		.long	.LDW_499b768
000007de 0223             4437		.byte	2,35
000007e0 1f               4438		.byte	31
000007e1 01               4439		.byte	1
                          4440	
                          4441	.LDW_5deb6f8:
000007e2 25               4442		.byte	37
000007e3 657374617400     4443		.strz	"estat"
000007e9 b303             4444		.byte	179,3
000007eb 19               4445		.byte	25
000007ec 25               4446		.byte	37
000007ed 00000000         4447		.long	.LDW_499b870
000007f1 0223             4448		.byte	2,35
000007f3 20               4449		.byte	32
000007f4 01               4450		.byte	1
                          4451	
                          4452	.LDW_5deb740:
000007f5 25               4453		.byte	37
000007f6 696d61736b5f6869 4454		.strz	"imask_hi"
000007fe 00              
000007ff b403             4455		.byte	180,3
00000801 19               4456		.byte	25
00000802 25               4457		.byte	37
00000803 00000000         4458		.long	.LDW_499b870
00000807 0223             4459		.byte	2,35
00000809 24               4460		.byte	36
0000080a 01               4461		.byte	1
                          4462	
                          4463	.LDW_5deb788:
0000080b 25               4464		.byte	37
0000080c 696d61736b5f6c6f 4465		.strz	"imask_lo"
00000814 00              
00000815 b503             4466		.byte	181,3
00000817 19               4467		.byte	25

                                   Fri Apr 10 08:32:01 2020           Page 81
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000818 25               4468		.byte	37
00000819 00000000         4469		.long	.LDW_499b870
0000081d 0223             4470		.byte	2,35
0000081f 28               4471		.byte	40
00000820 01               4472		.byte	1
                          4473	
                          4474	.LDW_5deb7d0:
00000821 25               4475		.byte	37
00000822 69666c61675f6869 4476		.strz	"iflag_hi"
0000082a 00              
0000082b b603             4477		.byte	182,3
0000082d 19               4478		.byte	25
0000082e 25               4479		.byte	37
0000082f 00000000         4480		.long	.LDW_499b870
00000833 0223             4481		.byte	2,35
00000835 2c               4482		.byte	44
00000836 01               4483		.byte	1
                          4484	
                          4485	.LDW_5debf20:
00000837 25               4486		.byte	37
00000838 69666c61675f6c6f 4487		.strz	"iflag_lo"
00000840 00              
00000841 b703             4488		.byte	183,3
00000843 19               4489		.byte	25
00000844 25               4490		.byte	37
00000845 00000000         4491		.long	.LDW_499b870
00000849 0223             4492		.byte	2,35
0000084b 30               4493		.byte	48
0000084c 01               4494		.byte	1
                          4495	
                          4496	.LDW_5debb30:
0000084d 25               4497		.byte	37
0000084e 6374726c3200     4498		.strz	"ctrl2"
00000854 b803             4499		.byte	184,3
00000856 19               4500		.byte	25
00000857 25               4501		.byte	37
00000858 00000000         4502		.long	.LDW_499b870
0000085c 0223             4503		.byte	2,35
0000085e 34               4504		.byte	52
0000085f 01               4505		.byte	1
                          4506	
                          4507	.LDW_5debc98:
00000860 25               4508		.byte	37
00000861 6573723200       4509		.strz	"esr2"
00000866 b903             4510		.byte	185,3
00000868 19               4511		.byte	25
00000869 25               4512		.byte	37
0000086a 00000000         4513		.long	.LDW_499b870
0000086e 0223             4514		.byte	2,35
00000870 38               4515		.byte	56
00000871 01               4516		.byte	1
                          4517	
                          4518	.LDW_5deb9c8:
00000872 25               4519		.byte	37
00000873 7273763400       4520		.strz	"rsv4"
00000878 ba03             4521		.byte	186,3
0000087a 19               4522		.byte	25
0000087b 25               4523		.byte	37

                                   Fri Apr 10 08:32:01 2020           Page 82
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000087c 00000000         4524		.long	.LDW_5decf20
00000880 0223             4525		.byte	2,35
00000882 3c               4526		.byte	60
00000883 01               4527		.byte	1
                          4528	
                          4529	.LDW_5debfb0:
00000884 25               4530		.byte	37
00000885 6372637200       4531		.strz	"crcr"
0000088a bb03             4532		.byte	187,3
0000088c 19               4533		.byte	25
0000088d 25               4534		.byte	37
0000088e 00000000         4535		.long	.LDW_499b870
00000892 0223             4536		.byte	2,35
00000894 44               4537		.byte	68
00000895 01               4538		.byte	1
                          4539	
                          4540	.LDW_5dec040:
00000896 25               4541		.byte	37
00000897 727866676d61736b 4542		.strz	"rxfgmask"
0000089f 00              
000008a0 bc03             4543		.byte	188,3
000008a2 19               4544		.byte	25
000008a3 25               4545		.byte	37
000008a4 00000000         4546		.long	.LDW_499b870
000008a8 0223             4547		.byte	2,35
000008aa 48               4548		.byte	72
000008ab 01               4549		.byte	1
                          4550	
                          4551	.LDW_5debed8:
000008ac 25               4552		.byte	37
000008ad 727866697200     4553		.strz	"rxfir"
000008b3 bd03             4554		.byte	189,3
000008b5 19               4555		.byte	25
000008b6 25               4556		.byte	37
000008b7 00000000         4557		.long	.LDW_499b870
000008bb 0223             4558		.byte	2,35
000008bd 4c               4559		.byte	76
000008be 01               4560		.byte	1
                          4561	
                          4562	.LDW_5debf68:
000008bf 25               4563		.byte	37
000008c0 7273763500       4564		.strz	"rsv5"
000008c5 be03             4565		.byte	190,3
000008c7 19               4566		.byte	25
000008c8 25               4567		.byte	37
000008c9 00000000         4568		.long	.LDW_5dec480
000008cd 0223             4569		.byte	2,35
000008cf 50               4570		.byte	80
000008d0 01               4571		.byte	1
                          4572	
                          4573	.LDW_5debce0:
000008d1 25               4574		.byte	37
000008d2 63616e4f626a6563 4575		.strz	"canObject"
000008da 7400            
000008dc bf03             4576		.byte	191,3
000008de 19               4577		.byte	25
000008df 25               4578		.byte	37
000008e0 00000000         4579		.long	.LDW_5decfa8

                                   Fri Apr 10 08:32:01 2020           Page 83
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000008e4 0323             4580		.byte	3,35
000008e6 8001             4581		.byte	128,1
000008e8 01               4582		.byte	1
                          4583	
000008e9 00               4584		.byte	0
                          4585	
                          4586	.LDW_5dea538:
000008ea 2a               4587		.byte	42
000008eb 74466c657843414e 4588		.strz	"tFlexCAN3"
000008f3 3300            
000008f5 c003             4589		.byte	192,3
000008f7 03               4590		.byte	3
000008f8 25               4591		.byte	37
000008f9 00000000         4592		.long	.LDW_5dea3d8
                          4593	
                          4594	.LDW_5bc5918:
000008fd 2a               4595		.byte	42
000008fe 7454704461746154 4596		.strz	"tTpDataType"
00000906 79706500        
0000090a 59               4597		.byte	89
0000090b 11               4598		.byte	17
0000090c 27               4599		.byte	39
0000090d 00000000         4600		.long	.LDW_5bc5658
                          4601	
                          4602	.LDW_5bc5810:
00000911 2a               4603		.byte	42
00000912 744377446174614c 4604		.strz	"tCwDataLengthType"
0000091a 656e677468547970
00000922 6500            
00000924 c001             4605		.byte	192,1
00000926 15               4606		.byte	21
00000927 23               4607		.byte	35
00000928 00000000         4608		.long	.LDW_5bc5918
                          4609	
                          4610	.LDW_5d7bc98:
0000092c 07               4611		.byte	7
0000092d 66626c43616e4964 4612		.strz	"fblCanIdRxConfiguration"
00000935 5278436f6e666967
0000093d 75726174696f6e00
00000945 5e               4613		.byte	94
00000946 37               4614		.byte	55
00000947 24               4615		.byte	36
00000948 00000000         4616		.long	.LDW_5decb68
0000094c 01               4617		.byte	1
0000094d 01               4618		.byte	1
                          4619	
                          4620		.section	.debug_abbrev
0000009b 07               4621		.byte	7
0000009c 34               4622		.byte	52
0000009d 00               4623		.byte	0
0000009e 0308             4624		.byte	3,8
000000a0 3b0f             4625		.byte	59,15
000000a2 390f             4626		.byte	57,15
000000a4 3a0f             4627		.byte	58,15
000000a6 4910             4628		.byte	73,16
000000a8 3f0c             4629		.byte	63,12
000000aa 3c0c             4630		.byte	60,12
000000ac 0000             4631		.byte	0,0
                          4632	
                          4633		.section	.debug_info
                          4634	.LDW_5d7bf00:
0000094e 07               4635		.byte	7

                                   Fri Apr 10 08:32:01 2020           Page 84
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000094f 66626c43616e4964 4636		.strz	"fblCanIdTxConfiguration"
00000957 5478436f6e666967
0000095f 75726174696f6e00
00000967 5f               4637		.byte	95
00000968 37               4638		.byte	55
00000969 24               4639		.byte	36
0000096a 00000000         4640		.long	.LDW_5dec260
0000096e 01               4641		.byte	1
0000096f 01               4642		.byte	1
                          4643	
                          4644	.LDW_5d7bd48:
00000970 07               4645		.byte	7
00000971 6b46626c43616e49 4646		.strz	"kFblCanIdTable"
00000979 645461626c6500  
00000980 8504             4647		.byte	133,4
00000982 35               4648		.byte	53
00000983 25               4649		.byte	37
00000984 00000000         4650		.long	.LDW_5d7bcf0
00000988 01               4651		.byte	1
00000989 01               4652		.byte	1
                          4653	
                          4654	.LDW_5d7c3d0:
0000098a 07               4655		.byte	7
0000098b 43616e5278416374 4656		.strz	"CanRxActualDLC"
00000993 75616c444c4300  
0000099a 8804             4657		.byte	136,4
0000099c 2e               4658		.byte	46
0000099d 25               4659		.byte	37
0000099e 00000000         4660		.long	.LDW_499b870
000009a2 01               4661		.byte	1
000009a3 01               4662		.byte	1
                          4663	
                          4664	.LDW_5d7c110:
000009a4 07               4665		.byte	7
000009a5 6762547052784c65 4666		.strz	"gbTpRxLength"
000009ad 6e67746800      
000009b2 df01             4667		.byte	223,1
000009b4 14               4668		.byte	20
000009b5 28               4669		.byte	40
000009b6 00000000         4670		.long	.LDW_5bc5918
000009ba 01               4671		.byte	1
000009bb 01               4672		.byte	1
                          4673	
                          4674	.LDW_5d7c588:
000009bc 07               4675		.byte	7
000009bd 625278426c6f636b 4676		.strz	"bRxBlockSize"
000009c5 53697a6500      
000009ca e201             4677		.byte	226,1
000009cc 24               4678		.byte	36
000009cd 28               4679		.byte	40
000009ce 00000000         4680		.long	.LDW_499b7c0
000009d2 01               4681		.byte	1
000009d3 01               4682		.byte	1
                          4683	
                          4684	.LDW_5d7c428:
000009d4 07               4685		.byte	7
000009d5 6252784253436f75 4686		.strz	"bRxBSCounter"
000009dd 6e74657200      
000009e2 e401             4687		.byte	228,1
000009e4 24               4688		.byte	36
000009e5 28               4689		.byte	40
000009e6 00000000         4690		.long	.LDW_499b7c0
000009ea 01               4691		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 85
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000009eb 01               4692		.byte	1
                          4693	
                          4694	.LDW_5d7bf58:
000009ec 07               4695		.byte	7
000009ed 62527853546d696e 4696		.strz	"bRxSTmin"
000009f5 00              
000009f6 e601             4697		.byte	230,1
000009f8 0f               4698		.byte	15
000009f9 28               4699		.byte	40
000009fa 00000000         4700		.long	.LDW_499b768
000009fe 01               4701		.byte	1
000009ff 01               4702		.byte	1
                          4703	
                          4704	.LDW_5d7c848:
00000a00 07               4705		.byte	7
00000a01 4469616742756666 4706		.strz	"DiagBuffer"
00000a09 657200          
00000a0c e303             4707		.byte	227,3
00000a0e 5e               4708		.byte	94
00000a0f 2d               4709		.byte	45
00000a10 00000000         4710		.long	.LDW_495c688
00000a14 01               4711		.byte	1
00000a15 01               4712		.byte	1
                          4713	
                          4714	.LDW_5d7d5e8:
00000a16 06               4715		.byte	6
00000a17 66626c4377496e69 4716		.strz	"fblCwInitFlag"
00000a1f 74466c616700    
00000a25 8001             4717		.byte	128,1
00000a27 26               4718		.byte	38
00000a28 01               4719		.byte	1
00000a29 00000000         4720		.long	.LDW_499b768
00000a2d 01               4721		.byte	1
00000a2e 00               4722		.byte	0
00000a2f 0503             4723		.byte	5,3
00000a31 00000000         4724		.long	fblCwInitFlag
                          4725	
                          4726		.section	.debug_abbrev
000000ae 06               4727		.byte	6
000000af 34               4728		.byte	52
000000b0 00               4729		.byte	0
000000b1 0308             4730		.byte	3,8
000000b3 3b0f             4731		.byte	59,15
000000b5 390f             4732		.byte	57,15
000000b7 3a0f             4733		.byte	58,15
000000b9 4910             4734		.byte	73,16
000000bb 3f0c             4735		.byte	63,12
000000bd 3c0c             4736		.byte	60,12
000000bf 020a             4737		.byte	2,10
000000c1 0000             4738		.byte	0,0
                          4739	
                          4740		.section	.debug_info
                          4741	.LDW_5d7d380:
00000a35 06               4742		.byte	6
00000a36 66626c43616e4964 4743		.strz	"fblCanIdTable"
00000a3e 5461626c6500    
00000a44 8601             4744		.byte	134,1
00000a46 2e               4745		.byte	46
00000a47 01               4746		.byte	1
00000a48 00000000         4747		.long	.LDW_5dea488

                                   Fri Apr 10 08:32:01 2020           Page 86
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000a4c 01               4748		.byte	1
00000a4d 00               4749		.byte	0
00000a4e 0503             4750		.byte	5,3
00000a50 00000000         4751		.long	fblCanIdTable
                          4752	
                          4753	.LDW_5d7d0c0:
00000a54 06               4754		.byte	6
00000a55 66626c43616e5478 4755		.strz	"fblCanTxObj"
00000a5d 4f626a00        
00000a61 8801             4756		.byte	136,1
00000a63 34               4757		.byte	52
00000a64 01               4758		.byte	1
00000a65 00000000         4759		.long	.LDW_5dec8c0
00000a69 01               4760		.byte	1
00000a6a 00               4761		.byte	0
00000a6b 0503             4762		.byte	5,3
00000a6d 00000000         4763		.long	fblCanTxObj
                          4764	
                          4765	.LDW_5d7ce00:
00000a71 06               4766		.byte	6
00000a72 66626c4377446961 4767		.strz	"fblCwDiagTransmitObject"
00000a7a 675472616e736d69
00000a82 744f626a65637400
00000a8a 8a01             4768		.byte	138,1
00000a8c 26               4769		.byte	38
00000a8d 01               4770		.byte	1
00000a8e 00000000         4771		.long	.LDW_499b870
00000a92 01               4772		.byte	1
00000a93 00               4773		.byte	0
00000a94 0503             4774		.byte	5,3
00000a96 00000000         4775		.long	fblCwDiagTransmitObject
                          4776	
                          4777	.LDW_5d7d170:
00000a9a 06               4778		.byte	6
00000a9b 6377547853746174 4779		.strz	"cwTxState"
00000aa3 6500            
00000aa5 9601             4780		.byte	150,1
00000aa7 2e               4781		.byte	46
00000aa8 01               4782		.byte	1
00000aa9 00000000         4783		.long	.LDW_499b768
00000aad 00               4784		.byte	0
00000aae 00               4785		.byte	0
00000aaf 0503             4786		.byte	5,3
00000ab1 00000000         4787		.long	cwTxState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                          4788	
                          4789	.LDW_5d7cd50:
00000ab5 06               4790		.byte	6
00000ab6 6377547854696d65 4791		.strz	"cwTxTimer"
00000abe 7200            
00000ac0 9701             4792		.byte	151,1
00000ac2 2e               4793		.byte	46
00000ac3 01               4794		.byte	1
00000ac4 00000000         4795		.long	.LDW_5bc5658
00000ac8 00               4796		.byte	0
00000ac9 00               4797		.byte	0
00000aca 0503             4798		.byte	5,3
00000acc 00000000         4799		.long	cwTxTimer..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                          4800	
                          4801	.LDW_5d7cda8:
00000ad0 06               4802		.byte	6
00000ad1 6377547850656e64 4803		.strz	"cwTxPendingLength"
00000ad9 696e674c656e6774
00000ae1 6800            

                                   Fri Apr 10 08:32:01 2020           Page 87
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000ae3 9801             4804		.byte	152,1
00000ae5 38               4805		.byte	56
00000ae6 01               4806		.byte	1
00000ae7 00000000         4807		.long	.LDW_5bc5810
00000aeb 00               4808		.byte	0
00000aec 00               4809		.byte	0
00000aed 0503             4810		.byte	5,3
00000aef 00000000         4811		.long	cwTxPendingLength..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                          4812	
                          4813	.LDW_5d7d748:
00000af3 06               4814		.byte	6
00000af4 637743616e52784d 4815		.strz	"cwCanRxMsgState"
00000afc 7367537461746500
00000b04 9901             4816		.byte	153,1
00000b06 2e               4817		.byte	46
00000b07 01               4818		.byte	1
00000b08 00000000         4819		.long	.LDW_499b768
00000b0c 00               4820		.byte	0
00000b0d 00               4821		.byte	0
00000b0e 0503             4822		.byte	5,3
00000b10 00000000         4823		.long	cwCanRxMsgState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                          4824	
                          4825	.LDW_5d7d2d0:
00000b14 06               4826		.byte	6
00000b15 63775461736b5374 4827		.strz	"cwTaskState"
00000b1d 61746500        
00000b21 9c01             4828		.byte	156,1
00000b23 2e               4829		.byte	46
00000b24 01               4830		.byte	1
00000b25 00000000         4831		.long	.LDW_499b768
00000b29 00               4832		.byte	0
00000b2a 00               4833		.byte	0
00000b2b 0503             4834		.byte	5,3
00000b2d 00000000         4835		.long	cwTaskState..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
                          4836	
                          4837	.LDW_5df18e0:
00000b31 18               4838		.byte	24
00000b32 46626c4c6f6f6b46 4839		.strz	"FblLookForWatchdog"
00000b3a 6f72576174636864
00000b42 6f6700          
00000b45 8e01             4840		.byte	142,1
00000b47 13               4841		.byte	19
00000b48 1b               4842		.byte	27
00000b49 00000000         4843		.long	.LDW_499b768
00000b4d 01               4844		.byte	1
00000b4e 00               4845		.byte	0
00000b4f 01               4846		.byte	1
00000b50 01               4847		.byte	1
00000b51 00               4848		.byte	0
00000b52 01               4849		.byte	1
                          4850	
                          4851		.section	.debug_abbrev
000000c3 18               4852		.byte	24
000000c4 2e               4853		.byte	46
000000c5 01               4854		.byte	1
000000c6 0308             4855		.byte	3,8
000000c8 3b0f             4856		.byte	59,15
000000ca 390f             4857		.byte	57,15
000000cc 3a0f             4858		.byte	58,15
000000ce 4910             4859		.byte	73,16

                                   Fri Apr 10 08:32:01 2020           Page 88
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000000d0 3c0c             4860		.byte	60,12
000000d2 200b             4861		.byte	32,11
000000d4 3f0c             4862		.byte	63,12
000000d6 320b             4863		.byte	50,11
000000d8 4c0b             4864		.byte	76,11
000000da 270c             4865		.byte	39,12
000000dc 0000             4866		.byte	0,0
                          4867	
                          4868		.section	.debug_info
00000b53 00               4869		.byte	0
                          4870	
                          4871	.LDW_5df0b38:
00000b54 17               4872		.byte	23
00000b55 46626c43616e496e 4873		.strz	"FblCanInit"
00000b5d 697400          
00000b60 d503             4874		.byte	213,3
00000b62 09               4875		.byte	9
00000b63 25               4876		.byte	37
00000b64 01               4877		.byte	1
00000b65 00               4878		.byte	0
00000b66 01               4879		.byte	1
00000b67 01               4880		.byte	1
00000b68 00               4881		.byte	0
00000b69 01               4882		.byte	1
                          4883	
                          4884		.section	.debug_abbrev
000000de 17               4885		.byte	23
000000df 2e               4886		.byte	46
000000e0 01               4887		.byte	1
000000e1 0308             4888		.byte	3,8
000000e3 3b0f             4889		.byte	59,15
000000e5 390f             4890		.byte	57,15
000000e7 3a0f             4891		.byte	58,15
000000e9 3c0c             4892		.byte	60,12
000000eb 200b             4893		.byte	32,11
000000ed 3f0c             4894		.byte	63,12
000000ef 320b             4895		.byte	50,11
000000f1 4c0b             4896		.byte	76,11
000000f3 270c             4897		.byte	39,12
000000f5 0000             4898		.byte	0,0
                          4899	
                          4900		.section	.debug_info
00000b6a 00               4901		.byte	0
                          4902	
                          4903	.LDW_5df0840:
00000b6b 17               4904		.byte	23
00000b6c 46626c43616e5072 4905		.strz	"FblCanProcessRxMsg"
00000b74 6f6365737352784d
00000b7c 736700          
00000b7f d903             4906		.byte	217,3
00000b81 09               4907		.byte	9
00000b82 25               4908		.byte	37
00000b83 01               4909		.byte	1
00000b84 00               4910		.byte	0
00000b85 01               4911		.byte	1
00000b86 01               4912		.byte	1
00000b87 00               4913		.byte	0
00000b88 01               4914		.byte	1
                          4915	

                                   Fri Apr 10 08:32:01 2020           Page 89
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000b89 00               4916		.byte	0
                          4917	
                          4918	.LDW_5df0120:
00000b8a 17               4919		.byte	23
00000b8b 46626c43616e4572 4920		.strz	"FblCanErrorTask"
00000b93 726f725461736b00
00000b9b dd03             4921		.byte	221,3
00000b9d 09               4922		.byte	9
00000b9e 25               4923		.byte	37
00000b9f 01               4924		.byte	1
00000ba0 00               4925		.byte	0
00000ba1 01               4926		.byte	1
00000ba2 01               4927		.byte	1
00000ba3 00               4928		.byte	0
00000ba4 01               4929		.byte	1
                          4930	
00000ba5 00               4931		.byte	0
                          4932	
                          4933	.LDW_5df0bd0:
00000ba6 18               4934		.byte	24
00000ba7 46626c43616e4d73 4935		.strz	"FblCanMsgTransmitted"
00000baf 675472616e736d69
00000bb7 7474656400      
00000bbc e103             4936		.byte	225,3
00000bbe 09               4937		.byte	9
00000bbf 25               4938		.byte	37
00000bc0 00000000         4939		.long	.LDW_499b768
00000bc4 01               4940		.byte	1
00000bc5 00               4941		.byte	0
00000bc6 01               4942		.byte	1
00000bc7 01               4943		.byte	1
00000bc8 00               4944		.byte	0
00000bc9 01               4945		.byte	1
                          4946	
00000bca 00               4947		.byte	0
                          4948	
                          4949	.LDW_5df02e8:
00000bcb 17               4950		.byte	23
00000bcc 46626c5470496e69 4951		.strz	"FblTpInitPowerOn"
00000bd4 74506f7765724f6e
00000bdc 00              
00000bdd b401             4952		.byte	180,1
00000bdf 06               4953		.byte	6
00000be0 28               4954		.byte	40
00000be1 01               4955		.byte	1
00000be2 00               4956		.byte	0
00000be3 01               4957		.byte	1
00000be4 01               4958		.byte	1
00000be5 00               4959		.byte	0
00000be6 01               4960		.byte	1
                          4961	
00000be7 00               4962		.byte	0
                          4963	
                          4964	.LDW_5df0380:
00000be8 18               4965		.byte	24
00000be9 46626c5470547261 4966		.strz	"FblTpTransmit"
00000bf1 6e736d697400    
00000bf7 b501             4967		.byte	181,1
00000bf9 08               4968		.byte	8
00000bfa 28               4969		.byte	40
00000bfb 00000000         4970		.long	.LDW_499b768
00000bff 01               4971		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 90
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000c00 00               4972		.byte	0
00000c01 01               4973		.byte	1
00000c02 01               4974		.byte	1
00000c03 00               4975		.byte	0
00000c04 01               4976		.byte	1
                          4977	
00000c05 00               4978		.byte	0
                          4979	
                          4980	.LDW_5df08d8:
00000c06 18               4981		.byte	24
00000c07 46626c5470507265 4982		.strz	"FblTpPrecopy"
00000c0f 636f707900      
00000c14 b701             4983		.byte	183,1
00000c16 08               4984		.byte	8
00000c17 28               4985		.byte	40
00000c18 00000000         4986		.long	.LDW_499b768
00000c1c 01               4987		.byte	1
00000c1d 00               4988		.byte	0
00000c1e 01               4989		.byte	1
00000c1f 01               4990		.byte	1
00000c20 00               4991		.byte	0
00000c21 01               4992		.byte	1
                          4993	
00000c22 00               4994		.byte	0
                          4995	
                          4996	.LDW_5df0e30:
00000c23 18               4997		.byte	24
00000c24 46626c5470547261 4998		.strz	"FblTpTransmitSF"
00000c2c 6e736d6974534600
00000c34 b901             4999		.byte	185,1
00000c36 08               5000		.byte	8
00000c37 28               5001		.byte	40
00000c38 00000000         5002		.long	.LDW_499b768
00000c3c 01               5003		.byte	1
00000c3d 00               5004		.byte	0
00000c3e 01               5005		.byte	1
00000c3f 01               5006		.byte	1
00000c40 00               5007		.byte	0
00000c41 01               5008		.byte	1
                          5009	
00000c42 00               5010		.byte	0
                          5011	
                          5012	.LDW_5df0ec8:
00000c43 17               5013		.byte	23
00000c44 46626c5470546173 5014		.strz	"FblTpTask"
00000c4c 6b00            
00000c4e ba01             5015		.byte	186,1
00000c50 06               5016		.byte	6
00000c51 28               5017		.byte	40
00000c52 01               5018		.byte	1
00000c53 00               5019		.byte	0
00000c54 01               5020		.byte	1
00000c55 01               5021		.byte	1
00000c56 00               5022		.byte	0
00000c57 01               5023		.byte	1
                          5024	
00000c58 00               5025		.byte	0
                          5026	
                          5027	.LDW_5df0f60:

                                   Fri Apr 10 08:32:01 2020           Page 91
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000c59 17               5028		.byte	23
00000c5a 46626c5470526573 5029		.strz	"FblTpResetRxBlock"
00000c62 65745278426c6f63
00000c6a 6b00            
00000c6c bf01             5030		.byte	191,1
00000c6e 06               5031		.byte	6
00000c6f 28               5032		.byte	40
00000c70 01               5033		.byte	1
00000c71 00               5034		.byte	0
00000c72 01               5035		.byte	1
00000c73 01               5036		.byte	1
00000c74 00               5037		.byte	0
00000c75 01               5038		.byte	1
                          5039	
00000c76 00               5040		.byte	0
                          5041	
                          5042	.LDW_5defd90:
00000c77 17               5043		.byte	23
00000c78 46626c5470536574 5044		.strz	"FblTpSetRxBlock"
00000c80 5278426c6f636b00
00000c88 c001             5045		.byte	192,1
00000c8a 06               5046		.byte	6
00000c8b 28               5047		.byte	40
00000c8c 01               5048		.byte	1
00000c8d 00               5049		.byte	0
00000c8e 01               5050		.byte	1
00000c8f 01               5051		.byte	1
00000c90 00               5052		.byte	0
00000c91 01               5053		.byte	1
                          5054	
00000c92 00               5055		.byte	0
                          5056	
                          5057	.LDW_5df41d8:
00000c93 17               5058		.byte	23
00000c94 46626c4469616752 5059		.strz	"FblDiagRxStartIndication"
00000c9c 785374617274496e
00000ca4 6469636174696f6e
00000cac 00              
00000cad d303             5060		.byte	211,3
00000caf 0d               5061		.byte	13
00000cb0 2d               5062		.byte	45
00000cb1 01               5063		.byte	1
00000cb2 00               5064		.byte	0
00000cb3 01               5065		.byte	1
00000cb4 01               5066		.byte	1
00000cb5 00               5067		.byte	0
00000cb6 01               5068		.byte	1
                          5069	
00000cb7 00               5070		.byte	0
                          5071	
                          5072	.LDW_5df48f8:
00000cb8 17               5073		.byte	23
00000cb9 46626c4469616752 5074		.strz	"FblDiagRxIndication"
00000cc1 78496e6469636174
00000cc9 696f6e00        
00000ccd d403             5075		.byte	212,3
00000ccf 0d               5076		.byte	13
00000cd0 2d               5077		.byte	45
00000cd1 01               5078		.byte	1
00000cd2 00               5079		.byte	0
00000cd3 01               5080		.byte	1
00000cd4 01               5081		.byte	1
00000cd5 00               5082		.byte	0
00000cd6 01               5083		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 92
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          5084	
00000cd7 00               5085		.byte	0
                          5086	
                          5087	.LDW_5df4a28:
00000cd8 18               5088		.byte	24
00000cd9 46626c4469616752 5089		.strz	"FblDiagRxGetPhysBuffer"
00000ce1 7847657450687973
00000ce9 42756666657200  
00000cf0 d503             5090		.byte	213,3
00000cf2 0d               5091		.byte	13
00000cf3 2d               5092		.byte	45
00000cf4 00000000         5093		.long	.LDW_495c688
00000cf8 01               5094		.byte	1
00000cf9 00               5095		.byte	0
00000cfa 01               5096		.byte	1
00000cfb 01               5097		.byte	1
00000cfc 00               5098		.byte	0
00000cfd 01               5099		.byte	1
                          5100	
00000cfe 00               5101		.byte	0
                          5102	
                          5103	.LDW_5df47c8:
00000cff 18               5104		.byte	24
00000d00 46626c4469616752 5105		.strz	"FblDiagRxGetFuncBuffer"
00000d08 7847657446756e63
00000d10 42756666657200  
00000d17 d603             5106		.byte	214,3
00000d19 0d               5107		.byte	13
00000d1a 2d               5108		.byte	45
00000d1b 00000000         5109		.long	.LDW_495c688
00000d1f 01               5110		.byte	1
00000d20 00               5111		.byte	0
00000d21 01               5112		.byte	1
00000d22 01               5113		.byte	1
00000d23 00               5114		.byte	0
00000d24 01               5115		.byte	1
                          5116	
00000d25 00               5117		.byte	0
                          5118	
                          5119	.LDW_5df4b58:
00000d26 17               5120		.byte	23
00000d27 46626c4469616754 5121		.strz	"FblDiagTxConfirmation"
00000d2f 78436f6e6669726d
00000d37 6174696f6e00    
00000d3d d703             5122		.byte	215,3
00000d3f 0d               5123		.byte	13
00000d40 2d               5124		.byte	45
00000d41 01               5125		.byte	1
00000d42 00               5126		.byte	0
00000d43 01               5127		.byte	1
00000d44 01               5128		.byte	1
00000d45 00               5129		.byte	0
00000d46 01               5130		.byte	1
                          5131	
00000d47 00               5132		.byte	0
                          5133	
                          5134	.LDW_5df4270:
00000d48 17               5135		.byte	23
00000d49 46626c4469616754 5136		.strz	"FblDiagTxErrorIndication"
00000d51 784572726f72496e
00000d59 6469636174696f6e
00000d61 00              
00000d62 d803             5137		.byte	216,3
00000d64 0d               5138		.byte	13
00000d65 2d               5139		.byte	45

                                   Fri Apr 10 08:32:01 2020           Page 93
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000d66 01               5140		.byte	1
00000d67 00               5141		.byte	0
00000d68 01               5142		.byte	1
00000d69 01               5143		.byte	1
00000d6a 00               5144		.byte	0
00000d6b 01               5145		.byte	1
                          5146	
00000d6c 00               5147		.byte	0
                          5148	
                          5149	.LDW_5df4308:
00000d6d 17               5150		.byte	23
00000d6e 46626c4469616752 5151		.strz	"FblDiagRxErrorIndication"
00000d76 784572726f72496e
00000d7e 6469636174696f6e
00000d86 00              
00000d87 d903             5152		.byte	217,3
00000d89 0d               5153		.byte	13
00000d8a 2d               5154		.byte	45
00000d8b 01               5155		.byte	1
00000d8c 00               5156		.byte	0
00000d8d 01               5157		.byte	1
00000d8e 01               5158		.byte	1
00000d8f 00               5159		.byte	0
00000d90 01               5160		.byte	1
                          5161	
00000d91 00               5162		.byte	0
                          5163	
                          5164	.LDW_5df35f8:
00000d92 17               5165		.byte	23
00000d93 4170706c54726376 5166		.strz	"ApplTrcvrNormalMode"
00000d9b 724e6f726d616c4d
00000da3 6f646500        
00000da7 a402             5167		.byte	164,2
00000da9 06               5168		.byte	6
00000daa 31               5169		.byte	49
00000dab 01               5170		.byte	1
00000dac 00               5171		.byte	0
00000dad 01               5172		.byte	1
00000dae 01               5173		.byte	1
00000daf 00               5174		.byte	0
00000db0 01               5175		.byte	1
                          5176	
00000db1 00               5177		.byte	0
                          5178	
                          5179	.LDW_499b8c8:
00000db2 15               5180		.byte	21
00000db3 46626c437750726f 5181		.strz	"FblCwProcessPhysicalRequest"
00000dbb 6365737350687973
00000dc3 6963616c52657175
00000dcb 65737400        
00000dcf be01             5182		.byte	190,1
00000dd1 06               5183		.byte	6
00000dd2 01               5184		.byte	1
00000dd3 00000000         5185		.long	FblCwProcessPhysicalRequest
00000dd7 00000000         5186		.long	__ghs_eofn_FblCwProcessPhysicalRequest
00000ddb 0151             5187		.byte	1,81
00000ddd 03               5188		.byte	3
00000dde 00               5189		.byte	0
00000ddf 00               5190		.byte	0
00000de0 00               5191		.byte	0
00000de1 00               5192		.byte	0
00000de2 00               5193		.byte	0
00000de3 00               5194		.byte	0
00000de4 01               5195		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 94
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000de5 01               5196		.byte	1
00000de6 00               5197		.byte	0
00000de7 01               5198		.byte	1
                          5199	
                          5200		.section	.debug_abbrev
000000f7 15               5201		.byte	21
000000f8 2e               5202		.byte	46
000000f9 01               5203		.byte	1
000000fa 0308             5204		.byte	3,8
000000fc 3b0f             5205		.byte	59,15
000000fe 390f             5206		.byte	57,15
00000100 3a0f             5207		.byte	58,15
00000102 1101             5208		.byte	17,1
00000104 1201             5209		.byte	18,1
00000106 400a             5210		.byte	64,10
00000108 8341             5211		.byte	131,65
0000010a 0f               5212		.byte	15
0000010b 8741             5213		.byte	135,65
0000010d 0d               5214		.byte	13
0000010e 8541             5215		.byte	133,65
00000110 0f               5216		.byte	15
00000111 8641             5217		.byte	134,65
00000113 0d               5218		.byte	13
00000114 9241             5219		.byte	146,65
00000116 0f               5220		.byte	15
00000117 3c0c             5221		.byte	60,12
00000119 200b             5222		.byte	32,11
0000011b 3f0c             5223		.byte	63,12
0000011d 320b             5224		.byte	50,11
0000011f 4c0b             5225		.byte	76,11
00000121 270c             5226		.byte	39,12
00000123 0000             5227		.byte	0,0
                          5228	
                          5229		.section	.debug_frame
                          5230	.LDW_5d79d08:
00000090 00000014         5231		.long	.LDW_unq_4-.LDW_unq_3
                          5232	.LDW_unq_3:
00000094 00000000         5233		.long	.LDW_5de14b0
00000098 00000000         5234		.long	FblCwProcessPhysicalRequest
0000009c 0000001a         5235		.long	__ghs_eofn_FblCwProcessPhysicalRequest-FblCwProcessPhysicalRequest
000000a0 01               5236		.byte	1
000000a1 00000000         5237		.long	.LDW11
000000a5 00               5238		.byte	0
000000a6 00               5239		.byte	0
000000a7 00               5240		.byte	0
                          5241	.LDW_unq_4:
                          5242		.section	.debug_line
000005f9 000502           5243		.byte	0,5,2
000005fc 00000000         5244		.long	FblCwProcessPhysicalRequest
00000600 06               5245		.byte	6
00000601 03               5246		.byte	3
00000602 c401             5247		.byte	196,1
00000604 02               5248		.byte	2
00000605 00               5249		.byte	0
00000606 01               5250		.byte	1
00000607 000502           5251		.byte	0,5,2

                                   Fri Apr 10 08:32:01 2020           Page 95
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000060a 00000000         5252		.long	.LDWlin1
0000060e 0b               5253		.byte	11
0000060f 0b               5254		.byte	11
00000610 1b               5255		.byte	27
00000611 23               5256		.byte	35
00000612 02               5257		.byte	2
00000613 00               5258		.byte	0
00000614 0c               5259		.byte	12
00000615 02               5260		.byte	2
00000616 02               5261		.byte	2
00000617 000101           5262		.byte	0,1,1
                          5263		.section	.debug_info
                          5264	.LDW_499b960:
00000de8 11               5265		.byte	17
00000de9 66626c527843616e 5266		.strz	"fblRxCanMsgHdl"
00000df1 4d736748646c00  
00000df8 be01             5267		.byte	190,1
00000dfa 29               5268		.byte	41
00000dfb 01               5269		.byte	1
00000dfc 00000000         5270		.long	.LDW_499b768
00000e00 00               5271		.byte	0
00000e01 0153             5272		.byte	1,83
                          5273	
                          5274		.section	.debug_abbrev
00000125 11               5275		.byte	17
00000126 05               5276		.byte	5
00000127 00               5277		.byte	0
00000128 0308             5278		.byte	3,8
0000012a 3b0f             5279		.byte	59,15
0000012c 390f             5280		.byte	57,15
0000012e 3a0f             5281		.byte	58,15
00000130 4910             5282		.byte	73,16
00000132 4b0c             5283		.byte	75,12
00000134 020a             5284		.byte	2,10
00000136 0000             5285		.byte	0,0
                          5286	
                          5287		.section	.debug_info
                          5288	.LDW_499b9b8:
00000e03 11               5289		.byte	17
00000e04 63616e4461746150 5290		.strz	"canDataPtr"
00000e0c 747200          
00000e0f be01             5291		.byte	190,1
00000e11 46               5292		.byte	70
00000e12 01               5293		.byte	1
00000e13 00000000         5294		.long	.LDW_499b818
00000e17 00               5295		.byte	0
00000e18 0154             5296		.byte	1,84
                          5297	
                          5298	.LDW_499d6b8:
00000e1a 11               5299		.byte	17
00000e1b 636f6e6e65637469 5300		.strz	"connectionIndex"
00000e23 6f6e496e64657800
00000e2b be01             5301		.byte	190,1
00000e2d 59               5302		.byte	89
00000e2e 01               5303		.byte	1
00000e2f 00000000         5304		.long	.LDW_499b870
00000e33 00               5305		.byte	0
00000e34 0155             5306		.byte	1,85
                          5307	

                                   Fri Apr 10 08:32:01 2020           Page 96
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          5308	.LDW_4953628:
00000e36 1f               5309		.byte	31
00000e37 00000000         5310		.long	.LDW01
00000e3b 00000000         5311		.long	.LDW11
                          5312	
                          5313		.section	.debug_abbrev
00000138 1f               5314		.byte	31
00000139 0b               5315		.byte	11
0000013a 01               5316		.byte	1
0000013b 1101             5317		.byte	17,1
0000013d 1201             5318		.byte	18,1
0000013f 0000             5319		.byte	0,0
                          5320	
                          5321		.section	.debug_info
00000e3f 00               5322		.byte	0
                          5323	
00000e40 00               5324		.byte	0
                          5325	
                          5326	.LDW_499d710:
00000e41 15               5327		.byte	21
00000e42 46626c437750726f 5328		.strz	"FblCwProcessFunctionalRequest"
00000e4a 6365737346756e63
00000e52 74696f6e616c5265
00000e5a 717565737400    
00000e60 da01             5329		.byte	218,1
00000e62 06               5330		.byte	6
00000e63 01               5331		.byte	1
00000e64 00000000         5332		.long	FblCwProcessFunctionalRequest
00000e68 00000000         5333		.long	__ghs_eofn_FblCwProcessFunctionalRequest
00000e6c 0151             5334		.byte	1,81
00000e6e 03               5335		.byte	3
00000e6f 00               5336		.byte	0
00000e70 00               5337		.byte	0
00000e71 00               5338		.byte	0
00000e72 00               5339		.byte	0
00000e73 00               5340		.byte	0
00000e74 00               5341		.byte	0
00000e75 01               5342		.byte	1
00000e76 01               5343		.byte	1
00000e77 00               5344		.byte	0
00000e78 01               5345		.byte	1
                          5346	
                          5347		.section	.debug_frame
                          5348	.LDW_5d7a1c8:
000000a8 00000014         5349		.long	.LDW_unq_6-.LDW_unq_5
                          5350	.LDW_unq_5:
000000ac 00000000         5351		.long	.LDW_5de14b0
000000b0 00000000         5352		.long	FblCwProcessFunctionalRequest
000000b4 00000012         5353		.long	__ghs_eofn_FblCwProcessFunctionalRequest-FblCwProcessFunctionalRequest
000000b8 01               5354		.byte	1
000000b9 00000000         5355		.long	.LDW51
000000bd 00               5356		.byte	0
000000be 00               5357		.byte	0
000000bf 00               5358		.byte	0
                          5359	.LDW_unq_6:
                          5360		.section	.debug_line
0000061a 000502           5361		.byte	0,5,2
0000061d 00000000         5362		.long	FblCwProcessFunctionalRequest
00000621 06               5363		.byte	6

                                   Fri Apr 10 08:32:01 2020           Page 97
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000622 03               5364		.byte	3
00000623 e001             5365		.byte	224,1
00000625 02               5366		.byte	2
00000626 00               5367		.byte	0
00000627 01               5368		.byte	1
00000628 000502           5369		.byte	0,5,2
0000062b 00000000         5370		.long	.LDWlin5
0000062f 0b               5371		.byte	11
00000630 0c               5372		.byte	12
00000631 000502           5373		.byte	0,5,2
00000634 00000000         5374		.long	.LDWlin6
00000638 0b               5375		.byte	11
00000639 02               5376		.byte	2
0000063a 00               5377		.byte	0
0000063b 0b               5378		.byte	11
0000063c 02               5379		.byte	2
0000063d 02               5380		.byte	2
0000063e 000101           5381		.byte	0,1,1
                          5382		.section	.debug_info
                          5383	.LDW_499d7a8:
00000e79 11               5384		.byte	17
00000e7a 66626c527843616e 5385		.strz	"fblRxCanMsgHdl"
00000e82 4d736748646c00  
00000e89 da01             5386		.byte	218,1
00000e8b 2b               5387		.byte	43
00000e8c 01               5388		.byte	1
00000e8d 00000000         5389		.long	.LDW_499b768
00000e91 00               5390		.byte	0
00000e92 0153             5391		.byte	1,83
                          5392	
                          5393	.LDW_499d800:
00000e94 11               5394		.byte	17
00000e95 63616e4461746150 5395		.strz	"canDataPtr"
00000e9d 747200          
00000ea0 da01             5396		.byte	218,1
00000ea2 48               5397		.byte	72
00000ea3 01               5398		.byte	1
00000ea4 00000000         5399		.long	.LDW_499b818
00000ea8 00               5400		.byte	0
00000ea9 0154             5401		.byte	1,84
                          5402	
                          5403	.LDW_499d858:
00000eab 11               5404		.byte	17
00000eac 636f6e6e65637469 5405		.strz	"connectionIndex"
00000eb4 6f6e496e64657800
00000ebc da01             5406		.byte	218,1
00000ebe 5b               5407		.byte	91
00000ebf 01               5408		.byte	1
00000ec0 00000000         5409		.long	.LDW_499b870
00000ec4 00               5410		.byte	0
00000ec5 0155             5411		.byte	1,85
                          5412	
                          5413	.LDW_49535f8:
00000ec7 1f               5414		.byte	31
00000ec8 00000000         5415		.long	.LDW41
00000ecc 00000000         5416		.long	.LDW51
                          5417	
00000ed0 00               5418		.byte	0
                          5419	

                                   Fri Apr 10 08:32:01 2020           Page 98
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000ed1 00               5420		.byte	0
                          5421	
                          5422	.LDW_499d908:
00000ed2 15               5423		.byte	21
00000ed3 46626c4377547261 5424		.strz	"FblCwTransmitRP"
00000edb 6e736d6974525000
00000ee3 f601             5425		.byte	246,1
00000ee5 06               5426		.byte	6
00000ee6 01               5427		.byte	1
00000ee7 00000000         5428		.long	FblCwTransmitRP
00000eeb 00000000         5429		.long	__ghs_eofn_FblCwTransmitRP
00000eef 0151             5430		.byte	1,81
00000ef1 8080808008       5431		.byte	128,128,128,128,8
00000ef6 0c               5432		.byte	12
00000ef7 00               5433		.byte	0
00000ef8 10               5434		.byte	16
00000ef9 00               5435		.byte	0
00000efa 00               5436		.byte	0
00000efb 00               5437		.byte	0
00000efc 01               5438		.byte	1
00000efd 01               5439		.byte	1
00000efe 00               5440		.byte	0
00000eff 01               5441		.byte	1
                          5442	
                          5443		.section	.debug_frame
                          5444	.LDW_5d79d88:
000000c0 00000014         5445		.long	.LDW_unq_8-.LDW_unq_7
                          5446	.LDW_unq_7:
000000c4 00000000         5447		.long	.LDW_5de14b0
000000c8 00000000         5448		.long	FblCwTransmitRP
000000cc 0000007e         5449		.long	__ghs_eofn_FblCwTransmitRP-FblCwTransmitRP
000000d0 01               5450		.byte	1
000000d1 00000000         5451		.long	.LDW71
000000d5 00               5452		.byte	0
000000d6 00               5453		.byte	0
000000d7 00               5454		.byte	0
                          5455	.LDW_unq_8:
                          5456		.section	.debug_line
00000641 000502           5457		.byte	0,5,2
00000644 00000000         5458		.long	FblCwTransmitRP
00000648 06               5459		.byte	6
00000649 03               5460		.byte	3
0000064a f601             5461		.byte	246,1
0000064c 02               5462		.byte	2
0000064d 00               5463		.byte	0
0000064e 01               5464		.byte	1
0000064f 03               5465		.byte	3
00000650 06               5466		.byte	6
00000651 02               5467		.byte	2
00000652 0a               5468		.byte	10
00000653 01               5469		.byte	1
00000654 000502           5470		.byte	0,5,2
00000657 00000000         5471		.long	.LDWlin7
0000065b 0b               5472		.byte	11
0000065c 2b               5473		.byte	43
0000065d 53               5474		.byte	83
0000065e 1b               5475		.byte	27

                                   Fri Apr 10 08:32:01 2020           Page 99
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000065f 1b               5476		.byte	27
00000660 24               5477		.byte	36
00000661 02               5478		.byte	2
00000662 02               5479		.byte	2
00000663 0c               5480		.byte	12
00000664 03               5481		.byte	3
00000665 7e               5482		.byte	126
00000666 02               5483		.byte	2
00000667 08               5484		.byte	8
00000668 01               5485		.byte	1
00000669 000502           5486		.byte	0,5,2
0000066c 00000000         5487		.long	.LDWlin8
00000670 0d               5488		.byte	13
00000671 03               5489		.byte	3
00000672 08               5490		.byte	8
00000673 02               5491		.byte	2
00000674 00               5492		.byte	0
00000675 01               5493		.byte	1
00000676 1b               5494		.byte	27
00000677 000502           5495		.byte	0,5,2
0000067a 00000000         5496		.long	.LDWlin9
0000067e 0b               5497		.byte	11
0000067f 0c               5498		.byte	12
00000680 33               5499		.byte	51
00000681 25               5500		.byte	37
00000682 23               5501		.byte	35
00000683 02               5502		.byte	2
00000684 00               5503		.byte	0
00000685 0b               5504		.byte	11
00000686 02               5505		.byte	2
00000687 00               5506		.byte	0
00000688 0c               5507		.byte	12
00000689 02               5508		.byte	2
0000068a 0a               5509		.byte	10
0000068b 000101           5510		.byte	0,1,1
                          5511		.section	.debug_info
                          5512	.LDW_499d9a0:
00000f00 11               5513		.byte	17
00000f01 6461746100       5514		.strz	"data"
00000f06 f601             5515		.byte	246,1
00000f08 26               5516		.byte	38
00000f09 01               5517		.byte	1
00000f0a 00000000         5518		.long	.LDW_495c730
00000f0e 00               5519		.byte	0
00000f0f 0153             5520		.byte	1,83
                          5521	
                          5522	.LDW_4953658:
00000f11 1f               5523		.byte	31
00000f12 00000000         5524		.long	.LDW61
00000f16 00000000         5525		.long	.LDW71
                          5526	
                          5527	.LDW_499d9f8:
00000f1a 06               5528		.byte	6
00000f1b 6900             5529		.strz	"i"
00000f1d f901             5530		.byte	249,1
00000f1f 0b               5531		.byte	11

                                   Fri Apr 10 08:32:01 2020           Page 100
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000f20 01               5532		.byte	1
00000f21 00000000         5533		.long	.LDW_499b870
00000f25 00               5534		.byte	0
00000f26 00               5535		.byte	0
00000f27 0150             5536		.byte	1,80
                          5537	
00000f29 00               5538		.byte	0
                          5539	
00000f2a 00               5540		.byte	0
                          5541	
                          5542	.LDW_499a458:
00000f2b 15               5543		.byte	21
00000f2c 46626c437754696d 5544		.strz	"FblCwTimerTask"
00000f34 65725461736b00  
00000f3b a502             5545		.byte	165,2
00000f3d 11               5546		.byte	17
00000f3e 01               5547		.byte	1
00000f3f 00000000         5548		.long	FblCwTimerTask
00000f43 00000000         5549		.long	__ghs_eofn_FblCwTimerTask
00000f47 0151             5550		.byte	1,81
00000f49 808080800e       5551		.byte	128,128,128,128,14
00000f4e 0c               5552		.byte	12
00000f4f 00               5553		.byte	0
00000f50 18               5554		.byte	24
00000f51 00               5555		.byte	0
00000f52 00               5556		.byte	0
00000f53 00               5557		.byte	0
00000f54 01               5558		.byte	1
00000f55 01               5559		.byte	1
00000f56 00               5560		.byte	0
00000f57 01               5561		.byte	1
                          5562	
                          5563		.section	.debug_frame
                          5564	.LDW_5d79dc8:
000000d8 00000014         5565		.long	.LDW_unq_a-.LDW_unq_9
                          5566	.LDW_unq_9:
000000dc 00000000         5567		.long	.LDW_5de14b0
000000e0 00000000         5568		.long	FblCwTimerTask
000000e4 000000b8         5569		.long	__ghs_eofn_FblCwTimerTask-FblCwTimerTask
000000e8 01               5570		.byte	1
000000e9 00000000         5571		.long	.LDW91
000000ed 00               5572		.byte	0
000000ee 00               5573		.byte	0
000000ef 00               5574		.byte	0
                          5575	.LDW_unq_a:
                          5576		.section	.debug_line
0000068e 000502           5577		.byte	0,5,2
00000691 00000000         5578		.long	FblCwTimerTask
00000695 06               5579		.byte	6
00000696 03               5580		.byte	3
00000697 a502             5581		.byte	165,2
00000699 02               5582		.byte	2
0000069a 00               5583		.byte	0
0000069b 01               5584		.byte	1
0000069c 3c               5585		.byte	60
0000069d 000502           5586		.byte	0,5,2
000006a0 00000000         5587		.long	.LDWlin10

                                   Fri Apr 10 08:32:01 2020           Page 101
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000006a4 0b               5588		.byte	11
000006a5 0b               5589		.byte	11
000006a6 000502           5590		.byte	0,5,2
000006a9 00000000         5591		.long	.LDWlin11
000006ad 0b               5592		.byte	11
000006ae 0b               5593		.byte	11
000006af 03               5594		.byte	3
000006b0 08               5595		.byte	8
000006b1 02               5596		.byte	2
000006b2 04               5597		.byte	4
000006b3 01               5598		.byte	1
000006b4 03               5599		.byte	3
000006b5 06               5600		.byte	6
000006b6 02               5601		.byte	2
000006b7 04               5602		.byte	4
000006b8 01               5603		.byte	1
000006b9 000502           5604		.byte	0,5,2
000006bc 00000000         5605		.long	.LDWlin12
000006c0 0b               5606		.byte	11
000006c1 0c               5607		.byte	12
000006c2 35               5608		.byte	53
000006c3 000502           5609		.byte	0,5,2
000006c6 00000000         5610		.long	.LDWlin13
000006ca 03               5611		.byte	3
000006cb 39               5612		.byte	57
000006cc 02               5613		.byte	2
000006cd 00               5614		.byte	0
000006ce 01               5615		.byte	1
000006cf 02               5616		.byte	2
000006d0 00               5617		.byte	0
000006d1 0b               5618		.byte	11
000006d2 02               5619		.byte	2
000006d3 00               5620		.byte	0
000006d4 0d               5621		.byte	13
000006d5 02               5622		.byte	2
000006d6 00               5623		.byte	0
000006d7 0d               5624		.byte	13
000006d8 1c               5625		.byte	28
000006d9 000502           5626		.byte	0,5,2
000006dc 00000000         5627		.long	.LDWlin14
000006e0 03               5628		.byte	3
000006e1 48               5629		.byte	72
000006e2 02               5630		.byte	2
000006e3 00               5631		.byte	0
000006e4 01               5632		.byte	1
000006e5 0b               5633		.byte	11
000006e6 0c               5634		.byte	12
000006e7 000502           5635		.byte	0,5,2
000006ea 00000000         5636		.long	.LDWlin15
000006ee 0b               5637		.byte	11
000006ef 0b               5638		.byte	11
000006f0 13               5639		.byte	19
000006f1 000502           5640		.byte	0,5,2
000006f4 00000000         5641		.long	.LDWlin16
000006f8 0b               5642		.byte	11
000006f9 0c               5643		.byte	12

                                   Fri Apr 10 08:32:01 2020           Page 102
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000006fa 0c               5644		.byte	12
000006fb 1b               5645		.byte	27
000006fc 000502           5646		.byte	0,5,2
000006ff 00000000         5647		.long	.LDWlin17
00000703 0b               5648		.byte	11
00000704 0c               5649		.byte	12
00000705 000502           5650		.byte	0,5,2
00000708 00000000         5651		.long	.LDWlin18
0000070c 03               5652		.byte	3
0000070d 06               5653		.byte	6
0000070e 02               5654		.byte	2
0000070f 00               5655		.byte	0
00000710 01               5656		.byte	1
00000711 02               5657		.byte	2
00000712 00               5658		.byte	0
00000713 0b               5659		.byte	11
00000714 02               5660		.byte	2
00000715 00               5661		.byte	0
00000716 0d               5662		.byte	13
00000717 0b               5663		.byte	11
00000718 0c               5664		.byte	12
00000719 000502           5665		.byte	0,5,2
0000071c 00000000         5666		.long	.LDWlin19
00000720 0b               5667		.byte	11
00000721 0b               5668		.byte	11
00000722 13               5669		.byte	19
00000723 000502           5670		.byte	0,5,2
00000726 00000000         5671		.long	.LDWlin20
0000072a 0b               5672		.byte	11
0000072b 0c               5673		.byte	12
0000072c 0d               5674		.byte	13
0000072d 1b               5675		.byte	27
0000072e 000502           5676		.byte	0,5,2
00000731 00000000         5677		.long	.LDWlin21
00000735 0b               5678		.byte	11
00000736 0c               5679		.byte	12
00000737 06               5680		.byte	6
00000738 000502           5681		.byte	0,5,2
0000073b 00000000         5682		.long	.LDWlin22
0000073f 03               5683		.byte	3
00000740 54               5684		.byte	84
00000741 02               5685		.byte	2
00000742 00               5686		.byte	0
00000743 01               5687		.byte	1
00000744 03               5688		.byte	3
00000745 17               5689		.byte	23
00000746 02               5690		.byte	2
00000747 00               5691		.byte	0
00000748 01               5692		.byte	1
00000749 06               5693		.byte	6
0000074a 03               5694		.byte	3
0000074b 16               5695		.byte	22
0000074c 02               5696		.byte	2
0000074d 00               5697		.byte	0
0000074e 01               5698		.byte	1
0000074f 0c               5699		.byte	12

                                   Fri Apr 10 08:32:01 2020           Page 103
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000750 0c               5700		.byte	12
00000751 03               5701		.byte	3
00000752 0c               5702		.byte	12
00000753 02               5703		.byte	2
00000754 04               5704		.byte	4
00000755 01               5705		.byte	1
00000756 02               5706		.byte	2
00000757 00               5707		.byte	0
00000758 0b               5708		.byte	11
00000759 02               5709		.byte	2
0000075a 00               5710		.byte	0
0000075b 0c               5711		.byte	12
0000075c 23               5712		.byte	35
0000075d 02               5713		.byte	2
0000075e 00               5714		.byte	0
0000075f 0b               5715		.byte	11
00000760 02               5716		.byte	2
00000761 00               5717		.byte	0
00000762 0b               5718		.byte	11
00000763 02               5719		.byte	2
00000764 0c               5720		.byte	12
00000765 000101           5721		.byte	0,1,1
                          5722		.section	.debug_info
                          5723	.LDW_49532f8:
00000f58 1f               5724		.byte	31
00000f59 00000000         5725		.long	.LDW81
00000f5d 00000000         5726		.long	.LDW91
                          5727	
00000f61 00               5728		.byte	0
                          5729	
00000f62 00               5730		.byte	0
                          5731	
                          5732	.LDW_499a4f0:
00000f63 15               5733		.byte	21
00000f64 46626c4377537461 5734		.strz	"FblCwStateTask"
00000f6c 74655461736b00  
00000f73 9203             5735		.byte	146,3
00000f75 11               5736		.byte	17
00000f76 01               5737		.byte	1
00000f77 00000000         5738		.long	FblCwStateTask
00000f7b 00000000         5739		.long	__ghs_eofn_FblCwStateTask
00000f7f 0151             5740		.byte	1,81
00000f81 8080808008       5741		.byte	128,128,128,128,8
00000f86 0c               5742		.byte	12
00000f87 00               5743		.byte	0
00000f88 10               5744		.byte	16
00000f89 00               5745		.byte	0
00000f8a 00               5746		.byte	0
00000f8b 00               5747		.byte	0
00000f8c 01               5748		.byte	1
00000f8d 01               5749		.byte	1
00000f8e 00               5750		.byte	0
00000f8f 01               5751		.byte	1
                          5752	
                          5753		.section	.debug_frame
                          5754	.LDW_5d7a108:
000000f0 00000014         5755		.long	.LDW_unq_c-.LDW_unq_b

                                   Fri Apr 10 08:32:01 2020           Page 104
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          5756	.LDW_unq_b:
000000f4 00000000         5757		.long	.LDW_5de14b0
000000f8 00000000         5758		.long	FblCwStateTask
000000fc 0000003c         5759		.long	__ghs_eofn_FblCwStateTask-FblCwStateTask
00000100 01               5760		.byte	1
00000101 00000000         5761		.long	.LDW12
00000105 00               5762		.byte	0
00000106 00               5763		.byte	0
00000107 00               5764		.byte	0
                          5765	.LDW_unq_c:
                          5766		.section	.debug_line
00000768 000502           5767		.byte	0,5,2
0000076b 00000000         5768		.long	FblCwStateTask
0000076f 06               5769		.byte	6
00000770 03               5770		.byte	3
00000771 9203             5771		.byte	146,3
00000773 02               5772		.byte	2
00000774 00               5773		.byte	0
00000775 01               5774		.byte	1
00000776 33               5775		.byte	51
00000777 000502           5776		.byte	0,5,2
0000077a 00000000         5777		.long	.LDWlin23
0000077e 0b               5778		.byte	11
0000077f 0b               5779		.byte	11
00000780 000502           5780		.byte	0,5,2
00000783 00000000         5781		.long	.LDWlin24
00000787 0b               5782		.byte	11
00000788 0b               5783		.byte	11
00000789 1c               5784		.byte	28
0000078a 03               5785		.byte	3
0000078b 11               5786		.byte	17
0000078c 02               5787		.byte	2
0000078d 04               5788		.byte	4
0000078e 01               5789		.byte	1
0000078f 23               5790		.byte	35
00000790 02               5791		.byte	2
00000791 00               5792		.byte	0
00000792 0b               5793		.byte	11
00000793 02               5794		.byte	2
00000794 00               5795		.byte	0
00000795 0b               5796		.byte	11
00000796 02               5797		.byte	2
00000797 0a               5798		.byte	10
00000798 000101           5799		.byte	0,1,1
                          5800		.section	.debug_info
                          5801	.LDW_4953148:
00000f90 1f               5802		.byte	31
00000f91 00000000         5803		.long	.LDW02
00000f95 00000000         5804		.long	.LDW12
                          5805	
00000f99 00               5806		.byte	0
                          5807	
00000f9a 00               5808		.byte	0
                          5809	
                          5810	.LDW_499a588:
00000f9b 15               5811		.byte	21

                                   Fri Apr 10 08:32:01 2020           Page 105
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000f9c 46626c437749646c 5812		.strz	"FblCwIdleTask"
00000fa4 655461736b00    
00000faa bc03             5813		.byte	188,3
00000fac 06               5814		.byte	6
00000fad 01               5815		.byte	1
00000fae 00000000         5816		.long	FblCwIdleTask
00000fb2 00000000         5817		.long	__ghs_eofn_FblCwIdleTask
00000fb6 0151             5818		.byte	1,81
00000fb8 00               5819		.byte	0
00000fb9 08               5820		.byte	8
00000fba 00               5821		.byte	0
00000fbb 08               5822		.byte	8
00000fbc 00               5823		.byte	0
00000fbd 00               5824		.byte	0
00000fbe 00               5825		.byte	0
00000fbf 01               5826		.byte	1
00000fc0 01               5827		.byte	1
00000fc1 00               5828		.byte	0
00000fc2 01               5829		.byte	1
                          5830	
                          5831		.section	.debug_frame
                          5832	.LDW_5d7a088:
00000108 00000014         5833		.long	.LDW_unq_e-.LDW_unq_d
                          5834	.LDW_unq_d:
0000010c 00000000         5835		.long	.LDW_5de14b0
00000110 00000000         5836		.long	FblCwIdleTask
00000114 00000024         5837		.long	__ghs_eofn_FblCwIdleTask-FblCwIdleTask
00000118 01               5838		.byte	1
00000119 00000000         5839		.long	.LDW32
0000011d 00               5840		.byte	0
0000011e 00               5841		.byte	0
0000011f 00               5842		.byte	0
                          5843	.LDW_unq_e:
                          5844		.section	.debug_line
0000079b 000502           5845		.byte	0,5,2
0000079e 00000000         5846		.long	FblCwIdleTask
000007a2 06               5847		.byte	6
000007a3 03               5848		.byte	3
000007a4 bc03             5849		.byte	188,3
000007a6 02               5850		.byte	2
000007a7 00               5851		.byte	0
000007a8 01               5852		.byte	1
000007a9 2c               5853		.byte	44
000007aa 03               5854		.byte	3
000007ab 06               5855		.byte	6
000007ac 02               5856		.byte	2
000007ad 04               5857		.byte	4
000007ae 01               5858		.byte	1
000007af 000502           5859		.byte	0,5,2
000007b2 00000000         5860		.long	.LDWlin25
000007b6 0b               5861		.byte	11
000007b7 03               5862		.byte	3
000007b8 07               5863		.byte	7
000007b9 02               5864		.byte	2
000007ba 00               5865		.byte	0
000007bb 01               5866		.byte	1
000007bc 1c               5867		.byte	28

                                   Fri Apr 10 08:32:01 2020           Page 106
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000007bd 02               5868		.byte	2
000007be 00               5869		.byte	0
000007bf 0d               5870		.byte	13
000007c0 02               5871		.byte	2
000007c1 08               5872		.byte	8
000007c2 000101           5873		.byte	0,1,1
                          5874		.section	.debug_info
                          5875	.LDW_4953298:
00000fc3 1f               5876		.byte	31
00000fc4 00000000         5877		.long	.LDW22
00000fc8 00000000         5878		.long	.LDW32
                          5879	
00000fcc 00               5880		.byte	0
                          5881	
00000fcd 00               5882		.byte	0
                          5883	
                          5884	.LDW_499a620:
00000fce 15               5885		.byte	21
00000fcf 46626c4377496e69 5886		.strz	"FblCwInitRxIdentifier"
00000fd7 7452784964656e74
00000fdf 696669657200    
00000fe5 d903             5887		.byte	217,3
00000fe7 0d               5888		.byte	13
00000fe8 01               5889		.byte	1
00000fe9 00000000         5890		.long	FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
00000fed 00000000         5891		.long	__ghs_eofn_FblCwInitRxIdentifier
00000ff1 0151             5892		.byte	1,81
00000ff3 03               5893		.byte	3
00000ff4 00               5894		.byte	0
00000ff5 00               5895		.byte	0
00000ff6 00               5896		.byte	0
00000ff7 00               5897		.byte	0
00000ff8 00               5898		.byte	0
00000ff9 00               5899		.byte	0
00000ffa 00               5900		.byte	0
00000ffb 01               5901		.byte	1
00000ffc 00               5902		.byte	0
00000ffd 01               5903		.byte	1
                          5904	
                          5905		.section	.debug_frame
                          5906	.LDW_5d7a148:
00000120 00000014         5907		.long	.LDW_unq_10-.LDW_unq_f
                          5908	.LDW_unq_f:
00000124 00000000         5909		.long	.LDW_5de14b0
00000128 00000000         5910		.long	FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
0000012c 00000028         5911		.long	__ghs_eofn_FblCwInitRxIdentifier-FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
00000130 01               5912		.byte	1
00000131 00000000         5913		.long	.LDW52
00000135 00               5914		.byte	0
00000136 00               5915		.byte	0
00000137 00               5916		.byte	0
                          5917	.LDW_unq_10:
                          5918		.section	.debug_line
000007c5 000502           5919		.byte	0,5,2
000007c8 00000000         5920		.long	FblCwInitRxIdentifier..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_cw.
000007cc 06               5921		.byte	6
000007cd 03               5922		.byte	3
000007ce dd03             5923		.byte	221,3

                                   Fri Apr 10 08:32:01 2020           Page 107
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000007d0 02               5924		.byte	2
000007d1 00               5925		.byte	0
000007d2 01               5926		.byte	1
000007d3 02               5927		.byte	2
000007d4 02               5928		.byte	2
000007d5 03               5929		.byte	3
000007d6 0c               5930		.byte	12
000007d7 02               5931		.byte	2
000007d8 00               5932		.byte	0
000007d9 01               5933		.byte	1
000007da 03               5934		.byte	3
000007db 74               5935		.byte	116
000007dc 02               5936		.byte	2
000007dd 1e               5937		.byte	30
000007de 01               5938		.byte	1
000007df 000502           5939		.byte	0,5,2
000007e2 00000000         5940		.long	.LDWlin26
000007e6 03               5941		.byte	3
000007e7 0d               5942		.byte	13
000007e8 02               5943		.byte	2
000007e9 00               5944		.byte	0
000007ea 01               5945		.byte	1
000007eb 0c               5946		.byte	12
000007ec 02               5947		.byte	2
000007ed 02               5948		.byte	2
000007ee 000101           5949		.byte	0,1,1
                          5950		.section	.debug_info
                          5951	.LDW_4953688:
00000ffe 1f               5952		.byte	31
00000fff 00000000         5953		.long	.LDW42
00001003 00000000         5954		.long	.LDW52
                          5955	
                          5956	.LDW_499da50:
00001007 06               5957		.byte	6
00001008 6900             5958		.strz	"i"
0000100a db03             5959		.byte	219,3
0000100c 0b               5960		.byte	11
0000100d 01               5961		.byte	1
0000100e 00000000         5962		.long	.LDW_499b870
00001012 00               5963		.byte	0
00001013 00               5964		.byte	0
00001014 0156             5965		.byte	1,86
                          5966	
                          5967	.LDW_499a6b8:
00001016 07               5968		.byte	7
00001017 6964496e64657800 5969		.strz	"idIndex"
0000101f dc03             5970		.byte	220,3
00001021 0b               5971		.byte	11
00001022 01               5972		.byte	1
00001023 00000000         5973		.long	.LDW_499b870
00001027 00               5974		.byte	0
00001028 00               5975		.byte	0
                          5976	
00001029 00               5977		.byte	0
                          5978	
0000102a 00               5979		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 108
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          5980	
                          5981	.LDW_499a710:
0000102b 15               5982		.byte	21
0000102c 46626c4377496e69 5983		.strz	"FblCwInit"
00001034 7400            
00001036 f403             5984		.byte	244,3
00001038 06               5985		.byte	6
00001039 01               5986		.byte	1
0000103a 00000000         5987		.long	FblCwInit
0000103e 00000000         5988		.long	__ghs_eofn_FblCwInit
00001042 0151             5989		.byte	1,81
00001044 8080808008       5990		.byte	128,128,128,128,8
00001049 0c               5991		.byte	12
0000104a 00               5992		.byte	0
0000104b 10               5993		.byte	16
0000104c 00               5994		.byte	0
0000104d 00               5995		.byte	0
0000104e 00               5996		.byte	0
0000104f 01               5997		.byte	1
00001050 01               5998		.byte	1
00001051 00               5999		.byte	0
00001052 01               6000		.byte	1
                          6001	
                          6002		.section	.debug_frame
                          6003	.LDW_5d79f88:
00000138 00000014         6004		.long	.LDW_unq_12-.LDW_unq_11
                          6005	.LDW_unq_11:
0000013c 00000000         6006		.long	.LDW_5de14b0
00000140 00000000         6007		.long	FblCwInit
00000144 00000064         6008		.long	__ghs_eofn_FblCwInit-FblCwInit
00000148 01               6009		.byte	1
00000149 00000000         6010		.long	.LDW72
0000014d 00               6011		.byte	0
0000014e 00               6012		.byte	0
0000014f 00               6013		.byte	0
                          6014	.LDW_unq_12:
                          6015		.section	.debug_line
000007f1 000502           6016		.byte	0,5,2
000007f4 00000000         6017		.long	FblCwInit
000007f8 06               6018		.byte	6
000007f9 03               6019		.byte	3
000007fa f403             6020		.byte	244,3
000007fc 02               6021		.byte	2
000007fd 00               6022		.byte	0
000007fe 01               6023		.byte	1
000007ff 03               6024		.byte	3
00000800 06               6025		.byte	6
00000801 02               6026		.byte	2
00000802 0a               6027		.byte	10
00000803 01               6028		.byte	1
00000804 33               6029		.byte	51
00000805 2b               6030		.byte	43
00000806 2d               6031		.byte	45
00000807 03               6032		.byte	3
00000808 09               6033		.byte	9
00000809 02               6034		.byte	2
0000080a 16               6035		.byte	22

                                   Fri Apr 10 08:32:01 2020           Page 109
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000080b 01               6036		.byte	1
0000080c 000502           6037		.byte	0,5,2
0000080f 00000000         6038		.long	.LDWlin27
00000813 03               6039		.byte	3
00000814 04               6040		.byte	4
00000815 02               6041		.byte	2
00000816 00               6042		.byte	0
00000817 01               6043		.byte	1
00000818 1d               6044		.byte	29
00000819 1d               6045		.byte	29
0000081a 03               6046		.byte	3
0000081b 06               6047		.byte	6
0000081c 02               6048		.byte	2
0000081d 04               6049		.byte	4
0000081e 01               6050		.byte	1
0000081f 2d               6051		.byte	45
00000820 33               6052		.byte	51
00000821 02               6053		.byte	2
00000822 0a               6054		.byte	10
00000823 000101           6055		.byte	0,1,1
                          6056		.section	.debug_info
                          6057	.LDW_4953268:
00001053 1f               6058		.byte	31
00001054 00000000         6059		.long	.LDW62
00001058 00000000         6060		.long	.LDW72
                          6061	
0000105c 00               6062		.byte	0
                          6063	
0000105d 00               6064		.byte	0
                          6065	
                          6066	.LDW_499a7a8:
0000105e 15               6067		.byte	21
0000105f 46626c4377446569 6068		.strz	"FblCwDeinit"
00001067 6e697400        
0000106b a404             6069		.byte	164,4
0000106d 06               6070		.byte	6
0000106e 01               6071		.byte	1
0000106f 00000000         6072		.long	FblCwDeinit
00001073 00000000         6073		.long	__ghs_eofn_FblCwDeinit
00001077 0151             6074		.byte	1,81
00001079 03               6075		.byte	3
0000107a 00               6076		.byte	0
0000107b 00               6077		.byte	0
0000107c 00               6078		.byte	0
0000107d 00               6079		.byte	0
0000107e 00               6080		.byte	0
0000107f 00               6081		.byte	0
00001080 01               6082		.byte	1
00001081 01               6083		.byte	1
00001082 00               6084		.byte	0
00001083 01               6085		.byte	1
                          6086	
                          6087		.section	.debug_frame
                          6088	.LDW_5d7a208:
00000150 00000014         6089		.long	.LDW_unq_14-.LDW_unq_13
                          6090	.LDW_unq_13:
00000154 00000000         6091		.long	.LDW_5de14b0

                                   Fri Apr 10 08:32:01 2020           Page 110
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000158 00000000         6092		.long	FblCwDeinit
0000015c 0000000c         6093		.long	__ghs_eofn_FblCwDeinit-FblCwDeinit
00000160 01               6094		.byte	1
00000161 00000000         6095		.long	.LDW92
00000165 00               6096		.byte	0
00000166 00               6097		.byte	0
00000167 00               6098		.byte	0
                          6099	.LDW_unq_14:
                          6100		.section	.debug_line
00000826 000502           6101		.byte	0,5,2
00000829 00000000         6102		.long	FblCwDeinit
0000082d 06               6103		.byte	6
0000082e 03               6104		.byte	3
0000082f a804             6105		.byte	168,4
00000831 02               6106		.byte	2
00000832 00               6107		.byte	0
00000833 01               6108		.byte	1
00000834 33               6109		.byte	51
00000835 02               6110		.byte	2
00000836 02               6111		.byte	2
00000837 000101           6112		.byte	0,1,1
                          6113		.section	.debug_info
                          6114	.LDW_4953388:
00001084 1f               6115		.byte	31
00001085 00000000         6116		.long	.LDW82
00001089 00000000         6117		.long	.LDW92
                          6118	
0000108d 00               6119		.byte	0
                          6120	
0000108e 00               6121		.byte	0
                          6122	
                          6123	.LDW_5bc5178:
0000108f 15               6124		.byte	21
00001090 46626c4377536574 6125		.strz	"FblCwSetTxInit"
00001098 5478496e697400  
0000109f b204             6126		.byte	178,4
000010a1 06               6127		.byte	6
000010a2 01               6128		.byte	1
000010a3 00000000         6129		.long	FblCwSetTxInit
000010a7 00000000         6130		.long	__ghs_eofn_FblCwSetTxInit
000010ab 0151             6131		.byte	1,81
000010ad 03               6132		.byte	3
000010ae 00               6133		.byte	0
000010af 00               6134		.byte	0
000010b0 00               6135		.byte	0
000010b1 00               6136		.byte	0
000010b2 00               6137		.byte	0
000010b3 00               6138		.byte	0
000010b4 01               6139		.byte	1
000010b5 01               6140		.byte	1
000010b6 00               6141		.byte	0
000010b7 01               6142		.byte	1
                          6143	
                          6144		.section	.debug_frame
                          6145	.LDW_5d7a248:
00000168 00000014         6146		.long	.LDW_unq_16-.LDW_unq_15
                          6147	.LDW_unq_15:

                                   Fri Apr 10 08:32:01 2020           Page 111
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000016c 00000000         6148		.long	.LDW_5de14b0
00000170 00000000         6149		.long	FblCwSetTxInit
00000174 00000046         6150		.long	__ghs_eofn_FblCwSetTxInit-FblCwSetTxInit
00000178 01               6151		.byte	1
00000179 00000000         6152		.long	.LDW13
0000017d 00               6153		.byte	0
0000017e 00               6154		.byte	0
0000017f 00               6155		.byte	0
                          6156	.LDW_unq_16:
                          6157		.section	.debug_line
0000083a 000502           6158		.byte	0,5,2
0000083d 00000000         6159		.long	FblCwSetTxInit
00000841 06               6160		.byte	6
00000842 03               6161		.byte	3
00000843 b804             6162		.byte	184,4
00000845 02               6163		.byte	2
00000846 00               6164		.byte	0
00000847 01               6165		.byte	1
00000848 03               6166		.byte	3
00000849 0e               6167		.byte	14
0000084a 02               6168		.byte	2
0000084b 00               6169		.byte	0
0000084c 01               6170		.byte	1
0000084d 02               6171		.byte	2
0000084e 1e               6172		.byte	30
0000084f 000502           6173		.byte	0,5,2
00000852 00000000         6174		.long	.LDWlin28
00000856 02               6175		.byte	2
00000857 00               6176		.byte	0
00000858 02               6177		.byte	2
00000859 08               6178		.byte	8
0000085a 02               6179		.byte	2
0000085b 00               6180		.byte	0
0000085c 0b               6181		.byte	11
0000085d 33               6182		.byte	51
0000085e 1c               6183		.byte	28
0000085f 0d               6184		.byte	13
00000860 33               6185		.byte	51
00000861 02               6186		.byte	2
00000862 02               6187		.byte	2
00000863 000101           6188		.byte	0,1,1
                          6189		.section	.debug_info
                          6190	.LDW_4953598:
000010b8 1f               6191		.byte	31
000010b9 00000000         6192		.long	.LDW03
000010bd 00000000         6193		.long	.LDW13
                          6194	
                          6195	.LDW_5bc54f8:
000010c1 07               6196		.byte	7
000010c2 6900             6197		.strz	"i"
000010c4 b404             6198		.byte	180,4
000010c6 0b               6199		.byte	11
000010c7 01               6200		.byte	1
000010c8 00000000         6201		.long	.LDW_499b870
000010cc 00               6202		.byte	0
000010cd 00               6203		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 112
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          6204	
                          6205	.LDW_5bc5970:
000010ce 07               6206		.byte	7
000010cf 6964496e64657800 6207		.strz	"idIndex"
000010d7 b504             6208		.byte	181,4
000010d9 0b               6209		.byte	11
000010da 01               6210		.byte	1
000010db 00000000         6211		.long	.LDW_499b870
000010df 00               6212		.byte	0
000010e0 00               6213		.byte	0
                          6214	
                          6215	.LDW_5bc5238:
000010e1 07               6216		.byte	7
000010e2 74784f626a656374 6217		.strz	"txObjectIndex"
000010ea 496e64657800    
000010f0 b604             6218		.byte	182,4
000010f2 0b               6219		.byte	11
000010f3 01               6220		.byte	1
000010f4 00000000         6221		.long	.LDW_499b870
000010f8 00               6222		.byte	0
000010f9 00               6223		.byte	0
                          6224	
000010fa 00               6225		.byte	0
                          6226	
000010fb 00               6227		.byte	0
                          6228	
                          6229	.LDW_5bc5a18:
000010fc 15               6230		.byte	21
000010fd 46626c4377446973 6231		.strz	"FblCwDiscardReception"
00001105 6361726452656365
0000110d 7074696f6e00    
00001113 8005             6232		.byte	128,5
00001115 06               6233		.byte	6
00001116 01               6234		.byte	1
00001117 00000000         6235		.long	FblCwDiscardReception
0000111b 00000000         6236		.long	__ghs_eofn_FblCwDiscardReception
0000111f 0151             6237		.byte	1,81
00001121 8080808008       6238		.byte	128,128,128,128,8
00001126 0c               6239		.byte	12
00001127 00               6240		.byte	0
00001128 10               6241		.byte	16
00001129 00               6242		.byte	0
0000112a 00               6243		.byte	0
0000112b 00               6244		.byte	0
0000112c 01               6245		.byte	1
0000112d 01               6246		.byte	1
0000112e 00               6247		.byte	0
0000112f 01               6248		.byte	1
                          6249	
                          6250		.section	.debug_frame
                          6251	.LDW_5d7a288:
00000180 00000014         6252		.long	.LDW_unq_18-.LDW_unq_17
                          6253	.LDW_unq_17:
00000184 00000000         6254		.long	.LDW_5de14b0
00000188 00000000         6255		.long	FblCwDiscardReception
0000018c 00000034         6256		.long	__ghs_eofn_FblCwDiscardReception-FblCwDiscardReception
00000190 01               6257		.byte	1
00000191 00000000         6258		.long	.LDW33
00000195 00               6259		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 113
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000196 00               6260		.byte	0
00000197 00               6261		.byte	0
                          6262	.LDW_unq_18:
                          6263		.section	.debug_line
00000866 000502           6264		.byte	0,5,2
00000869 00000000         6265		.long	FblCwDiscardReception
0000086d 06               6266		.byte	6
0000086e 03               6267		.byte	3
0000086f 8005             6268		.byte	128,5
00000871 02               6269		.byte	2
00000872 00               6270		.byte	0
00000873 01               6271		.byte	1
00000874 34               6272		.byte	52
00000875 3d               6273		.byte	61
00000876 000502           6274		.byte	0,5,2
00000879 00000000         6275		.long	.LDWlin29
0000087d 0c               6276		.byte	12
0000087e 03               6277		.byte	3
0000087f 7e               6278		.byte	126
00000880 02               6279		.byte	2
00000881 04               6280		.byte	4
00000882 01               6281		.byte	1
00000883 000502           6282		.byte	0,5,2
00000886 00000000         6283		.long	.LDWlin30
0000088a 0d               6284		.byte	13
0000088b 0d               6285		.byte	13
0000088c 13               6286		.byte	19
0000088d 02               6287		.byte	2
0000088e 0a               6288		.byte	10
0000088f 000101           6289		.byte	0,1,1
                          6290		.section	.debug_info
                          6291	.LDW_4953178:
00001130 1f               6292		.byte	31
00001131 00000000         6293		.long	.LDW23
00001135 00000000         6294		.long	.LDW33
                          6295	
00001139 00               6296		.byte	0
                          6297	
0000113a 00               6298		.byte	0
                          6299	
                          6300	.LDW_5bc5ab0:
0000113b 15               6301		.byte	21
0000113c 46626c4377536574 6302		.strz	"FblCwSetRxBlock"
00001144 5278426c6f636b00
0000114c 9405             6303		.byte	148,5
0000114e 06               6304		.byte	6
0000114f 01               6305		.byte	1
00001150 00000000         6306		.long	FblCwSetRxBlock
00001154 00000000         6307		.long	__ghs_eofn_FblCwSetRxBlock
00001158 0151             6308		.byte	1,81
0000115a 03               6309		.byte	3
0000115b 00               6310		.byte	0
0000115c 00               6311		.byte	0
0000115d 00               6312		.byte	0
0000115e 00               6313		.byte	0
0000115f 00               6314		.byte	0
00001160 00               6315		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 114
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001161 01               6316		.byte	1
00001162 01               6317		.byte	1
00001163 00               6318		.byte	0
00001164 01               6319		.byte	1
                          6320	
                          6321		.section	.debug_frame
                          6322	.LDW_5d7a2c8:
00000198 00000014         6323		.long	.LDW_unq_1a-.LDW_unq_19
                          6324	.LDW_unq_19:
0000019c 00000000         6325		.long	.LDW_5de14b0
000001a0 00000000         6326		.long	FblCwSetRxBlock
000001a4 00000004         6327		.long	__ghs_eofn_FblCwSetRxBlock-FblCwSetRxBlock
000001a8 01               6328		.byte	1
000001a9 00000000         6329		.long	.LDW53
000001ad 00               6330		.byte	0
000001ae 00               6331		.byte	0
000001af 00               6332		.byte	0
                          6333	.LDW_unq_1a:
                          6334		.section	.debug_line
00000892 000502           6335		.byte	0,5,2
00000895 00000000         6336		.long	FblCwSetRxBlock
00000899 06               6337		.byte	6
0000089a 03               6338		.byte	3
0000089b 9605             6339		.byte	150,5
0000089d 02               6340		.byte	2
0000089e 00               6341		.byte	0
0000089f 01               6342		.byte	1
000008a0 02               6343		.byte	2
000008a1 04               6344		.byte	4
000008a2 000101           6345		.byte	0,1,1
                          6346		.section	.debug_info
                          6347	.LDW_49531a8:
00001165 1f               6348		.byte	31
00001166 00000000         6349		.long	.LDW43
0000116a 00000000         6350		.long	.LDW53
                          6351	
0000116e 00               6352		.byte	0
                          6353	
0000116f 00               6354		.byte	0
                          6355	
                          6356	.LDW_5bc5b48:
00001170 15               6357		.byte	21
00001171 46626c4377526573 6358		.strz	"FblCwResetRxBlock"
00001179 65745278426c6f63
00001181 6b00            
00001183 9f05             6359		.byte	159,5
00001185 06               6360		.byte	6
00001186 01               6361		.byte	1
00001187 00000000         6362		.long	FblCwResetRxBlock
0000118b 00000000         6363		.long	__ghs_eofn_FblCwResetRxBlock
0000118f 0151             6364		.byte	1,81
00001191 03               6365		.byte	3
00001192 00               6366		.byte	0
00001193 00               6367		.byte	0
00001194 00               6368		.byte	0
00001195 00               6369		.byte	0
00001196 00               6370		.byte	0
00001197 00               6371		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 115
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001198 01               6372		.byte	1
00001199 01               6373		.byte	1
0000119a 00               6374		.byte	0
0000119b 01               6375		.byte	1
                          6376	
                          6377		.section	.debug_frame
                          6378	.LDW_5d7a308:
000001b0 00000014         6379		.long	.LDW_unq_1c-.LDW_unq_1b
                          6380	.LDW_unq_1b:
000001b4 00000000         6381		.long	.LDW_5de14b0
000001b8 00000000         6382		.long	FblCwResetRxBlock
000001bc 00000016         6383		.long	__ghs_eofn_FblCwResetRxBlock-FblCwResetRxBlock
000001c0 01               6384		.byte	1
000001c1 00000000         6385		.long	.LDW73
000001c5 00               6386		.byte	0
000001c6 00               6387		.byte	0
000001c7 00               6388		.byte	0
                          6389	.LDW_unq_1c:
                          6390		.section	.debug_line
000008a5 000502           6391		.byte	0,5,2
000008a8 00000000         6392		.long	FblCwResetRxBlock
000008ac 06               6393		.byte	6
000008ad 03               6394		.byte	3
000008ae a005             6395		.byte	160,5
000008b0 02               6396		.byte	2
000008b1 00               6397		.byte	0
000008b2 01               6398		.byte	1
000008b3 33               6399		.byte	51
000008b4 2d               6400		.byte	45
000008b5 02               6401		.byte	2
000008b6 04               6402		.byte	4
000008b7 000101           6403		.byte	0,1,1
                          6404		.section	.debug_info
                          6405	.LDW_4953538:
0000119c 1f               6406		.byte	31
0000119d 00000000         6407		.long	.LDW63
000011a1 00000000         6408		.long	.LDW73
                          6409	
000011a5 00               6410		.byte	0
                          6411	
000011a6 00               6412		.byte	0
                          6413	
                          6414	.LDW_5bc5be0:
000011a7 15               6415		.byte	21
000011a8 46626c437743616e 6416		.strz	"FblCwCanTransmit"
000011b0 5472616e736d6974
000011b8 00              
000011b9 b105             6417		.byte	177,5
000011bb 06               6418		.byte	6
000011bc 01               6419		.byte	1
000011bd 00000000         6420		.long	FblCwCanTransmit
000011c1 00000000         6421		.long	__ghs_eofn_FblCwCanTransmit
000011c5 0151             6422		.byte	1,81
000011c7 808080800e       6423		.byte	128,128,128,128,14
000011cc 0c               6424		.byte	12
000011cd 00               6425		.byte	0
000011ce 18               6426		.byte	24
000011cf 00               6427		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 116
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000011d0 00               6428		.byte	0
000011d1 00               6429		.byte	0
000011d2 01               6430		.byte	1
000011d3 01               6431		.byte	1
000011d4 00               6432		.byte	0
000011d5 01               6433		.byte	1
                          6434	
                          6435		.section	.debug_frame
                          6436	.LDW_5d7a648:
000001c8 00000014         6437		.long	.LDW_unq_1e-.LDW_unq_1d
                          6438	.LDW_unq_1d:
000001cc 00000000         6439		.long	.LDW_5de14b0
000001d0 00000000         6440		.long	FblCwCanTransmit
000001d4 0000005e         6441		.long	__ghs_eofn_FblCwCanTransmit-FblCwCanTransmit
000001d8 01               6442		.byte	1
000001d9 00000000         6443		.long	.LDW93
000001dd 00               6444		.byte	0
000001de 00               6445		.byte	0
000001df 00               6446		.byte	0
                          6447	.LDW_unq_1e:
                          6448		.section	.debug_line
000008ba 000502           6449		.byte	0,5,2
000008bd 00000000         6450		.long	FblCwCanTransmit
000008c1 06               6451		.byte	6
000008c2 03               6452		.byte	3
000008c3 b105             6453		.byte	177,5
000008c5 02               6454		.byte	2
000008c6 00               6455		.byte	0
000008c7 01               6456		.byte	1
000008c8 03               6457		.byte	3
000008c9 07               6458		.byte	7
000008ca 02               6459		.byte	2
000008cb 0e               6460		.byte	14
000008cc 01               6461		.byte	1
000008cd 15               6462		.byte	21
000008ce 000502           6463		.byte	0,5,2
000008d1 00000000         6464		.long	.LDWlin31
000008d5 0c               6465		.byte	12
000008d6 000502           6466		.byte	0,5,2
000008d9 00000000         6467		.long	.LDWlin32
000008dd 0b               6468		.byte	11
000008de 0b               6469		.byte	11
000008df 1b               6470		.byte	27
000008e0 02               6471		.byte	2
000008e1 00               6472		.byte	0
000008e2 03               6473		.byte	3
000008e3 7b               6474		.byte	123
000008e4 02               6475		.byte	2
000008e5 00               6476		.byte	0
000008e6 01               6477		.byte	1
000008e7 000502           6478		.byte	0,5,2
000008ea 00000000         6479		.long	.LDWlin33
000008ee 03               6480		.byte	3
000008ef 06               6481		.byte	6
000008f0 02               6482		.byte	2
000008f1 00               6483		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 117
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000008f2 01               6484		.byte	1
000008f3 0d               6485		.byte	13
000008f4 1b               6486		.byte	27
000008f5 000502           6487		.byte	0,5,2
000008f8 00000000         6488		.long	.LDWlin34
000008fc 0b               6489		.byte	11
000008fd 0b               6490		.byte	11
000008fe 33               6491		.byte	51
000008ff 25               6492		.byte	37
00000900 23               6493		.byte	35
00000901 02               6494		.byte	2
00000902 00               6495		.byte	0
00000903 0b               6496		.byte	11
00000904 02               6497		.byte	2
00000905 0c               6498		.byte	12
00000906 000101           6499		.byte	0,1,1
                          6500		.section	.debug_info
                          6501	.LDW_5bc58c0:
000011d6 11               6502		.byte	17
000011d7 6461746100       6503		.strz	"data"
000011dc b105             6504		.byte	177,5
000011de 45               6505		.byte	69
000011df 01               6506		.byte	1
000011e0 00000000         6507		.long	.LDW_495c730
000011e4 00               6508		.byte	0
000011e5 0153             6509		.byte	1,83
                          6510	
                          6511	.LDW_5bc56b0:
000011e7 11               6512		.byte	17
000011e8 6c656e67746800   6513		.strz	"length"
000011ef b105             6514		.byte	177,5
000011f1 5d               6515		.byte	93
000011f2 01               6516		.byte	1
000011f3 00000000         6517		.long	.LDW_5bc5810
000011f7 00               6518		.byte	0
000011f8 016e             6519		.byte	1,110
                          6520	
                          6521	.LDW_49531d8:
000011fa 1f               6522		.byte	31
000011fb 00000000         6523		.long	.LDW83
000011ff 00000000         6524		.long	.LDW93
                          6525	
                          6526	.LDW_5bc55a8:
00001203 06               6527		.byte	6
00001204 6d61785761697454 6528		.strz	"maxWaitTime"
0000120c 696d6500        
00001210 b305             6529		.byte	179,5
00001212 0c               6530		.byte	12
00001213 01               6531		.byte	1
00001214 00000000         6532		.long	.LDW_5bc5658
00001218 00               6533		.byte	0
00001219 00               6534		.byte	0
0000121a 016f             6535		.byte	1,111
                          6536	
0000121c 00               6537		.byte	0
                          6538	
0000121d 00               6539		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 118
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          6540	
                          6541	.LDW_5c5e178:
0000121e 15               6542		.byte	21
0000121f 46626c4377547044 6543		.strz	"FblCwTpDataInd"
00001227 617461496e6400  
0000122e de05             6544		.byte	222,5
00001230 06               6545		.byte	6
00001231 01               6546		.byte	1
00001232 00000000         6547		.long	FblCwTpDataInd
00001236 00000000         6548		.long	__ghs_eofn_FblCwTpDataInd
0000123a 0151             6549		.byte	1,81
0000123c 03               6550		.byte	3
0000123d 00               6551		.byte	0
0000123e 00               6552		.byte	0
0000123f 00               6553		.byte	0
00001240 00               6554		.byte	0
00001241 00               6555		.byte	0
00001242 00               6556		.byte	0
00001243 01               6557		.byte	1
00001244 01               6558		.byte	1
00001245 00               6559		.byte	0
00001246 01               6560		.byte	1
                          6561	
                          6562		.section	.debug_frame
                          6563	.LDW_5d7aa48:
000001e0 00000014         6564		.long	.LDW_unq_20-.LDW_unq_1f
                          6565	.LDW_unq_1f:
000001e4 00000000         6566		.long	.LDW_5de14b0
000001e8 00000000         6567		.long	FblCwTpDataInd
000001ec 00000014         6568		.long	__ghs_eofn_FblCwTpDataInd-FblCwTpDataInd
000001f0 01               6569		.byte	1
000001f1 00000000         6570		.long	.LDW14
000001f5 00               6571		.byte	0
000001f6 00               6572		.byte	0
000001f7 00               6573		.byte	0
                          6574	.LDW_unq_20:
                          6575		.section	.debug_line
00000909 000502           6576		.byte	0,5,2
0000090c 00000000         6577		.long	FblCwTpDataInd
00000910 06               6578		.byte	6
00000911 03               6579		.byte	3
00000912 de05             6580		.byte	222,5
00000914 02               6581		.byte	2
00000915 00               6582		.byte	0
00000916 01               6583		.byte	1
00000917 14               6584		.byte	20
00000918 000502           6585		.byte	0,5,2
0000091b 00000000         6586		.long	.LDWlin35
0000091f 0b               6587		.byte	11
00000920 2b               6588		.byte	43
00000921 1b               6589		.byte	27
00000922 02               6590		.byte	2
00000923 00               6591		.byte	0
00000924 0b               6592		.byte	11
00000925 02               6593		.byte	2
00000926 02               6594		.byte	2
00000927 000101           6595		.byte	0,1,1

                                   Fri Apr 10 08:32:01 2020           Page 119
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
                          6596		.section	.debug_info
                          6597	.LDW_5bc5550:
00001247 11               6598		.byte	17
00001248 7278446174614c65 6599		.strz	"rxDataLen"
00001250 6e00            
00001252 de05             6600		.byte	222,5
00001254 28               6601		.byte	40
00001255 01               6602		.byte	1
00001256 00000000         6603		.long	.LDW_5bc5810
0000125a 00               6604		.byte	0
0000125b 0154             6605		.byte	1,84
                          6606	
                          6607	.LDW_4953208:
0000125d 1f               6608		.byte	31
0000125e 00000000         6609		.long	.LDW04
00001262 00000000         6610		.long	.LDW14
                          6611	
00001266 00               6612		.byte	0
                          6613	
00001267 00               6614		.byte	0
                          6615	
                          6616	.LDW_5c5e210:
00001268 15               6617		.byte	21
00001269 46626c4377547043 6618		.strz	"FblCwTpConfirmation"
00001271 6f6e6669726d6174
00001279 696f6e00        
0000127d f105             6619		.byte	241,5
0000127f 06               6620		.byte	6
00001280 01               6621		.byte	1
00001281 00000000         6622		.long	FblCwTpConfirmation
00001285 00000000         6623		.long	__ghs_eofn_FblCwTpConfirmation
00001289 0151             6624		.byte	1,81
0000128b 8080808008       6625		.byte	128,128,128,128,8
00001290 0c               6626		.byte	12
00001291 00               6627		.byte	0
00001292 10               6628		.byte	16
00001293 00               6629		.byte	0
00001294 00               6630		.byte	0
00001295 00               6631		.byte	0
00001296 01               6632		.byte	1
00001297 01               6633		.byte	1
00001298 00               6634		.byte	0
00001299 01               6635		.byte	1
                          6636	
                          6637		.section	.debug_frame
                          6638	.LDW_5d7a688:
000001f8 00000014         6639		.long	.LDW_unq_22-.LDW_unq_21
                          6640	.LDW_unq_21:
000001fc 00000000         6641		.long	.LDW_5de14b0
00000200 00000000         6642		.long	FblCwTpConfirmation
00000204 00000064         6643		.long	__ghs_eofn_FblCwTpConfirmation-FblCwTpConfirmation
00000208 01               6644		.byte	1
00000209 00000000         6645		.long	.LDW34
0000020d 00               6646		.byte	0
0000020e 00               6647		.byte	0
0000020f 00               6648		.byte	0
                          6649	.LDW_unq_22:
                          6650		.section	.debug_line
0000092a 000502           6651		.byte	0,5,2

                                   Fri Apr 10 08:32:01 2020           Page 120
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000092d 00000000         6652		.long	FblCwTpConfirmation
00000931 06               6653		.byte	6
00000932 03               6654		.byte	3
00000933 f105             6655		.byte	241,5
00000935 02               6656		.byte	2
00000936 00               6657		.byte	0
00000937 01               6658		.byte	1
00000938 03               6659		.byte	3
00000939 04               6660		.byte	4
0000093a 02               6661		.byte	2
0000093b 0a               6662		.byte	10
0000093c 01               6663		.byte	1
0000093d 000502           6664		.byte	0,5,2
00000940 00000000         6665		.long	.LDWlin36
00000944 0b               6666		.byte	11
00000945 03               6667		.byte	3
00000946 04               6668		.byte	4
00000947 02               6669		.byte	2
00000948 00               6670		.byte	0
00000949 01               6671		.byte	1
0000094a 000502           6672		.byte	0,5,2
0000094d 00000000         6673		.long	.LDWlin37
00000951 0b               6674		.byte	11
00000952 0b               6675		.byte	11
00000953 000502           6676		.byte	0,5,2
00000956 00000000         6677		.long	.LDWlin38
0000095a 0d               6678		.byte	13
0000095b 0d               6679		.byte	13
0000095c 0b               6680		.byte	11
0000095d 0b               6681		.byte	11
0000095e 15               6682		.byte	21
0000095f 0b               6683		.byte	11
00000960 0b               6684		.byte	11
00000961 1b               6685		.byte	27
00000962 000502           6686		.byte	0,5,2
00000965 00000000         6687		.long	.LDWlin39
00000969 0c               6688		.byte	12
0000096a 0c               6689		.byte	12
0000096b 03               6690		.byte	3
0000096c 07               6691		.byte	7
0000096d 02               6692		.byte	2
0000096e 00               6693		.byte	0
0000096f 01               6694		.byte	1
00000970 02               6695		.byte	2
00000971 00               6696		.byte	0
00000972 03               6697		.byte	3
00000973 05               6698		.byte	5
00000974 02               6699		.byte	2
00000975 00               6700		.byte	0
00000976 01               6701		.byte	1
00000977 02               6702		.byte	2
00000978 00               6703		.byte	0
00000979 0b               6704		.byte	11
0000097a 0c               6705		.byte	12
0000097b 0c               6706		.byte	12
0000097c 000502           6707		.byte	0,5,2

                                   Fri Apr 10 08:32:01 2020           Page 121
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000097f 00000000         6708		.long	.LDWlin40
00000983 03               6709		.byte	3
00000984 04               6710		.byte	4
00000985 02               6711		.byte	2
00000986 00               6712		.byte	0
00000987 01               6713		.byte	1
00000988 0b               6714		.byte	11
00000989 13               6715		.byte	19
0000098a 000502           6716		.byte	0,5,2
0000098d 00000000         6717		.long	.LDWlin41
00000991 0c               6718		.byte	12
00000992 02               6719		.byte	2
00000993 00               6720		.byte	0
00000994 0c               6721		.byte	12
00000995 25               6722		.byte	37
00000996 02               6723		.byte	2
00000997 00               6724		.byte	0
00000998 03               6725		.byte	3
00000999 08               6726		.byte	8
0000099a 02               6727		.byte	2
0000099b 00               6728		.byte	0
0000099c 01               6729		.byte	1
0000099d 02               6730		.byte	2
0000099e 00               6731		.byte	0
0000099f 0d               6732		.byte	13
000009a0 0b               6733		.byte	11
000009a1 0b               6734		.byte	11
000009a2 23               6735		.byte	35
000009a3 23               6736		.byte	35
000009a4 02               6737		.byte	2
000009a5 00               6738		.byte	0
000009a6 0b               6739		.byte	11
000009a7 02               6740		.byte	2
000009a8 00               6741		.byte	0
000009a9 0b               6742		.byte	11
000009aa 02               6743		.byte	2
000009ab 0a               6744		.byte	10
000009ac 000101           6745		.byte	0,1,1
                          6746		.section	.debug_info
                          6747	.LDW_5bc5398:
0000129a 11               6748		.byte	17
0000129b 737461746500     6749		.strz	"state"
000012a1 f105             6750		.byte	241,5
000012a3 22               6751		.byte	34
000012a4 01               6752		.byte	1
000012a5 00000000         6753		.long	.LDW_499b768
000012a9 00               6754		.byte	0
000012aa 0153             6755		.byte	1,83
                          6756	
                          6757	.LDW_4953238:
000012ac 1f               6758		.byte	31
000012ad 00000000         6759		.long	.LDW24
000012b1 00000000         6760		.long	.LDW34
                          6761	
                          6762	.LDW_5bc5290:
000012b5 07               6763		.byte	7

                                   Fri Apr 10 08:32:01 2020           Page 122
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000012b6 7265736574537461 6764		.strz	"resetState"
000012be 746500          
000012c1 f305             6765		.byte	243,5
000012c3 0b               6766		.byte	11
000012c4 01               6767		.byte	1
000012c5 00000000         6768		.long	.LDW_499b768
000012c9 00               6769		.byte	0
000012ca 00               6770		.byte	0
                          6771	
000012cb 00               6772		.byte	0
                          6773	
000012cc 00               6774		.byte	0
                          6775	
                          6776	.LDW_5c5e2a8:
000012cd 15               6777		.byte	21
000012ce 46626c4377547052 6778		.strz	"FblCwTpRxStartIndication"
000012d6 785374617274496e
000012de 6469636174696f6e
000012e6 00              
000012e7 c606             6779		.byte	198,6
000012e9 06               6780		.byte	6
000012ea 01               6781		.byte	1
000012eb 00000000         6782		.long	FblCwTpRxStartIndication
000012ef 00000000         6783		.long	__ghs_eofn_FblCwTpRxStartIndication
000012f3 0151             6784		.byte	1,81
000012f5 00               6785		.byte	0
000012f6 08               6786		.byte	8
000012f7 00               6787		.byte	0
000012f8 08               6788		.byte	8
000012f9 00               6789		.byte	0
000012fa 00               6790		.byte	0
000012fb 00               6791		.byte	0
000012fc 01               6792		.byte	1
000012fd 01               6793		.byte	1
000012fe 00               6794		.byte	0
000012ff 01               6795		.byte	1
                          6796	
                          6797		.section	.debug_frame
                          6798	.LDW_5d7a848:
00000210 00000014         6799		.long	.LDW_unq_24-.LDW_unq_23
                          6800	.LDW_unq_23:
00000214 00000000         6801		.long	.LDW_5de14b0
00000218 00000000         6802		.long	FblCwTpRxStartIndication
0000021c 0000002c         6803		.long	__ghs_eofn_FblCwTpRxStartIndication-FblCwTpRxStartIndication
00000220 01               6804		.byte	1
00000221 00000000         6805		.long	.LDW54
00000225 00               6806		.byte	0
00000226 00               6807		.byte	0
00000227 00               6808		.byte	0
                          6809	.LDW_unq_24:
                          6810		.section	.debug_line
000009af 000502           6811		.byte	0,5,2
000009b2 00000000         6812		.long	FblCwTpRxStartIndication
000009b6 06               6813		.byte	6
000009b7 03               6814		.byte	3
000009b8 c606             6815		.byte	198,6
000009ba 02               6816		.byte	2
000009bb 00               6817		.byte	0
000009bc 01               6818		.byte	1
000009bd 03               6819		.byte	3

                                   Fri Apr 10 08:32:01 2020           Page 123
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000009be 05               6820		.byte	5
000009bf 02               6821		.byte	2
000009c0 08               6822		.byte	8
000009c1 01               6823		.byte	1
000009c2 000502           6824		.byte	0,5,2
000009c5 00000000         6825		.long	.LDWlin42
000009c9 0b               6826		.byte	11
000009ca 0b               6827		.byte	11
000009cb 3b               6828		.byte	59
000009cc 02               6829		.byte	2
000009cd 00               6830		.byte	0
000009ce 0c               6831		.byte	12
000009cf 1b               6832		.byte	27
000009d0 02               6833		.byte	2
000009d1 08               6834		.byte	8
000009d2 000101           6835		.byte	0,1,1
                          6836		.section	.debug_info
                          6837	.LDW_49534a8:
00001300 1f               6838		.byte	31
00001301 00000000         6839		.long	.LDW44
00001305 00000000         6840		.long	.LDW54
                          6841	
00001309 00               6842		.byte	0
                          6843	
0000130a 00               6844		.byte	0
                          6845	
                          6846	.LDW_5c8dab8:
0000130b 15               6847		.byte	21
0000130c 46626c4377547045 6848		.strz	"FblCwTpErrorIndication"
00001314 72726f72496e6469
0000131c 636174696f6e00  
00001323 dc06             6849		.byte	220,6
00001325 06               6850		.byte	6
00001326 01               6851		.byte	1
00001327 00000000         6852		.long	FblCwTpErrorIndication
0000132b 00000000         6853		.long	__ghs_eofn_FblCwTpErrorIndication
0000132f 0151             6854		.byte	1,81
00001331 03               6855		.byte	3
00001332 00               6856		.byte	0
00001333 00               6857		.byte	0
00001334 00               6858		.byte	0
00001335 00               6859		.byte	0
00001336 00               6860		.byte	0
00001337 00               6861		.byte	0
00001338 01               6862		.byte	1
00001339 01               6863		.byte	1
0000133a 00               6864		.byte	0
0000133b 01               6865		.byte	1
                          6866	
                          6867		.section	.debug_frame
                          6868	.LDW_5d7a6c8:
00000228 00000014         6869		.long	.LDW_unq_26-.LDW_unq_25
                          6870	.LDW_unq_25:
0000022c 00000000         6871		.long	.LDW_5de14b0
00000230 00000000         6872		.long	FblCwTpErrorIndication
00000234 0000000c         6873		.long	__ghs_eofn_FblCwTpErrorIndication-FblCwTpErrorIndication
00000238 01               6874		.byte	1
00000239 00000000         6875		.long	.LDW74

                                   Fri Apr 10 08:32:01 2020           Page 124
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000023d 00               6876		.byte	0
0000023e 00               6877		.byte	0
0000023f 00               6878		.byte	0
                          6879	.LDW_unq_26:
                          6880		.section	.debug_line
000009d5 000502           6881		.byte	0,5,2
000009d8 00000000         6882		.long	FblCwTpErrorIndication
000009dc 06               6883		.byte	6
000009dd 03               6884		.byte	3
000009de dd06             6885		.byte	221,6
000009e0 02               6886		.byte	2
000009e1 00               6887		.byte	0
000009e2 01               6888		.byte	1
000009e3 000502           6889		.byte	0,5,2
000009e6 00000000         6890		.long	.LDWlin43
000009ea 0b               6891		.byte	11
000009eb 03               6892		.byte	3
000009ec 04               6893		.byte	4
000009ed 02               6894		.byte	2
000009ee 00               6895		.byte	0
000009ef 01               6896		.byte	1
000009f0 1b               6897		.byte	27
000009f1 02               6898		.byte	2
000009f2 00               6899		.byte	0
000009f3 0b               6900		.byte	11
000009f4 02               6901		.byte	2
000009f5 02               6902		.byte	2
000009f6 000101           6903		.byte	0,1,1
                          6904		.section	.debug_info
                          6905	.LDW_5bc5760:
0000133c 11               6906		.byte	17
0000133d 6572726f72436f64 6907		.strz	"errorCode"
00001345 6500            
00001347 dc06             6908		.byte	220,6
00001349 25               6909		.byte	37
0000134a 01               6910		.byte	1
0000134b 00000000         6911		.long	.LDW_499b768
0000134f 00               6912		.byte	0
00001350 0153             6913		.byte	1,83
                          6914	
                          6915	.LDW_4953418:
00001352 1f               6916		.byte	31
00001353 00000000         6917		.long	.LDW64
00001357 00000000         6918		.long	.LDW74
                          6919	
0000135b 00               6920		.byte	0
                          6921	
0000135c 00               6922		.byte	0
                          6923	
                          6924	.LDW_5c8dbe8:
0000135d 15               6925		.byte	21
0000135e 46626c4377507265 6926		.strz	"FblCwPrecopy"
00001366 636f707900      
0000136b f206             6927		.byte	242,6
0000136d 06               6928		.byte	6
0000136e 01               6929		.byte	1
0000136f 00000000         6930		.long	FblCwPrecopy
00001373 00000000         6931		.long	__ghs_eofn_FblCwPrecopy

                                   Fri Apr 10 08:32:01 2020           Page 125
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001377 0151             6932		.byte	1,81
00001379 8080808008       6933		.byte	128,128,128,128,8
0000137e 0c               6934		.byte	12
0000137f 00               6935		.byte	0
00001380 10               6936		.byte	16
00001381 00               6937		.byte	0
00001382 00               6938		.byte	0
00001383 00               6939		.byte	0
00001384 01               6940		.byte	1
00001385 01               6941		.byte	1
00001386 00               6942		.byte	0
00001387 01               6943		.byte	1
                          6944	
                          6945		.section	.debug_frame
                          6946	.LDW_5d79d48:
00000240 00000014         6947		.long	.LDW_unq_28-.LDW_unq_27
                          6948	.LDW_unq_27:
00000244 00000000         6949		.long	.LDW_5de14b0
00000248 00000000         6950		.long	FblCwPrecopy
0000024c 00000048         6951		.long	__ghs_eofn_FblCwPrecopy-FblCwPrecopy
00000250 01               6952		.byte	1
00000251 00000000         6953		.long	.LDW31
00000255 00               6954		.byte	0
00000256 00               6955		.byte	0
00000257 00               6956		.byte	0
                          6957	.LDW_unq_28:
                          6958		.section	.debug_line
000009f9 000502           6959		.byte	0,5,2
000009fc 00000000         6960		.long	FblCwPrecopy
00000a00 06               6961		.byte	6
00000a01 03               6962		.byte	3
00000a02 f206             6963		.byte	242,6
00000a04 02               6964		.byte	2
00000a05 00               6965		.byte	0
00000a06 01               6966		.byte	1
00000a07 02               6967		.byte	2
00000a08 0c               6968		.byte	12
00000a09 03               6969		.byte	3
00000a0a 0b               6970		.byte	11
00000a0b 02               6971		.byte	2
00000a0c 08               6972		.byte	8
00000a0d 01               6973		.byte	1
00000a0e 000502           6974		.byte	0,5,2
00000a11 00000000         6975		.long	.LDWlin2
00000a15 0b               6976		.byte	11
00000a16 0c               6977		.byte	12
00000a17 02               6978		.byte	2
00000a18 00               6979		.byte	0
00000a19 0d               6980		.byte	13
00000a1a 000502           6981		.byte	0,5,2
00000a1d 00000000         6982		.long	.LDWlin3
00000a21 0b               6983		.byte	11
00000a22 0c               6984		.byte	12
00000a23 25               6985		.byte	37
00000a24 000502           6986		.byte	0,5,2
00000a27 00000000         6987		.long	.LDWlin4

                                   Fri Apr 10 08:32:01 2020           Page 126
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000a2b 0b               6988		.byte	11
00000a2c 0b               6989		.byte	11
00000a2d 33               6990		.byte	51
00000a2e 23               6991		.byte	35
00000a2f 02               6992		.byte	2
00000a30 00               6993		.byte	0
00000a31 0b               6994		.byte	11
00000a32 02               6995		.byte	2
00000a33 00               6996		.byte	0
00000a34 0c               6997		.byte	12
00000a35 02               6998		.byte	2
00000a36 0a               6999		.byte	10
00000a37 000101           7000		.byte	0,1,1
                          7001		.section	.debug_info
                          7002	.LDW_5bc57b8:
00001388 11               7003		.byte	17
00001389 6461746100       7004		.strz	"data"
0000138e f206             7005		.byte	242,6
00001390 21               7006		.byte	33
00001391 01               7007		.byte	1
00001392 00000000         7008		.long	.LDW_499b818
00001396 00               7009		.byte	0
00001397 016f             7010		.byte	1,111
                          7011	
                          7012	.LDW_4953508:
00001399 1f               7013		.byte	31
0000139a 00000000         7014		.long	.LDW21
0000139e 00000000         7015		.long	.LDW31
                          7016	
                          7017	.LDW_5bc5340:
000013a2 07               7018		.byte	7
000013a3 7046756e63427566 7019		.strz	"pFuncBuffer"
000013ab 66657200        
000013af f506             7020		.byte	245,6
000013b1 0d               7021		.byte	13
000013b2 01               7022		.byte	1
000013b3 00000000         7023		.long	.LDW_495c688
000013b7 00               7024		.byte	0
000013b8 00               7025		.byte	0
                          7026	
000013b9 00               7027		.byte	0
                          7028	
000013ba 00               7029		.byte	0
                          7030	
                          7031	.LDW_5c8d4c8:
000013bb 15               7032		.byte	21
000013bc 46626c48616e646c 7033		.strz	"FblHandleRxMsg"
000013c4 6552784d736700  
000013cb 9d07             7034		.byte	157,7
000013cd 06               7035		.byte	6
000013ce 01               7036		.byte	1
000013cf 00000000         7037		.long	FblHandleRxMsg
000013d3 00000000         7038		.long	__ghs_eofn_FblHandleRxMsg
000013d7 0151             7039		.byte	1,81
000013d9 808080800c       7040		.byte	128,128,128,128,12
000013de 08               7041		.byte	8
000013df 00               7042		.byte	0
000013e0 10               7043		.byte	16

                                   Fri Apr 10 08:32:01 2020           Page 127
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000013e1 00               7044		.byte	0
000013e2 00               7045		.byte	0
000013e3 00               7046		.byte	0
000013e4 01               7047		.byte	1
000013e5 01               7048		.byte	1
000013e6 00               7049		.byte	0
000013e7 01               7050		.byte	1
                          7051	
                          7052		.section	.debug_frame
                          7053	.LDW_5d7aac8:
00000258 00000014         7054		.long	.LDW_unq_2a-.LDW_unq_29
                          7055	.LDW_unq_29:
0000025c 00000000         7056		.long	.LDW_5de14b0
00000260 00000000         7057		.long	FblHandleRxMsg
00000264 00000048         7058		.long	__ghs_eofn_FblHandleRxMsg-FblHandleRxMsg
00000268 01               7059		.byte	1
00000269 00000000         7060		.long	.LDW94
0000026d 00               7061		.byte	0
0000026e 00               7062		.byte	0
0000026f 00               7063		.byte	0
                          7064	.LDW_unq_2a:
                          7065		.section	.debug_line
00000a3a 000502           7066		.byte	0,5,2
00000a3d 00000000         7067		.long	FblHandleRxMsg
00000a41 06               7068		.byte	6
00000a42 03               7069		.byte	3
00000a43 9e07             7070		.byte	158,7
00000a45 02               7071		.byte	2
00000a46 00               7072		.byte	0
00000a47 01               7073		.byte	1
00000a48 03               7074		.byte	3
00000a49 04               7075		.byte	4
00000a4a 02               7076		.byte	2
00000a4b 10               7077		.byte	16
00000a4c 01               7078		.byte	1
00000a4d 03               7079		.byte	3
00000a4e 04               7080		.byte	4
00000a4f 02               7081		.byte	2
00000a50 04               7082		.byte	4
00000a51 01               7083		.byte	1
00000a52 13               7084		.byte	19
00000a53 0c               7085		.byte	12
00000a54 000502           7086		.byte	0,5,2
00000a57 00000000         7087		.long	.LDWlin44
00000a5b 0b               7088		.byte	11
00000a5c 0b               7089		.byte	11
00000a5d 3b               7090		.byte	59
00000a5e 000502           7091		.byte	0,5,2
00000a61 00000000         7092		.long	.LDWlin45
00000a65 0b               7093		.byte	11
00000a66 02               7094		.byte	2
00000a67 00               7095		.byte	0
00000a68 03               7096		.byte	3
00000a69 7a               7097		.byte	122
00000a6a 02               7098		.byte	2
00000a6b 00               7099		.byte	0

                                   Fri Apr 10 08:32:01 2020           Page 128
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000a6c 01               7100		.byte	1
00000a6d 000502           7101		.byte	0,5,2
00000a70 00000000         7102		.long	.LDWlin46
00000a74 03               7103		.byte	3
00000a75 08               7104		.byte	8
00000a76 02               7105		.byte	2
00000a77 00               7106		.byte	0
00000a78 01               7107		.byte	1
00000a79 0b               7108		.byte	11
00000a7a 02               7109		.byte	2
00000a7b 0c               7110		.byte	12
00000a7c 000101           7111		.byte	0,1,1
                          7112		.section	.debug_info
                          7113	.LDW_5bc52e8:
000013e8 11               7114		.byte	17
000013e9 66626c527843616e 7115		.strz	"fblRxCanMsgHdl"
000013f1 4d736748646c00  
000013f8 9d07             7116		.byte	157,7
000013fa 1d               7117		.byte	29
000013fb 01               7118		.byte	1
000013fc 00000000         7119		.long	.LDW_499b768
00001400 00               7120		.byte	0
00001401 016f             7121		.byte	1,111
                          7122	
                          7123	.LDW_5bc53f0:
00001403 11               7124		.byte	17
00001404 63616e4461746150 7125		.strz	"canDataPtr"
0000140c 747200          
0000140f 9d07             7126		.byte	157,7
00001411 3a               7127		.byte	58
00001412 01               7128		.byte	1
00001413 00000000         7129		.long	.LDW_499b818
00001417 00               7130		.byte	0
00001418 016e             7131		.byte	1,110
                          7132	
                          7133	.LDW_4953568:
0000141a 1f               7134		.byte	31
0000141b 00000000         7135		.long	.LDW84
0000141f 00000000         7136		.long	.LDW94
                          7137	
                          7138	.LDW_5bc5868:
00001423 06               7139		.byte	6
00001424 6900             7140		.strz	"i"
00001426 a007             7141		.byte	160,7
00001428 0b               7142		.byte	11
00001429 01               7143		.byte	1
0000142a 00000000         7144		.long	.LDW_499b768
0000142e 00               7145		.byte	0
0000142f 00               7146		.byte	0
00001430 0156             7147		.byte	1,86
                          7148	
00001432 00               7149		.byte	0
                          7150	
00001433 00               7151		.byte	0
                          7152	
                          7153	.LDW_5c8de48:
00001434 16               7154		.byte	22
00001435 46626c43775f5265 7155		.strz	"FblCw_ResetParameter"
0000143d 736574506172616d
00001445 6574657200      

                                   Fri Apr 10 08:32:01 2020           Page 129
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000144a bf07             7156		.byte	191,7
0000144c 0c               7157		.byte	12
0000144d 01               7158		.byte	1
0000144e 00000000         7159		.long	.LDW_5bc5600
00001452 00000000         7160		.long	FblCw_ResetParameter
00001456 00000000         7161		.long	__ghs_eofn_FblCw_ResetParameter
0000145a 0151             7162		.byte	1,81
0000145c 03               7163		.byte	3
0000145d 00               7164		.byte	0
0000145e 00               7165		.byte	0
0000145f 00               7166		.byte	0
00001460 00               7167		.byte	0
00001461 00               7168		.byte	0
00001462 00               7169		.byte	0
00001463 01               7170		.byte	1
00001464 01               7171		.byte	1
00001465 00               7172		.byte	0
00001466 01               7173		.byte	1
                          7174	
                          7175		.section	.debug_abbrev
00000141 16               7176		.byte	22
00000142 2e               7177		.byte	46
00000143 01               7178		.byte	1
00000144 0308             7179		.byte	3,8
00000146 3b0f             7180		.byte	59,15
00000148 390f             7181		.byte	57,15
0000014a 3a0f             7182		.byte	58,15
0000014c 4910             7183		.byte	73,16
0000014e 1101             7184		.byte	17,1
00000150 1201             7185		.byte	18,1
00000152 400a             7186		.byte	64,10
00000154 8341             7187		.byte	131,65
00000156 0f               7188		.byte	15
00000157 8741             7189		.byte	135,65
00000159 0d               7190		.byte	13
0000015a 8541             7191		.byte	133,65
0000015c 0f               7192		.byte	15
0000015d 8641             7193		.byte	134,65
0000015f 0d               7194		.byte	13
00000160 9241             7195		.byte	146,65
00000162 0f               7196		.byte	15
00000163 3c0c             7197		.byte	60,12
00000165 200b             7198		.byte	32,11
00000167 3f0c             7199		.byte	63,12
00000169 320b             7200		.byte	50,11
0000016b 4c0b             7201		.byte	76,11
0000016d 270c             7202		.byte	39,12
0000016f 0000             7203		.byte	0,0
                          7204	
                          7205		.section	.debug_frame
                          7206	.LDW_5d7ac08:
00000270 00000014         7207		.long	.LDW_unq_2c-.LDW_unq_2b
                          7208	.LDW_unq_2b:
00000274 00000000         7209		.long	.LDW_5de14b0
00000278 00000000         7210		.long	FblCw_ResetParameter
0000027c 0000001e         7211		.long	__ghs_eofn_FblCw_ResetParameter-FblCw_ResetParameter

                                   Fri Apr 10 08:32:01 2020           Page 130
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000280 01               7212		.byte	1
00000281 00000000         7213		.long	.LDW15
00000285 00               7214		.byte	0
00000286 00               7215		.byte	0
00000287 00               7216		.byte	0
                          7217	.LDW_unq_2c:
                          7218		.section	.debug_line
00000a7f 000502           7219		.byte	0,5,2
00000a82 00000000         7220		.long	FblCw_ResetParameter
00000a86 06               7221		.byte	6
00000a87 03               7222		.byte	3
00000a88 c107             7223		.byte	193,7
00000a8a 02               7224		.byte	2
00000a8b 00               7225		.byte	0
00000a8c 01               7226		.byte	1
00000a8d 53               7227		.byte	83
00000a8e 34               7228		.byte	52
00000a8f 02               7229		.byte	2
00000a90 02               7230		.byte	2
00000a91 000101           7231		.byte	0,1,1
                          7232		.section	.debug_info
                          7233	.LDW_5c5e5e0:
00001467 1f               7234		.byte	31
00001468 00000000         7235		.long	.LDW05
0000146c 00000000         7236		.long	.LDW15
                          7237	
00001470 00               7238		.byte	0
                          7239	
00001471 00               7240		.byte	0
                          7241	
00001472 00               7242		.byte	0
                          7243	
                          7244		.section	.debug_line
                          7245	.Ldw_line_end:
                          7246		.section	.debug_macinfo
00000000 01               7247		.byte	1
00000001 00               7248		.byte	0
00000002 5f5f4c494e455f5f 7249		.strz	"__LINE__"
0000000a 00              
0000000b 01               7250		.byte	1
0000000c 00               7251		.byte	0
0000000d 5f5f46494c455f5f 7252		.strz	"__FILE__"
00000015 00              
00000016 03               7253		.byte	3
00000017 00               7254		.byte	0
00000018 01               7255		.byte	1
00000019 03               7256		.byte	3
0000001a 3b               7257		.byte	59
0000001b 02               7258		.byte	2
0000001c 01               7259		.byte	1
0000001d 4a               7260		.byte	74
0000001e 5f5f46424c5f494e 7261		.strz	"__FBL_INC_H__ "
00000026 435f485f5f2000  
0000002d 03               7262		.byte	3
0000002e 59               7263		.byte	89
0000002f 03               7264		.byte	3
00000030 01               7265		.byte	1
00000031 76               7266		.byte	118
00000032 5f46424c57524150 7267		.strz	"_FBLWRAPPERCOM_CAN_VERSION 0x0208u"
0000003a 504552434f4d5f43
00000042 414e5f5645525349
0000004a 4f4e203078303230
00000052 387500          

                                   Fri Apr 10 08:32:01 2020           Page 131
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000055 01               7268		.byte	1
00000056 77               7269		.byte	119
00000057 5f46424c57524150 7270		.strz	"_FBLWRAPPERCOM_CAN_RELEASE_VERSION 0x01u"
0000005f 504552434f4d5f43
00000067 414e5f52454c4541
0000006f 53455f5645525349
00000077 4f4e203078303175
0000007f 00              
00000080 04               7271		.byte	4
00000081 03               7272		.byte	3
00000082 5a               7273		.byte	90
00000083 04               7274		.byte	4
00000084 01               7275		.byte	1
00000085 30               7276		.byte	48
00000086 5647454e5f47454e 7277		.strz	"VGEN_GENY "
0000008e 592000          
00000091 01               7278		.byte	1
00000092 4a               7279		.byte	74
00000093 435f435055545950 7280		.strz	"C_CPUTYPE_32BIT "
0000009b 455f333242495420
000000a3 00              
000000a4 01               7281		.byte	1
000000a5 54               7282		.byte	84
000000a6 435f435055545950 7283		.strz	"C_CPUTYPE_BIGENDIAN "
000000ae 455f424947454e44
000000b6 49414e2000      
000000bb 01               7284		.byte	1
000000bc 59               7285		.byte	89
000000bd 435f435055545950 7286		.strz	"C_CPUTYPE_BITORDER_MSB2LSB "
000000c5 455f4249544f5244
000000cd 45525f4d5342324c
000000d5 53422000        
000000d9 01               7287		.byte	1
000000da 63               7288		.byte	99
000000db 565f454e41424c45 7289		.strz	"V_ENABLE_USE_DUMMY_STATEMENT "
000000e3 5f5553455f44554d
000000eb 4d595f5354415445
000000f3 4d454e542000    
000000f9 01               7290		.byte	1
000000fa 8901             7291		.byte	137,1
000000fc 5647454e5f454e41 7292		.strz	"VGEN_ENABLE_CANFBL "
00000104 424c455f43414e46
0000010c 424c2000        
00000110 01               7293		.byte	1
00000111 be01             7294		.byte	190,1
00000113 565f434f4d505f47 7295		.strz	"V_COMP_GHS_MPC5700 "
0000011b 48535f4d50433537
00000123 30302000        
00000127 01               7296		.byte	1
00000128 bf01             7297		.byte	191,1
0000012a 565f4350555f4d50 7298		.strz	"V_CPU_MPC5700 "
00000132 43353730302000  
00000139 01               7299		.byte	1
0000013a ca01             7300		.byte	202,1
0000013c 4d414749435f4e55 7301		.strz	"MAGIC_NUMBER 312540478"
00000144 4d42455220333132
0000014c 35343034373800  
00000153 04               7302		.byte	4
00000154 03               7303		.byte	3
00000155 5c               7304		.byte	92
00000156 05               7305		.byte	5
00000157 03               7306		.byte	3
00000158 31               7307		.byte	49
00000159 06               7308		.byte	6
0000015a 03               7309		.byte	3
0000015b 34               7310		.byte	52
0000015c 07               7311		.byte	7
0000015d 01               7312		.byte	1
0000015e 8704             7313		.byte	135,4
00000160 565f4445465f5355 7314		.strz	"V_DEF_SUPPORTED_PLATFORM "
00000168 50504f525445445f
00000170 504c4154464f524d
00000178 2000            
0000017a 01               7315		.byte	1
0000017b e104             7316		.byte	225,4
0000017d 7675696e74782076 7317		.strz	"vuintx vuint32"
00000185 75696e74333200  
0000018c 01               7318		.byte	1
0000018d da06             7319		.byte	218,6
0000018f 4c4f43414c5f494e 7320		.strz	"LOCAL_INLINE static inline"
00000197 4c494e4520737461
0000019f 74696320696e6c69
000001a7 6e6500          
000001aa 01               7321		.byte	1
000001ab e406             7322		.byte	228,6
000001ad 565f4d454d524f4d 7323		.strz	"V_MEMROM0 "
000001b5 302000          

                                   Fri Apr 10 08:32:01 2020           Page 132
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000001b8 01               7324		.byte	1
000001b9 ec06             7325		.byte	236,6
000001bb 565f4d454d524f4d 7326		.strz	"V_MEMROM1 "
000001c3 312000          
000001c6 01               7327		.byte	1
000001c7 f006             7328		.byte	240,6
000001c9 565f4d454d524f4d 7329		.strz	"V_MEMROM1_FAR "
000001d1 315f4641522000  
000001d8 01               7330		.byte	1
000001d9 8007             7331		.byte	128,7
000001db 565f4d454d524f4d 7332		.strz	"V_MEMROM2 const"
000001e3 3220636f6e737400
000001eb 01               7333		.byte	1
000001ec 8307             7334		.byte	131,7
000001ee 4d454d4f52595f52 7335		.strz	"MEMORY_ROM V_MEMROM2"
000001f6 4f4d20565f4d454d
000001fe 524f4d3200      
00000203 01               7336		.byte	1
00000204 8a07             7337		.byte	138,7
00000206 565f4d454d524f4d 7338		.strz	"V_MEMROM2_FAR const"
0000020e 325f46415220636f
00000216 6e737400        
0000021a 01               7339		.byte	1
0000021b 9307             7340		.byte	147,7
0000021d 565f4d454d524f4d 7341		.strz	"V_MEMROM3 "
00000225 332000          
00000228 01               7342		.byte	1
00000229 9907             7343		.byte	153,7
0000022b 565f4d454d52414d 7344		.strz	"V_MEMRAM0 "
00000233 302000          
00000236 01               7345		.byte	1
00000237 9d07             7346		.byte	157,7
00000239 565f4d454d52414d 7347		.strz	"V_MEMRAM1_NEAR "
00000241 315f4e4541522000
00000249 01               7348		.byte	1
0000024a a107             7349		.byte	161,7
0000024c 565f4d454d52414d 7350		.strz	"V_MEMRAM1 "
00000254 312000          
00000257 01               7351		.byte	1
00000258 ab07             7352		.byte	171,7
0000025a 565f4d454d52414d 7353		.strz	"V_MEMRAM2_NEAR "
00000262 325f4e4541522000
0000026a 01               7354		.byte	1
0000026b ae07             7355		.byte	174,7
0000026d 4d454d4f52595f4e 7356		.strz	"MEMORY_NEAR V_MEMRAM2_NEAR"
00000275 45415220565f4d45
0000027d 4d52414d325f4e45
00000285 415200          
00000288 01               7357		.byte	1
00000289 b507             7358		.byte	181,7
0000028b 565f4d454d52414d 7359		.strz	"V_MEMRAM2 "
00000293 322000          
00000296 01               7360		.byte	1
00000297 bf07             7361		.byte	191,7
00000299 565f4d454d52414d 7362		.strz	"V_MEMRAM2_FAR "
000002a1 325f4641522000  
000002a8 01               7363		.byte	1
000002a9 c207             7364		.byte	194,7
000002ab 4d454d4f52595f46 7365		.strz	"MEMORY_FAR V_MEMRAM2_FAR"
000002b3 415220565f4d454d
000002bb 52414d325f464152
000002c3 00              
000002c4 01               7366		.byte	1
000002c5 cc07             7367		.byte	204,7
000002c7 565f4d454d52414d 7368		.strz	"V_MEMRAM3 "
000002cf 332000          
000002d2 01               7369		.byte	1
000002d3 f907             7370		.byte	249,7
000002d5 565f4e554c4c2028 7371		.strz	"V_NULL ((void*)0)"
000002dd 28766f69642a2930
000002e5 2900            
000002e7 01               7372		.byte	1
000002e8 fe07             7373		.byte	254,7
000002ea 4e554c4c20565f4e 7374		.strz	"NULL V_NULL"
000002f2 554c4c00        
000002f6 04               7375		.byte	4
000002f7 01               7376		.byte	1
000002f8 45               7377		.byte	69
000002f9 6b47454e79566572 7378		.strz	"kGENyVersionNumberOfBytes 10"
00000301 73696f6e4e756d62
00000309 65724f6642797465
00000311 7320313000      
00000316 04               7379		.byte	4

                                   Fri Apr 10 08:32:01 2020           Page 133
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000317 04               7380		.byte	4
00000318 03               7381		.byte	3
00000319 60               7382		.byte	96
0000031a 08               7383		.byte	8
0000031b 03               7384		.byte	3
0000031c 44               7385		.byte	68
0000031d 09               7386		.byte	9
0000031e 03               7387		.byte	3
0000031f 55               7388		.byte	85
00000320 0a               7389		.byte	10
00000321 01               7390		.byte	1
00000322 45               7391		.byte	69
00000323 5f5f5345435f494e 7392		.strz	"__SEC_INC_H__ "
0000032b 435f485f5f2000  
00000332 03               7393		.byte	3
00000333 56               7394		.byte	86
00000334 0b               7395		.byte	11
00000335 01               7396		.byte	1
00000336 2f               7397		.byte	47
00000337 5345435f434c4153 7398		.strz	"SEC_CLASS_DDD 0"
0000033f 535f444444203000
00000347 01               7399		.byte	1
00000348 30               7400		.byte	48
00000349 5345435f434c4153 7401		.strz	"SEC_CLASS_C 1"
00000351 535f43203100    
00000357 01               7402		.byte	1
00000358 31               7403		.byte	49
00000359 5345435f434c4153 7404		.strz	"SEC_CLASS_CCC 2"
00000361 535f434343203200
00000369 01               7405		.byte	1
0000036a 32               7406		.byte	50
0000036b 5345435f434c4153 7407		.strz	"SEC_CLASS_VENDOR 3"
00000373 535f56454e444f52
0000037b 203300          
0000037e 01               7408		.byte	1
0000037f 39               7409		.byte	57
00000380 5345435f52495045 7410		.strz	"SEC_RIPEMD160 0"
00000388 4d44313630203000
00000390 01               7411		.byte	1
00000391 3a               7412		.byte	58
00000392 5345435f53484131 7413		.strz	"SEC_SHA1 1"
0000039a 203100          
0000039d 01               7414		.byte	1
0000039e 3b               7415		.byte	59
0000039f 5345435f53484132 7416		.strz	"SEC_SHA256 2"
000003a7 3536203200      
000003ac 01               7417		.byte	1
000003ad 44               7418		.byte	68
000003ae 5345435f4b45595f 7419		.strz	"SEC_KEY_TIMEOUT 0"
000003b6 54494d454f555420
000003be 3000            
000003c0 01               7420		.byte	1
000003c1 48               7421		.byte	72
000003c2 5345435f48415348 7422		.strz	"SEC_HASH_ALGORITHM SEC_SHA1"
000003ca 5f414c474f524954
000003d2 484d205345435f53
000003da 48413100        
000003de 01               7423		.byte	1
000003df 49               7424		.byte	73
000003e0 5345435f53454355 7425		.strz	"SEC_SECURITY_CLASS SEC_CLASS_DDD"
000003e8 524954595f434c41
000003f0 5353205345435f43
000003f8 4c4153535f444444
00000400 00              
00000401 01               7426		.byte	1
00000402 4f               7427		.byte	79
00000403 5345435f454e4142 7428		.strz	"SEC_ENABLE_VERIFICATION_KEY_INTERNAL "
0000040b 4c455f5645524946
00000413 49434154494f4e5f
0000041b 4b45595f494e5445
00000423 524e414c2000    
00000429 01               7429		.byte	1
0000042a 50               7430		.byte	80
0000042b 5345435f53495a45 7431		.strz	"SEC_SIZE_CHECKSUM_VENDOR 0"
00000433 5f434845434b5355
0000043b 4d5f56454e444f52
00000443 203000          
00000446 01               7432		.byte	1
00000447 52               7433		.byte	82
00000448 5345435f56455249 7434		.strz	"SEC_VERIFY_BYTES 64"
00000450 46595f4259544553
00000458 20363400        
0000045c 01               7435		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 134
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000045d 53               7436		.byte	83
0000045e 5345435f454e4142 7437		.strz	"SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH "
00000466 4c455f5645524946
0000046e 49434154494f4e5f
00000476 414444524553535f
0000047e 4c454e4754482000
00000486 01               7438		.byte	1
00000487 54               7439		.byte	84
00000488 5345435f454e4142 7440		.strz	"SEC_ENABLE_CRC_TOTAL "
00000490 4c455f4352435f54
00000498 4f54414c2000    
0000049e 01               7441		.byte	1
0000049f 57               7442		.byte	87
000004a0 5345435f5645525f 7443		.strz	"SEC_VER_SIG_OFFSET 0"
000004a8 5349475f4f464653
000004b0 4554203000      
000004b5 01               7444		.byte	1
000004b6 58               7445		.byte	88
000004b7 5345435f5645525f 7446		.strz	"SEC_VER_CRC_OFFSET 0"
000004bf 4352435f4f464653
000004c7 4554203000      
000004cc 04               7447		.byte	4
000004cd 03               7448		.byte	3
000004ce 59               7449		.byte	89
000004cf 0c               7450		.byte	12
000004d0 03               7451		.byte	3
000004d1 4d               7452		.byte	77
000004d2 0a               7453		.byte	10
000004d3 04               7454		.byte	4
000004d4 01               7455		.byte	1
000004d5 59               7456		.byte	89
000004d6 5345435f57415443 7457		.strz	"SEC_WATCHDOG_CYCLE_COUNT (0x20u)"
000004de 48444f475f435943
000004e6 4c455f434f554e54
000004ee 2028307832307529
000004f6 00              
000004f7 01               7458		.byte	1
000004f8 60               7459		.byte	96
000004f9 5345435f454e4142 7460		.strz	"SEC_ENABLE_WORKSPACE_INTERNAL "
00000501 4c455f574f524b53
00000509 504143455f494e54
00000511 45524e414c2000  
00000518 01               7461		.byte	1
00000519 66               7462		.byte	102
0000051a 5345435f43484543 7463		.strz	"SEC_CHECKSUM_TYPE_CRC 0u"
00000522 4b53554d5f545950
0000052a 455f435243203075
00000532 00              
00000533 01               7464		.byte	1
00000534 6b               7465		.byte	107
00000535 5345435f43484543 7466		.strz	"SEC_CHECKSUM_TYPE_HASH (SEC_CHECKSUM_TYPE_CRC + 1u)"
0000053d 4b53554d5f545950
00000545 455f484153482028
0000054d 5345435f43484543
00000555 4b53554d5f545950
0000055d 455f435243202b20
00000565 31752900        
00000569 01               7467		.byte	1
0000056a 71               7468		.byte	113
0000056b 5345435f4d41435f 7469		.strz	"SEC_MAC_TYPE_HMAC 0u"
00000573 545950455f484d41
0000057b 4320307500      
00000580 01               7470		.byte	1
00000581 8601             7471		.byte	134,1
00000583 5345435f43524333 7472		.strz	"SEC_CRC32 0u"
0000058b 3220307500      
00000590 01               7473		.byte	1
00000591 8e01             7474		.byte	142,1
00000593 5345435f43524331 7475		.strz	"SEC_CRC16 (SEC_CRC32 + 1u)"
0000059b 3620285345435f43
000005a3 52433332202b2031
000005ab 752900          
000005ae 01               7476		.byte	1
000005af ca01             7477		.byte	202,1
000005b1 5345435f5349474e 7478		.strz	"SEC_SIGNATURE_SCHEME_RSA_V15 0u"
000005b9 41545552455f5343
000005c1 48454d455f525341
000005c9 5f56313520307500
000005d1 01               7479		.byte	1
000005d2 e301             7480		.byte	227,1
000005d4 5345435f43414c4c 7481		.strz	"SEC_CALL_TYPE "
000005dc 5f545950452000  
000005e3 04               7482		.byte	4
000005e4 03               7483		.byte	3
000005e5 5c               7484		.byte	92
000005e6 0d               7485		.byte	13
000005e7 03               7486		.byte	3
000005e8 2f               7487		.byte	47
000005e9 0e               7488		.byte	14
000005ea 04               7489		.byte	4
000005eb 04               7490		.byte	4
000005ec 04               7491		.byte	4

                                   Fri Apr 10 08:32:01 2020           Page 135
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000005ed 03               7492		.byte	3
000005ee 58               7493		.byte	88
000005ef 0f               7494		.byte	15
000005f0 01               7495		.byte	1
000005f1 6d               7496		.byte	109
000005f2 5345435f4352435f 7497		.strz	"SEC_CRC_TYPE SEC_CRC32"
000005fa 5459504520534543
00000602 5f435243333200  
00000609 01               7498		.byte	1
0000060a 78               7499		.byte	120
0000060b 5345435f454e4142 7500		.strz	"SEC_ENABLE_CRC_TYPE_CRC32 "
00000613 4c455f4352435f54
0000061b 5950455f43524333
00000623 322000          
00000626 04               7501		.byte	4
00000627 03               7502		.byte	3
00000628 59               7503		.byte	89
00000629 10               7504		.byte	16
0000062a 03               7505		.byte	3
0000062b 55               7506		.byte	85
0000062c 11               7507		.byte	17
0000062d 01               7508		.byte	1
0000062e 3e               7509		.byte	62
0000062f 5345435f53454544 7510		.strz	"SEC_SEED_LENGTH 8u"
00000637 5f4c454e47544820
0000063f 387500          
00000642 01               7511		.byte	1
00000643 40               7512		.byte	64
00000644 5345435f4b45595f 7513		.strz	"SEC_KEY_LENGTH 4u"
0000064c 4c454e4754482034
00000654 7500            
00000656 04               7514		.byte	4
00000657 01               7515		.byte	1
00000658 7e               7516		.byte	126
00000659 5345435f50524e47 7517		.strz	"SEC_PRNG_LCG 0u"
00000661 5f4c434720307500
00000669 01               7518		.byte	1
0000066a 8301             7519		.byte	131,1
0000066c 5345435f50524e47 7520		.strz	"SEC_PRNG_FIPS186 (SEC_PRNG_LCG + 1u)"
00000674 5f46495053313836
0000067c 20285345435f5052
00000684 4e475f4c4347202b
0000068c 2031752900      
00000691 01               7521		.byte	1
00000692 8901             7522		.byte	137,1
00000694 5345435f50524e47 7523		.strz	"SEC_PRNG SEC_PRNG_LCG"
0000069c 205345435f50524e
000006a4 475f4c434700    
000006aa 04               7524		.byte	4
000006ab 03               7525		.byte	3
000006ac 5a               7526		.byte	90
000006ad 12               7527		.byte	18
000006ae 01               7528		.byte	1
000006af ba01             7529		.byte	186,1
000006b1 5345435f53454355 7530		.strz	"SEC_SECURITY_CLASS_VERIFY SEC_SECURITY_CLASS"
000006b9 524954595f434c41
000006c1 53535f5645524946
000006c9 59205345435f5345
000006d1 4355524954595f43
000006d9 4c41535300      
000006de 01               7531		.byte	1
000006df c001             7532		.byte	192,1
000006e1 5345435f53454355 7533		.strz	"SEC_SECURITY_CLASS_VERIFICATION SEC_SECURITY_CLASS"
000006e9 524954595f434c41
000006f1 53535f5645524946
000006f9 49434154494f4e20
00000701 5345435f53454355
00000709 524954595f434c41
00000711 535300          
00000714 01               7534		.byte	1
00000715 c701             7535		.byte	199,1
00000717 5345435f43484543 7536		.strz	"SEC_CHECKSUM_TYPE SEC_CHECKSUM_TYPE_CRC"
0000071f 4b53554d5f545950
00000727 45205345435f4348
0000072f 45434b53554d5f54
00000737 5950455f43524300
0000073f 01               7537		.byte	1
00000740 cd01             7538		.byte	205,1
00000742 5345435f4d41435f 7539		.strz	"SEC_MAC_TYPE SEC_MAC_TYPE_HMAC"
0000074a 5459504520534543
00000752 5f4d41435f545950
0000075a 455f484d414300  
00000761 01               7540		.byte	1
00000762 d301             7541		.byte	211,1
00000764 5345435f5349474e 7542		.strz	"SEC_SIGNATURE_SCHEME SEC_SIGNATURE_SCHEME_RSA_V15"
0000076c 41545552455f5343
00000774 48454d4520534543
0000077c 5f5349474e415455
00000784 52455f534348454d
0000078c 455f5253415f5631
00000794 3500            
00000796 01               7543		.byte	1
00000797 fd01             7544		.byte	253,1
00000799 5345435f454e4142 7545		.strz	"SEC_ENABLE_SECURITY_CLASS_DDD "
000007a1 4c455f5345435552
000007a9 4954595f434c4153
000007b1 535f4444442000  
000007b8 01               7546		.byte	1
000007b9 8f02             7547		.byte	143,2

                                   Fri Apr 10 08:32:01 2020           Page 136
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000007bb 5345435f454e4142 7548		.strz	"SEC_ENABLE_CHECKSUM_TYPE_CRC "
000007c3 4c455f434845434b
000007cb 53554d5f54595045
000007d3 5f4352432000    
000007d9 01               7549		.byte	1
000007da db02             7550		.byte	219,2
000007dc 5345435f454e4142 7551		.strz	"SEC_ENABLE_VERIFY_CHECKSUM_CRC "
000007e4 4c455f5645524946
000007ec 595f434845434b53
000007f4 554d5f4352432000
000007fc 04               7552		.byte	4
000007fd 04               7553		.byte	4
000007fe 04               7554		.byte	4
000007ff 03               7555		.byte	3
00000800 62               7556		.byte	98
00000801 13               7557		.byte	19
00000802 03               7558		.byte	3
00000803 48               7559		.byte	72
00000804 14               7560		.byte	20
00000805 01               7561		.byte	1
00000806 33               7562		.byte	51
00000807 46424c5f5553455f 7563		.strz	"FBL_USE_OWN_MEMCPY "
0000080f 4f574e5f4d454d43
00000817 50592000        
0000081b 01               7564		.byte	1
0000081c 34               7565		.byte	52
0000081d 46424c5f57415443 7566		.strz	"FBL_WATCHDOG_ON "
00000825 48444f475f4f4e20
0000082d 00              
0000082e 01               7567		.byte	1
0000082f 35               7568		.byte	53
00000830 46424c5f57415443 7569		.strz	"FBL_WATCHDOG_TIME (1 / FBL_REPEAT_CALL_CYCLE)"
00000838 48444f475f54494d
00000840 45202831202f2046
00000848 424c5f5245504541
00000850 545f43414c4c5f43
00000858 59434c452900    
0000085e 01               7570		.byte	1
0000085f 36               7571		.byte	54
00000860 46424c5f48454144 7572		.strz	"FBL_HEADER_ADDRESS 0xFC0400u"
00000868 45525f4144445245
00000870 5353203078464330
00000878 3430307500      
0000087d 01               7573		.byte	1
0000087e 37               7574		.byte	55
0000087f 46424c5f454e4142 7575		.strz	"FBL_ENABLE_APPL_TASK "
00000887 4c455f4150504c5f
0000088f 5441534b2000    
00000895 01               7576		.byte	1
00000896 39               7577		.byte	57
00000897 46424c5f44494147 7578		.strz	"FBL_DIAG_BUFFER_LENGTH 4095"
0000089f 5f4255464645525f
000008a7 4c454e4754482034
000008af 30393500        
000008b3 01               7579		.byte	1
000008b4 3b               7580		.byte	59
000008b5 46424c5f44494147 7581		.strz	"FBL_DIAG_TIME_P3MAX (2000 / FBL_REPEAT_CALL_CYCLE)"
000008bd 5f54494d455f5033
000008c5 4d41582028323030
000008cd 30202f2046424c5f
000008d5 5245504541545f43
000008dd 414c4c5f4359434c
000008e5 452900          
000008e8 01               7582		.byte	1
000008e9 3c               7583		.byte	60
000008ea 46424c5f454e4142 7584		.strz	"FBL_ENABLE_SLEEPMODE "
000008f2 4c455f534c454550
000008fa 4d4f44452000    
00000900 01               7585		.byte	1
00000901 3e               7586		.byte	62
00000902 46424c5f454e4142 7587		.strz	"FBL_ENABLE_GAP_FILL "
0000090a 4c455f4741505f46
00000912 494c4c2000      
00000917 01               7588		.byte	1
00000918 40               7589		.byte	64
00000919 46424c5f454e4142 7590		.strz	"FBL_ENABLE_MULTIPLE_MEM_DEVICES "
00000921 4c455f4d554c5449
00000929 504c455f4d454d5f
00000931 4445564943455320
00000939 00              
0000093a 01               7591		.byte	1
0000093b 41               7592		.byte	65
0000093c 46424c5f4d454d44 7593		.strz	"FBL_MEMDRV_SEGMENT_SIZE 8"
00000944 52565f5345474d45
0000094c 4e545f53495a4520
00000954 3800            
00000956 01               7594		.byte	1
00000957 42               7595		.byte	66
00000958 46424c5f454e4142 7596		.strz	"FBL_ENABLE_PRESENCE_PATTERN "
00000960 4c455f5052455345
00000968 4e43455f50415454
00000970 45524e2000      
00000975 01               7597		.byte	1
00000976 43               7598		.byte	67
00000977 46424c5f454e4142 7599		.strz	"FBL_ENABLE_FBL_START "
0000097f 4c455f46424c5f53
00000987 544152542000    
0000098d 01               7600		.byte	1
0000098e 45               7601		.byte	69
0000098f 46424c5f44495341 7602		.strz	"FBL_DISABLE_USERSUBFUNCTION "
00000997 424c455f55534552
0000099f 53554246554e4354
000009a7 494f4e2000      
000009ac 01               7603		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 137
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000009ad 47               7604		.byte	71
000009ae 46424c5f4d544142 7605		.strz	"FBL_MTAB_NO_OF_BLOCKS 2"
000009b6 5f4e4f5f4f465f42
000009be 4c4f434b53203200
000009c6 01               7606		.byte	1
000009c7 49               7607		.byte	73
000009c8 46424c5f44495341 7608		.strz	"FBL_DISABLE_DATA_PROCESSING "
000009d0 424c455f44415441
000009d8 5f50524f43455353
000009e0 494e472000      
000009e5 01               7609		.byte	1
000009e6 51               7610		.byte	81
000009e7 46424c5f454e4142 7611		.strz	"FBL_ENABLE_SYSTEM_CHECK "
000009ef 4c455f5359535445
000009f7 4d5f434845434b20
000009ff 00              
00000a00 01               7612		.byte	1
00000a01 52               7613		.byte	82
00000a02 46424c5f454e4142 7614		.strz	"FBL_ENABLE_DEBUG_STATUS "
00000a0a 4c455f4445425547
00000a12 5f53544154555320
00000a1a 00              
00000a1b 01               7615		.byte	1
00000a1c 53               7616		.byte	83
00000a1d 46424c5f454e4142 7617		.strz	"FBL_ENABLE_ASSERTION "
00000a25 4c455f4153534552
00000a2d 54494f4e2000    
00000a33 01               7618		.byte	1
00000a34 56               7619		.byte	86
00000a35 46424c5f4d454d5f 7620		.strz	"FBL_MEM_ENABLE_VERIFY_OUTPUT "
00000a3d 454e41424c455f56
00000a45 45524946595f4f55
00000a4d 545055542000    
00000a53 01               7621		.byte	1
00000a54 5f               7622		.byte	95
00000a55 464c4153485f5349 7623		.strz	"FLASH_SIZE 1536"
00000a5d 5a45203135333600
00000a65 01               7624		.byte	1
00000a66 6c               7625		.byte	108
00000a67 46424c5f43414e5f 7626		.strz	"FBL_CAN_REG_OFFSET 0xFFEC0000u"
00000a6f 5245475f4f464653
00000a77 4554203078464645
00000a7f 43303030307500  
00000a86 01               7627		.byte	1
00000a87 72               7628		.byte	114
00000a88 53574d5f44415441 7629		.strz	"SWM_DATA_MAX_NOAR 8"
00000a90 5f4d41585f4e4f41
00000a98 52203800        
00000a9c 01               7630		.byte	1
00000a9d 74               7631		.byte	116
00000a9e 46424c5f454e4142 7632		.strz	"FBL_ENABLE_SEC_ACCESS_DELAY "
00000aa6 4c455f5345435f41
00000aae 43434553535f4445
00000ab6 4c41592000      
00000abb 01               7633		.byte	1
00000abc 8201             7634		.byte	130,1
00000abe 46424c5f454e4142 7635		.strz	"FBL_ENABLE_CAN_CONFIRMATION "
00000ac6 4c455f43414e5f43
00000ace 4f4e4649524d4154
00000ad6 494f4e2000      
00000adb 01               7636		.byte	1
00000adc 8301             7637		.byte	131,1
00000ade 46424c5f454e4142 7638		.strz	"FBL_ENABLE_SECMOD_VECTOR "
00000ae6 4c455f5345434d4f
00000aee 445f564543544f52
00000af6 2000            
00000af8 01               7639		.byte	1
00000af9 8501             7640		.byte	133,1
00000afb 46424c5f454e4142 7641		.strz	"FBL_ENABLE_WRAPPER_NV "
00000b03 4c455f5752415050
00000b0b 45525f4e562000  
00000b12 01               7642		.byte	1
00000b13 8d01             7643		.byte	141,1
00000b15 46424c5f454e4142 7644		.strz	"FBL_ENABLE_APPL_STATE_TASK "
00000b1d 4c455f4150504c5f
00000b25 53544154455f5441
00000b2d 534b2000        
00000b31 01               7645		.byte	1
00000b32 9001             7646		.byte	144,1
00000b34 46424c5f454e4142 7647		.strz	"FBL_ENABLE_APPL_TIMER_TASK "
00000b3c 4c455f4150504c5f
00000b44 54494d45525f5441
00000b4c 534b2000        
00000b50 01               7648		.byte	1
00000b51 9901             7649		.byte	153,1
00000b53 46424c5f5346525f 7650		.strz	"FBL_SFR_SIU_TYPE 2u"
00000b5b 5349555f54595045
00000b63 20327500        
00000b67 01               7651		.byte	1
00000b68 9f01             7652		.byte	159,1
00000b6a 46424c5f4d455f42 7653		.strz	"FBL_ME_BASE 0xFFFB8000ul"
00000b72 4153452030784646
00000b7a 464238303030756c
00000b82 00              
00000b83 01               7654		.byte	1
00000b84 a001             7655		.byte	160,1
00000b86 46424c5f434d555f 7656		.strz	"FBL_CMU_BASE 0xC3FE0100ul"
00000b8e 4241534520307843
00000b96 3346453031303075
00000b9e 6c00            
00000ba0 01               7657		.byte	1
00000ba1 a101             7658		.byte	161,1
00000ba3 46424c5f434d555f 7659		.strz	"FBL_CMU_PLL_BASE 0xFFFB0200ul"
00000bab 504c4c5f42415345
00000bb3 2030784646464230
00000bbb 323030756c00    

                                   Fri Apr 10 08:32:01 2020           Page 138
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000bc1 01               7660		.byte	1
00000bc2 a201             7661		.byte	162,1
00000bc4 46424c5f43474d5f 7662		.strz	"FBL_CGM_BASE 0xFFFB0000ul"
00000bcc 4241534520307846
00000bd4 4646423030303075
00000bdc 6c00            
00000bde 01               7663		.byte	1
00000bdf a301             7664		.byte	163,1
00000be1 46424c5f52474d5f 7665		.strz	"FBL_RGM_BASE 0xFFFA8000ul"
00000be9 4241534520307846
00000bf1 4646413830303075
00000bf9 6c00            
00000bfb 01               7666		.byte	1
00000bfc a901             7667		.byte	169,1
00000bfe 46424c5f5346525f 7668		.strz	"FBL_SFR_BASE_ADRESSES_PRECONFIGURED "
00000c06 424153455f414452
00000c0e 45535345535f5052
00000c16 45434f4e46494755
00000c1e 5245442000      
00000c23 04               7669		.byte	4
00000c24 03               7670		.byte	3
00000c25 5a               7671		.byte	90
00000c26 15               7672		.byte	21
00000c27 03               7673		.byte	3
00000c28 54               7674		.byte	84
00000c29 16               7675		.byte	22
00000c2a 04               7676		.byte	4
00000c2b 01               7677		.byte	1
00000c2c 5a               7678		.byte	90
00000c2d 46424c5f4445434c 7679		.strz	"FBL_DECL_ASSERT_EXTENDED_INFO(n) n"
00000c35 5f4153534552545f
00000c3d 455854454e444544
00000c45 5f494e464f286e29
00000c4d 206e00          
00000c50 04               7680		.byte	4
00000c51 01               7681		.byte	1
00000c52 6c               7682		.byte	108
00000c53 46424c5f4445465f 7683		.strz	"FBL_DEF_ENABLE_NON_KB_MAIN "
00000c5b 454e41424c455f4e
00000c63 4f4e5f4b425f4d41
00000c6b 494e2000        
00000c6f 01               7684		.byte	1
00000c70 7e               7685		.byte	126
00000c71 6b46626c4f6b2030 7686		.strz	"kFblOk 0x00u"
00000c79 7830307500      
00000c7e 01               7687		.byte	1
00000c7f 9501             7688		.byte	149,1
00000c81 46424c5f52455045 7689		.strz	"FBL_REPEAT_CALL_CYCLE 1"
00000c89 41545f43414c4c5f
00000c91 4359434c45203100
00000c99 01               7690		.byte	1
00000c9a 9a01             7691		.byte	154,1
00000c9c 46424c5f43414c4c 7692		.strz	"FBL_CALL_TYPE "
00000ca4 5f545950452000  
00000cab 01               7693		.byte	1
00000cac 9e01             7694		.byte	158,1
00000cae 565f43414c4c4241 7695		.strz	"V_CALLBACK_NEAR "
00000cb6 434b5f4e45415220
00000cbe 00              
00000cbf 01               7696		.byte	1
00000cc0 a101             7697		.byte	161,1
00000cc2 565f4150495f4e45 7698		.strz	"V_API_NEAR "
00000cca 41522000        
00000cce 01               7699		.byte	1
00000ccf c601             7700		.byte	198,1
00000cd1 46424c5f42495430 7701		.strz	"FBL_BIT0 0x01u"
00000cd9 20307830317500  
00000ce0 01               7702		.byte	1
00000ce1 c701             7703		.byte	199,1
00000ce3 46424c5f42495431 7704		.strz	"FBL_BIT1 0x02u"
00000ceb 20307830327500  
00000cf2 01               7705		.byte	1
00000cf3 d701             7706		.byte	215,1
00000cf5 46626c496e766572 7707		.strz	"FblInvert8Bit(x) ((vuint8) ((x) ^ ((vuint8)0xFFu)))"
00000cfd 7438426974287829
00000d05 2028287675696e74
00000d0d 3829202828782920
00000d15 5e2028287675696e
00000d1d 7438293078464675
00000d25 29292900        
00000d29 01               7708		.byte	1
00000d2a 8502             7709		.byte	133,2
00000d2c 46424c5f53544154 7710		.strz	"FBL_STATE_BITS 32"
00000d34 455f424954532033
00000d3c 3200            
00000d3e 01               7711		.byte	1
00000d3f 9302             7712		.byte	147,2
00000d41 46424c5f53544154 7713		.strz	"FBL_STATE_INDEX(bit) ((bit) / FBL_STATE_BITS)"
00000d49 455f494e44455828
00000d51 6269742920282862
00000d59 697429202f204642
00000d61 4c5f53544154455f
00000d69 424954532900    
00000d6f 01               7714		.byte	1
00000d70 b002             7715		.byte	176,2

                                   Fri Apr 10 08:32:01 2020           Page 139
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000d72 4d454d53495a455f 7716		.strz	"MEMSIZE_OK "
00000d7a 4f4b2000        
00000d7e 04               7717		.byte	4
00000d7f 03               7718		.byte	3
00000d80 68               7719		.byte	104
00000d81 17               7720		.byte	23
00000d82 01               7721		.byte	1
00000d83 3b               7722		.byte	59
00000d84 6b4e724f6656616c 7723		.strz	"kNrOfValidationBytes 1"
00000d8c 69646174696f6e42
00000d94 79746573203100  
00000d9b 01               7724		.byte	1
00000d9c 5c               7725		.byte	92
00000d9d 46424c5f4c42545f 7726		.strz	"FBL_LBT_START_SEC_CONST "
00000da5 53544152545f5345
00000dad 435f434f4e535420
00000db5 00              
00000db6 03               7727		.byte	3
00000db7 5d               7728		.byte	93
00000db8 18               7729		.byte	24
00000db9 01               7730		.byte	1
00000dba 2b               7731		.byte	43
00000dbb 46424c5f4d454d4d 7732		.strz	"FBL_MEMMAP_ERROR "
00000dc3 41505f4552524f52
00000dcb 2000            
00000dcd 04               7733		.byte	4
00000dce 01               7734		.byte	1
00000dcf 5f               7735		.byte	95
00000dd0 46424c5f4c42545f 7736		.strz	"FBL_LBT_STOP_SEC_CONST "
00000dd8 53544f505f534543
00000de0 5f434f4e53542000
00000de8 03               7737		.byte	3
00000de9 60               7738		.byte	96
00000dea 18               7739		.byte	24
00000deb 01               7740		.byte	1
00000dec 2b               7741		.byte	43
00000ded 46424c5f4d454d4d 7742		.strz	"FBL_MEMMAP_ERROR "
00000df5 41505f4552524f52
00000dfd 2000            
00000dff 04               7743		.byte	4
00000e00 04               7744		.byte	4
00000e01 03               7745		.byte	3
00000e02 6e               7746		.byte	110
00000e03 19               7747		.byte	25
00000e04 01               7748		.byte	1
00000e05 54               7749		.byte	84
00000e06 464c4153485f5345 7750		.strz	"FLASH_SEGMENT_SIZE 8u"
00000e0e 474d454e545f5349
00000e16 5a4520387500    
00000e1c 04               7751		.byte	4
00000e1d 03               7752		.byte	3
00000e1e 6f               7753		.byte	111
00000e1f 1a               7754		.byte	26
00000e20 04               7755		.byte	4
00000e21 03               7756		.byte	3
00000e22 75               7757		.byte	117
00000e23 1b               7758		.byte	27
00000e24 01               7759		.byte	1
00000e25 52               7760		.byte	82
00000e26 46424c5f4e4f5f54 7761		.strz	"FBL_NO_TRIGGER 0x00u"
00000e2e 5249474745522030
00000e36 7830307500      
00000e3b 01               7762		.byte	1
00000e3c 7c               7763		.byte	124
00000e3d 494e495457415443 7764		.strz	"INITWATCHDOG_START_SEC_CODE_EXPORT "
00000e45 48444f475f535441
00000e4d 52545f5345435f43
00000e55 4f44455f4558504f
00000e5d 52542000        
00000e61 03               7765		.byte	3
00000e62 7d               7766		.byte	125
00000e63 18               7767		.byte	24
00000e64 01               7768		.byte	1
00000e65 2b               7769		.byte	43
00000e66 46424c5f4d454d4d 7770		.strz	"FBL_MEMMAP_ERROR "
00000e6e 41505f4552524f52
00000e76 2000            
00000e78 04               7771		.byte	4

                                   Fri Apr 10 08:32:01 2020           Page 140
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000e79 01               7772		.byte	1
00000e7a 8001             7773		.byte	128,1
00000e7c 494e495457415443 7774		.strz	"INITWATCHDOG_STOP_SEC_CODE_EXPORT "
00000e84 48444f475f53544f
00000e8c 505f5345435f434f
00000e94 44455f4558504f52
00000e9c 542000          
00000e9f 03               7775		.byte	3
00000ea0 8101             7776		.byte	129,1
00000ea2 18               7777		.byte	24
00000ea3 01               7778		.byte	1
00000ea4 2b               7779		.byte	43
00000ea5 46424c5f4d454d4d 7780		.strz	"FBL_MEMMAP_ERROR "
00000ead 41505f4552524f52
00000eb5 2000            
00000eb7 04               7781		.byte	4
00000eb8 01               7782		.byte	1
00000eb9 8301             7783		.byte	131,1
00000ebb 4c4f4f4b464f5257 7784		.strz	"LOOKFORWATCHDOG_START_SEC_CODE_EXPORT "
00000ec3 41544348444f475f
00000ecb 53544152545f5345
00000ed3 435f434f44455f45
00000edb 58504f52542000  
00000ee2 03               7785		.byte	3
00000ee3 8401             7786		.byte	132,1
00000ee5 18               7787		.byte	24
00000ee6 01               7788		.byte	1
00000ee7 2b               7789		.byte	43
00000ee8 46424c5f4d454d4d 7790		.strz	"FBL_MEMMAP_ERROR "
00000ef0 41505f4552524f52
00000ef8 2000            
00000efa 04               7791		.byte	4
00000efb 01               7792		.byte	1
00000efc 8801             7793		.byte	136,1
00000efe 4c4f4f4b464f5257 7794		.strz	"LOOKFORWATCHDOG_STOP_SEC_CODE_EXPORT "
00000f06 41544348444f475f
00000f0e 53544f505f534543
00000f16 5f434f44455f4558
00000f1e 504f52542000    
00000f24 03               7795		.byte	3
00000f25 8901             7796		.byte	137,1
00000f27 18               7797		.byte	24
00000f28 01               7798		.byte	1
00000f29 2b               7799		.byte	43
00000f2a 46424c5f4d454d4d 7800		.strz	"FBL_MEMMAP_ERROR "
00000f32 41505f4552524f52
00000f3a 2000            
00000f3c 04               7801		.byte	4
00000f3d 01               7802		.byte	1
00000f3e 8b01             7803		.byte	139,1
00000f40 4c4f4f4b464f5257 7804		.strz	"LOOKFORWATCHDOG_START_SEC_CODE_EXPORT "
00000f48 41544348444f475f
00000f50 53544152545f5345
00000f58 435f434f44455f45
00000f60 58504f52542000  
00000f67 03               7805		.byte	3
00000f68 8c01             7806		.byte	140,1
00000f6a 18               7807		.byte	24
00000f6b 01               7808		.byte	1
00000f6c 2b               7809		.byte	43
00000f6d 46424c5f4d454d4d 7810		.strz	"FBL_MEMMAP_ERROR "
00000f75 41505f4552524f52
00000f7d 2000            
00000f7f 04               7811		.byte	4
00000f80 01               7812		.byte	1
00000f81 9001             7813		.byte	144,1
00000f83 4c4f4f4b464f5257 7814		.strz	"LOOKFORWATCHDOG_STOP_SEC_CODE_EXPORT "
00000f8b 41544348444f475f
00000f93 53544f505f534543
00000f9b 5f434f44455f4558
00000fa3 504f52542000    
00000fa9 03               7815		.byte	3
00000faa 9101             7816		.byte	145,1
00000fac 18               7817		.byte	24
00000fad 01               7818		.byte	1
00000fae 2b               7819		.byte	43
00000faf 46424c5f4d454d4d 7820		.strz	"FBL_MEMMAP_ERROR "
00000fb7 41505f4552524f52
00000fbf 2000            
00000fc1 04               7821		.byte	4
00000fc2 04               7822		.byte	4
00000fc3 03               7823		.byte	3
00000fc4 76               7824		.byte	118
00000fc5 1c               7825		.byte	28
00000fc6 04               7826		.byte	4
00000fc7 03               7827		.byte	3

                                   Fri Apr 10 08:32:01 2020           Page 141
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00000fc8 7e               7828		.byte	126
00000fc9 1d               7829		.byte	29
00000fca 01               7830		.byte	1
00000fcb ca01             7831		.byte	202,1
00000fcd 46424c5f4d41585f 7832		.strz	"FBL_MAX_SEGMENT_SIZE_MIO FBL_MEMDRV_SEGMENT_SIZE"
00000fd5 5345474d454e545f
00000fdd 53495a455f4d494f
00000fe5 2046424c5f4d454d
00000fed 4452565f5345474d
00000ff5 454e545f53495a45
00000ffd 00              
00000ffe 01               7833		.byte	1
00000fff e601             7834		.byte	230,1
00001001 46424c5f4d41585f 7835		.strz	"FBL_MAX_SEGMENT_SIZE FBL_MAX_SEGMENT_SIZE_MIO"
00001009 5345474d454e545f
00001011 53495a452046424c
00001019 5f4d41585f534547
00001021 4d454e545f53495a
00001029 455f4d494f00    
0000102f 01               7836		.byte	1
00001030 8702             7837		.byte	135,2
00001032 46424c5f4d494f5f 7838		.strz	"FBL_MIO_DEFAULT_FCT_PTR "
0000103a 44454641554c545f
00001042 4643545f50545220
0000104a 00              
0000104b 01               7839		.byte	1
0000104c a002             7840		.byte	160,2
0000104e 46424c4d494f5f53 7841		.strz	"FBLMIO_START_SEC_CODE "
00001056 544152545f534543
0000105e 5f434f44452000  
00001065 03               7842		.byte	3
00001066 a102             7843		.byte	161,2
00001068 18               7844		.byte	24
00001069 01               7845		.byte	1
0000106a 2b               7846		.byte	43
0000106b 46424c5f4d454d4d 7847		.strz	"FBL_MEMMAP_ERROR "
00001073 41505f4552524f52
0000107b 2000            
0000107d 04               7848		.byte	4
0000107e 01               7849		.byte	1
0000107f b102             7850		.byte	177,2
00001081 46424c4d494f5f53 7851		.strz	"FBLMIO_STOP_SEC_CODE "
00001089 544f505f5345435f
00001091 434f44452000    
00001097 03               7852		.byte	3
00001098 b202             7853		.byte	178,2
0000109a 18               7854		.byte	24
0000109b 01               7855		.byte	1
0000109c 2b               7856		.byte	43
0000109d 46424c5f4d454d4d 7857		.strz	"FBL_MEMMAP_ERROR "
000010a5 41505f4552524f52
000010ad 2000            
000010af 04               7858		.byte	4
000010b0 04               7859		.byte	4
000010b1 03               7860		.byte	3
000010b2 7f               7861		.byte	127
000010b3 1e               7862		.byte	30
000010b4 01               7863		.byte	1
000010b5 66               7864		.byte	102
000010b6 46424c464c494f5f 7865		.strz	"FBLFLIO_FLASHCODE_START_SEC_VAR "
000010be 464c415348434f44
000010c6 455f53544152545f
000010ce 5345435f56415220
000010d6 00              
000010d7 03               7866		.byte	3
000010d8 67               7867		.byte	103
000010d9 18               7868		.byte	24
000010da 01               7869		.byte	1
000010db 2b               7870		.byte	43
000010dc 46424c5f4d454d4d 7871		.strz	"FBL_MEMMAP_ERROR "
000010e4 41505f4552524f52
000010ec 2000            
000010ee 04               7872		.byte	4
000010ef 01               7873		.byte	1
000010f0 69               7874		.byte	105
000010f1 46424c464c494f5f 7875		.strz	"FBLFLIO_FLASHCODE_STOP_SEC_VAR "
000010f9 464c415348434f44
00001101 455f53544f505f53
00001109 45435f5641522000
00001111 03               7876		.byte	3
00001112 6a               7877		.byte	106
00001113 18               7878		.byte	24
00001114 01               7879		.byte	1
00001115 2b               7880		.byte	43
00001116 46424c5f4d454d4d 7881		.strz	"FBL_MEMMAP_ERROR "
0000111e 41505f4552524f52
00001126 2000            
00001128 04               7882		.byte	4
00001129 04               7883		.byte	4

                                   Fri Apr 10 08:32:01 2020           Page 142
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000112a 03               7884		.byte	3
0000112b 8001             7885		.byte	128,1
0000112d 1f               7886		.byte	31
0000112e 04               7887		.byte	4
0000112f 03               7888		.byte	3
00001130 8101             7889		.byte	129,1
00001132 20               7890		.byte	32
00001133 03               7891		.byte	3
00001134 2a               7892		.byte	42
00001135 02               7893		.byte	2
00001136 04               7894		.byte	4
00001137 03               7895		.byte	3
00001138 2b               7896		.byte	43
00001139 21               7897		.byte	33
0000113a 01               7898		.byte	1
0000113b 49               7899		.byte	73
0000113c 45455044554d4d59 7900		.strz	"EEPDUMMY_FULL_START_SEC_CODE "
00001144 5f46554c4c5f5354
0000114c 4152545f5345435f
00001154 434f44452000    
0000115a 03               7901		.byte	3
0000115b 4a               7902		.byte	74
0000115c 18               7903		.byte	24
0000115d 01               7904		.byte	1
0000115e 2b               7905		.byte	43
0000115f 46424c5f4d454d4d 7906		.strz	"FBL_MEMMAP_ERROR "
00001167 41505f4552524f52
0000116f 2000            
00001171 04               7907		.byte	4
00001172 01               7908		.byte	1
00001173 54               7909		.byte	84
00001174 45455044554d4d59 7910		.strz	"EEPDUMMY_FULL_STOP_SEC_CODE "
0000117c 5f46554c4c5f5354
00001184 4f505f5345435f43
0000118c 4f44452000      
00001191 03               7911		.byte	3
00001192 55               7912		.byte	85
00001193 18               7913		.byte	24
00001194 01               7914		.byte	1
00001195 2b               7915		.byte	43
00001196 46424c5f4d454d4d 7916		.strz	"FBL_MEMMAP_ERROR "
0000119e 41505f4552524f52
000011a6 2000            
000011a8 04               7917		.byte	4
000011a9 04               7918		.byte	4
000011aa 04               7919		.byte	4
000011ab 03               7920		.byte	3
000011ac 8401             7921		.byte	132,1
000011ae 22               7922		.byte	34
000011af 01               7923		.byte	1
000011b0 55               7924		.byte	85
000011b1 46424c5f4150504c 7925		.strz	"FBL_APPLVECT_START_SEC_CONST "
000011b9 564543545f535441
000011c1 52545f5345435f43
000011c9 4f4e53542000    
000011cf 03               7926		.byte	3
000011d0 56               7927		.byte	86
000011d1 18               7928		.byte	24
000011d2 01               7929		.byte	1
000011d3 2b               7930		.byte	43
000011d4 46424c5f4d454d4d 7931		.strz	"FBL_MEMMAP_ERROR "
000011dc 41505f4552524f52
000011e4 2000            
000011e6 04               7932		.byte	4
000011e7 01               7933		.byte	1
000011e8 5a               7934		.byte	90
000011e9 46424c5f4150504c 7935		.strz	"FBL_APPLVECT_STOP_SEC_CONST "
000011f1 564543545f53544f
000011f9 505f5345435f434f
00001201 4e53542000      
00001206 03               7936		.byte	3
00001207 5b               7937		.byte	91
00001208 18               7938		.byte	24
00001209 01               7939		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 143
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000120a 2b               7940		.byte	43
0000120b 46424c5f4d454d4d 7941		.strz	"FBL_MEMMAP_ERROR "
00001213 41505f4552524f52
0000121b 2000            
0000121d 04               7942		.byte	4
0000121e 04               7943		.byte	4
0000121f 03               7944		.byte	3
00001220 8801             7945		.byte	136,1
00001222 23               7946		.byte	35
00001223 03               7947		.byte	3
00001224 3c               7948		.byte	60
00001225 24               7949		.byte	36
00001226 01               7950		.byte	1
00001227 49               7951		.byte	73
00001228 46424c5f43414e5f 7952		.strz	"FBL_CAN_NUMBER_OF_RX_ID 2u"
00001230 4e554d4245525f4f
00001238 465f52585f494420
00001240 327500          
00001243 01               7953		.byte	1
00001244 4a               7954		.byte	74
00001245 46424c5f43414e5f 7955		.strz	"FBL_CAN_NUMBER_OF_RANGES 0u"
0000124d 4e554d4245525f4f
00001255 465f52414e474553
0000125d 20307500        
00001261 01               7956		.byte	1
00001262 4b               7957		.byte	75
00001263 46424c5f4e554d42 7958		.strz	"FBL_NUMBER_OF_RX_ID (FBL_CAN_NUMBER_OF_RX_ID + FBL_CAN_NUMBER_OF_RANGES)"
0000126b 45525f4f465f5258
00001273 5f4944202846424c
0000127b 5f43414e5f4e554d
00001283 4245525f4f465f52
0000128b 585f4944202b2046
00001293 424c5f43414e5f4e
0000129b 554d4245525f4f46
000012a3 5f52414e47455329
000012ab 00              
000012ac 01               7959		.byte	1
000012ad 54               7960		.byte	84
000012ae 46424c5f4e554d42 7961		.strz	"FBL_NUMBER_OF_TX_ID 1u"
000012b6 45525f4f465f5458
000012be 5f494420317500  
000012c5 01               7962		.byte	1
000012c6 55               7963		.byte	85
000012c7 6b46626c43774469 7964		.strz	"kFblCwDiagTxObject 0u"
000012cf 616754784f626a65
000012d7 637420307500    
000012dd 01               7965		.byte	1
000012de 57               7966		.byte	87
000012df 46424c5f43575f43 7967		.strz	"FBL_CW_CFG_START_SEC_CONST "
000012e7 46475f5354415254
000012ef 5f5345435f434f4e
000012f7 53542000        
000012fb 03               7968		.byte	3
000012fc 58               7969		.byte	88
000012fd 18               7970		.byte	24
000012fe 01               7971		.byte	1
000012ff 2b               7972		.byte	43
00001300 46424c5f4d454d4d 7973		.strz	"FBL_MEMMAP_ERROR "
00001308 41505f4552524f52
00001310 2000            
00001312 04               7974		.byte	4
00001313 01               7975		.byte	1
00001314 67               7976		.byte	103
00001315 46424c5f43575f43 7977		.strz	"FBL_CW_CFG_STOP_SEC_CONST "
0000131d 46475f53544f505f
00001325 5345435f434f4e53
0000132d 542000          
00001330 03               7978		.byte	3
00001331 68               7979		.byte	104
00001332 18               7980		.byte	24
00001333 01               7981		.byte	1
00001334 2b               7982		.byte	43
00001335 46424c5f4d454d4d 7983		.strz	"FBL_MEMMAP_ERROR "
0000133d 41505f4552524f52
00001345 2000            
00001347 04               7984		.byte	4
00001348 01               7985		.byte	1
00001349 6d               7986		.byte	109
0000134a 46424c5f43575f45 7987		.strz	"FBL_CW_ENABLE_PHYSICAL_REQUEST_HANDLER "
00001352 4e41424c455f5048
0000135a 59534943414c5f52
00001362 4551554553545f48
0000136a 414e444c45522000
00001372 01               7988		.byte	1
00001373 6e               7989		.byte	110
00001374 46424c5f43575f45 7990		.strz	"FBL_CW_ENABLE_FUNCTIONAL_REQUEST_HANDLER "
0000137c 4e41424c455f4655
00001384 4e4354494f4e414c
0000138c 5f52455155455354
00001394 5f48414e444c4552
0000139c 2000            
0000139e 04               7991		.byte	4
0000139f 01               7992		.byte	1
000013a0 43               7993		.byte	67
000013a1 46424c5752415050 7994		.strz	"FBLWRAPPERCOM_CAN_VERSION 0x0208u"
000013a9 4552434f4d5f4341
000013b1 4e5f56455253494f
000013b9 4e20307830323038
000013c1 7500            
000013c3 01               7995		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 144
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000013c4 44               7996		.byte	68
000013c5 46424c5752415050 7997		.strz	"FBLWRAPPERCOM_CAN_RELEASE_VERSION 0x01u"
000013cd 4552434f4d5f4341
000013d5 4e5f52454c454153
000013dd 455f56455253494f
000013e5 4e20307830317500
000013ed 03               7998		.byte	3
000013ee 4d               7999		.byte	77
000013ef 25               8000		.byte	37
000013f0 03               8001		.byte	3
000013f1 54               8002		.byte	84
000013f2 26               8003		.byte	38
000013f3 04               8004		.byte	4
000013f4 01               8005		.byte	1
000013f5 5f               8006		.byte	95
000013f6 46424c4452564341 8007		.strz	"FBLDRVCAN_REFERENCE_IMPLEMENTATION 0x0101u"
000013fe 4e5f524546455245
00001406 4e43455f494d504c
0000140e 454d454e54415449
00001416 4f4e203078303130
0000141e 317500          
00001421 01               8008		.byte	1
00001422 74               8009		.byte	116
00001423 4d554c5449504c45 8010		.strz	"MULTIPLE_RECEIVE_BUFFER "
0000142b 5f52454345495645
00001433 5f42554646455220
0000143b 00              
0000143c 01               8011		.byte	1
0000143d 8601             8012		.byte	134,1
0000143f 466c657843414e33 8013		.strz	"FlexCAN3 (*((volatile tFlexCAN3 *)(FBL_CAN_REG_OFFSET)))"
00001447 20282a2828766f6c
0000144f 6174696c65207446
00001457 6c657843414e3320
0000145f 2a292846424c5f43
00001467 414e5f5245475f4f
0000146f 4646534554292929
00001477 00              
00001478 01               8014		.byte	1
00001479 c401             8015		.byte	196,1
0000147b 43414e5f52585f4f 8016		.strz	"CAN_RX_OBJECT_MASK ((vuint32)0x0000FE00ul)"
00001483 424a4543545f4d41
0000148b 534b202828767569
00001493 6e74333229307830
0000149b 3030304645303075
000014a3 6c2900          
000014a6 01               8017		.byte	1
000014a7 de01             8018		.byte	222,1
000014a9 6b43616e45787465 8019		.strz	"kCanExtendedIdFlag ((vuint32)(0x80000000ul))"
000014b1 6e6465644964466c
000014b9 6167202828767569
000014c1 6e74333229283078
000014c9 3830303030303030
000014d1 756c292900      
000014d6 01               8020		.byte	1
000014d7 e901             8021		.byte	233,1
000014d9 6b43616e49645479 8022		.strz	"kCanIdTypeExt ((vuint16)0x0060u)"
000014e1 7065457874202828
000014e9 7675696e74313629
000014f1 3078303036307529
000014f9 00              
000014fa 01               8023		.byte	1
000014fb fe01             8024		.byte	254,1
000014fd 46626c43616e5365 8025		.strz	"FblCanSetTxId(MsgObj,id) { MsgObj.msgObject.msgID = (id) & 0x7FFFFFFFul; MsgObj.msgObject.control &= 0x000Fu; if ((id) & kCanExtendedIdFlag) { MsgObj.msgObject.control |= kCanIdTypeExt; } }"
00001505 7454784964284d73
0000150d 674f626a2c696429
00001515 207b204d73674f62
0000151d 6a2e6d73674f626a
00001525 6563742e6d736749
0000152d 44203d2028696429
00001535 2026203078374646
0000153d 4646464646756c3b
00001545 204d73674f626a2e
0000154d 6d73674f626a6563
00001555 742e636f6e74726f
0000155d 6c20263d20307830
00001565 303046753b206966
0000156d 2028286964292026
00001575 206b43616e457874
0000157d 656e646564496446
00001585 6c616729207b204d
0000158d 73674f626a2e6d73
00001595 674f626a6563742e
0000159d 636f6e74726f6c20
000015a5 7c3d206b43616e49
000015ad 6454797065457874
000015b5 3b207d207d00    
000015bb 01               8026		.byte	1
000015bc 8802             8027		.byte	136,2
000015be 46626c43616e5365 8028		.strz	"FblCanSetTxDLC(MsgObj,dlc) ((MsgObj).msgObject.control = (((MsgObj).msgObject.control) & kCanIdTypeExt) | (dlc) )"
000015c6 745478444c43284d
000015ce 73674f626a2c646c
000015d6 63292028284d7367
000015de 4f626a292e6d7367
000015e6 4f626a6563742e63
000015ee 6f6e74726f6c203d
000015f6 202828284d73674f
000015fe 626a292e6d73674f
00001606 626a6563742e636f
0000160e 6e74726f6c292026
00001616 206b43616e496454
0000161e 7970654578742920
00001626 7c2028646c632920
0000162e 2900            
00001630 01               8029		.byte	1
00001631 9302             8030		.byte	147,2
00001633 46626c43616e5365 8031		.strz	"FblCanSetTxConfirmation(MsgObj,confFctPtr) ((MsgObj).ConfirmationFct = (confFctPtr))"
0000163b 745478436f6e6669
00001643 726d6174696f6e28
0000164b 4d73674f626a2c63
00001653 6f6e664663745074
0000165b 72292028284d7367
00001663 4f626a292e436f6e
0000166b 6669726d6174696f
00001673 6e466374203d2028
0000167b 636f6e6646637450
00001683 7472292900      
00001688 01               8032		.byte	1
00001689 9702             8033		.byte	151,2
0000168b 46626c43616e5265 8034		.strz	"FblCanReceive() (FlexCAN3.iflag_lo & CAN_RX_OBJECT_MASK)"
00001693 6365697665282920
0000169b 28466c657843414e
000016a3 332e69666c61675f
000016ab 6c6f20262043414e
000016b3 5f52585f4f424a45
000016bb 43545f4d41534b29
000016c3 00              
000016c4 01               8035		.byte	1
000016c5 9902             8036		.byte	153,2
000016c7 6b46626c43616e4d 8037		.strz	"kFblCanMaxMB 16"
000016cf 61784d4220313600
000016d7 01               8038		.byte	1
000016d8 cd03             8039		.byte	205,3
000016da 46424c48575f5241 8040		.strz	"FBLHW_RAMCODE_START_SEC_CODE "
000016e2 4d434f44455f5354
000016ea 4152545f5345435f
000016f2 434f44452000    
000016f8 03               8041		.byte	3
000016f9 ce03             8042		.byte	206,3
000016fb 18               8043		.byte	24
000016fc 01               8044		.byte	1
000016fd 2b               8045		.byte	43
000016fe 46424c5f4d454d4d 8046		.strz	"FBL_MEMMAP_ERROR "
00001706 41505f4552524f52
0000170e 2000            
00001710 04               8047		.byte	4
00001711 01               8048		.byte	1
00001712 d003             8049		.byte	208,3
00001714 46424c48575f5241 8050		.strz	"FBLHW_RAMCODE_STOP_SEC_CODE "
0000171c 4d434f44455f5354
00001724 4f505f5345435f43
0000172c 4f44452000      
00001731 03               8051		.byte	3

                                   Fri Apr 10 08:32:01 2020           Page 145
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001732 d103             8052		.byte	209,3
00001734 18               8053		.byte	24
00001735 01               8054		.byte	1
00001736 2b               8055		.byte	43
00001737 46424c5f4d454d4d 8056		.strz	"FBL_MEMMAP_ERROR "
0000173f 41505f4552524f52
00001747 2000            
00001749 04               8057		.byte	4
0000174a 01               8058		.byte	1
0000174b d703             8059		.byte	215,3
0000174d 46424c48575f5354 8060		.strz	"FBLHW_START_SEC_CODE "
00001755 4152545f5345435f
0000175d 434f44452000    
00001763 03               8061		.byte	3
00001764 d803             8062		.byte	216,3
00001766 18               8063		.byte	24
00001767 01               8064		.byte	1
00001768 2b               8065		.byte	43
00001769 46424c5f4d454d4d 8066		.strz	"FBL_MEMMAP_ERROR "
00001771 41505f4552524f52
00001779 2000            
0000177b 04               8067		.byte	4
0000177c 01               8068		.byte	1
0000177d da03             8069		.byte	218,3
0000177f 46424c48575f5354 8070		.strz	"FBLHW_STOP_SEC_CODE "
00001787 4f505f5345435f43
0000178f 4f44452000      
00001794 03               8071		.byte	3
00001795 db03             8072		.byte	219,3
00001797 18               8073		.byte	24
00001798 01               8074		.byte	1
00001799 2b               8075		.byte	43
0000179a 46424c5f4d454d4d 8076		.strz	"FBL_MEMMAP_ERROR "
000017a2 41505f4552524f52
000017aa 2000            
000017ac 04               8077		.byte	4
000017ad 01               8078		.byte	1
000017ae df03             8079		.byte	223,3
000017b0 46424c48575f4642 8080		.strz	"FBLHW_FBLCANTRANSMITTED_START_SEC_CODE "
000017b8 4c43414e5452414e
000017c0 534d49545445445f
000017c8 53544152545f5345
000017d0 435f434f44452000
000017d8 03               8081		.byte	3
000017d9 e003             8082		.byte	224,3
000017db 18               8083		.byte	24
000017dc 01               8084		.byte	1
000017dd 2b               8085		.byte	43
000017de 46424c5f4d454d4d 8086		.strz	"FBL_MEMMAP_ERROR "
000017e6 41505f4552524f52
000017ee 2000            
000017f0 04               8087		.byte	4
000017f1 01               8088		.byte	1
000017f2 e203             8089		.byte	226,3
000017f4 46424c48575f4642 8090		.strz	"FBLHW_FBLCANTRANSMITTED_STOP_SEC_CODE "
000017fc 4c43414e5452414e
00001804 534d49545445445f
0000180c 53544f505f534543
00001814 5f434f44452000  
0000181b 03               8091		.byte	3
0000181c e303             8092		.byte	227,3
0000181e 18               8093		.byte	24
0000181f 01               8094		.byte	1
00001820 2b               8095		.byte	43
00001821 46424c5f4d454d4d 8096		.strz	"FBL_MEMMAP_ERROR "
00001829 41505f4552524f52
00001831 2000            
00001833 04               8097		.byte	4
00001834 01               8098		.byte	1
00001835 e503             8099		.byte	229,3
00001837 46424c48575f5354 8100		.strz	"FBLHW_START_SEC_CODE "
0000183f 4152545f5345435f
00001847 434f44452000    
0000184d 03               8101		.byte	3
0000184e e603             8102		.byte	230,3
00001850 18               8103		.byte	24
00001851 01               8104		.byte	1
00001852 2b               8105		.byte	43
00001853 46424c5f4d454d4d 8106		.strz	"FBL_MEMMAP_ERROR "
0000185b 41505f4552524f52
00001863 2000            
00001865 04               8107		.byte	4

                                   Fri Apr 10 08:32:01 2020           Page 146
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001866 01               8108		.byte	1
00001867 e803             8109		.byte	232,3
00001869 46424c48575f5354 8110		.strz	"FBLHW_STOP_SEC_CODE "
00001871 4f505f5345435f43
00001879 4f44452000      
0000187e 03               8111		.byte	3
0000187f e903             8112		.byte	233,3
00001881 18               8113		.byte	24
00001882 01               8114		.byte	1
00001883 2b               8115		.byte	43
00001884 46424c5f4d454d4d 8116		.strz	"FBL_MEMMAP_ERROR "
0000188c 41505f4552524f52
00001894 2000            
00001896 04               8117		.byte	4
00001897 01               8118		.byte	1
00001898 f903             8119		.byte	249,3
0000189a 4d454d4350595f53 8120		.strz	"MEMCPY_START_SEC_CODE "
000018a2 544152545f534543
000018aa 5f434f44452000  
000018b1 03               8121		.byte	3
000018b2 fa03             8122		.byte	250,3
000018b4 18               8123		.byte	24
000018b5 01               8124		.byte	1
000018b6 2b               8125		.byte	43
000018b7 46424c5f4d454d4d 8126		.strz	"FBL_MEMMAP_ERROR "
000018bf 41505f4552524f52
000018c7 2000            
000018c9 04               8127		.byte	4
000018ca 01               8128		.byte	1
000018cb fd03             8129		.byte	253,3
000018cd 4d454d4350595f53 8130		.strz	"MEMCPY_STOP_SEC_CODE "
000018d5 544f505f5345435f
000018dd 434f44452000    
000018e3 03               8131		.byte	3
000018e4 fe03             8132		.byte	254,3
000018e6 18               8133		.byte	24
000018e7 01               8134		.byte	1
000018e8 2b               8135		.byte	43
000018e9 46424c5f4d454d4d 8136		.strz	"FBL_MEMMAP_ERROR "
000018f1 41505f4552524f52
000018f9 2000            
000018fb 04               8137		.byte	4
000018fc 04               8138		.byte	4
000018fd 03               8139		.byte	3
000018fe 4e               8140		.byte	78
000018ff 27               8141		.byte	39
00001900 01               8142		.byte	1
00001901 31               8143		.byte	49
00001902 46424c5f54505f45 8144		.strz	"FBL_TP_ENABLE_TX_FRAME_PADDING "
0000190a 4e41424c455f5458
00001912 5f4652414d455f50
0000191a 414444494e472000
00001922 01               8145		.byte	1
00001923 32               8146		.byte	50
00001924 6b46626c54704669 8147		.strz	"kFblTpFillPattern 170"
0000192c 6c6c506174746572
00001934 6e2031373000    
0000193a 01               8148		.byte	1
0000193b 3b               8149		.byte	59
0000193c 46424c5f54505f45 8150		.strz	"FBL_TP_ENABLE_ISO15765_2_2 "
00001944 4e41424c455f4953
0000194c 4f31353736355f32
00001954 5f322000        
00001958 01               8151		.byte	1
00001959 3d               8152		.byte	61
0000195a 46424c5f54505f45 8153		.strz	"FBL_TP_ENABLE_FIX_RX_DLC_CHECK "
00001962 4e41424c455f4649
0000196a 585f52585f444c43
00001972 5f434845434b2000
0000197a 01               8154		.byte	1
0000197b 40               8155		.byte	64
0000197c 547043616c6c4379 8156		.strz	"TpCallCycle 1"
00001984 636c65203100    
0000198a 01               8157		.byte	1
0000198b 41               8158		.byte	65
0000198c 46424c5f54505f45 8159		.strz	"FBL_TP_ENABLE_CONFIRMATION_INTERRUPT "
00001994 4e41424c455f434f
0000199c 4e4649524d415449
000019a4 4f4e5f494e544552
000019ac 525550542000    
000019b2 01               8160		.byte	1
000019b3 44               8161		.byte	68
000019b4 6b46626c54705354 8162		.strz	"kFblTpSTMin 0"
000019bc 4d696e203000    
000019c2 01               8163		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 147
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000019c3 48               8164		.byte	72
000019c4 6b46626c5470426c 8165		.strz	"kFblTpBlocksize 8"
000019cc 6f636b73697a6520
000019d4 3800            
000019d6 04               8166		.byte	4
000019d7 03               8167		.byte	3
000019d8 4f               8168		.byte	79
000019d9 28               8169		.byte	40
000019da 01               8170		.byte	1
000019db 75               8171		.byte	117
000019dc 6b54705375636365 8172		.strz	"kTpSuccess 0u"
000019e4 737320307500    
000019ea 01               8173		.byte	1
000019eb 76               8174		.byte	118
000019ec 6b54704661696c65 8175		.strz	"kTpFailed 1u"
000019f4 6420317500      
000019f9 01               8176		.byte	1
000019fa 78               8177		.byte	120
000019fb 6b54704275737920 8178		.strz	"kTpBusy 3u"
00001a03 337500          
00001a06 01               8179		.byte	1
00001a07 7b               8180		.byte	123
00001a08 6b54704572725478 8181		.strz	"kTpErrTxFCNotExpected 9u"
00001a10 46434e6f74457870
00001a18 6563746564203975
00001a20 00              
00001a21 01               8182		.byte	1
00001a22 8101             8183		.byte	129,1
00001a24 6b54704572725278 8184		.strz	"kTpErrRxWrongSN 6u"
00001a2c 57726f6e67534e20
00001a34 367500          
00001a37 01               8185		.byte	1
00001a38 8201             8186		.byte	130,1
00001a3a 6b54704572725278 8187		.strz	"kTpErrRxTimeout 7u"
00001a42 54696d656f757420
00001a4a 377500          
00001a4d 01               8188		.byte	1
00001a4e b101             8189		.byte	177,1
00001a50 46424c54505f5241 8190		.strz	"FBLTP_RAMCODE_START_SEC_CODE "
00001a58 4d434f44455f5354
00001a60 4152545f5345435f
00001a68 434f44452000    
00001a6e 03               8191		.byte	3
00001a6f b201             8192		.byte	178,1
00001a71 18               8193		.byte	24
00001a72 01               8194		.byte	1
00001a73 2b               8195		.byte	43
00001a74 46424c5f4d454d4d 8196		.strz	"FBL_MEMMAP_ERROR "
00001a7c 41505f4552524f52
00001a84 2000            
00001a86 04               8197		.byte	4
00001a87 01               8198		.byte	1
00001a88 c301             8199		.byte	195,1
00001a8a 46424c54505f5241 8200		.strz	"FBLTP_RAMCODE_STOP_SEC_CODE "
00001a92 4d434f44455f5354
00001a9a 4f505f5345435f43
00001aa2 4f44452000      
00001aa7 03               8201		.byte	3
00001aa8 c401             8202		.byte	196,1
00001aaa 18               8203		.byte	24
00001aab 01               8204		.byte	1
00001aac 2b               8205		.byte	43
00001aad 46424c5f4d454d4d 8206		.strz	"FBL_MEMMAP_ERROR "
00001ab5 41505f4552524f52
00001abd 2000            
00001abf 04               8207		.byte	4
00001ac0 01               8208		.byte	1
00001ac1 cf01             8209		.byte	207,1
00001ac3 46626c5470536574 8210		.strz	"FblTpSetRxBS(newBS) { bRxBlockSize = (newBS); bRxBSCounter = (newBS); }"
00001acb 52784253286e6577
00001ad3 425329207b206252
00001adb 78426c6f636b5369
00001ae3 7a65203d20286e65
00001aeb 774253293b206252
00001af3 784253436f756e74
00001afb 6572203d20286e65
00001b03 774253293b207d00
00001b0b 01               8211		.byte	1
00001b0c d601             8212		.byte	214,1
00001b0e 46626c5470536574 8213		.strz	"FblTpSetRxSTmin(newSTmin) (bRxSTmin = (newSTmin))"
00001b16 527853546d696e28
00001b1e 6e657753546d696e
00001b26 2920286252785354
00001b2e 6d696e203d20286e
00001b36 657753546d696e29
00001b3e 2900            
00001b40 04               8214		.byte	4
00001b41 01               8215		.byte	1
00001b42 58               8216		.byte	88
00001b43 6b46626c43775478 8217		.strz	"kFblCwTxPendingTimeout (100u / FBL_REPEAT_CALL_CYCLE)"
00001b4b 50656e64696e6754
00001b53 696d656f75742028
00001b5b 31303075202f2046
00001b63 424c5f5245504541
00001b6b 545f43414c4c5f43
00001b73 59434c452900    
00001b79 01               8218		.byte	1
00001b7a 5c               8219		.byte	92

                                   Fri Apr 10 08:32:01 2020           Page 148
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001b7b 6b46626c43774d61 8220		.strz	"kFblCwMaxWaitTime (10u / FBL_REPEAT_CALL_CYCLE)"
00001b83 785761697454696d
00001b8b 652028313075202f
00001b93 2046424c5f524550
00001b9b 4541545f43414c4c
00001ba3 5f4359434c452900
00001bab 01               8221		.byte	1
00001bac 8e01             8222		.byte	142,1
00001bae 6b46626c43774d73 8223		.strz	"kFblCwMsgTypeNormal 0x00u"
00001bb6 67547970654e6f72
00001bbe 6d616c2030783030
00001bc6 7500            
00001bc8 01               8224		.byte	1
00001bc9 8f01             8225		.byte	143,1
00001bcb 6b46626c43774d73 8226		.strz	"kFblCwMsgTypeRcrRp 0x03u"
00001bd3 6754797065526372
00001bdb 5270203078303375
00001be3 00              
00001be4 01               8227		.byte	1
00001be5 9201             8228		.byte	146,1
00001be7 6b46626c43775263 8229		.strz	"kFblCwRcrRpMsgLength 0x03u"
00001bef 7252704d73674c65
00001bf7 6e67746820307830
00001bff 337500          
00001c02 01               8230		.byte	1
00001c03 9501             8231		.byte	149,1
00001c05 46626c4377476574 8232		.strz	"FblCwGetInit() (fblCwInitFlag == 0x01u)"
00001c0d 496e697428292028
00001c15 66626c4377496e69
00001c1d 74466c6167203d3d
00001c25 2030783031752900
00001c2d 01               8233		.byte	1
00001c2e 9601             8234		.byte	150,1
00001c30 46626c4377536574 8235		.strz	"FblCwSetInit() (fblCwInitFlag = 0x01u)"
00001c38 496e697428292028
00001c40 66626c4377496e69
00001c48 74466c6167203d20
00001c50 30783031752900  
00001c57 01               8236		.byte	1
00001c58 9701             8237		.byte	151,1
00001c5a 46626c4377436c72 8238		.strz	"FblCwClrInit() (fblCwInitFlag = 0x00u)"
00001c62 496e697428292028
00001c6a 66626c4377496e69
00001c72 74466c6167203d20
00001c7a 30783030752900  
00001c81 01               8239		.byte	1
00001c82 b301             8240		.byte	179,1
00001c84 747043616e547844 8241		.strz	"tpCanTxData fblCanTxObj[fblCwDiagTransmitObject].msgObject.DataFld"
00001c8c 6174612066626c43
00001c94 616e54784f626a5b
00001c9c 66626c4377446961
00001ca4 675472616e736d69
00001cac 744f626a6563745d
00001cb4 2e6d73674f626a65
00001cbc 63742e4461746146
00001cc4 6c6400          
00001cc7 01               8242		.byte	1
00001cc8 c601             8243		.byte	198,1
00001cca 46424c5f43575f46 8244		.strz	"FBL_CW_FULL_START_SEC_CODE "
00001cd2 554c4c5f53544152
00001cda 545f5345435f434f
00001ce2 44452000        
00001ce6 03               8245		.byte	3
00001ce7 c701             8246		.byte	199,1
00001ce9 18               8247		.byte	24
00001cea 01               8248		.byte	1
00001ceb 2b               8249		.byte	43
00001cec 46424c5f4d454d4d 8250		.strz	"FBL_MEMMAP_ERROR "
00001cf4 41505f4552524f52
00001cfc 2000            
00001cfe 04               8251		.byte	4
00001cff 01               8252		.byte	1
00001d00 cd01             8253		.byte	205,1
00001d02 46424c5f43575f54 8254		.strz	"FBL_CW_TASK_START_SEC_CODE "
00001d0a 41534b5f53544152
00001d12 545f5345435f434f
00001d1a 44452000        
00001d1e 03               8255		.byte	3
00001d1f ce01             8256		.byte	206,1
00001d21 18               8257		.byte	24
00001d22 01               8258		.byte	1
00001d23 2b               8259		.byte	43
00001d24 46424c5f4d454d4d 8260		.strz	"FBL_MEMMAP_ERROR "
00001d2c 41505f4552524f52
00001d34 2000            
00001d36 04               8261		.byte	4
00001d37 01               8262		.byte	1
00001d38 d101             8263		.byte	209,1
00001d3a 46424c5f43575f54 8264		.strz	"FBL_CW_TASK_STOP_SEC_CODE "
00001d42 41534b5f53544f50
00001d4a 5f5345435f434f44
00001d52 452000          
00001d55 03               8265		.byte	3
00001d56 d201             8266		.byte	210,1
00001d58 18               8267		.byte	24
00001d59 01               8268		.byte	1
00001d5a 2b               8269		.byte	43
00001d5b 46424c5f4d454d4d 8270		.strz	"FBL_MEMMAP_ERROR "
00001d63 41505f4552524f52
00001d6b 2000            
00001d6d 04               8271		.byte	4
00001d6e 01               8272		.byte	1
00001d6f fa01             8273		.byte	250,1
00001d71 46424c5f43575f46 8274		.strz	"FBL_CW_FULL_STOP_SEC_CODE "
00001d79 554c4c5f53544f50
00001d81 5f5345435f434f44
00001d89 452000          
00001d8c 03               8275		.byte	3

                                   Fri Apr 10 08:32:01 2020           Page 149
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001d8d fb01             8276		.byte	251,1
00001d8f 18               8277		.byte	24
00001d90 01               8278		.byte	1
00001d91 2b               8279		.byte	43
00001d92 46424c5f4d454d4d 8280		.strz	"FBL_MEMMAP_ERROR "
00001d9a 41505f4552524f52
00001da2 2000            
00001da4 04               8281		.byte	4
00001da5 04               8282		.byte	4
00001da6 03               8283		.byte	3
00001da7 8e01             8284		.byte	142,1
00001da9 29               8285		.byte	41
00001daa 03               8286		.byte	3
00001dab 39               8287		.byte	57
00001dac 2a               8288		.byte	42
00001dad 03               8289		.byte	3
00001dae 3b               8290		.byte	59
00001daf 2b               8291		.byte	43
00001db0 01               8292		.byte	1
00001db1 31               8293		.byte	49
00001db2 4e565f454e41424c 8294		.strz	"NV_ENABLE_ADDRESS_LOOKUP "
00001dba 455f414444524553
00001dc2 535f4c4f4f4b5550
00001dca 2000            
00001dcc 01               8295		.byte	1
00001dcd 5f               8296		.byte	95
00001dce 6b45657053697a65 8297		.strz	"kEepSizeValidityFlags 0x01u"
00001dd6 56616c6964697479
00001dde 466c616773203078
00001de6 30317500        
00001dea 04               8298		.byte	4
00001deb 04               8299		.byte	4
00001dec 04               8300		.byte	4
00001ded 03               8301		.byte	3
00001dee 9501             8302		.byte	149,1
00001df0 2c               8303		.byte	44
00001df1 01               8304		.byte	1
00001df2 40               8305		.byte	64
00001df3 46424c5f4642545f 8306		.strz	"FBL_FBT_START_SEC_CONST "
00001dfb 53544152545f5345
00001e03 435f434f4e535420
00001e0b 00              
00001e0c 03               8307		.byte	3
00001e0d 41               8308		.byte	65
00001e0e 18               8309		.byte	24
00001e0f 01               8310		.byte	1
00001e10 2b               8311		.byte	43
00001e11 46424c5f4d454d4d 8312		.strz	"FBL_MEMMAP_ERROR "
00001e19 41505f4552524f52
00001e21 2000            
00001e23 04               8313		.byte	4
00001e24 01               8314		.byte	1
00001e25 47               8315		.byte	71
00001e26 46424c5f4642545f 8316		.strz	"FBL_FBT_STOP_SEC_CONST "
00001e2e 53544f505f534543
00001e36 5f434f4e53542000
00001e3e 03               8317		.byte	3
00001e3f 48               8318		.byte	72
00001e40 18               8319		.byte	24
00001e41 01               8320		.byte	1
00001e42 2b               8321		.byte	43
00001e43 46424c5f4d454d4d 8322		.strz	"FBL_MEMMAP_ERROR "
00001e4b 41505f4552524f52
00001e53 2000            
00001e55 04               8323		.byte	4
00001e56 04               8324		.byte	4
00001e57 03               8325		.byte	3
00001e58 a101             8326		.byte	161,1
00001e5a 2d               8327		.byte	45
00001e5b 03               8328		.byte	3
00001e5c 4b               8329		.byte	75
00001e5d 2e               8330		.byte	46
00001e5e 01               8331		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 150
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00001e5f 56               8332		.byte	86
00001e60 46424c5f44494147 8333		.strz	"FBL_DIAG_ENABLE_CORE_SEGMENTHANDLING "
00001e68 5f454e41424c455f
00001e70 434f52455f534547
00001e78 4d454e5448414e44
00001e80 4c494e472000    
00001e86 01               8334		.byte	1
00001e87 61               8335		.byte	97
00001e88 6b44696167537461 8336		.strz	"kDiagStateIdxSecurityKeyAllowed (kDiagLastCoreStateIdx + 1u)"
00001e90 7465496478536563
00001e98 75726974794b6579
00001ea0 416c6c6f77656420
00001ea8 286b446961674c61
00001eb0 7374436f72655374
00001eb8 617465496478202b
00001ec0 2031752900      
00001ec5 01               8337		.byte	1
00001ec6 62               8338		.byte	98
00001ec7 6b44696167537461 8339		.strz	"kDiagStateIdxSecurityUnlock (kDiagStateIdxSecurityKeyAllowed + 1u)"
00001ecf 7465496478536563
00001ed7 7572697479556e6c
00001edf 6f636b20286b4469
00001ee7 6167537461746549
00001eef 6478536563757269
00001ef7 74794b6579416c6c
00001eff 6f776564202b2031
00001f07 752900          
00001f0a 01               8340		.byte	1
00001f0b 63               8341		.byte	99
00001f0c 6b44696167537461 8342		.strz	"kDiagStateIdxFingerprintValid (kDiagStateIdxSecurityUnlock + 1u)"
00001f14 746549647846696e
00001f1c 6765727072696e74
00001f24 56616c696420286b
00001f2c 4469616753746174
00001f34 6549647853656375
00001f3c 72697479556e6c6f
00001f44 636b202b20317529
00001f4c 00              
00001f4d 01               8343		.byte	1
00001f4e 64               8344		.byte	100
00001f4f 6b44696167537461 8345		.strz	"kDiagStateIdxEraseSucceeded (kDiagStateIdxFingerprintValid + 1u)"
00001f57 7465496478457261
00001f5f 7365537563636565
00001f67 64656420286b4469
00001f6f 6167537461746549
00001f77 647846696e676572
00001f7f 7072696e7456616c
00001f87 6964202b20317529
00001f8f 00              
00001f90 01               8346		.byte	1
00001f91 65               8347		.byte	101
00001f92 6b44696167537461 8348		.strz	"kDiagStateIdxTransferDataAllowed (kDiagStateIdxEraseSucceeded + 1u)"
00001f9a 7465496478547261
00001fa2 6e73666572446174
00001faa 61416c6c6f776564
00001fb2 20286b4469616753
00001fba 7461746549647845
00001fc2 7261736553756363
00001fca 6565646564202b20
00001fd2 31752900        
00001fd6 01               8349		.byte	1
00001fd7 66               8350		.byte	102
00001fd8 6b44696167537461 8351		.strz	"kDiagStateIdxTransferDataSucceeded (kDiagStateIdxTransferDataAllowed + 1u)"
00001fe0 7465496478547261
00001fe8 6e73666572446174
00001ff0 6153756363656564
00001ff8 656420286b446961
00002000 6753746174654964
00002008 785472616e736665
00002010 7244617461416c6c
00002018 6f776564202b2031
00002020 752900          
00002023 01               8352		.byte	1
00002024 67               8353		.byte	103
00002025 6b44696167537461 8354		.strz	"kDiagStateIdxChecksumAllowed (kDiagStateIdxTransferDataSucceeded + 1u)"
0000202d 7465496478436865
00002035 636b73756d416c6c
0000203d 6f77656420286b44
00002045 6961675374617465
0000204d 4964785472616e73
00002055 6665724461746153
0000205d 7563636565646564
00002065 202b2031752900  
0000206c 01               8355		.byte	1
0000206d 69               8356		.byte	105
0000206e 6b446961674c6173 8357		.strz	"kDiagLastOemStateIdx kDiagStateIdxChecksumAllowed"
00002076 744f656d53746174
0000207e 65496478206b4469
00002086 6167537461746549
0000208e 6478436865636b73
00002096 756d416c6c6f7765
0000209e 6400            
000020a0 04               8358		.byte	4
000020a1 01               8359		.byte	1
000020a2 5a               8360		.byte	90
000020a3 6b4469616743616c 8361		.strz	"kDiagCallCycle 1u"
000020ab 6c4379636c652031
000020b3 7500            
000020b5 01               8362		.byte	1
000020b6 7d               8363		.byte	125
000020b7 6b44696167537461 8364		.strz	"kDiagStateIdxMemDriverInitialized 17u"
000020bf 74654964784d656d
000020c7 447269766572496e
000020cf 697469616c697a65
000020d7 642031377500    
000020dd 01               8365		.byte	1
000020de 7f               8366		.byte	127
000020df 6b446961674c6173 8367		.strz	"kDiagLastCoreStateIdx kDiagStateIdxMemDriverInitialized"
000020e7 74436f7265537461
000020ef 7465496478206b44
000020f7 6961675374617465
000020ff 4964784d656d4472
00002107 69766572496e6974
0000210f 69616c697a656400
00002117 01               8368		.byte	1
00002118 8201             8369		.byte	130,1
0000211a 6b446961674e756d 8370		.strz	"kDiagNumberOfStates ( kDiagLastOemStateIdx + 1u )"
00002122 6265724f66537461
0000212a 7465732028206b44
00002132 6961674c6173744f
0000213a 656d537461746549
00002142 6478202b20317520
0000214a 2900            
0000214c 01               8371		.byte	1
0000214d 8301             8372		.byte	131,1
0000214f 6b446961674e756d 8373		.strz	"kDiagNumberOfDispatchStates kDiagNumberOfStates"
00002157 6265724f66446973
0000215f 7061746368537461
00002167 746573206b446961
0000216f 674e756d6265724f
00002177 6653746174657300
0000217f 01               8374		.byte	1
00002180 c801             8375		.byte	200,1
00002182 46424c5f44494147 8376		.strz	"FBL_DIAG_STATECHECK_ARRAYSIZE (((kDiagNumberOfDispatchStates - 1u) / FBL_STATE_BITS) + 1u)"
0000218a 5f53544154454348
00002192 45434b5f41525241
0000219a 5953495a45202828
000021a2 286b446961674e75
000021aa 6d6265724f664469
000021b2 7370617463685374
000021ba 61746573202d2031
000021c2 7529202f2046424c
000021ca 5f53544154455f42
000021d2 49545329202b2031
000021da 752900          
000021dd 01               8377		.byte	1
000021de ae02             8378		.byte	174,2
000021e0 6b44696167457272 8379		.strz	"kDiagErrorNone 0x00u"
000021e8 6f724e6f6e652030
000021f0 7830307500      
000021f5 01               8380		.byte	1
000021f6 af02             8381		.byte	175,2
000021f8 6b446961674e7263 8382		.strz	"kDiagNrcGeneralReject 0x10u"
00002200 47656e6572616c52
00002208 656a656374203078
00002210 31307500        
00002214 01               8383		.byte	1
00002215 b502             8384		.byte	181,2
00002217 6b446961674e7263 8385		.strz	"kDiagNrcConditionsNotCorrect 0x22u"
0000221f 436f6e646974696f
00002227 6e734e6f74436f72
0000222f 7265637420307832
00002237 327500          
0000223a 01               8386		.byte	1
0000223b b602             8387		.byte	182,2

                                   Fri Apr 10 08:32:01 2020           Page 151
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
0000223d 6b446961674e7263 8388		.strz	"kDiagNrcRequestSequenceError 0x24u"
00002245 5265717565737453
0000224d 657175656e636545
00002255 72726f7220307832
0000225d 347500          
00002260 01               8389		.byte	1
00002261 b702             8390		.byte	183,2
00002263 6b446961674e7263 8391		.strz	"kDiagNrcRequestOutOfRange 0x31u"
0000226b 526571756573744f
00002273 75744f6652616e67
0000227b 6520307833317500
00002283 01               8392		.byte	1
00002284 bc02             8393		.byte	188,2
00002286 6b446961674e7263 8394		.strz	"kDiagNrcUploadDownloadNotAccepted 0x70u"
0000228e 55706c6f6164446f
00002296 776e6c6f61644e6f
0000229e 7441636365707465
000022a6 6420307837307500
000022ae 01               8395		.byte	1
000022af bd02             8396		.byte	189,2
000022b1 6b446961674e7263 8397		.strz	"kDiagNrcTransferDataSuspended 0x71u"
000022b9 5472616e73666572
000022c1 4461746153757370
000022c9 656e646564203078
000022d1 37317500        
000022d5 01               8398		.byte	1
000022d6 be02             8399		.byte	190,2
000022d8 6b446961674e7263 8400		.strz	"kDiagNrcGeneralProgrammingFailure 0x72u"
000022e0 47656e6572616c50
000022e8 726f6772616d6d69
000022f0 6e674661696c7572
000022f8 6520307837327500
00002300 01               8401		.byte	1
00002301 cf03             8402		.byte	207,3
00002303 46424c444941475f 8403		.strz	"FBLDIAG_RAMCODE_START_SEC_CODE "
0000230b 52414d434f44455f
00002313 53544152545f5345
0000231b 435f434f44452000
00002323 03               8404		.byte	3
00002324 d003             8405		.byte	208,3
00002326 18               8406		.byte	24
00002327 01               8407		.byte	1
00002328 2b               8408		.byte	43
00002329 46424c5f4d454d4d 8409		.strz	"FBL_MEMMAP_ERROR "
00002331 41505f4552524f52
00002339 2000            
0000233b 04               8410		.byte	4
0000233c 01               8411		.byte	1
0000233d dc03             8412		.byte	220,3
0000233f 46424c444941475f 8413		.strz	"FBLDIAG_RAMCODE_STOP_SEC_CODE "
00002347 52414d434f44455f
0000234f 53544f505f534543
00002357 5f434f44452000  
0000235e 03               8414		.byte	3
0000235f dd03             8415		.byte	221,3
00002361 18               8416		.byte	24
00002362 01               8417		.byte	1
00002363 2b               8418		.byte	43
00002364 46424c5f4d454d4d 8419		.strz	"FBL_MEMMAP_ERROR "
0000236c 41505f4552524f52
00002374 2000            
00002376 04               8420		.byte	4
00002377 04               8421		.byte	4
00002378 03               8422		.byte	3
00002379 a301             8423		.byte	163,1
0000237b 2f               8424		.byte	47
0000237c 03               8425		.byte	3
0000237d b201             8426		.byte	178,1
0000237f 30               8427		.byte	48
00002380 01               8428		.byte	1
00002381 79               8429		.byte	121
00002382 46424c5f4d454d5f 8430		.strz	"FBL_MEM_BUFFER_SIZE FBL_DIAG_BUFFER_LENGTH"
0000238a 4255464645525f53
00002392 495a452046424c5f
0000239a 444941475f425546
000023a2 4645525f4c454e47
000023aa 544800          
000023ad 01               8431		.byte	1
000023ae 7b               8432		.byte	123
000023af 46424c5f4d454d5f 8433		.strz	"FBL_MEM_DEFAULT_PREAMBLE_LENGTH 2u"
000023b7 44454641554c545f
000023bf 505245414d424c45
000023c7 5f4c454e47544820
000023cf 327500          
000023d2 01               8434		.byte	1
000023d3 7d               8435		.byte	125
000023d4 46424c5f4d454d5f 8436		.strz	"FBL_MEM_MAX_PREAMBLE_LENGTH 2u"
000023dc 4d41585f50524541
000023e4 4d424c455f4c454e
000023ec 47544820327500  
000023f3 01               8437		.byte	1
000023f4 ad01             8438		.byte	173,1
000023f6 5f5f4170706c4662 8439		.strz	"__ApplFblMemPreWrite() FblDiagMemPreWrite()"
000023fe 6c4d656d50726557
00002406 7269746528292046
0000240e 626c446961674d65
00002416 6d50726557726974
0000241e 65282900        
00002422 01               8440		.byte	1
00002423 ae01             8441		.byte	174,1
00002425 5f5f4170706c4662 8442		.strz	"__ApplFblMemPostWrite() FblDiagMemPostWrite()"
0000242d 6c4d656d506f7374
00002435 5772697465282920
0000243d 46626c446961674d
00002445 656d506f73745772
0000244d 697465282900    
00002453 01               8443		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 152
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00002454 b301             8444		.byte	179,1
00002456 5f5f4170706c4662 8445		.strz	"__ApplFblMemPreErase() FblDiagMemPreWrite()"
0000245e 6c4d656d50726545
00002466 7261736528292046
0000246e 626c446961674d65
00002476 6d50726557726974
0000247e 65282900        
00002482 01               8446		.byte	1
00002483 b401             8447		.byte	180,1
00002485 5f5f4170706c4662 8448		.strz	"__ApplFblMemPostErase() FblDiagMemPostWrite()"
0000248d 6c4d656d506f7374
00002495 4572617365282920
0000249d 46626c446961674d
000024a5 656d506f73745772
000024ad 697465282900    
000024b3 01               8449		.byte	1
000024b4 bd01             8450		.byte	189,1
000024b6 46424c5f4d454d5f 8451		.strz	"FBL_MEM_WD_TRIGGER_DEFAULT (FBL_NO_TRIGGER)"
000024be 57445f5452494747
000024c6 45525f4445464155
000024ce 4c54202846424c5f
000024d6 4e4f5f5452494747
000024de 45522900        
000024e2 01               8452		.byte	1
000024e3 c201             8453		.byte	194,1
000024e5 46424c5f4d454d5f 8454		.strz	"FBL_MEM_TRIGGER_STATUS_OVERWRITE vuint8"
000024ed 545249474745525f
000024f5 5354415455535f4f
000024fd 5645525752495445
00002505 207675696e743800
0000250d 01               8455		.byte	1
0000250e e601             8456		.byte	230,1
00002510 46424c5f4d454d5f 8457		.strz	"FBL_MEM_ENABLE_STATUS_OVERWRITE "
00002518 454e41424c455f53
00002520 54415455535f4f56
00002528 4552575249544520
00002530 00              
00002531 01               8458		.byte	1
00002532 ef01             8459		.byte	239,1
00002534 46424c5f4d454d5f 8460		.strz	"FBL_MEM_STATUS_Ok kDiagErrorNone"
0000253c 5354415455535f4f
00002544 6b206b4469616745
0000254c 72726f724e6f6e65
00002554 00              
00002555 01               8461		.byte	1
00002556 f001             8462		.byte	240,1
00002558 46424c5f4d454d5f 8463		.strz	"FBL_MEM_STATUS_Failed kDiagNrcConditionsNotCorrect"
00002560 5354415455535f46
00002568 61696c6564206b44
00002570 6961674e7263436f
00002578 6e646974696f6e73
00002580 4e6f74436f727265
00002588 637400          
0000258b 01               8464		.byte	1
0000258c f201             8465		.byte	242,1
0000258e 46424c5f4d454d5f 8466		.strz	"FBL_MEM_STATUS_BlockEraseSequence kDiagNrcRequestSequenceError"
00002596 5354415455535f42
0000259e 6c6f636b45726173
000025a6 6553657175656e63
000025ae 65206b446961674e
000025b6 7263526571756573
000025be 7453657175656e63
000025c6 654572726f7200  
000025cd 01               8467		.byte	1
000025ce f401             8468		.byte	244,1
000025d0 46424c5f4d454d5f 8469		.strz	"FBL_MEM_STATUS_BlockStartSequence kDiagNrcRequestSequenceError"
000025d8 5354415455535f42
000025e0 6c6f636b53746172
000025e8 7453657175656e63
000025f0 65206b446961674e
000025f8 7263526571756573
00002600 7453657175656e63
00002608 654572726f7200  
0000260f 01               8470		.byte	1
00002610 f501             8471		.byte	245,1
00002612 46424c5f4d454d5f 8472		.strz	"FBL_MEM_STATUS_BlockStartParam kDiagNrcConditionsNotCorrect"
0000261a 5354415455535f42
00002622 6c6f636b53746172
0000262a 74506172616d206b
00002632 446961674e726343
0000263a 6f6e646974696f6e
00002642 734e6f74436f7272
0000264a 65637400        
0000264e 01               8473		.byte	1
0000264f f701             8474		.byte	247,1
00002651 46424c5f4d454d5f 8475		.strz	"FBL_MEM_STATUS_BlockEndSequence kDiagNrcRequestSequenceError"
00002659 5354415455535f42
00002661 6c6f636b456e6453
00002669 657175656e636520
00002671 6b446961674e7263
00002679 5265717565737453
00002681 657175656e636545
00002689 72726f7200      
0000268e 01               8476		.byte	1
0000268f f801             8477		.byte	248,1
00002691 46424c5f4d454d5f 8478		.strz	"FBL_MEM_STATUS_BlockEndVerifyFinalize kDiagNrcGeneralProgrammingFailure"
00002699 5354415455535f42
000026a1 6c6f636b456e6456
000026a9 657269667946696e
000026b1 616c697a65206b44
000026b9 6961674e72634765
000026c1 6e6572616c50726f
000026c9 6772616d6d696e67
000026d1 4661696c75726500
000026d9 01               8479		.byte	1
000026da fa01             8480		.byte	250,1
000026dc 46424c5f4d454d5f 8481		.strz	"FBL_MEM_STATUS_BlockVerifySequence kDiagNrcRequestSequenceError"
000026e4 5354415455535f42
000026ec 6c6f636b56657269
000026f4 667953657175656e
000026fc 6365206b44696167
00002704 4e72635265717565
0000270c 737453657175656e
00002714 63654572726f7200
0000271c 01               8482		.byte	1
0000271d fb01             8483		.byte	251,1
0000271f 46424c5f4d454d5f 8484		.strz	"FBL_MEM_STATUS_BlockVerifyInputVerify kDiagNrcGeneralReject"
00002727 5354415455535f42
0000272f 6c6f636b56657269
00002737 6679496e70757456
0000273f 6572696679206b44
00002747 6961674e72634765
0000274f 6e6572616c52656a
00002757 65637400        
0000275b 01               8485		.byte	1
0000275c fc01             8486		.byte	252,1
0000275e 46424c5f4d454d5f 8487		.strz	"FBL_MEM_STATUS_BlockVerifyProcessedVerify kDiagNrcGeneralReject"
00002766 5354415455535f42
0000276e 6c6f636b56657269
00002776 667950726f636573
0000277e 7365645665726966
00002786 79206b446961674e
0000278e 726347656e657261
00002796 6c52656a65637400
0000279e 01               8488		.byte	1
0000279f fd01             8489		.byte	253,1
000027a1 46424c5f4d454d5f 8490		.strz	"FBL_MEM_STATUS_BlockVerifyPipeVerify kDiagNrcGeneralReject"
000027a9 5354415455535f42
000027b1 6c6f636b56657269
000027b9 6679506970655665
000027c1 72696679206b4469
000027c9 61674e726347656e
000027d1 6572616c52656a65
000027d9 637400          
000027dc 01               8491		.byte	1
000027dd fe01             8492		.byte	254,1
000027df 46424c5f4d454d5f 8493		.strz	"FBL_MEM_STATUS_BlockVerifyOutputVerify kDiagNrcGeneralReject"
000027e7 5354415455535f42
000027ef 6c6f636b56657269
000027f7 66794f7574707574
000027ff 566572696679206b
00002807 446961674e726347
0000280f 656e6572616c5265
00002817 6a65637400      
0000281c 01               8494		.byte	1
0000281d 8002             8495		.byte	128,2
0000281f 46424c5f4d454d5f 8496		.strz	"FBL_MEM_STATUS_SegmentStartSequence kDiagNrcRequestSequenceError"
00002827 5354415455535f53
0000282f 65676d656e745374
00002837 6172745365717565
0000283f 6e6365206b446961
00002847 674e726352657175
0000284f 6573745365717565
00002857 6e63654572726f72
0000285f 00              
00002860 01               8497		.byte	1
00002861 8102             8498		.byte	129,2
00002863 46424c5f4d454d5f 8499		.strz	"FBL_MEM_STATUS_SegmentStartDataProcInit kDiagNrcUploadDownloadNotAccepted"
0000286b 5354415455535f53
00002873 65676d656e745374
0000287b 6172744461746150
00002883 726f63496e697420
0000288b 6b446961674e7263
00002893 55706c6f6164446f
0000289b 776e6c6f61644e6f
000028a3 7441636365707465
000028ab 6400            

                                   Fri Apr 10 08:32:01 2020           Page 153
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000028ad 01               8500		.byte	1
000028ae 8202             8501		.byte	130,2
000028b0 46424c5f4d454d5f 8502		.strz	"FBL_MEM_STATUS_SegmentStartStreamOutInit kDiagNrcUploadDownloadNotAccepted"
000028b8 5354415455535f53
000028c0 65676d656e745374
000028c8 6172745374726561
000028d0 6d4f7574496e6974
000028d8 206b446961674e72
000028e0 6355706c6f616444
000028e8 6f776e6c6f61644e
000028f0 6f74416363657074
000028f8 656400          
000028fb 01               8503		.byte	1
000028fc 8302             8504		.byte	131,2
000028fe 46424c5f4d454d5f 8505		.strz	"FBL_MEM_STATUS_SegmentStartVerifyInit kDiagNrcConditionsNotCorrect"
00002906 5354415455535f53
0000290e 65676d656e745374
00002916 6172745665726966
0000291e 79496e6974206b44
00002926 6961674e7263436f
0000292e 6e646974696f6e73
00002936 4e6f74436f727265
0000293e 637400          
00002941 01               8506		.byte	1
00002942 8402             8507		.byte	132,2
00002944 46424c5f4d454d5f 8508		.strz	"FBL_MEM_STATUS_SegmentStartVerifyCompute kDiagNrcGeneralProgrammingFailure"
0000294c 5354415455535f53
00002954 65676d656e745374
0000295c 6172745665726966
00002964 79436f6d70757465
0000296c 206b446961674e72
00002974 6347656e6572616c
0000297c 50726f6772616d6d
00002984 696e674661696c75
0000298c 726500          
0000298f 01               8509		.byte	1
00002990 8502             8510		.byte	133,2
00002992 46424c5f4d454d5f 8511		.strz	"FBL_MEM_STATUS_SegmentStartSegmentCount kDiagNrcRequestOutOfRange"
0000299a 5354415455535f53
000029a2 65676d656e745374
000029aa 6172745365676d65
000029b2 6e74436f756e7420
000029ba 6b446961674e7263
000029c2 526571756573744f
000029ca 75744f6652616e67
000029d2 6500            
000029d4 01               8512		.byte	1
000029d5 8702             8513		.byte	135,2
000029d7 46424c5f4d454d5f 8514		.strz	"FBL_MEM_STATUS_SegmentEndSequence kDiagNrcRequestSequenceError"
000029df 5354415455535f53
000029e7 65676d656e74456e
000029ef 6453657175656e63
000029f7 65206b446961674e
000029ff 7263526571756573
00002a07 7453657175656e63
00002a0f 654572726f7200  
00002a16 01               8515		.byte	1
00002a17 8802             8516		.byte	136,2
00002a19 46424c5f4d454d5f 8517		.strz	"FBL_MEM_STATUS_SegmentEndInsufficientData kDiagNrcRequestSequenceError"
00002a21 5354415455535f53
00002a29 65676d656e74456e
00002a31 64496e7375666669
00002a39 6369656e74446174
00002a41 61206b446961674e
00002a49 7263526571756573
00002a51 7453657175656e63
00002a59 654572726f7200  
00002a60 01               8518		.byte	1
00002a61 8902             8519		.byte	137,2
00002a63 46424c5f4d454d5f 8520		.strz	"FBL_MEM_STATUS_SegmentEndPost kDiagNrcConditionsNotCorrect"
00002a6b 5354415455535f53
00002a73 65676d656e74456e
00002a7b 64506f7374206b44
00002a83 6961674e7263436f
00002a8b 6e646974696f6e73
00002a93 4e6f74436f727265
00002a9b 637400          
00002a9e 01               8521		.byte	1
00002a9f 8b02             8522		.byte	139,2
00002aa1 46424c5f4d454d5f 8523		.strz	"FBL_MEM_STATUS_DataIndSequence kDiagNrcRequestSequenceError"
00002aa9 5354415455535f44
00002ab1 617461496e645365
00002ab9 7175656e6365206b
00002ac1 446961674e726352
00002ac9 6571756573745365
00002ad1 7175656e63654572
00002ad9 726f7200        
00002add 01               8524		.byte	1
00002ade 8c02             8525		.byte	140,2
00002ae0 46424c5f4d454d5f 8526		.strz	"FBL_MEM_STATUS_DataIndParam kDiagNrcGeneralProgrammingFailure"
00002ae8 5354415455535f44
00002af0 617461496e645061
00002af8 72616d206b446961
00002b00 674e726347656e65
00002b08 72616c50726f6772
00002b10 616d6d696e674661
00002b18 696c75726500    
00002b1e 01               8527		.byte	1
00002b1f 8d02             8528		.byte	141,2
00002b21 46424c5f4d454d5f 8529		.strz	"FBL_MEM_STATUS_DataIndOverflow kDiagNrcTransferDataSuspended"
00002b29 5354415455535f44
00002b31 617461496e644f76
00002b39 6572666c6f77206b
00002b41 446961674e726354
00002b49 72616e7366657244
00002b51 6174615375737065
00002b59 6e64656400      
00002b5e 01               8530		.byte	1
00002b5f 8f02             8531		.byte	143,2
00002b61 46424c5f4d454d5f 8532		.strz	"FBL_MEM_STATUS_DataProc kDiagNrcGeneralProgrammingFailure"
00002b69 5354415455535f44
00002b71 61746150726f6320
00002b79 6b446961674e7263
00002b81 47656e6572616c50
00002b89 726f6772616d6d69
00002b91 6e674661696c7572
00002b99 6500            
00002b9b 01               8533		.byte	1
00002b9c 9002             8534		.byte	144,2
00002b9e 46424c5f4d454d5f 8535		.strz	"FBL_MEM_STATUS_DataProcConsume kDiagNrcGeneralProgrammingFailure"
00002ba6 5354415455535f44
00002bae 61746150726f6343
00002bb6 6f6e73756d65206b
00002bbe 446961674e726347
00002bc6 656e6572616c5072
00002bce 6f6772616d6d696e
00002bd6 674661696c757265
00002bde 00              
00002bdf 01               8536		.byte	1
00002be0 9102             8537		.byte	145,2
00002be2 46424c5f4d454d5f 8538		.strz	"FBL_MEM_STATUS_DataProcDeinit kDiagNrcConditionsNotCorrect"
00002bea 5354415455535f44
00002bf2 61746150726f6344
00002bfa 65696e6974206b44
00002c02 6961674e7263436f
00002c0a 6e646974696f6e73
00002c12 4e6f74436f727265
00002c1a 637400          
00002c1d 01               8539		.byte	1
00002c1e 9302             8540		.byte	147,2
00002c20 46424c5f4d454d5f 8541		.strz	"FBL_MEM_STATUS_StreamOutput kDiagNrcGeneralProgrammingFailure"
00002c28 5354415455535f53
00002c30 747265616d4f7574
00002c38 707574206b446961
00002c40 674e726347656e65
00002c48 72616c50726f6772
00002c50 616d6d696e674661
00002c58 696c75726500    
00002c5e 01               8542		.byte	1
00002c5f 9402             8543		.byte	148,2
00002c61 46424c5f4d454d5f 8544		.strz	"FBL_MEM_STATUS_StreamOutputConsume kDiagNrcGeneralProgrammingFailure"
00002c69 5354415455535f53
00002c71 747265616d4f7574
00002c79 707574436f6e7375
00002c81 6d65206b44696167
00002c89 4e726347656e6572
00002c91 616c50726f677261
00002c99 6d6d696e67466169
00002ca1 6c75726500      
00002ca6 01               8545		.byte	1
00002ca7 9502             8546		.byte	149,2
00002ca9 46424c5f4d454d5f 8547		.strz	"FBL_MEM_STATUS_StreamOutputOverflow kDiagNrcTransferDataSuspended"
00002cb1 5354415455535f53
00002cb9 747265616d4f7574
00002cc1 7075744f76657266
00002cc9 6c6f77206b446961
00002cd1 674e72635472616e
00002cd9 7366657244617461
00002ce1 53757370656e6465
00002ce9 6400            
00002ceb 01               8548		.byte	1
00002cec 9602             8549		.byte	150,2
00002cee 46424c5f4d454d5f 8550		.strz	"FBL_MEM_STATUS_StreamOutputDeinit kDiagNrcConditionsNotCorrect"
00002cf6 5354415455535f53
00002cfe 747265616d4f7574
00002d06 7075744465696e69
00002d0e 74206b446961674e
00002d16 7263436f6e646974
00002d1e 696f6e734e6f7443
00002d26 6f727265637400  
00002d2d 01               8551		.byte	1
00002d2e 9802             8552		.byte	152,2
00002d30 46424c5f4d454d5f 8553		.strz	"FBL_MEM_STATUS_DriverResumeWrite kDiagNrcGeneralProgrammingFailure"
00002d38 5354415455535f44
00002d40 7269766572526573
00002d48 756d655772697465
00002d50 206b446961674e72
00002d58 6347656e6572616c
00002d60 50726f6772616d6d
00002d68 696e674661696c75
00002d70 726500          
00002d73 01               8554		.byte	1
00002d74 9902             8555		.byte	153,2

                                   Fri Apr 10 08:32:01 2020           Page 154
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00002d76 46424c5f4d454d5f 8556		.strz	"FBL_MEM_STATUS_DriverWrite kDiagNrcGeneralProgrammingFailure"
00002d7e 5354415455535f44
00002d86 7269766572577269
00002d8e 7465206b44696167
00002d96 4e726347656e6572
00002d9e 616c50726f677261
00002da6 6d6d696e67466169
00002dae 6c75726500      
00002db3 01               8557		.byte	1
00002db4 9a02             8558		.byte	154,2
00002db6 46424c5f4d454d5f 8559		.strz	"FBL_MEM_STATUS_DriverErase kDiagNrcGeneralProgrammingFailure"
00002dbe 5354415455535f44
00002dc6 7269766572457261
00002dce 7365206b44696167
00002dd6 4e726347656e6572
00002dde 616c50726f677261
00002de6 6d6d696e67466169
00002dee 6c75726500      
00002df3 01               8560		.byte	1
00002df4 9b02             8561		.byte	155,2
00002df6 46424c5f4d454d5f 8562		.strz	"FBL_MEM_STATUS_DriverRemainder kDiagNrcGeneralProgrammingFailure"
00002dfe 5354415455535f44
00002e06 726976657252656d
00002e0e 61696e646572206b
00002e16 446961674e726347
00002e1e 656e6572616c5072
00002e26 6f6772616d6d696e
00002e2e 674661696c757265
00002e36 00              
00002e37 01               8563		.byte	1
00002e38 9c02             8564		.byte	156,2
00002e3a 46424c5f4d454d5f 8565		.strz	"FBL_MEM_STATUS_DriverSuspendWrite kDiagNrcGeneralProgrammingFailure"
00002e42 5354415455535f44
00002e4a 7269766572537573
00002e52 70656e6457726974
00002e5a 65206b446961674e
00002e62 726347656e657261
00002e6a 6c50726f6772616d
00002e72 6d696e674661696c
00002e7a 75726500        
00002e7e 01               8566		.byte	1
00002e7f 9e02             8567		.byte	158,2
00002e81 46424c5f4d454d5f 8568		.strz	"FBL_MEM_STATUS_ProgramOverflow kDiagNrcTransferDataSuspended"
00002e89 5354415455535f50
00002e91 726f6772616d4f76
00002e99 6572666c6f77206b
00002ea1 446961674e726354
00002ea9 72616e7366657244
00002eb1 6174615375737065
00002eb9 6e64656400      
00002ebe 01               8569		.byte	1
00002ebf 9f02             8570		.byte	159,2
00002ec1 46424c5f4d454d5f 8571		.strz	"FBL_MEM_STATUS_ProgramOutsideFbt kDiagNrcTransferDataSuspended"
00002ec9 5354415455535f50
00002ed1 726f6772616d4f75
00002ed9 7473696465466274
00002ee1 206b446961674e72
00002ee9 635472616e736665
00002ef1 7244617461537573
00002ef9 70656e64656400  
00002f00 01               8572		.byte	1
00002f01 a002             8573		.byte	160,2
00002f03 46424c5f4d454d5f 8574		.strz	"FBL_MEM_STATUS_ProgramUnalignedAddress kDiagNrcGeneralProgrammingFailure"
00002f0b 5354415455535f50
00002f13 726f6772616d556e
00002f1b 616c69676e656441
00002f23 646472657373206b
00002f2b 446961674e726347
00002f33 656e6572616c5072
00002f3b 6f6772616d6d696e
00002f43 674661696c757265
00002f4b 00              
00002f4c 01               8575		.byte	1
00002f4d a102             8576		.byte	161,2
00002f4f 46424c5f4d454d5f 8577		.strz	"FBL_MEM_STATUS_ProgramDriverNotReady kDiagNrcRequestSequenceError"
00002f57 5354415455535f50
00002f5f 726f6772616d4472
00002f67 697665724e6f7452
00002f6f 65616479206b4469
00002f77 61674e7263526571
00002f7f 7565737453657175
00002f87 656e63654572726f
00002f8f 7200            
00002f91 01               8578		.byte	1
00002f92 a202             8579		.byte	162,2
00002f94 46424c5f4d454d5f 8580		.strz	"FBL_MEM_STATUS_ProgramPreWrite kDiagNrcGeneralProgrammingFailure"
00002f9c 5354415455535f50
00002fa4 726f6772616d5072
00002fac 655772697465206b
00002fb4 446961674e726347
00002fbc 656e6572616c5072
00002fc4 6f6772616d6d696e
00002fcc 674661696c757265
00002fd4 00              
00002fd5 01               8581		.byte	1
00002fd6 a302             8582		.byte	163,2
00002fd8 46424c5f4d454d5f 8583		.strz	"FBL_MEM_STATUS_ProgramPostWrite kDiagNrcGeneralProgrammingFailure"
00002fe0 5354415455535f50
00002fe8 726f6772616d506f
00002ff0 7374577269746520
00002ff8 6b446961674e7263
00003000 47656e6572616c50
00003008 726f6772616d6d69
00003010 6e674661696c7572
00003018 6500            
0000301a 01               8584		.byte	1
0000301b a502             8585		.byte	165,2
0000301d 46424c5f4d454d5f 8586		.strz	"FBL_MEM_STATUS_EraseOutsideFbt kDiagNrcRequestOutOfRange"
00003025 5354415455535f45
0000302d 726173654f757473
00003035 696465466274206b
0000303d 446961674e726352
00003045 6571756573744f75
0000304d 744f6652616e6765
00003055 00              
00003056 01               8587		.byte	1
00003057 a602             8588		.byte	166,2
00003059 46424c5f4d454d5f 8589		.strz	"FBL_MEM_STATUS_EraseDriverNotReady kDiagNrcConditionsNotCorrect"
00003061 5354415455535f45
00003069 7261736544726976
00003071 65724e6f74526561
00003079 6479206b44696167
00003081 4e7263436f6e6469
00003089 74696f6e734e6f74
00003091 436f727265637400
00003099 01               8590		.byte	1
0000309a a702             8591		.byte	167,2
0000309c 46424c5f4d454d5f 8592		.strz	"FBL_MEM_STATUS_ErasePreErase kDiagNrcConditionsNotCorrect"
000030a4 5354415455535f45
000030ac 7261736550726545
000030b4 72617365206b4469
000030bc 61674e7263436f6e
000030c4 646974696f6e734e
000030cc 6f74436f72726563
000030d4 7400            
000030d6 01               8593		.byte	1
000030d7 a802             8594		.byte	168,2
000030d9 46424c5f4d454d5f 8595		.strz	"FBL_MEM_STATUS_ErasePostErase kDiagNrcConditionsNotCorrect"
000030e1 5354415455535f45
000030e9 72617365506f7374
000030f1 4572617365206b44
000030f9 6961674e7263436f
00003101 6e646974696f6e73
00003109 4e6f74436f727265
00003111 637400          
00003114 01               8596		.byte	1
00003115 aa02             8597		.byte	170,2
00003117 46424c5f4d454d5f 8598		.strz	"FBL_MEM_STATUS_VerifyCompute kDiagNrcGeneralProgrammingFailure"
0000311f 5354415455535f56
00003127 6572696679436f6d
0000312f 70757465206b4469
00003137 61674e726347656e
0000313f 6572616c50726f67
00003147 72616d6d696e6746
0000314f 61696c75726500  
00003156 01               8599		.byte	1
00003157 ab02             8600		.byte	171,2
00003159 46424c5f4d454d5f 8601		.strz	"FBL_MEM_STATUS_VerifyFinalize kDiagNrcGeneralProgrammingFailure"
00003161 5354415455535f56
00003169 657269667946696e
00003171 616c697a65206b44
00003179 6961674e72634765
00003181 6e6572616c50726f
00003189 6772616d6d696e67
00003191 4661696c75726500
00003199 01               8602		.byte	1
0000319a ad02             8603		.byte	173,2
0000319c 46424c5f4d454d5f 8604		.strz	"FBL_MEM_STATUS_PassThroughLocal kDiagNrcConditionsNotCorrect"
000031a4 5354415455535f50
000031ac 6173735468726f75
000031b4 67684c6f63616c20
000031bc 6b446961674e7263
000031c4 436f6e646974696f
000031cc 6e734e6f74436f72
000031d4 7265637400      
000031d9 01               8605		.byte	1
000031da ae02             8606		.byte	174,2
000031dc 46424c5f4d454d5f 8607		.strz	"FBL_MEM_STATUS_PassThroughRemote kDiagNrcConditionsNotCorrect"
000031e4 5354415455535f50
000031ec 6173735468726f75
000031f4 676852656d6f7465
000031fc 206b446961674e72
00003204 63436f6e64697469
0000320c 6f6e734e6f74436f
00003214 727265637400    
0000321a 01               8608		.byte	1
0000321b b302             8609		.byte	179,2
0000321d 46424c5f4d454d5f 8610		.strz	"FBL_MEM_ENABLE_EXT_STATUS "
00003225 454e41424c455f45
0000322d 58545f5354415455
00003235 532000          
00003238 01               8611		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 155
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00003239 b602             8612		.byte	182,2
0000323b 46424c5f4d454d5f 8613		.strz	"FBL_MEM_EXT_STATUS_Ok(status) "
00003243 4558545f53544154
0000324b 55535f4f6b287374
00003253 61747573292000  
0000325a 01               8614		.byte	1
0000325b b702             8615		.byte	183,2
0000325d 46424c5f4d454d5f 8616		.strz	"FBL_MEM_EXT_STATUS_Failed(status) "
00003265 4558545f53544154
0000326d 55535f4661696c65
00003275 6428737461747573
0000327d 292000          
00003280 04               8617		.byte	4
00003281 01               8618		.byte	1
00003282 e901             8619		.byte	233,1
00003284 46424c5f4d454d5f 8620		.strz	"FBL_MEM_ENABLE_GAP_FILL "
0000328c 454e41424c455f47
00003294 41505f46494c4c20
0000329c 00              
0000329d 01               8621		.byte	1
0000329e f901             8622		.byte	249,1
000032a0 46424c5f4d454d5f 8623		.strz	"FBL_MEM_ENABLE_SEGMENT_HANDLING "
000032a8 454e41424c455f53
000032b0 45474d454e545f48
000032b8 414e444c494e4720
000032c0 00              
000032c1 01               8624		.byte	1
000032c2 a902             8625		.byte	169,2
000032c4 46424c5f4d454d5f 8626		.strz	"FBL_MEM_STATUS_NAME(name) kFblMemStatus_ ## name"
000032cc 5354415455535f4e
000032d4 414d45286e616d65
000032dc 29206b46626c4d65
000032e4 6d5374617475735f
000032ec 202323206e616d65
000032f4 00              
000032f5 01               8627		.byte	1
000032f6 aa02             8628		.byte	170,2
000032f8 46424c5f4d454d5f 8629		.strz	"FBL_MEM_STATUS_DEFINE(name) FBL_MEM_STATUS_ ## name"
00003300 5354415455535f44
00003308 4546494e45286e61
00003310 6d65292046424c5f
00003318 4d454d5f53544154
00003320 55535f202323206e
00003328 616d6500        
0000332c 01               8630		.byte	1
0000332d ae02             8631		.byte	174,2
0000332f 46424c5f4d454d5f 8632		.strz	"FBL_MEM_STATUS_DEFINITION(name) FBL_MEM_STATUS_NAME(name) = FBL_MEM_STATUS_DEFINE(name)"
00003337 5354415455535f44
0000333f 4546494e4954494f
00003347 4e286e616d652920
0000334f 46424c5f4d454d5f
00003357 5354415455535f4e
0000335f 414d45286e616d65
00003367 29203d2046424c5f
0000336f 4d454d5f53544154
00003377 55535f444546494e
0000337f 45286e616d652900
00003387 01               8633		.byte	1
00003388 e006             8634		.byte	224,6
0000338a 46424c4c49425f4d 8635		.strz	"FBLLIB_MEM_RAMCODE_START_SEC_CODE_EXPORT "
00003392 454d5f52414d434f
0000339a 44455f5354415254
000033a2 5f5345435f434f44
000033aa 455f4558504f5254
000033b2 2000            
000033b4 03               8636		.byte	3
000033b5 e106             8637		.byte	225,6
000033b7 18               8638		.byte	24
000033b8 01               8639		.byte	1
000033b9 2b               8640		.byte	43
000033ba 46424c5f4d454d4d 8641		.strz	"FBL_MEMMAP_ERROR "
000033c2 41505f4552524f52
000033ca 2000            
000033cc 04               8642		.byte	4
000033cd 01               8643		.byte	1
000033ce e506             8644		.byte	229,6
000033d0 46424c4c49425f4d 8645		.strz	"FBLLIB_MEM_RAMCODE_STOP_SEC_CODE_EXPORT "
000033d8 454d5f52414d434f
000033e0 44455f53544f505f
000033e8 5345435f434f4445
000033f0 5f4558504f525420
000033f8 00              
000033f9 03               8646		.byte	3
000033fa e606             8647		.byte	230,6
000033fc 18               8648		.byte	24
000033fd 01               8649		.byte	1
000033fe 2b               8650		.byte	43
000033ff 46424c5f4d454d4d 8651		.strz	"FBL_MEMMAP_ERROR "
00003407 41505f4552524f52
0000340f 2000            
00003411 04               8652		.byte	4
00003412 01               8653		.byte	1
00003413 f106             8654		.byte	241,6
00003415 46424c4c49425f4d 8655		.strz	"FBLLIB_MEM_START_SEC_VAR_EXPORT "
0000341d 454d5f5354415254
00003425 5f5345435f564152
0000342d 5f4558504f525420
00003435 00              
00003436 03               8656		.byte	3
00003437 f206             8657		.byte	242,6
00003439 18               8658		.byte	24
0000343a 01               8659		.byte	1
0000343b 2b               8660		.byte	43
0000343c 46424c5f4d454d4d 8661		.strz	"FBL_MEMMAP_ERROR "
00003444 41505f4552524f52
0000344c 2000            
0000344e 04               8662		.byte	4
0000344f 01               8663		.byte	1
00003450 f606             8664		.byte	246,6
00003452 46424c4c49425f4d 8665		.strz	"FBLLIB_MEM_STOP_SEC_VAR_EXPORT "
0000345a 454d5f53544f505f
00003462 5345435f5641525f
0000346a 4558504f52542000
00003472 03               8666		.byte	3
00003473 f706             8667		.byte	247,6

                                   Fri Apr 10 08:32:01 2020           Page 156
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00003475 18               8668		.byte	24
00003476 01               8669		.byte	1
00003477 2b               8670		.byte	43
00003478 46424c5f4d454d4d 8671		.strz	"FBL_MEMMAP_ERROR "
00003480 41505f4552524f52
00003488 2000            
0000348a 04               8672		.byte	4
0000348b 04               8673		.byte	4
0000348c 03               8674		.byte	3
0000348d a901             8675		.byte	169,1
0000348f 31               8676		.byte	49
00003490 01               8677		.byte	1
00003491 ac02             8678		.byte	172,2
00003493 46424c41505f5241 8679		.strz	"FBLAP_RAMCODE_START_SEC_CODE_EXPORT "
0000349b 4d434f44455f5354
000034a3 4152545f5345435f
000034ab 434f44455f455850
000034b3 4f52542000      
000034b8 03               8680		.byte	3
000034b9 ad02             8681		.byte	173,2
000034bb 18               8682		.byte	24
000034bc 01               8683		.byte	1
000034bd 2b               8684		.byte	43
000034be 46424c5f4d454d4d 8685		.strz	"FBL_MEMMAP_ERROR "
000034c6 41505f4552524f52
000034ce 2000            
000034d0 04               8686		.byte	4
000034d1 01               8687		.byte	1
000034d2 af02             8688		.byte	175,2
000034d4 46424c41505f5241 8689		.strz	"FBLAP_RAMCODE_STOP_SEC_CODE_EXPORT "
000034dc 4d434f44455f5354
000034e4 4f505f5345435f43
000034ec 4f44455f4558504f
000034f4 52542000        
000034f8 03               8690		.byte	3
000034f9 b002             8691		.byte	176,2
000034fb 18               8692		.byte	24
000034fc 01               8693		.byte	1
000034fd 2b               8694		.byte	43
000034fe 46424c5f4d454d4d 8695		.strz	"FBL_MEMMAP_ERROR "
00003506 41505f4552524f52
0000350e 2000            
00003510 04               8696		.byte	4
00003511 04               8697		.byte	4
00003512 03               8698		.byte	3
00003513 aa01             8699		.byte	170,1
00003515 32               8700		.byte	50
00003516 01               8701		.byte	1
00003517 9402             8702		.byte	148,2
00003519 5744545249474745 8703		.strz	"WDTRIGGER_START_SEC_CODE_EXPORT "
00003521 525f53544152545f
00003529 5345435f434f4445
00003531 5f4558504f525420
00003539 00              
0000353a 03               8704		.byte	3
0000353b 9502             8705		.byte	149,2
0000353d 18               8706		.byte	24
0000353e 01               8707		.byte	1
0000353f 2b               8708		.byte	43
00003540 46424c5f4d454d4d 8709		.strz	"FBL_MEMMAP_ERROR "
00003548 41505f4552524f52
00003550 2000            
00003552 04               8710		.byte	4
00003553 01               8711		.byte	1
00003554 9702             8712		.byte	151,2
00003556 5744545249474745 8713		.strz	"WDTRIGGER_STOP_SEC_CODE_EXPORT "
0000355e 525f53544f505f53
00003566 45435f434f44455f
0000356e 4558504f52542000
00003576 03               8714		.byte	3
00003577 9802             8715		.byte	152,2
00003579 18               8716		.byte	24
0000357a 01               8717		.byte	1
0000357b 2b               8718		.byte	43
0000357c 46424c5f4d454d4d 8719		.strz	"FBL_MEMMAP_ERROR "
00003584 41505f4552524f52
0000358c 2000            
0000358e 04               8720		.byte	4
0000358f 04               8721		.byte	4
00003590 03               8722		.byte	3
00003591 ab01             8723		.byte	171,1

                                   Fri Apr 10 08:32:01 2020           Page 157
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00003593 33               8724		.byte	51
00003594 04               8725		.byte	4
00003595 03               8726		.byte	3
00003596 ac01             8727		.byte	172,1
00003598 34               8728		.byte	52
00003599 01               8729		.byte	1
0000359a f501             8730		.byte	245,1
0000359c 6b46626c50726573 8731		.strz	"kFblPresencePatternSize 4u"
000035a4 656e636550617474
000035ac 65726e53697a6520
000035b4 347500          
000035b7 04               8732		.byte	4
000035b8 03               8733		.byte	3
000035b9 b201             8734		.byte	178,1
000035bb 35               8735		.byte	53
000035bc 01               8736		.byte	1
000035bd 47               8737		.byte	71
000035be 6b46626c4d61696e 8738		.strz	"kFblMainNumberOfStates 7u"
000035c6 4e756d6265724f66
000035ce 5374617465732037
000035d6 7500            
000035d8 01               8739		.byte	1
000035d9 8701             8740		.byte	135,1
000035db 6b46626c4e6f4f66 8741		.strz	"kFblNoOfMagicBytes 8u"
000035e3 4d61676963427974
000035eb 657320387500    
000035f1 01               8742		.byte	1
000035f2 e501             8743		.byte	229,1
000035f4 46424c4845414445 8744		.strz	"FBLHEADER_START_SEC_CONST "
000035fc 525f53544152545f
00003604 5345435f434f4e53
0000360c 542000          
0000360f 03               8745		.byte	3
00003610 e601             8746		.byte	230,1
00003612 18               8747		.byte	24
00003613 01               8748		.byte	1
00003614 2b               8749		.byte	43
00003615 46424c5f4d454d4d 8750		.strz	"FBL_MEMMAP_ERROR "
0000361d 41505f4552524f52
00003625 2000            
00003627 04               8751		.byte	4
00003628 01               8752		.byte	1
00003629 e801             8753		.byte	232,1
0000362b 46424c4845414445 8754		.strz	"FBLHEADER_STOP_SEC_CONST "
00003633 525f53544f505f53
0000363b 45435f434f4e5354
00003643 2000            
00003645 03               8755		.byte	3
00003646 e901             8756		.byte	233,1
00003648 18               8757		.byte	24
00003649 01               8758		.byte	1
0000364a 2b               8759		.byte	43
0000364b 46424c5f4d454d4d 8760		.strz	"FBL_MEMMAP_ERROR "
00003653 41505f4552524f52
0000365b 2000            
0000365d 04               8761		.byte	4
0000365e 01               8762		.byte	1
0000365f ec01             8763		.byte	236,1
00003661 46424c5f4d41494e 8764		.strz	"FBL_MAIN_MAGICFLAG_START_SEC_VAR "
00003669 5f4d41474943464c
00003671 41475f5354415254
00003679 5f5345435f564152
00003681 2000            
00003683 03               8765		.byte	3
00003684 ed01             8766		.byte	237,1
00003686 18               8767		.byte	24
00003687 01               8768		.byte	1
00003688 2b               8769		.byte	43
00003689 46424c5f4d454d4d 8770		.strz	"FBL_MEMMAP_ERROR "
00003691 41505f4552524f52
00003699 2000            
0000369b 04               8771		.byte	4
0000369c 01               8772		.byte	1
0000369d f301             8773		.byte	243,1
0000369f 46424c5f4d41494e 8774		.strz	"FBL_MAIN_MAGICFLAG_STOP_SEC_VAR "
000036a7 5f4d41474943464c
000036af 41475f53544f505f
000036b7 5345435f56415220
000036bf 00              
000036c0 03               8775		.byte	3
000036c1 f401             8776		.byte	244,1
000036c3 18               8777		.byte	24
000036c4 01               8778		.byte	1
000036c5 2b               8779		.byte	43

                                   Fri Apr 10 08:32:01 2020           Page 158
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
000036c6 46424c5f4d454d4d 8780		.strz	"FBL_MEMMAP_ERROR "
000036ce 41505f4552524f52
000036d6 2000            
000036d8 04               8781		.byte	4
000036d9 01               8782		.byte	1
000036da fc01             8783		.byte	252,1
000036dc 46424c5f4d41494e 8784		.strz	"FBL_MAIN_FBLSTART_START_SEC_CODE "
000036e4 5f46424c53544152
000036ec 545f53544152545f
000036f4 5345435f434f4445
000036fc 2000            
000036fe 03               8785		.byte	3
000036ff fd01             8786		.byte	253,1
00003701 18               8787		.byte	24
00003702 01               8788		.byte	1
00003703 2b               8789		.byte	43
00003704 46424c5f4d454d4d 8790		.strz	"FBL_MEMMAP_ERROR "
0000370c 41505f4552524f52
00003714 2000            
00003716 04               8791		.byte	4
00003717 01               8792		.byte	1
00003718 8302             8793		.byte	131,2
0000371a 46424c5f4d41494e 8794		.strz	"FBL_MAIN_FBLSTART_STOP_SEC_CODE "
00003722 5f46424c53544152
0000372a 545f53544f505f53
00003732 45435f434f444520
0000373a 00              
0000373b 03               8795		.byte	3
0000373c 8402             8796		.byte	132,2
0000373e 18               8797		.byte	24
0000373f 01               8798		.byte	1
00003740 2b               8799		.byte	43
00003741 46424c5f4d454d4d 8800		.strz	"FBL_MEMMAP_ERROR "
00003749 41505f4552524f52
00003751 2000            
00003753 04               8801		.byte	4
00003754 04               8802		.byte	4
00003755 04               8803		.byte	4
00003756 01               8804		.byte	1
00003757 5b               8805		.byte	91
00003758 7043616e44617461 8806		.strz	"pCanData data"
00003760 206461746100    
00003766 01               8807		.byte	1
00003767 60               8808		.byte	96
00003768 6b54706369506f73 8809		.strz	"kTpciPos 0x00u"
00003770 20307830307500  
00003777 01               8810		.byte	1
00003778 61               8811		.byte	97
00003779 6b53464461746150 8812		.strz	"kSFDataPos 0x01u"
00003781 6f73203078303175
00003789 00              
0000378a 01               8813		.byte	1
0000378b 64               8814		.byte	100
0000378c 6b46626c43775478 8815		.strz	"kFblCwTxStateIdle 0x00u"
00003794 537461746549646c
0000379c 6520307830307500
000037a4 01               8816		.byte	1
000037a5 65               8817		.byte	101
000037a6 6b46626c43775478 8818		.strz	"kFblCwTxStateRpInProgress 0x01u"
000037ae 5374617465527049
000037b6 6e50726f67726573
000037be 7320307830317500
000037c6 01               8819		.byte	1
000037c7 66               8820		.byte	102
000037c8 6b46626c43775478 8821		.strz	"kFblCwTxStateTxInProgress 0x02u"
000037d0 5374617465547849
000037d8 6e50726f67726573
000037e0 7320307830327500
000037e8 01               8822		.byte	1
000037e9 67               8823		.byte	103
000037ea 6b46626c43775478 8824		.strz	"kFblCwTxStateRpPending 0x03u"
000037f2 5374617465527050
000037fa 656e64696e672030
00003802 7830337500      
00003807 01               8825		.byte	1
00003808 68               8826		.byte	104
00003809 6b46626c43775478 8827		.strz	"kFblCwTxStateTxPending 0x04u"
00003811 5374617465547850
00003819 656e64696e672030
00003821 7830347500      
00003826 01               8828		.byte	1
00003827 6a               8829		.byte	106
00003828 6b46626c43774361 8830		.strz	"kFblCwCanRxMsgStatePhysical 0x00u"
00003830 6e52784d73675374
00003838 6174655068797369
00003840 63616c2030783030
00003848 7500            
0000384a 01               8831		.byte	1
0000384b 6b               8832		.byte	107
0000384c 6b46626c43774361 8833		.strz	"kFblCwCanRxMsgStateFunctional 0x01u"
00003854 6e52784d73675374
0000385c 61746546756e6374
00003864 696f6e616c203078
0000386c 30317500        
00003870 01               8834		.byte	1
00003871 6c               8835		.byte	108

                                   Fri Apr 10 08:32:01 2020           Page 159
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00003872 6b46626c43774361 8836		.strz	"kFblCwCanRxMsgStateDiscard 0x02u"
0000387a 6e52784d73675374
00003882 6174654469736361
0000388a 7264203078303275
00003892 00              
00003893 01               8837		.byte	1
00003894 6f               8838		.byte	111
00003895 6b46626c43775374 8839		.strz	"kFblCwStateTaskRunning FBL_BIT0"
0000389d 6174655461736b52
000038a5 756e6e696e672046
000038ad 424c5f4249543000
000038b5 01               8840		.byte	1
000038b6 70               8841		.byte	112
000038b7 6b46626c43775469 8842		.strz	"kFblCwTimerTaskRunning FBL_BIT1"
000038bf 6d65725461736b52
000038c7 756e6e696e672046
000038cf 424c5f4249543100
000038d7 01               8843		.byte	1
000038d8 73               8844		.byte	115
000038d9 5365744377537461 8845		.strz	"SetCwStateTaskRunning() (cwTaskState |= kFblCwStateTaskRunning)"
000038e1 74655461736b5275
000038e9 6e6e696e67282920
000038f1 2863775461736b53
000038f9 74617465207c3d20
00003901 6b46626c43775374
00003909 6174655461736b52
00003911 756e6e696e672900
00003919 01               8846		.byte	1
0000391a 74               8847		.byte	116
0000391b 436c724377537461 8848		.strz	"ClrCwStateTaskRunning() (cwTaskState &= FblInvert8Bit(kFblCwStateTaskRunning))"
00003923 74655461736b5275
0000392b 6e6e696e67282920
00003933 2863775461736b53
0000393b 7461746520263d20
00003943 46626c496e766572
0000394b 7438426974286b46
00003953 626c437753746174
0000395b 655461736b52756e
00003963 6e696e67292900  
0000396a 01               8849		.byte	1
0000396b 75               8850		.byte	117
0000396c 4765744377537461 8851		.strz	"GetCwStateTaskRunning() ((cwTaskState & kFblCwStateTaskRunning) == kFblCwStateTaskRunning)"
00003974 74655461736b5275
0000397c 6e6e696e67282920
00003984 282863775461736b
0000398c 5374617465202620
00003994 6b46626c43775374
0000399c 6174655461736b52
000039a4 756e6e696e672920
000039ac 3d3d206b46626c43
000039b4 7753746174655461
000039bc 736b52756e6e696e
000039c4 672900          
000039c7 01               8852		.byte	1
000039c8 77               8853		.byte	119
000039c9 536574437754696d 8854		.strz	"SetCwTimerTaskRunning() (cwTaskState |= kFblCwTimerTaskRunning)"
000039d1 65725461736b5275
000039d9 6e6e696e67282920
000039e1 2863775461736b53
000039e9 74617465207c3d20
000039f1 6b46626c43775469
000039f9 6d65725461736b52
00003a01 756e6e696e672900
00003a09 01               8855		.byte	1
00003a0a 78               8856		.byte	120
00003a0b 436c72437754696d 8857		.strz	"ClrCwTimerTaskRunning() (cwTaskState &= FblInvert8Bit(kFblCwTimerTaskRunning))"
00003a13 65725461736b5275
00003a1b 6e6e696e67282920
00003a23 2863775461736b53
00003a2b 7461746520263d20
00003a33 46626c496e766572
00003a3b 7438426974286b46
00003a43 626c437754696d65
00003a4b 725461736b52756e
00003a53 6e696e67292900  
00003a5a 01               8858		.byte	1
00003a5b 79               8859		.byte	121
00003a5c 476574437754696d 8860		.strz	"GetCwTimerTaskRunning() ((cwTaskState & kFblCwTimerTaskRunning) == kFblCwTimerTaskRunning)"
00003a64 65725461736b5275
00003a6c 6e6e696e67282920
00003a74 282863775461736b
00003a7c 5374617465202620
00003a84 6b46626c43775469
00003a8c 6d65725461736b52
00003a94 756e6e696e672920
00003a9c 3d3d206b46626c43
00003aa4 7754696d65725461
00003aac 736b52756e6e696e
00003ab4 672900          
00003ab7 01               8861		.byte	1
00003ab8 a001             8862		.byte	160,1
00003aba 46424c5f43575f46 8863		.strz	"FBL_CW_FULL_START_SEC_CODE "
00003ac2 554c4c5f53544152
00003aca 545f5345435f434f
00003ad2 44452000        
00003ad6 03               8864		.byte	3
00003ad7 a101             8865		.byte	161,1
00003ad9 18               8866		.byte	24
00003ada 01               8867		.byte	1
00003adb 2b               8868		.byte	43
00003adc 46424c5f4d454d4d 8869		.strz	"FBL_MEMMAP_ERROR "
00003ae4 41505f4552524f52
00003aec 2000            
00003aee 04               8870		.byte	4
00003aef 01               8871		.byte	1
00003af0 9d02             8872		.byte	157,2
00003af2 46424c5f43575f54 8873		.strz	"FBL_CW_TASK_START_SEC_CODE "
00003afa 41534b5f53544152
00003b02 545f5345435f434f
00003b0a 44452000        
00003b0e 03               8874		.byte	3
00003b0f 9e02             8875		.byte	158,2
00003b11 18               8876		.byte	24
00003b12 01               8877		.byte	1
00003b13 2b               8878		.byte	43
00003b14 46424c5f4d454d4d 8879		.strz	"FBL_MEMMAP_ERROR "
00003b1c 41505f4552524f52
00003b24 2000            
00003b26 04               8880		.byte	4
00003b27 01               8881		.byte	1
00003b28 b003             8882		.byte	176,3
00003b2a 46424c5f43575f54 8883		.strz	"FBL_CW_TASK_STOP_SEC_CODE "
00003b32 41534b5f53544f50
00003b3a 5f5345435f434f44
00003b42 452000          
00003b45 03               8884		.byte	3
00003b46 b103             8885		.byte	177,3
00003b48 18               8886		.byte	24
00003b49 01               8887		.byte	1
00003b4a 2b               8888		.byte	43
00003b4b 46424c5f4d454d4d 8889		.strz	"FBL_MEMMAP_ERROR "
00003b53 41505f4552524f52
00003b5b 2000            
00003b5d 04               8890		.byte	4
00003b5e 01               8891		.byte	1

                                   Fri Apr 10 08:32:01 2020           Page 160
                                   Fri Apr 10 08:32:01 2020   gh_00002fo1.si
00003b5f c807             8892		.byte	200,7
00003b61 46424c5f43575f46 8893		.strz	"FBL_CW_FULL_STOP_SEC_CODE "
00003b69 554c4c5f53544f50
00003b71 5f5345435f434f44
00003b79 452000          
00003b7c 03               8894		.byte	3
00003b7d c907             8895		.byte	201,7
00003b7f 18               8896		.byte	24
00003b80 01               8897		.byte	1
00003b81 2b               8898		.byte	43
00003b82 46424c5f4d454d4d 8899		.strz	"FBL_MEMMAP_ERROR "
00003b8a 41505f4552524f52
00003b92 2000            
00003b94 04               8900		.byte	4
00003b95 04               8901		.byte	4
00003b96 00               8902		.byte	0
                          8903		.section	.debug_abbrev
00000171 00               8904		.byte	0
                          8905		.section	.debug_info
                          8906	.Ldw_end:
