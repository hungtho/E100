
                                   Fri Apr 10 08:31:51 2020           Page 1
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
Command Line:   C:\ghs\comp_201754\asppc.exe -noundefined -stderr=err/fbl_ap.err
                -elf -b1 -I../../../bsw/_common -I../../../bsw/eep
                -I../../../bsw/fbl -I../../../bsw/flash -I../../../bsw/flash_xd1
                -I../../../bsw/secmod -I../../../bsw/wrapnv
                -Ic:/ghs/comp_201754/ansi -Ic:/ghs/comp_201754/include/ppc
                -Ic:/ghs/comp_201754/src/libsys -Igendata -Iinclude
                -IC:\ghs\comp_201754\lib\ppc5514 -cpu=ppc560xp
                -patch_dbo=C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl\obj\fbl_ap.dbo
                -source=fbl_ap.c -o obj\gh_0000cu01.o -list=lst/fbl_ap.lst
                C:\Users\owner\AppData\Local\Temp\gh_0000cu01.si
Source File:    C:\Users\owner\AppData\Local\Temp\gh_0000cu01.si
Directory:      C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
Host OS:        Windows
AS: Copyright (C) 1983-2017 Green Hills Software.  All Rights Reserved.
Release: Compiler v2017.5.4
Build Directory: [Directory] COMP-VAL-WIN50:c:/autoval2/v2017.5-2017-10-03/win32-comp-ecom
Revision: [VCInfo] http://toolsvc/branches/release-branch-2017-5-comp/src@603870 (built by auto-compiler)
Revision Date: Wed Oct 04 11:30:08 2017

Release Date: Wed Oct 04 09:00:05 2017

                             1	#Driver Command: ccppc -DBRS_DERIVATIVE_SPC570S50 -DBRS_OSC_CLK=40
                             2	#		-DBRS_TIMEBASE_CLOCK=80 -DBRS_OS_USECASE_BRS
                             3	#		-DBRS_EVA_BOARD_DEFAULT -DBRS_PLATFORM_MPC57XX -DBRS_COMP_GHS
                             4	#		-DBRSHW_INSTRUCTION_SET_VLE -DBRS_CPU_STARTUP_ID=0
                             5	#		-object_dir=obj -list=lst/fbl_ap.lst -stderr=err/fbl_ap.err -c
                             6	#		-vle -DC_ENABLE_INSTRUCTION_SET_VLE -D__vle --prototype_warnings
                             7	#		-Odebug -Osize -Ospace -G -dual_debug -nofloatio -cpu=ppc560xp
                             8	#		-noobj -DRAM_48K -inline_prologue -pragma_asm_inline -noSPE
                             9	#		--no_exceptions --no_commons -nokeeptempfiles -pnone
                            10	#		--incorrect_pragma_warnings --slash_comment --long_long
                            11	#		-preprocess_assembly_files -passsource -I../../../bsw/_common
                            12	#		-I../../../bsw/eep -I../../../bsw/fbl -I../../../bsw/flash
                            13	#		-I../../../bsw/flash_xd1 -I../../../bsw/secmod
                            14	#		-I../../../bsw/wrapnv -Ic:/ghs/comp_201754/ansi
                            15	#		-Ic:/ghs/comp_201754/include/ppc -Ic:/ghs/comp_201754/src/libsys
                            16	#		-Igendata -Iinclude Source/fbl_ap.c
                            17	#Source File:   Source/fbl_ap.c
                            18	#Directory:     C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
                            19	#Compile Date:  Fri Apr 10 08:31:51 2020
                            20	#Host OS:       Win32
                            21	#Version:       C-POWERPC 2017.5.4 RELEASE VERSION
                            22	#Release:       Compiler v2017.5.4
                            23	#Revision Date: Wed Oct 04 11:39:37 2017
                            24	#Release Date:  Wed Oct 04 09:00:05 2017
                            25	# ecom  -g -w -OMS
                            26	
                            27	#1: /* Kernbauer Version: 1.12 Konfiguration: FBL Erzeugungsgangnummer: 1 */
                            28	#3: /***********************************************************************************************************************
                            29	#4:  *  FILE DESCRIPTION
                            30	#5:  *  ------------------------------------------------------------------------------------------------------------------*/
                            31	#6: /** \file
                            32	#7:  *  \brief         Application dependent routines
                            33	#8:  *
                            34	#9:  *  \note          Please note, that this file contains a collection of callback functions to be used with the
                            35	#10:  *                 Flash Bootloader. These functions may influence the behavior of the bootloader in principle.
                            36	#11:  *                 Therefore, great care must be taken to verify the correctness of the implementation.
                            37	#12:  *                 The contents of the originally delivered files are only examples resp. implementation proposals.
                            38	#13:  *                 With regard to the fact that these functions are meant for demonstration purposes only, Vector
                            39	#14:  *                 Informatik's liability shall be expressly excluded in cases of ordinary negligence, to the extent
                            40	#15:  *                 admissible by law or statute.
                            41	#16:  *
                            42	#17:  *  --------------------------------------------------------------------------------------------------------------------
                            43	#18:  *  COPYRIGHT

                                   Fri Apr 10 08:31:51 2020           Page 2
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                            44	#19:  *  --------------------------------------------------------------------------------------------------------------------
                            45	#20:  *  \par Copyright
                            46	#21:  *  \verbatim
                            47	#22:  *  Copyright (c) 2016 by Vector Informatik GmbH.                                                  All rights reserved.
                            48	#23:  *
                            49	#24:  *                This software is copyright protected and proprietary to Vector Informatik GmbH.
                            50	#25:  *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
                            51	#26:  *                All other rights remain with Vector Informatik GmbH.
                            52	#27:  *  \endverbatim
                            53	#28:  */
                            54	#29: /**********************************************************************************************************************/
                            55	#31: /***********************************************************************************************************************
                            56	#32:  *  AUTHOR IDENTITY
                            57	#33:  *  --------------------------------------------------------------------------------------------------------------------
                            58	#34:  *  Name                          Initials      Company
                            59	#35:  *  --------------------------------------------------------------------------------------------------------------------
                            60	#36:  *  Christian Baeuerle            CB            Vector Informatik GmbH
                            61	#37:  *  --------------------------------------------------------------------------------------------------------------------
                            62	#38:  *  REVISION HISTORY
                            63	#39:  *  --------------------------------------------------------------------------------------------------------------------
                            64	#40:  *  Version    Date        Author  Change Id        Description
                            65	#41:  *  --------------------------------------------------------------------------------------------------------------------
                            66	#42:  *  02.00.00   2016-11-07  CB     -                 Initial version based on UDS2 01.05.00 component
                            67	#43:  **********************************************************************************************************************/
                            68	#44: /***********************************************************************************************************************
                            69	#45:  *  --------------------------------------------------------------------------------------------------------------------
                            70	#46:  *  REVISION HISTORY (kbFbl_apAPI.c)
                            71	#47:  *  --------------------------------------------------------------------------------------------------------------------
                            72	#48:  *  Version    Date        Author  Change Id        Description
                            73	#49:  *  --------------------------------------------------------------------------------------------------------------------
                            74	#50:  *  00.90.00   2003-12-10  CB                       First implementation
                            75	#51:  *  00.91.00   2004-01-08  CB                       Decryption/decompression interface changed
                            76	#52:  *                         CB                       Parameters for ApplFblVerifyChecksum changed
                            77	#53:  *  01.00.00   2004-02-24  CB                       Release
                            78	#54:  *  01.01.00   2004-03-24  Rr                       Added new functions
                            79	#55:  *  01.02.00   2004-03-25  WM                       Minor changes and enhancements for new OEM
                            80	#56:  *  01.03.00   2004-04-23  WM                       Added watchdog trigger functions
                            81	#57:  *                         ACP                      Added ApplFblSecurityStatus
                            82	#58:  *                         AMN                      Added ApplFblIsValidFlashBlock, and ApplFblReadBlock
                            83	#59:  *  01.04.00   2004-05-07  CB                       Added ApplCanBusOff, ApplCanWakeUp
                            84	#60:  *  01.05.00   2004-05-19  CB                       Minor changes
                            85	#61:  *  01.06.00   2004-06-30  MHz                      No changes
                            86	#62:  *  01.07.00   2004-07-22  CB                       Added ApplFblReadEcuIdentification,
                            87	#63:  *                                                  ApplFblStoreTesterCode, ApplFblStoreProgrammingDate
                            88	#64:  *  01.08.00   2004-08-06  WM                       Added ApplFblRWSecurityAccessDelayFlag
                            89	#65:  *  01.09.00   2004-09-09  Rr                       Minor changes for ApplFblCanBusOff
                            90	#66:  *  01.10.00   2004-09-16  WM                       Added PRE and POST section for ApplFblWDTrigger
                            91	#67:  *  01.11.00   2004-10-25  AP      ESCAN00010007    Adaption to support Vector
                            92	#68:  *                                                  component OSEK NM
                            93	#69:  *  01.12.00   2004-12-23  AMN                      Changed prototype of ApplFblWriteDataById
                            94	#70:  *                                                  Added an ifdef to ApplFblCanParamInit
                            95	#71:  *                                                  Added function ApplFblPBLConfigSet
                            96	#72:  *                                                  Corrected the paramters in ApplFblRWProgCounter
                            97	#73:  *                                                  Define name changes PBL->CAN
                            98	#74:  *                         ACP                      Version check reworked
                            99	#75:  *                         CB                       Added fingerprint functions

                                   Fri Apr 10 08:31:51 2020           Page 3
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           100	#76:  *  01.13.00   2005-01-14  CB                       Added several API functions
                           101	#77:  *  01.14.00   2005-03-22  WM      ESCAN00011595    MISRA warnings
                           102	#78:  *  01.15.00   2005-09-29  WM                       _PRE_ and _POST_ section for ApplFblWDTriggerEnd
                           103	#79:  *                                                  V_VER.H consistency check added
                           104	#80:  *  01.16.00   2005-12-08  WM      ESCAN00014594    FblApSrcApplFblTpParamInit token
                           105	#81:  *                                                  added for TPMC
                           106	#82:  *  01.17.00   2006-02-28  AMN                      Added ApplFblCopyToRAM and ApplFblIsValidAppInRAM
                           107	#83:  *  01.18.00   2006-03-24  QPs                      Added ApplFblGetSubNodeRxCanId for Gateway
                           108	#84:  *                                                  implementation
                           109	#85:  *  01.19.00   2006-04-25  CB      ESCAN00015917    Return value added for
                           110	#86:  *                                                  ApplFblInvalidateBlock
                           111	#87:  *                         WM      ESCAN00015960    ApplFblVerifySegmentChecksum added
                           112	#88:  *                         Ls                       added KBTok_FblApSrcApplFblCheckProgDependencies
                           113	#89:  *                         QPs     ESCAN00016110    Added ApplCanBusOff for the Gateway
                           114	#90:  *                         CB      ESCAN00016144    Return value added for
                           115	#91:  *                                                  ApplFblInitDecryption
                           116	#92:  *                         CB      ESCAN00016147    ApplFblStoreBootSwIdent added
                           117	#93:  *                                 ESCAN00016171    ApplFblSetSecAccessDelayFlag,
                           118	#94:  *                                                  ApplFblGetSecAccessDelayFlag and
                           119	#95:  *                                                  ApplFblClrSecAccessDelayFlag added
                           120	#96:  *  01.20.00   2006-05-18  ACP     ESCAN00016438    Added kStartupPreInit/PostInit
                           121	#97:  *                                                  definition for new ApplFblStartup() parameter
                           122	#98:  *  01.21.00   2006-06-29  FHE                      No changes
                           123	#99:  *  01.22.00   2006-07-24  JHg                      Added V_CALLBACK_NEAR to watchdog trigger
                           124	#100:  *                         CB      ESCAN00017003    Added ApplFblProgrammingStateChanged
                           125	#101:  *                         AMN                      Added ApplFblValidateFile
                           126	#102:  *                                                  Added a token to reference local prototypes
                           127	#103:  *                                                  from the OEM layer
                           128	#104:  *  01.23.00   2006-08-28  JHg                      Added token for additional watchdog functions
                           129	#105:  *                         AMN     ESCAN00017479    Modified the API of the
                           130	#106:  *                                                  ApplFblValidateApp for Misra compliance
                           131	#107:  *                                                  Removed ApplFblIsValidFlashBlock because it's
                           132	#108:  *                                                  not used anymore
                           133	#109:  *  01.24.00   2006-12-06  FHE     ESCAN00018639    Added ApplFblCheckConditions
                           134	#110:  *  01.25.00   2007-02-07  Hp      ESCAN00019129    Add support for CCP in the bootloader
                           135	#111:  *                                                  Add PreHandler and presence-pattern support.
                           136	#112:  *  01.26.00   2007-03-30  WM      ESCAN00020175    Added ApplFblCheckProgPreconditions
                           137	#113:  *  01.27.00   2007-07-06  JHg                      Return value added to ApplFblDecryption and
                           138	#114:  *                                                  ApplFblDeinitDecryption
                           139	#115:  *  01.28.00   2007-07-27  Ls      ESCAN00022542    FBL_ENABLE_PRE_WDINIT_COMMENT added
                           140	#116:  *  01.29.00   2008-03-07  Ci      ESCAN00014726    FBL_COPY_CODE_TO_RAM_ON_STARTUP
                           141	#117:  *                                                  renamed to FBL_ENABLE_COPY..
                           142	#118:  *                         Hp      ESCAN00014726    Support for memmap and FBL_ENABLE_COPY_CODE_TO_RAM_ON_STARTUP
                           143	#119:  *                                                  to map ApplFblWDTrigger and ApplFblWDTriggerEnd to special location
                           144	#120:  *                         JHg                      Update CAN driver Tx confirmation routines to RI 1.4 API
                           145	#121:  *                         Hp      ESCAN00025029    Support Vector decompression module (optional)
                           146	#122:  *  01.30.00   2008-03-28  JHg     ESCAN00025354    Remove COMMENT restriction from FBL_ENABLE_PRE_WDINIT
                           147	#123:  *                                                  If enabled watchdog will be already initalized in ApplFblInit
                           148	#124:  *                                 ESCAN00025355    FBL_ENABLE_PRE_TIMERINIT added
                           149	#125:  *                                                  If enabled timer will be already initalized in ApplFblInit
                           150	#126:  *  01.31.00   2008-06-13  Ci      ESCAN00025071    Extended function description of
                           151	#127:  *                                                  ApplFblStartup() with kStartupStayInBoot
                           152	#128:  *                                 ESCAN00027445    Added support for configurations
                           153	#129:  *                                                  with multiple CAN channels
                           154	#130:  *  01.32.00   2008-09-10  JHg     ESCAN00029860    Moved PRE_WDINIT and PRE_TIMERINIT to fbl_main
                           155	#131:  *  01.33.00   2008-10-15  FHe     ESCAN00030640    Added support for VAG spec 1.2.1

                                   Fri Apr 10 08:31:51 2020           Page 4
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           156	#132:  *  01.34.00   2009-03-13  JHg     ESCAN00032180    Added support for multichannel configurations
                           157	#133:  *                                                  to ApplCanTxObjStart, ApplCanTxObjConfirmed
                           158	#134:  *                                                  Updated description of ApplCanMsgReceived
                           159	#135:  *                         FHe                      Restored old format of ApplFblCheckProgConditions
                           160	#136:  *                         Ci      ESCAN00033475    Added gateway specific callback
                           161	#137:  *                                                  functions (Gw_Route support)
                           162	#138:  *  01.35.00   2009-03-12  QPs     ESCAN00033801    Added communication wrapper specific
                           163	#139:  *                                                  callback functions
                           164	#140:  *  01.36.00   2009-07-21  QPs     ESCAN00035282    Added DC SLP10 extension:
                           165	#141:  *                                                  ApplFblControlFailSafeReaction
                           166	#142:  *                         AWh     ESCAN00036825    Inconsistent return value type between
                           167	#143:  *                                                  ReadDataByCommonId prototype and implementation
                           168	#144:  *  01.37.00   2009-08-31  AWh     ESCAN00037405    No changes
                           169	#145:  *                         QPs     ESCAN00037479    Added FrTrcv specific callback functions
                           170	#146:  *  01.38.00   2009-09-18  Tbe     ESCAN00037856    Added Ethernet/DoIP specific
                           171	#147:  *                                                  callback functions
                           172	#148:  *  01.39.00   2009-12-02  Ci      ESCAN00038917    Adapted prototype of
                           173	#149:  *                                                  ApplFblFatalError()
                           174	#150:  *                                 ESCAN00038918    Added support for validation
                           175	#151:  *                                                  struct handling
                           176	#152:  *                                 ESCAN00038919    Added callback for flash erased
                           177	#153:  *                                                  detection
                           178	#154:  *  01.40.00   2010-02-15  Ci      ESCAN00040663    Enhanced flash erased detection
                           179	#155:  *                                                  interface
                           180	#156:  *                         Ci      ESCAN00040852    Replaced decryption interface by
                           181	#157:  *                                                  data processing API
                           182	#158:  *  01.41.00   2010-07-08  MVi     ESCAN00043736    Remove pragmas when memmap is used
                           183	#159:  *                         Ci      ESCAN00043863    Added function ApplCanTpConfirmation
                           184	#160:  *                         QPs     ESCAN00043896    Added support for LIN bootloader
                           185	#161:  *  01.42.00   2010-07-23  CB      ESCAN00044299    Default implementation of decompression
                           186	#162:  *  01.43.00   2010-09-15  Ci      ESCAN00044991    Added new Gw_Route API functions
                           187	#163:  *  01.44.00   2010-12-10  MVi     ESCAN00047478    Enhanced flash erased detection interface
                           188	#164:  *                                 ESCAN00047482    Added routine control succeeded interface
                           189	#165:  *  01.45.00   2011-02-03  Ach     ESCAN00048191    Use normal fixed addressing without TPMC
                           190	#166:  *  01.46.00   2011-07-14  Ci      ESCAN00052149    Adapted Gw_Route task interface
                           191	#167:  *  01.47.00   2011-11-25  Hp      ESCAN00052787    Extend support for PresencePatterns
                           192	#168:  *  01.48.00   2011-12-14  AWh     ESCAN00055586    Extend Api with ApplFblInvalidateApp function
                           193	#169:  *  01.49.00   2012-02-14  Ach     ESCAN00056341    Added ApplFblStartApplication() function
                           194	#170:  *  01.50.00   2012-02-22  Ach     ESCAN00052787    Extend support for PresencePatterns
                           195	#171:  *                         MVi     ESCAN00056833    Extend support for PresencePatterns (HMC)
                           196	#172:  *                                 ESCAN00056834    No changes
                           197	#173:  *                         CB      ESCAN00056642    Added ApplFblCanPlatformToPhysChannel()
                           198	#174:  *  01.51.00   2012-03-23  QPs     ESCAN00057230    Extend support for FlexRay
                           199	#175:  *                         Ach     ESCAN00057636    Remove local memSegment variables
                           200	#176:  *                         CB      ESCAN00057670    Added Suspend Programming API
                           201	#177:  *  01.52.00   2012-03-30  QPs     ESCAN00058040    No changes
                           202	#178:  *  01.53.00   2012-08-16  MVi     ESCAN00060433    Support for PresencePatterns
                           203	#179:  *                                                  with 256 byte segment size
                           204	#180:  *  01.54.00   2012-12-06  AWh     ESCAN00061619    Moved presence pattern macros to header
                           205	#181:  *                         Ach     ESCAN00062912    Adapted comments to use Doxygen
                           206	#182:  *  01.55.00   2013-01-24  Ach     ESCAN00064406    Support return value IO_E_ERASED for presence pattern
                           207	#183:  *                         JHg     ESCAN00064421    Added callback ApplFblOnTransitionSession
                           208	#184:  *                                 ESCAN00064437    Added callback ApplFblStateTask
                           209	#185:  *  01.56.00   2013-02-08  ASe     ESCAN00064889    Reworked comments
                           210	#186:  *  01.57.00   2014-01-21  ASe     ESCAN00072931    Fixed compiler warning (HMC)
                           211	#187:  *  01.58.00   2014-02-24  MVi     ESCAN00073549    Removed HMC exceptions to support new mtab header

                                   Fri Apr 10 08:31:51 2020           Page 5
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           212	#188:  *  01.58.01   2014-04-03  ASe     ESCAN00074701    Fixed comments
                           213	#189:  *  01.59.00   2014-07-16  QPs     ESCAN00077127    Extend support for LIN
                           214	#190:  *  01.60.00   2014-08-25  Dod     ESCAN00078033    Add callbacks ApplFblMemPreWrite/Erase and ApplFblGetLogBlkHash
                           215	#191:  *  01.61.00   2015-01-13  Ach     ESCAN00080481    Change visibility of ApplFblChkModulePresence()
                           216	#192:  *  01.62.00   2015-05-12  CB      ESCAN00082959    Added functions to read and store the TP target address
                           217	#193:  *  01.63.00   2015-05-27  CB      ESCAN00083167    Additional callback functions for status backup
                           218	#194:  *  01.64.00   2015-09-14  Ci      ESCAN00084704    Removed data processing default implementation
                           219	#195:  *                         QPs     ESCAN00085203    Added callback ApplFblCheckTesterSourceAddr
                           220	#196:  *  01.64.01   2015-12-15  TnS     ESCAN00087100    Moved initialization for Timer Interrupt use case to FblWd
                           221	#197:  *  01.65.00   2016-01-11  ASe     ESCAN00087324    Presence pattern handling fails on word-addressed platforms
                           222	#198:  *                         Rr      ESCAN00087414    Extend Renault SLP3 specific API for reading light LogZone
                           223	#199:  *  01.66.00   2016-02-25  TnS     ESCAN00088471    MISRA related code changes
                           224	#200:  *  01.67.00   2016-03-07  MVi     ESCAN00088759    Added ApplFblIsValidBlock
                           225	#201:  *  01.68.00   2016-03-17  Shs     ESCAN00088957    No changes
                           226	#202:  *  01.69.00   2016-05-09  HRf     ESCAN00089907    Encapsulate FlexRay specific code in ApplFblCwWakeUp()
                           227	#203:  *  01.70.00   2016-05-17  Rie     ESCAN00090027    Performed MISRA analysis
                           228	#204:  *  01.71.00   2016-06-27  Ach     ESCAN00090683    Support configuration switch FBL_CW_ENABLE_MULTIPLE_NODES
                           229	#205:  *  01.72.00   2016-07-15  DlM     ESCAN00090996    Added function for programming voltage check
                           230	#206:  *  01.73.00   2016-08-02  Ach     ESCAN00091282    Added ApplFblGetVerificationData()
                           231	#207:  *  01.74.00   2016-08-24  Rie     ESCAN00091646    Added ApplFblCheckFuncTargetAddr()
                           232	#208:  *  01.75.00   2016-10-04  CEl     ESCAN00092168    Added ApplFblSetLogBlkHash()
                           233	#209:  *  01.76.00   2016-12-01  Ach     ESCAN00093116    Added length parameter to ApplFblGetVerificationData()
                           234	#210:  *  01.77.00   2017-02-07  Ach     ESCAN00093891    Added constant definition for common data structure
                           235	#211:  *  01.77.01   2017-06-22  Rie     ESCAN00095595    Fixed evaluation of the presence pattern
                           236	#212:  *  01.78.00   2017-07-04  CB      ESCAN00095725    Added functions to read and write the segment list in NV-memory
                           237	#213:  *                         CEl     ESCAN00095744    Added ApplFblStartSeperationTime()
                           238	#214:  *  01.79.00   2017-07-31  Ach     ESCAN00096124    Add interface to handle DET callouts
                           239	#215:  *  01.80.00   2017-08-08  Rie     ESCAN00096215    Added support for latest TpLin
                           240	#216:  *  01.81.00   2017-09-13  Ach     ESCAN00096636    Add interface definition for ApplDiagUserRoutine
                           241	#217:  *  01.82.00   2017-10-09  Ach     ESCAN00096961    ApplFbl_DetEntryHandler() uses wrong interface definition
                           242	#218:  *  01.83.00   2017-12-20  Ach     ESCAN00097821    Added interface to handle DcmDslRxTesterSourceAddress
                           243	#219:  **********************************************************************************************************************/
                           244	#221: /***********************************************************************************************************************
                           245	#222:  *  REVISION HISTORY (KbFbl_apOem.c)
                           246	#223:  *  --------------------------------------------------------------------------------------------------------------------
                           247	#224:  *  Version    Date        Author  Change Id        Description
                           248	#225:  *  --------------------------------------------------------------------------------------------------------------------
                           249	#226:  *  02.00.00   2016-11-07  CB      -                Initial version based on UDS2 component
                           250	#227:  *  02.01.00   2017-01-24  CB      ESCAN00093698    Added example code for data processing
                           251	#228:  **********************************************************************************************************************/
                           252	#230: /***********************************************************************************************************************
                           253	#231:  *  --------------------------------------------------------------------------------------------------------------------
                           254	#232:  *  REVISION HISTORY (KbFbl_apHW.h, Brs)
                           255	#233:  *  --------------------------------------------------------------------------------------------------------------------
                           256	#234:  *  Version    Date        Author  Change Id        Description
                           257	#235:  *  --------------------------------------------------------------------------------------------------------------------
                           258	#236:  *  01.00.00   2018-02-26  Csz                      Initial version
                           259	#237:  *  01.00.01   2018-03-08  Csz                      Call the BrsHwTogglePin functions directly and include BrsHw.h
                           260	#238:  **********************************************************************************************************************/
                           261	#240: /***********************************************************************************************************************
                           262	#241:  *  INCLUDES
                           263	#242:  **********************************************************************************************************************/
                           264	#244: #include "fbl_inc.h"
                           265	#246: #include "BrsHw.h"
                           266	#249: #if ( FBLKBAPI_SYMC_VERSION != 0x0201u ) || \
                           267	#250:     ( FBLKBAPI_SYMC_RELEASE_VERSION != 0x00u )

                                   Fri Apr 10 08:31:51 2020           Page 6
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           268	#251: # error "Error in fbl_apXX.c: Source and Header file are inconsistent!"
                           269	#252: #endif
                           270	#254: #if ( FBLKBAPI_SYMC_VERSION != _FBLKBAPI_OEM_VERSION ) || \
                           271	#255:     ( FBLKBAPI_SYMC_RELEASE_VERSION != _FBLKBAPI_OEM_RELEASE_VERSION )
                           272	#256: # error "Error in fbl_apXX.c: Source and v_ver.h are inconsistent!"
                           273	#257: #endif
                           274	#259: #if ( FBLKBAPI_BRS_VERSION != 0x0100u ) || \
                           275	#260:     ( FBLKBAPI_BRS_RELEASE_VERSION != 0x01u )
                           276	#261: # error "Error in fbl_apxx.c: Source and header file are inconsistent!"
                           277	#262: #endif
                           278	#263: #if ( FBLKBAPI_BRS_VERSION != _FBLKBAPI_HW_VERSION ) || \
                           279	#264:     ( FBLKBAPI_BRS_RELEASE_VERSION != _FBLKBAPI_HW_RELEASE_VERSION )
                           280	#265: # error "Error in fbl_apxx.c: Source and v_ver.h are inconsistent!"
                           281	#266: #endif
                           282	#267: #if ( FBLKBAPI_VERSION != 0x0183u ) || \
                           283	#268:     ( FBLKBAPI_RELEASE_VERSION != 0x00u )
                           284	#269: # error "Error in FBL_APxx.C: Source and header file are inconsistent!"
                           285	#270: #endif
                           286	#271: #if ( FBLKBAPI_VERSION != _FBLKBAPI_VERSION ) || \
                           287	#272:     ( FBLKBAPI_RELEASE_VERSION != _FBLKBAPI_RELEASE_VERSION )
                           288	#273: # error "Error in FBL_APxx.C: Source and V_VER.H are inconsistent!"
                           289	#274: #endif
                           290	#276: #if ( FBLKBAPI_FRAME_SYMC_VERSION != 0x0200u ) || \
                           291	#277:     ( FBLKBAPI_FRAME_SYMC_RELEASE_VERSION != 0x00u )
                           292	#278: # error "Error in fbl_ap.c: Source and header file are inconsistent!"
                           293	#279: #endif
                           294	#281: #if ( FBLKBAPI_FRAME_SYMC_VERSION != _FBLKBAPI_FRAME_OEM_VERSION )
                           295	#282: # error "Error in fbl_apxx.c: Source and v_ver.h are inconsistent!"
                           296	#283: #endif
                           297	#284: #if ( FBLKBAPI_FRAME_SYMC_RELEASE_VERSION != _FBLKBAPI_FRAME_OEM_RELEASE_VERSION )
                           298	#285: # error "Error in fbl_apxx.c: Source and v_ver.h are inconsistent!"
                           299	#286: #endif
                           300	#288: /***********************************************************************************************************************
                           301	#289:  *  DEFINES
                           302	#290:  **********************************************************************************************************************/
                           303	#292: /* Security seed response status defines */
                           304	#293: #define kSeedAlreadyRequested             0x00u    /**< Seed sent out, but no key received */
                           305	#294: #define kNewSeedRequest                   0x01u    /**< No seed sent out, new seed should be sent */
                           306	#298: #if defined( FBL_ENABLE_DATA_PROCESSING )
                           307	#299: # if !defined( GetOemProcessingModeSupported )
                           308	#300: /* Accept compression and encryption */
                           309	#301: #  define GetOemProcessingModeSupported(m) (GetOemCompressionMode((m)) || GetOemEncryptionMode((m)))
                           310	#302: # endif /* GetOemProcessingModeSupported */
                           311	#304: # if !defined( GetOemCompressionMode )
                           312	#305: #  if defined( FBL_ENABLE_COMPRESSION_MODE )
                           313	#306: /* Accept compression routine "1" */
                           314	#307: #   define GetOemCompressionMode(m) (((m) & kDiagFmtCompressionMask) == 0x10)
                           315	#308: #  else
                           316	#309: /* No compression routine supported */
                           317	#310: #   define GetOemCompressionMode(m) (0 != 0)
                           318	#311: #  endif /* FBL_ENABLE_COMPRESSION_MODE */
                           319	#312: # endif /* GetOemCompressionMode */
                           320	#314: # if !defined( GetOemEncryptionMode )
                           321	#315: #  if defined( FBL_ENABLE_ENCRYPTION_MODE )
                           322	#316: /* Accept encryption routine "1" */
                           323	#317: #   define GetOemEncryptionMode(m) (((m) & kDiagFmtEncryptionMask) == 0x01)

                                   Fri Apr 10 08:31:51 2020           Page 7
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           324	#318: #  else
                           325	#319: /* No encryption routine supported */
                           326	#320: #   define GetOemEncryptionMode(m) (0 != 0)
                           327	#321: #  endif /* FBL_ENABLE_ENCRYPTION_MODE */
                           328	#322: # endif /* GetOemEncryptionMode */
                           329	#323: #endif /* FBL_ENABLE_DATA_PROCESSING */
                           330	#327: /** System must consist of at least two logical blocks to activate dependency check */
                           331	#328: #define FBL_MIN_BLOCKS_FOR_DEPENDENCY     2u
                           332	#329: /** First logical block number of the application */
                           333	#330: #define FBL_START_LBT_APP                 0u
                           334	#332: /***********************************************************************************************************************
                           335	#333:  *  GLOBAL DATA
                           336	#334:  **********************************************************************************************************************/
                           337	#336: #if defined( FBL_ENABLE_MULTIPLE_NODES ) || \
                           338	#337:     defined( FBL_CW_ENABLE_MULTIPLE_NODES )
                           339	#338: V_MEMRAM0 V_MEMRAM1 vuint8 V_MEMRAM2 fblEcuHandle;
                           340	#339: #endif
                           341	#341: /** Fingerprint status (indicates if all data needed by fingerprint has been received) */
                           342	#342: V_MEMRAM0 V_MEMRAM1 vuint8 V_MEMRAM2 fpStatus;
                           343	#344: /***********************************************************************************************************************
                           344	#345:  *  LOCAL DATA
                           345	#346:  **********************************************************************************************************************/
                           346	#348: V_MEMRAM0 static V_MEMRAM1 SecM_SeedType V_MEMRAM2 secSeedInput;     /**< Initial seed value */
                           347	#349: V_MEMRAM0 static V_MEMRAM1 SecM_SeedType V_MEMRAM2 seed;             /**< Current seed value */
                           348	#350: V_MEMRAM0 static V_MEMRAM1 vuint8 V_MEMRAM2 securitySeedResponse;    /**< Seed response status */
                           349	#353: /* The following constant is used by the HW/SW compatibility check. *
                           350	#354:  * This value has to be replaced by the ECU-specific data.         */
                           351	#355: V_MEMROM0 static V_MEMROM1 vuint8 V_MEMROM2 HardwareCompatibilityVersion[kApplSizeSupplierHwVersion] = 
                           352	#356:    {0x00u,0x12u};/* PRQA S 3218 */ /* MD_FblKbApi_FrameOem_3218 */
                           353	#358: /***********************************************************************************************************************
                           354	#359:  *  EXTERNAL DATA
                           355	#360:  **********************************************************************************************************************/
                           356	#363: /***********************************************************************************************************************
                           357	#364:  *  LOCAL FUNCTION PROTOTYPES
                           358	#365:  **********************************************************************************************************************/
                           359	#367: static vuint8 ApplFblCheckSwSwCompatibility( void );
                           360	#368: static vuint8 ApplFblCheckHwSwCompatibility( vuint8 blockIdx );
                           361	#370: /***********************************************************************************************************************
                           362	#371:  *   GLOBAL FUNCTIONS
                           363	#372:  **********************************************************************************************************************/
                           364	#374: /***********************************************************************************************************************
                           365	#375:  *  ApplFblInit
                           366	#376:  **********************************************************************************************************************/
                           367	#377: /*! \brief       Function is called before any other FBL initialization
                           368	#378:  **********************************************************************************************************************/
                           369		.section ".vletext", "vax"
                           370		.vle
                           371		.vle
                           372	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB067..0::
                           373		.align	1
                           374	..gh.f.p.0.a.1.r.0.e.0:
                           375		.type	..gh.f.p.0.a.1.r.0.e.0,@object
                           376		.size	..gh.f.p.0.a.1.r.0.e.0,0
                           377		.global	ApplFblInit
                           378	ApplFblInit:
00000000 0080              379		se_mflr	r0

                                   Fri Apr 10 08:31:51 2020           Page 8
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000002 d101              380		se_stw	r0, 4(sp)
00000004 182106f8          381		e_stwu	sp, -8(sp)
                           382	#	    .bf
                           383	.LDW01:
                           384	#379: void ApplFblInit( void )
                           385	#380: {
                           386	#382:    /* Disable Watchdog */
                           387	#383:    BrsHwWatchdogInitPowerOn();
00000008 78000001          388		e_bl	BrsHwWatchdogInitPowerOn
                           389	#385:    /* Initialize the PLLs. */
                           390	#386:    BrsHwPllInitPowerOn();
0000000c 78000001          391		e_bl	BrsHwPllInitPowerOn
                           392	#388: #if defined( FBL_ENABLE_PRE_TIMERINIT )
                           393	#389:    /* Timer is stopped by mode switch and has to be re-initialized. */
                           394	#390:    FblTimerInit();
                           395	#391: #endif
                           396	#393: #if defined( FBL_ENABLE_VECTOR_HW )
                           397	#394:    /* Perform Port configuration. */
                           398	#395:    BrsHwPortInitPowerOn(); 
00000010 78000001          399		e_bl	BrsHwPortInitPowerOn
                           400	#396:    BrsHwEvaBoardInitPowerOn(); 
                           401	#397: #endif /* FBL_ENABLE_VECTOR_HW */
                           402	#398:    /* Initialize EEPROM-Driver */
                           403	#399:    (void)EepromDriver_InitSync(V_NULL);
00000014 4803              404		se_li	r3, 0
00000016 78000001          405		e_bl	EepromDriver_InitSync
                           406	#401: 	 /* Initialize Flash-Driver */
                           407	#402: 	 (void)Flash_XD1Driver_InitSync(V_NULL);
0000001a 4803              408		se_li	r3, 0
0000001c 78000001          409		e_bl	Flash_XD1Driver_InitSync
                           410	#403: 	 
                           411	#404:    /* Init Seed response status */
                           412	#405:    securitySeedResponse = kNewSeedRequest;
00000020 4810              413		se_li	r0, 1
00000022 70e0e000          414		e_lis	r7, %hiadj(securitySeedResponse)
00000026 34070000          415		e_stb	r0, %lo(securitySeedResponse)(r7)
                           416	#407:    /* Fingerprint validity status */
                           417	#408:    fpStatus = 0;
0000002a 4800              418		se_li	r0, 0
0000002c 70e0e000          419		e_lis	r7, %hiadj(fpStatus)
00000030 34070000          420		e_stb	r0, %lo(fpStatus)(r7)
                           421	#409: }
                           422	#	    .ef
                           423	.LDW11:
00000034 c301              424		se_lwz	r0, 12(sp)
00000036 2071              425		se_addi	sp, 8
00000038 0090              426		se_mtlr	r0
0000003a 0004              427		se_blr
                           428		.global	__ghs_eofn_ApplFblInit
                           429	__ghs_eofn_ApplFblInit:
                           430		.type	ApplFblInit,@function
                           431		.size	ApplFblInit,$-ApplFblInit
                           432		.align	1
                           433	
                           434	#function:			ApplFblInit
                           435	#stack frame size:		8

                                   Fri Apr 10 08:31:51 2020           Page 9
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           436	#link area offset:		0
                           437	#local storage area offset:	8
                           438	#
                           439	
                           440		.section ".bss","awb"
                           441		.align	2
                           442		.global	secSeedInput..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                           443	secSeedInput..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.:
00000000                   444	secSeedInput:	.space	8
                           445		.type	secSeedInput..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,@object
                           446		.size	secSeedInput..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,8
                           447		.type	secSeedInput,@object
                           448		.size	secSeedInput,8
                           449		.global	seed..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                           450	seed..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.:
00000008                   451	seed:	.space	8
                           452		.type	seed..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,@object
                           453		.size	seed..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,8
                           454		.type	seed,@object
                           455		.size	seed,8
                           456		.global	securitySeedResponse..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                           457	securitySeedResponse..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.:
00000010                   458	securitySeedResponse:	.space	1
                           459		.type	securitySeedResponse..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,@object
                           460		.size	securitySeedResponse..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,1
                           461		.type	securitySeedResponse,@object
                           462		.size	securitySeedResponse,1
                           463		.data
                           464		.section ".vletext", "vax"
                           465		.vle
                           466		.vle
                           467	
                           468	
                           469	#411: /***********************************************************************************************************************
                           470	#412:  *  ApplFblStartup
                           471	#413:  **********************************************************************************************************************/
                           472	#414: /*! \brief       Bootloader initialization callback
                           473	#415:  *  \details     This function is called during the Bootloader initialization if the application software is
                           474	#416:  *               not started. It can be used to perform initializations which are not needed if the application
                           475	#417:  *               software is started. Please note that the function is called several times with different
                           476	#418:  *               initposition values. Timer and hardware can be accessed in post-init phase only.
                           477	#419:  *  \param[in]   initposition Initialization state of Bootloader.
                           478	#420:  **********************************************************************************************************************/
                           479	#421: void ApplFblStartup( vuint8 initposition )
                           480	#422: {
                           481	#423:    switch (initposition)
                           482	#424:    {
                           483	#425:       case (kFblInitPreCallback | kFblInitBaseInitialization):
                           484	#426:       {
                           485	#427:          break;
                           486	#428:       }
                           487	#429:       case (kFblInitPreCallback | kFblInitFblCommunication):
                           488	#430:       {
                           489	#431:          break;
                           490	#432:       }
                           491	#433:       case (kFblInitPreCallback | kFblInitFblFinalize):

                                   Fri Apr 10 08:31:51 2020           Page 10
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           492	#434:       {
                           493	#435:          break;
                           494	#436:       }
                           495	#437:       case (kFblInitPostCallback | kFblInitBaseInitialization):
                           496	#438:       {
                           497	#439:          /* Basic hardware initialization */
                           498	#440:          ApplFblInit();
                           499	#441:          break;
                           500	#442:       }
                           501	#443:       case (kFblInitPostCallback | kFblInitFblCommunication):
                           502	#444:       {
                           503	#445:          break;
                           504	#446:       }
                           505	#447:       case (kFblInitPostCallback | kFblInitFblFinalize):
                           506	#448:       {
                           507	#449:          break;
                           508	#450:       }
                           509	#451:       default:
                           510	#452:       {
                           511	#453:          assertFblInternal(0u, kFblSysAssertParameterOutOfRange);  /* PRQA S 2214 */ /* MD_FblAssert_Assertion */
                           512	#454:          break;
                           513	#455:       }
                           514	#456:    }
                           515	#457: }
                           516	#459: /***********************************************************************************************************************
                           517	#460:  *  ApplFblCheckProgConditions
                           518	#461:  **********************************************************************************************************************/
                           519	#462: /*! \brief       This function is called after receiving the service request sessionControl ProgrammingSession to check
                           520	#463:  *               the programming conditions like reprogramming counter, ambient temperature, programming voltage, etc.
                           521	#464:  *  \return      If all conditions are correct, the function returns kFblOk, otherwise kFblFailed.
                           522	#465:  **********************************************************************************************************************/
                           523	#466: tFblResult ApplFblCheckProgConditions( void )
                           524	#467: {
                           525	#468: #if defined( FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS )
                           526	#469:    vuint16 diagRespDataLen;
                           527	#470: #endif /* FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS */
                           528	#471:    tFblResult result;
                           529	#473:    result = kFblOk;
                           530	#475: #if defined( FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS )
                           531	#476:    diagRespDataLen = 3;
                           532	#477: #endif /* FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS */
                           533	#479:    /* Example: Test if programming preconditions are fulfilled */
                           534	#480:    /*
                           535	#481:    if (preCondition != OK)
                           536	#482:    {
                           537	#483:       DiagBuffer[diagRespDataLen + 1] = 0x01;
                           538	#484:       diagRespDataLen++;
                           539	#485:       result = kFblFailed;
                           540	#486:    }
                           541	#487:    */
                           542	#489: #if defined( FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS )
                           543	#490:    /* Transmit response message:*/
                           544	#491:    DiagProcessingDone(diagRespDataLen);
                           545	#492: #endif /* FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS */
                           546	#494:   return result;
                           547	#495: }

                                   Fri Apr 10 08:31:51 2020           Page 11
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           548	#497: /***********************************************************************************************************************
                           549	#498:  *  ApplFblCheckConditions
                           550	#499:  **********************************************************************************************************************/
                           551	#500: /*! \brief         Check conditions for diagnostic services
                           552	#501:  *  \details       This function is called for each diagnostic service.
                           553	#502:  *  \param[in,out] pbDiagData Pointer to diagnostic data buffer
                           554	#503:  *  \param[in]     diagReqDataLen The request data length
                           555	#504:  *  \return        kFblOk or kFblFailed
                           556	#505:  **********************************************************************************************************************/
                           557	#506: /* PRQA S 3673 1 */ /* MD_FblKbApi_3673 */
                           558	#507: tFblResult ApplFblCheckConditions( vuint8 * pbDiagData, tTpDataType diagReqDataLen )
                           559	#508: {
                           560	#509: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                           561	#510:    /* PRQA S 3112 2 */ /* MD_MSR_14.2 */
                           562	#511:    (void)pbDiagData;
                           563	#512:    (void)diagReqDataLen;
                           564	#513: #endif
                           565	#515:    /* Parse Service IDs */
                           566	#517:    /*
                           567	#518:    switch (diagServiceCurrent)
                           568	#519:    {
                           569	#520:       case kDiagSidDiagnosticSessionControl:
                           570	#521:       {
                           571	#522:          if (...)
                           572	#523:          {
                           573	#524:             DiagNRCConditionsNotCorrect();
                           574	#525:             return kFblFailed;
                           575	#526:          }
                           576	#528:          break;
                           577	#529:       }
                           578	#530:       case kDiagSidEcuReset:
                           579	#531:       {
                           580	#532:          break;
                           581	#533:       }
                           582	#534:       case kDiagSidReadDataByIdentifier:
                           583	#535:       {
                           584	#536:          break;
                           585	#537:       }
                           586	#538:       case kDiagSidSecurityAccess:
                           587	#539:       {
                           588	#540:          break;
                           589	#541:       }
                           590	#542:       case kDiagSidCommunicationControl:
                           591	#543:       {
                           592	#544:          break;
                           593	#545:       }
                           594	#546:       case kDiagSidWriteDataByIdentifier:
                           595	#547:       {
                           596	#548:          break;
                           597	#549:       }
                           598	#550:       case kDiagSidRoutineControl:
                           599	#551:       {
                           600	#552:          break;
                           601	#553:       }
                           602	#554:       case kDiagSidRequestDownload:
                           603	#555:       {

                                   Fri Apr 10 08:31:51 2020           Page 12
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           604	#556:          break;
                           605	#557:       }
                           606	#558:       case kDiagSidTransferData:
                           607	#559:       {
                           608	#560:          break;
                           609	#561:       }
                           610	#562:       case kDiagSidRequestTransferExit:
                           611	#563:       {
                           612	#564:          break;
                           613	#565:       }
                           614	#566:       case kDiagSidTesterPresent:
                           615	#567:       {
                           616	#568:          break;
                           617	#569:       }
                           618	#570:       case kDiagSidControlDTCSetting:
                           619	#571:       {
                           620	#572:          break;
                           621	#573:       }
                           622	#574:       default:
                           623	#575:       {
                           624	#576:          break;
                           625	#577:       }
                           626	#578:    }
                           627	#579:    */
                           628	#581:    return kFblOk;
                           629	#582: }
                           630	#584: /***********************************************************************************************************************
                           631	#585:  *  ApplFblCheckSwSwCompatibility
                           632	#586:  **********************************************************************************************************************/
                           633	#587: /*! \brief       Check if logical blocks are compatible
                           634	#588:  *  \return      Status of software-software compatibility check
                           635	#589:  **********************************************************************************************************************/
                           636	#590: static vuint8 ApplFblCheckSwSwCompatibility( void )
                           637	#591: {
                           638	#592: #if ( FBL_MTAB_NO_OF_BLOCKS < FBL_MIN_BLOCKS_FOR_DEPENDENCY )
                           639	#593:    /* Only one block, no inconsistency possible */
                           640	#594:    return kDiagCheckCompatibilityOk;
                           641	#595: #else
                           642	#596:    vuint8 idx;
                           643	#597:    vuint8 actualVersion[kApplHdrOffsetSupplierSwVersion + kApplSizeSupplierSwVersion];
                           644	#598:    vuint8 referenceVersion[kApplHdrOffsetSupplierSwVersion + kApplSizeSupplierSwVersion];
                           645	#599:    vuint8 validityFlags[kEepSizeValidityFlags];
                           646	#601:    /* Read validity flags */
                           647	#602:    if (ApplFblNvReadValidityFlags(validityFlags) != kFblOk)
                           648	#603:    {
                           649	#604:       /* Report internal error */
                           650	#605:       return kFblFailed;
                           651	#606:    }
                           652	#608:    /* Read first application version from application */
                           653	#609:    (void)FblReadProm(ApplFblGetModuleHeaderAddress(FBL_START_LBT_APP), referenceVersion, 
                           654	#610:       kApplSizeSwInfo + kApplSizeSupplierSwVersion);
                           655	#612:    for (idx = (FBL_START_LBT_APP + 1u); idx < FblLogicalBlockTable.noOfBlocks; idx++)
                           656	#613:    {
                           657	#614:       /* Check is performed for valid logical blocks only. If an optional block  *
                           658	#615:        * is not valid, the compatibility status will be ignored.                 */
                           659	#616:       if ((validityFlags[idx >> 3u] & (vuint8)(1<<(idx & 7u))) == 0u)

                                   Fri Apr 10 08:31:51 2020           Page 13
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           660	#617:       {
                           661	#618:          /* Check if module version matches */
                           662	#619:          (void)FblReadProm(ApplFblGetModuleHeaderAddress(idx), actualVersion, 
                           663	#620:             kApplSizeSwInfo + kApplSizeSupplierSwVersion);
                           664	#622:          /* Compare SYMC Part Number, SYMC Software Version and System Supplier Code */
                           665	#624:          /* Compare major and minor version number */
                           666	#625:          if ((referenceVersion[kApplSizeSwInfo] != actualVersion[kApplSizeSwInfo]) ||
                           667	#626:              (referenceVersion[kApplSizeSwInfo + 1u] != actualVersion[kApplSizeSwInfo + 1u]))
                           668	#627:          {
                           669	#628:             /* Inconsistency found */
                           670	#629:             return kDiagCheckCompatibilitySwSw;
                           671	#630:          }
                           672	#631:       }
                           673	#632:    }
                           674	#634:    /* All blocks successfully checked */
                           675	#635:    return kDiagCheckCompatibilityOk;
                           676	#636: #endif /* FBL_MTAB_NO_OF_BLOCKS < FBL_MIN_BLOCKS_FOR_DEPENDENCY */
                           677	#637: }  /* PRQA S 2006 */ /* MD_CBD_14.7 */
                           678	#639: /***********************************************************************************************************************
                           679	#640:  *  ApplFblCheckHwSwCompatibility
                           680	#641:  **********************************************************************************************************************/
                           681	#642: /*! \brief       Check if current logical block is compatible with hardware
                           682	#643:  *  \pre         Logical block has to be valid
                           683	#644:  *  \param[in]   blockIdx Index of logical block
                           684	#645:  *  \return      Status of hardware-software compatibility check
                           685	#646:  **********************************************************************************************************************/
                           686	#647: static vuint8 ApplFblCheckHwSwCompatibility( vuint8 blockIdx )
                           687	#648: {
                           688	#649:    vuint8 compatibilityListLength;
                           689	#650:    tFblAddress pCompatibilityField;
                           690	#651:    vuint8 versionBuffer[2];
                           691	#652:    vuint8 listIndex;
                           692	#653:    vuint8 returnValue;
                           693	#655:    /* Preset values */
                           694	#656:    listIndex = 0u;
                           695	#657:    returnValue = kDiagCheckCompatibilitySwHw;
                           696	#659:    /* Get address of compatibility list */
                           697	#660:    pCompatibilityField = (ApplFblGetModuleHeaderAddress(blockIdx) + kApplHdrOffsetNumberHwCompatibilityEntries );
                           698	#662:    /* Read length of compatibility list */
                           699	#663:    (void)FblReadProm(pCompatibilityField, &compatibilityListLength, kApplSizeNumberHwCompatibilityEntries);
                           700	#664:    pCompatibilityField += kApplSizeNumberHwCompatibilityEntries;
                           701	#666:    /* Compare compatibility list to hardware compatibility version */
                           702	#667:    while ((listIndex < compatibilityListLength) && (returnValue == kDiagCheckCompatibilitySwHw))
                           703	#668:    {
                           704	#669:       (void)FblReadProm(pCompatibilityField, versionBuffer, kApplSizeSupplierHwVersion);
                           705	#670:       if ((versionBuffer[0] == HardwareCompatibilityVersion[0]) &&
                           706	#671:           (versionBuffer[1] == HardwareCompatibilityVersion[1]))
                           707	#672:       {
                           708	#673:          returnValue = kDiagCheckCompatibilityOk;
                           709	#674:       }
                           710	#675:       pCompatibilityField += kApplSizeSupplierHwVersion;
                           711	#676:       listIndex++;
                           712	#677:    }
                           713	#679:    return kDiagCheckCompatibilityOk;//returnValue; //todo : customer should check this
                           714	#680: }
                           715	#682: /***********************************************************************************************************************

                                   Fri Apr 10 08:31:51 2020           Page 14
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           716	#683:  *  ApplFblCheckProgDependencies
                           717	#684:  **********************************************************************************************************************/
                           718	#685: /*! \brief       Check if programming dependencies are given
                           719	#686:  *  \return      Status of programming dependencies (OEM specific)
                           720	#687:  **********************************************************************************************************************/
                           721	#688: vuint8 ApplFblCheckProgDependencies( void )
                           722	#689: {
                           723	#690:    vuint8 result;
                           724	#691:    vuintx idx;
                           725	#692:    vuint8 validityFlags[kEepSizeValidityFlags];
                           726	#694:    /* Initialize variables */
                           727	#695:    result = kDiagCheckCompatibilityOk;
                           728	#697:    /* Check if LBT is valid */
                           729	#698:    if (!IsLogicalBlockTableValid())
                           730	#699:    {
                           731	#700:       result = kDiagCheckCompatibilityFailed;
                           732	#701:    }
                           733	#702:    else
                           734	#703:    {
                           735	#704:       /* Mandatory logical blocks must be valid. Otherwise, they cannot be consistent. */
                           736	#705:       /* Read validity flags */
                           737	#706:       if (ApplFblNvReadValidityFlags(validityFlags) != kFblOk)
                           738	#707:       {
                           739	#708:          result = kDiagCheckCompatibilityFailed;   /* General failure - validity flags couldn't be read */
                           740	#709:       }
                           741	#710:    }
                           742	#712:    if (result == kDiagCheckCompatibilityOk)
                           743	#713:    {
                           744	#714:       for (idx = 0u; idx < kEepSizeValidityFlags; idx++)
                           745	#715:       {
                           746	#716:          if ((validityFlags[idx] & FblLogicalBlockTable.assignFlags[idx]) != 0) /* PRQA S 3353 */ /* MD_FblKbApiOem_3353 */
                           747	#717:          {
                           748	#718:             result = kDiagCheckCompatibilityBlockMissing;   /* Failure - at least one logical block is missing */
                           749	#719:             break;
                           750	#720:          }
                           751	#721:       }
                           752	#722:    }
                           753	#724:    if (result == kDiagCheckCompatibilityOk)
                           754	#725:    {
                           755	#726:       /* Check SwSw-compatibility */
                           756	#727:       result = ApplFblCheckSwSwCompatibility();
                           757	#729:       /* Check Hw/Sw-compatibility of all programmed logical blocks */
                           758	#730:       idx = (FBL_START_LBT_APP);
                           759	#731:       while((idx < FblLogicalBlockTable.noOfBlocks) && (result == kDiagCheckCompatibilityOk))
                           760	#732:       {
                           761	#733:          /* Check if block is programmed */
                           762	#734:          if ((validityFlags[idx >> 3u] & (vuint8)(1u << (idx & 7u))) == 0u)
                           763	#735:          {
                           764	#736:             result = ApplFblCheckHwSwCompatibility((vuint8)idx);
                           765	#737:          }
                           766	#738:          idx++;
                           767	#739:       }
                           768	#740:    }
                           769	#742:    /* If required, additional checks can be added here
                           770	#743:       (e.g. SW-HW, version number, ... ) */
                           771	#744:    /* Failures can be indicated using the following error codes:

                                   Fri Apr 10 08:31:51 2020           Page 15
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           772	#745:       kDiagCheckCompatibilitySwHw
                           773	#746:       kDiagCheckCompatibilitySwSw
                           774	#747:    */
                           775	#749:    /* Copy Identification information into Nv-memory*/
                           776	#750:    if (result == kDiagCheckCompatibilityOk)
                           777	#751:    {
                           778	#752:       vuint8 buffer[kApplSizeSwInfo];
                           779	#753:       tFblAddress applHdrAddr;
                           780	#755:       applHdrAddr = ApplFblGetModuleHeaderAddress(0);
                           781	#756:       (void)FblReadProm(applHdrAddr, buffer, kApplSizeSwInfo);
                           782	#757:       /* Write software information into NVM */
                           783	#758:       (void)ApplFblNvWriteSymcPartNumber(0u, &buffer[kApplHdrOffsetSymcPartNumber]);  /* PRQA S 3425 */ /* MD_FblKbApiOem_3425 */
                           784	#759:       (void)ApplFblNvWriteSymcSoftwareVersion(0u, &buffer[kApplHdrOffsetSymcSoftwareVersion]);  /* PRQA S 3425 */ /* MD_FblKbApiOem_3425 */
                           785	#760:       (void)ApplFblNvWriteSystemSupplierCode(0u, &buffer[kApplHdrOffsetSystemSupplierCode]);  /* PRQA S 3425 */ /* MD_FblKbApiOem_3425 */
                           786	#762:       /* Compatibility check done - write application valid flag now */
                           787	#763:       if (ApplFblValidateApp() != kFblOk)
                           788	#764:       {
                           789	#765:          result = kDiagCheckCompatibilityFailed;   /* General failure - application valid flag couldn't be written */
                           790	#766:       }
                           791	#767:    }
                           792	#769:    return result;
                           793	#770: }
                           794	#772: /***********************************************************************************************************************
                           795	#773:  *  ApplTrcvrNormalMode
                           796	#774:  **********************************************************************************************************************/
                           797	#775: /*! \brief       Activate transceiver if necessary (e.g. pin configuration ENABLE = 1, _STDBY = 1)
                           798	#776:  **********************************************************************************************************************/
                           799	#777: void ApplTrcvrNormalMode( void )
                           800	#778: {
                           801	#779: }
                           802	#781: /***********************************************************************************************************************
                           803	#782:  *  ApplTrcvrSleepMode
                           804	#783:  **********************************************************************************************************************/
                           805	#784: /*! \brief       Turn off the transceiver to enter sleep mode (e.g. pin configuration ENABLE = 1, _STDBY = 0)
                           806	#785:  **********************************************************************************************************************/
                           807	#786: void ApplTrcvrSleepMode( void )
                           808	#787: {
                           809	#788: }
                           810	#790: /***********************************************************************************************************************
                           811	#791:  *  ApplFblSetVfp
                           812	#792:  **********************************************************************************************************************/
                           813	#793: /*! \brief       Function is called when the FBL enters programming mode.
                           814	#794:  *  \details     Port bits have to be set so that the required programming voltage is available.
                           815	#795:  **********************************************************************************************************************/
                           816	#796: void ApplFblSetVfp( void )
                           817	#797: {
                           818	#798:    /* Set flash programming voltage */
                           819	#799: #if defined (BRSHW_VOLTAGE_FOR_FLASH_PROGRAMMING_AVAILABLE)
                           820	#800:    BrsHwSetVfp(); 
                           821	#801: #endif
                           822	#802: }
                           823	#804: /***********************************************************************************************************************
                           824	#805:  *  ApplFblResetVfp
                           825	#806:  **********************************************************************************************************************/
                           826	#807: /*! \brief       This function is called when the programming is done.
                           827	#808:  **********************************************************************************************************************/

                                   Fri Apr 10 08:31:51 2020           Page 16
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           828	#809: void ApplFblResetVfp( void )
                           829	#810: {
                           830	#811:    /* Reset flash programming voltage */
                           831	#812: #if defined (BRSHW_VOLTAGE_FOR_FLASH_PROGRAMMING_AVAILABLE)
                           832	#813:    BrsHwResetVfp();
                           833	#814: #endif
                           834	#815: }
                           835	#817: /***********************************************************************************************************************
                           836	#818:  *  ApplFblReset
                           837	#819:  **********************************************************************************************************************/
                           838	#820: /*! \brief       This function performs a reset.
                           839	#821:  *  \details     The function will wait until the reset is performed. Please note: This function will
                           840	#822:  *               never return to the calling code.
                           841	#823:  **********************************************************************************************************************/
                           842	#824: void ApplFblReset( void )
                           843	#825: {
                           844	#826:    /* Fingerprint is invalidated in case of reset */
                           845	#827:    fpStatus = 0u;
                           846	#828:    /* Reset ECU */
                           847	#829:    BrsHwSoftwareResetECU();
                           848	#830: }
                           849	#832: # define FBLAP_RAMCODE_START_SEC_CODE
                           850	#833: # include "MemMap.h"   /* PRQA S 5087 *//* MD_MSR_19.1 */
                           851	#834: /***********************************************************************************************************************
                           852	#835:  *  ApplFblSecuritySeedInit
                           853	#836:  **********************************************************************************************************************/
                           854	#837: /*! \brief       Initialize seed values.
                           855	#838:  *  \return      Status of seed initialization
                           856	#839:  **********************************************************************************************************************/
                           857	#840: vuint8 ApplFblSecuritySeedInit( void )
                           858	#841: {
                           859	#842:    /* Initialize seed values */
                           860	#843:    secSeedInput.seedY += secSeedInput.seedX;
                           861	#844:    secSeedInput.seedX = FblGetTimerValue();
                           862	#846:    return kFblOk;
                           863	#847: }
                           864	#848: # define FBLAP_RAMCODE_STOP_SEC_CODE
                           865	#849: # include "MemMap.h"   /* PRQA S 5087 *//* MD_MSR_19.1 */
                           866	#851: /***********************************************************************************************************************
                           867	#852:  *  ApplFblSecuritySeed
                           868	#853:  **********************************************************************************************************************/
                           869	#854: /*! \brief       This function is called when the tester requests the security seed.
                           870	#855:  *  \return      Status of seed generation
                           871	#856:  **********************************************************************************************************************/
                           872	#857: vuint8 ApplFblSecuritySeed( void )
                           873	#858: {
                           874	#859:    vuint8 result;
                           875	#861:    result = kFblOk;
                           876	#863:    /* Last seed is repeated if it was already sent to tester */
                           877	#864:    if (securitySeedResponse != kSeedAlreadyRequested)
                           878	#865:    {
                           879	#866:       /* Ensure that seed has been initialized */
                           880	#867:       while ((0u == secSeedInput.seedX) || (0u == secSeedInput.seedY))
                           881	#868:       {
                           882	#869:          (void)ApplFblSecuritySeedInit();
                           883	#870:       }

                                   Fri Apr 10 08:31:51 2020           Page 17
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           884	#872:       /* Generate seed */
                           885	#873:       if (SECM_OK == SecM_GenerateSeed(&secSeedInput))
                           886	#874:       {
                           887	#875:          /* Seed values 0 and 0xff... are not accepted */
                           888	#876:          if (  ((0x00u == secSeedInput.seedX) && (0x00u == secSeedInput.seedY)) 
                           889	#877:              ||((0xFFFFFFFFu == secSeedInput.seedX) && (0xFFFFFFFFu == secSeedInput.seedY)) )
                           890	#878:          {
                           891	#879:             /* invalid seed, use default values */
                           892	#880:             secSeedInput.seedX = 0xEDB88327ul;
                           893	#881:             secSeedInput.seedY = 0xBDBDF21Dul;
                           894	#882:          }
                           895	#883:    
                           896	#884:          /* Save last seed */
                           897	#885:          seed = secSeedInput;
                           898	#886:       }
                           899	#887:       else
                           900	#888:       {
                           901	#889:          result = kFblFailed;
                           902	#890:       }
                           903	#891:    }
                           904	#893:    /* Write seed value into DiagBuffer */
                           905	#894:    if (kFblOk == result)
                           906	#895:    {
                           907	#896:       FblMemSetInteger(SEC_SEED_LENGTH/2, seed.seedX, &DiagBuffer[kDiagFmtSeedKeyStart]);
                           908	#897:       FblMemSetInteger(SEC_SEED_LENGTH/2, seed.seedY, &DiagBuffer[kDiagFmtSeedKeyStart + (SEC_SEED_LENGTH/2)]);
                           909	#899:       /* Set seed status to seed requested */
                           910	#900:       securitySeedResponse = kSeedAlreadyRequested;
                           911	#901:    }
                           912	#903:    return result;
                           913	#904: }
                           914	#906: /***********************************************************************************************************************
                           915	#907:  *  ApplFblSecurityKey
                           916	#908:  **********************************************************************************************************************/
                           917	#909: /*! \brief       This function is called when the security key has been received from tester
                           918	#910:  *  \return      Status of key verification
                           919	#911:  **********************************************************************************************************************/
                           920	#912: vuint8 ApplFblSecurityKey( void )
                           921	#913: {
                           922	#914:    vuint8 result;
                           923	#915:    SecM_KeyType localKey;
                           924	#917:    /* Initialize variables */
                           925	#918:    result = kFblFailed;
                           926	#920:    /* Key received => New seed can be requested */
                           927	#921:    securitySeedResponse = kNewSeedRequest;
                           928	#923:    /* Check key from tester */
                           929	#924:    localKey = FblMemGetInteger(SEC_KEY_LENGTH, &DiagBuffer[kDiagFmtSeedKeyStart]);
                           930	#925:    if (SECM_OK == SecM_CompareKey(localKey, seed))
                           931	#926:    {
                           932	#927:       /* Key bytes are accepted */
                           933	#928:       result = kFblOk;
                           934	#929:    }
                           935	#931:    return result;
                           936	#932: }
                           937	#934: /***********************************************************************************************************************
                           938	#935:  *  ApplFblSecurityInit
                           939	#936:  **********************************************************************************************************************/

                                   Fri Apr 10 08:31:51 2020           Page 18
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           940	#937: /*! \brief       Initialize security module.
                           941	#938:  *  \return      Status of security module initialization
                           942	#939:  **********************************************************************************************************************/
                           943	#940: vuint8 ApplFblSecurityInit( void )
                           944	#941: {
                           945	#942:    secSeedInput.seedX = 0u;
                           946	#943:    secSeedInput.seedY = 0u;
                           947	#945:    return kFblOk;
                           948	#946: }
                           949	#948: #if defined( FBL_ENABLE_DATA_PROCESSING )
                           950	#949: /***********************************************************************************************************************
                           951	#950:  *  ApplFblInitDataProcessing
                           952	#951:  **********************************************************************************************************************/
                           953	#952: /*! \brief         This function is called to initialize the application specific data processing function.
                           954	#953:  *  \param[in,out] procParam Processing parameter data structure
                           955	#954:  *  \return        kFblOk/kFblFailed
                           956	#955:  **********************************************************************************************************************/
                           957	#956: tFblResult ApplFblInitDataProcessing( tProcParam * procParam )
                           958	#957: {
                           959	#958:    /* Example implementation. Data not processed at all. */
                           960	#959:    tFblResult result;
                           961	#961:    result = kFblOk;
                           962	#963:    return result;
                           963	#964: }
                           964	#966: /***********************************************************************************************************************
                           965	#967:  *  ApplFblDataProcessing
                           966	#968:  **********************************************************************************************************************/
                           967	#969: /*! \brief         Data processing function.
                           968	#970:  *  \pre           Data processing has to be initialized by call of ApplFblInitDataProcessing
                           969	#971:  *  \param[in,out] procParam Processing parameter data structure
                           970	#972:  *  \return        kFblOk/kFblFailed
                           971	#973:  **********************************************************************************************************************/
                           972	#974: tFblResult ApplFblDataProcessing( tProcParam * procParam )
                           973	#975: {
                           974	#976:    /* Example implementation. Data not processed at all. */
                           975	#977:    tFblResult result;
                           976	#979:    result = kFblOk;
                           977	#981:    /* Calculate output length. Length will not change */
                           978	#982:    if (procParam->dataLength > procParam->dataOutMaxLength)
                           979	#983:    {
                           980	#984:       procParam->dataOutLength = procParam->dataOutMaxLength;
                           981	#985:    }
                           982	#986:    else
                           983	#987:    {
                           984	#988:       procParam->dataOutLength = procParam->dataLength;
                           985	#989:    }
                           986	#991:    /* Update actually consumed length */
                           987	#992:    procParam->dataLength = procParam->dataOutLength;
                           988	#994:    /* Copy data from input to output buffer. */
                           989	#995:    FblLookForWatchdogVoid();
                           990	#996:    (void)MEMCPY(procParam->dataOutBuffer, procParam->dataBuffer, procParam->dataOutLength);
                           991	#998:    return result;
                           992	#999: }
                           993	#1001: /***********************************************************************************************************************
                           994	#1002:  *  ApplFblDeinitDataProcessing
                           995	#1003:  **********************************************************************************************************************/

                                   Fri Apr 10 08:31:51 2020           Page 19
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                           996	#1004: /*! \brief         Deinitialize data processing function.
                           997	#1005:  *  \pre           Data processing has to be initialized by call of ApplFblInitDataProcessing
                           998	#1006:  *  \param[in,out] procParam Processing parameter data structure
                           999	#1007:  *  \return        kFblOk/kFblFailed
                          1000	#1008:  **********************************************************************************************************************/
                          1001	#1009: tFblResult ApplFblDeinitDataProcessing( tProcParam * procParam )
                          1002	#1010: {
                          1003	#1011:    /* Example implementation. Data not processed at all. */
                          1004	#1012:    tFblResult result;
                          1005	#1014:    /* Conclude data processing in last round */
                          1006	#1015:    result = ApplFblDataProcessing(procParam);
                          1007	#1017:    return result;
                          1008	#1018: }
                          1009	#1019: #endif /* FBL_ENABLE_DATA_PROCESSING */
                          1010	#1021: #if defined( FBL_ENABLE_APPL_TASK ) || \
                          1011	#1022:     defined( FBL_ENABLE_APPL_TIMER_TASK )
                          1012	#1023: /***********************************************************************************************************************
                          1013	#1024:  *  ApplFblTask
                          1014	#1025:  **********************************************************************************************************************/
                          1015	#1026: /*! \brief       1ms user task.
                          1016	#1027:  *  \details     This function is called every millisecond if the Bootloader is in idle state. It is not called during
                          1017	#1028:  *               flash operations.
                          1018	#1029:  **********************************************************************************************************************/
                          1019	#1030: void ApplFblTask( void )
                          1020	#1031: {
                          1021	#1032: #if 0   
                          1022	#1033: 	 static V_MEMRAM1 vuint16 V_MEMRAM2 flashlight;
                          1023	#1034:    static tMsgObject test;
                          1024	#1036:    flashlight++;
                          1025	#1037:    if (flashlight >= 500u)
                          1026	#1038:    {
                          1027	#1039:       flashlight = 0u;
                          1028	#1041:       FblCanSetTxDLC(test, 8);
                          1029	#1042:       FblCanSetTxId(test,MK_STDID(0x600));
                          1030	#1043:       test.msgObject.DataFld[0] = 0x11;
                          1031	#1044:       test.msgObject.DataFld[1] = 0x22;
                          1032	#1045:       test.msgObject.DataFld[2] = 0x33;
                          1033	#1046:       test.msgObject.DataFld[3] = 0x44;
                          1034	#1047:       test.msgObject.DataFld[4] = 0x55;
                          1035	#1048:       test.msgObject.DataFld[5] = 0x66;
                          1036	#1049:       test.msgObject.DataFld[6] = 0x77;
                          1037	#1050:       test.msgObject.DataFld[7] = 0x88;
                          1038	#1052:       FblCanSetTxConfirmation (test, V_NULL);
                          1039	#1053:       FblCanTransmit(&test);
                          1040	#1054:    }
                          1041	#1055: #endif	 
                          1042	#1056: }
                          1043	#1057: #endif /* FBL_ENABLE_APPL_TASK || FBL_ENABLE_APPL_TIMER_TASK */
                          1044	#1059: #if defined( FBL_ENABLE_APPL_TASK ) ||\
                          1045	#1060:     defined( FBL_ENABLE_APPL_STATE_TASK )
                          1046	#1061: /***********************************************************************************************************************
                          1047	#1062:  *  ApplFblStateTask
                          1048	#1063:  **********************************************************************************************************************/
                          1049	#1064: /*! \brief       Background user task.
                          1050	#1065:  *  \details     This function is polled if the Bootloader is in idle state. It is not called during flash operations.
                          1051	#1066:  **********************************************************************************************************************/

                                   Fri Apr 10 08:31:51 2020           Page 20
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1052	#1067: void ApplFblStateTask( void )
                          1053	#1068: {
                          1054	#1069: }
                          1055	#1070: #endif /* FBL_ENABLE_APPL_TASK || FBL_ENABLE_APPL_STATE_TASK */
                          1056	#1072: #if defined( FBL_ENABLE_ASSERTION )
                          1057	#1073: /***********************************************************************************************************************
                          1058	#1074:  *  ApplFblFatalError
                          1059	#1075:  **********************************************************************************************************************/
                          1060	#1076: /*! \brief       If the bootloader assertions are enabled, this function will be called in case an invalid bootloader
                          1061	#1077:  *               state is encountered.
                          1062	#1078:  *  \param[in]   errorCode Code number of the encountered assertion
                          1063	#1079:  *  \param[in]   module Name of the affected module (Only if extended info is enabled)
                          1064	#1080:  *  \param[in]   line Line number where the assertion occurred (Only if extended info is enabled)
                          1065	#1081:  **********************************************************************************************************************/
                          1066		.align	1
                          1067		.align	1
                          1068	..gh.f.p.3.a.1.r.0.e.1:
                          1069		.type	..gh.f.p.3.a.1.r.0.e.1,@object
                          1070		.size	..gh.f.p.3.a.1.r.0.e.1,0
                          1071		.global	ApplFblFatalError
                          1072	ApplFblFatalError:
                          1073	#	    .bf
                          1074	.LDW21:
                          1075	#1082: void ApplFblFatalError( FBL_DECL_ASSERT_EXTENDED_INFO(vuint8 errorCode) )
                          1076	#1083: {
                          1077	#1084: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          1078	#1085:    (void)errorCode;  /* PRQA S 3112 */ /* MD_MSR_14.2 */
                          1079	#1086: #endif
                          1080	#1088:    /* TODO: This feature should be activated in development only. Please make sure this
                          1081	#1089:             function isn't called in production code and assertions are disabled in GENy
                          1082	#1090:             (set "Project State" to "Production (default)" or "Production (reduced tests)".
                          1083	#1091:    */
                          1084	#1092:    while (1)
                          1085	.L52:
                          1086	#1093:    {
                          1087	#1094:       ;
0000003c e800             1088		se_b	.L52
                          1089	#	    .ef
                          1090	.LDW31:
                          1091	..lin.5de73d21..b227a998.0_1::
                          1092	.LDWlin1:
                          1093		.global	__ghs_eofn_ApplFblFatalError
                          1094	__ghs_eofn_ApplFblFatalError:
                          1095		.type	ApplFblFatalError,@function
                          1096		.size	ApplFblFatalError,$-ApplFblFatalError
                          1097		.align	1
                          1098	
                          1099	#function:			ApplFblFatalError
                          1100	#stack frame size:		0
                          1101	#
                          1102	
                          1103	#errorCode	none	param
                          1104	
                          1105		.data
                          1106		.section ".vletext", "vax"
                          1107		.vle

                                   Fri Apr 10 08:31:51 2020           Page 21
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1108		.vle
                          1109	
                          1110	#1095:    }
                          1111	#1096: }
                          1112	
                          1113		.align	1
                          1114		.align	1
                          1115	..gh.f.p.3.a.1.r.0.e.2:
                          1116		.type	..gh.f.p.3.a.1.r.0.e.2,@object
                          1117		.size	..gh.f.p.3.a.1.r.0.e.2,0
                          1118		.global	ApplFblStartup
                          1119	ApplFblStartup:
                          1120	#	    .bf
                          1121	.LDW41:
                          1122	#421: void ApplFblStartup( vuint8 initposition )
                          1123	#422: {
                          1124	#423:    switch (initposition)
0000003e 2203             1125		se_cmpli	r3, 1
00000040 e400             1126		se_blt	.L115
00000042 2223             1127		se_cmpli	r3, 3
00000044 e100             1128		se_ble	.L96
00000046 1883a881         1129		e_cmpli	r3, 129
0000004a e400             1130		se_blt	.L115
0000004c e600             1131		se_beq	.L102
0000004e 1883a883         1132		e_cmpli	r3, 131
00000052 e500             1133		se_bgt	.L115
                          1134	.L96:
                          1135	#454:          break;
                          1136	#455:       }
                          1137	#456:    }
                          1138	#457: }
                          1139	#	    .ef
                          1140	.LDW51:
                          1141	#line457
                          1142	..lin.5de73d21..e7febad9.0_2::
                          1143	.LDWlin2:
00000054 0004             1144		se_blr
                          1145	.L115:
                          1146	#442:       }
                          1147	#443:       case (kFblInitPostCallback | kFblInitFblCommunication):
                          1148	#444:       {
                          1149	#445:          break;
                          1150	#446:       }
                          1151	#447:       case (kFblInitPostCallback | kFblInitFblFinalize):
                          1152	#448:       {
                          1153	#449:          break;
                          1154	#450:       }
                          1155	#451:       default:
                          1156	#452:       {
                          1157	#453:          assertFblInternal(0u, kFblSysAssertParameterOutOfRange);  /* PRQA S 2214 */ /* MD_FblAssert_Assertion */
00000056 4d03             1158		se_li	r3, 80
00000058 e800             1159		se_b	ApplFblFatalError
                          1160	.L102:
                          1161	#424:    {
                          1162	#425:       case (kFblInitPreCallback | kFblInitBaseInitialization):
                          1163	#426:       {

                                   Fri Apr 10 08:31:51 2020           Page 22
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1164	#427:          break;
                          1165	#428:       }
                          1166	#429:       case (kFblInitPreCallback | kFblInitFblCommunication):
                          1167	#430:       {
                          1168	#431:          break;
                          1169	#432:       }
                          1170	#433:       case (kFblInitPreCallback | kFblInitFblFinalize):
                          1171	#434:       {
                          1172	#435:          break;
                          1173	#436:       }
                          1174	#437:       case (kFblInitPostCallback | kFblInitBaseInitialization):
                          1175	#438:       {
                          1176	#439:          /* Basic hardware initialization */
                          1177	#440:          ApplFblInit();
                          1178	#line440
                          1179	..lin.5de73d21..e7febad9.0_3::
                          1180	.LDWlin3:
0000005a e800             1181		se_b	ApplFblInit
                          1182	#441:          break;
                          1183	..lin.5de73d21..e7febad9.0_4::
                          1184	.LDWlin4:
                          1185		.global	__ghs_eofn_ApplFblStartup
                          1186	__ghs_eofn_ApplFblStartup:
                          1187		.type	ApplFblStartup,@function
                          1188		.size	ApplFblStartup,$-ApplFblStartup
                          1189		.align	1
                          1190	
                          1191	#function:			ApplFblStartup
                          1192	#stack frame size:		0
                          1193	#
                          1194	
                          1195	#initposition	r3	param
                          1196	
                          1197		.data
                          1198		.section ".vletext", "vax"
                          1199		.vle
                          1200		.vle
                          1201	
                          1202	
                          1203	#459: /***********************************************************************************************************************
                          1204	#460:  *  ApplFblCheckProgConditions
                          1205	#461:  **********************************************************************************************************************/
                          1206	#462: /*! \brief       This function is called after receiving the service request sessionControl ProgrammingSession to check
                          1207	#463:  *               the programming conditions like reprogramming counter, ambient temperature, programming voltage, etc.
                          1208	#464:  *  \return      If all conditions are correct, the function returns kFblOk, otherwise kFblFailed.
                          1209	#465:  **********************************************************************************************************************/
                          1210		.align	1
                          1211		.align	1
                          1212	..gh.f.p.0.a.1.r.0.e.3:
                          1213		.type	..gh.f.p.0.a.1.r.0.e.3,@object
                          1214		.size	..gh.f.p.0.a.1.r.0.e.3,0
                          1215		.global	ApplFblCheckProgConditions
                          1216	ApplFblCheckProgConditions:
                          1217	#	    .bf
                          1218	.LDW61:
                          1219	#466: tFblResult ApplFblCheckProgConditions( void )

                                   Fri Apr 10 08:31:51 2020           Page 23
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1220	#467: {
                          1221	#468: #if defined( FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS )
                          1222	#469:    vuint16 diagRespDataLen;
                          1223	#470: #endif /* FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS */
                          1224	#471:    tFblResult result;
                          1225	#473:    result = kFblOk;
                          1226	#475: #if defined( FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS )
                          1227	#476:    diagRespDataLen = 3;
                          1228	#477: #endif /* FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS */
                          1229	#479:    /* Example: Test if programming preconditions are fulfilled */
                          1230	#480:    /*
                          1231	#481:    if (preCondition != OK)
                          1232	#482:    {
                          1233	#483:       DiagBuffer[diagRespDataLen + 1] = 0x01;
                          1234	#484:       diagRespDataLen++;
                          1235	#485:       result = kFblFailed;
                          1236	#486:    }
                          1237	#487:    */
                          1238	#489: #if defined( FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS )
                          1239	#490:    /* Transmit response message:*/
                          1240	#491:    DiagProcessingDone(diagRespDataLen);
                          1241	#492: #endif /* FBL_DIAG_ENABLE_CHECK_PROGRAMMING_PRECONDITIONS */
                          1242	#494:   return result;
0000005c 4803             1243		se_li	r3, 0
                          1244	#	    .ef
                          1245	.LDW71:
0000005e 0004             1246		se_blr
                          1247		.global	__ghs_eofn_ApplFblCheckProgConditions
                          1248	__ghs_eofn_ApplFblCheckProgConditions:
                          1249		.type	ApplFblCheckProgConditions,@function
                          1250		.size	ApplFblCheckProgConditions,$-ApplFblCheckProgConditions
                          1251		.align	1
                          1252	
                          1253	#function:			ApplFblCheckProgConditions
                          1254	#stack frame size:		0
                          1255	#
                          1256	
                          1257		.data
                          1258		.section ".vletext", "vax"
                          1259		.vle
                          1260		.vle
                          1261	
                          1262	#495: }
                          1263	
                          1264	#497: /***********************************************************************************************************************
                          1265	#498:  *  ApplFblCheckConditions
                          1266	#499:  **********************************************************************************************************************/
                          1267	#500: /*! \brief         Check conditions for diagnostic services
                          1268	#501:  *  \details       This function is called for each diagnostic service.
                          1269	#502:  *  \param[in,out] pbDiagData Pointer to diagnostic data buffer
                          1270	#503:  *  \param[in]     diagReqDataLen The request data length
                          1271	#504:  *  \return        kFblOk or kFblFailed
                          1272	#505:  **********************************************************************************************************************/
                          1273	#506: /* PRQA S 3673 1 */ /* MD_FblKbApi_3673 */
                          1274		.align	1
                          1275		.align	1

                                   Fri Apr 10 08:31:51 2020           Page 24
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1276	..gh.f.p.4.a.1.r.0.e.4:
                          1277		.type	..gh.f.p.4.a.1.r.0.e.4,@object
                          1278		.size	..gh.f.p.4.a.1.r.0.e.4,0
                          1279		.global	ApplFblCheckConditions
                          1280	ApplFblCheckConditions:
                          1281	#	    .bf
                          1282	.LDW81:
                          1283	#507: tFblResult ApplFblCheckConditions( vuint8 * pbDiagData, tTpDataType diagReqDataLen )
                          1284	#508: {
                          1285	#509: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          1286	#510:    /* PRQA S 3112 2 */ /* MD_MSR_14.2 */
                          1287	#511:    (void)pbDiagData;
                          1288	#512:    (void)diagReqDataLen;
                          1289	#513: #endif
                          1290	#515:    /* Parse Service IDs */
                          1291	#517:    /*
                          1292	#518:    switch (diagServiceCurrent)
                          1293	#519:    {
                          1294	#520:       case kDiagSidDiagnosticSessionControl:
                          1295	#521:       {
                          1296	#522:          if (...)
                          1297	#523:          {
                          1298	#524:             DiagNRCConditionsNotCorrect();
                          1299	#525:             return kFblFailed;
                          1300	#526:          }
                          1301	#528:          break;
                          1302	#529:       }
                          1303	#530:       case kDiagSidEcuReset:
                          1304	#531:       {
                          1305	#532:          break;
                          1306	#533:       }
                          1307	#534:       case kDiagSidReadDataByIdentifier:
                          1308	#535:       {
                          1309	#536:          break;
                          1310	#537:       }
                          1311	#538:       case kDiagSidSecurityAccess:
                          1312	#539:       {
                          1313	#540:          break;
                          1314	#541:       }
                          1315	#542:       case kDiagSidCommunicationControl:
                          1316	#543:       {
                          1317	#544:          break;
                          1318	#545:       }
                          1319	#546:       case kDiagSidWriteDataByIdentifier:
                          1320	#547:       {
                          1321	#548:          break;
                          1322	#549:       }
                          1323	#550:       case kDiagSidRoutineControl:
                          1324	#551:       {
                          1325	#552:          break;
                          1326	#553:       }
                          1327	#554:       case kDiagSidRequestDownload:
                          1328	#555:       {
                          1329	#556:          break;
                          1330	#557:       }
                          1331	#558:       case kDiagSidTransferData:

                                   Fri Apr 10 08:31:51 2020           Page 25
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1332	#559:       {
                          1333	#560:          break;
                          1334	#561:       }
                          1335	#562:       case kDiagSidRequestTransferExit:
                          1336	#563:       {
                          1337	#564:          break;
                          1338	#565:       }
                          1339	#566:       case kDiagSidTesterPresent:
                          1340	#567:       {
                          1341	#568:          break;
                          1342	#569:       }
                          1343	#570:       case kDiagSidControlDTCSetting:
                          1344	#571:       {
                          1345	#572:          break;
                          1346	#573:       }
                          1347	#574:       default:
                          1348	#575:       {
                          1349	#576:          break;
                          1350	#577:       }
                          1351	#578:    }
                          1352	#579:    */
                          1353	#581:    return kFblOk;
00000060 4803             1354		se_li	r3, 0
                          1355	#	    .ef
                          1356	.LDW91:
00000062 0004             1357		se_blr
                          1358		.global	__ghs_eofn_ApplFblCheckConditions
                          1359	__ghs_eofn_ApplFblCheckConditions:
                          1360		.type	ApplFblCheckConditions,@function
                          1361		.size	ApplFblCheckConditions,$-ApplFblCheckConditions
                          1362		.align	1
                          1363	
                          1364	#function:			ApplFblCheckConditions
                          1365	#stack frame size:		0
                          1366	#
                          1367	
                          1368	#pbDiagData	none	param
                          1369	#diagReqDataLen	none	param
                          1370	
                          1371		.data
                          1372		.section ".vletext", "vax"
                          1373		.vle
                          1374		.vle
                          1375	
                          1376	#582: }
                          1377	
                          1378	#584: /***********************************************************************************************************************
                          1379	#585:  *  ApplFblCheckSwSwCompatibility
                          1380	#586:  **********************************************************************************************************************/
                          1381	#587: /*! \brief       Check if logical blocks are compatible
                          1382	#588:  *  \return      Status of software-software compatibility check
                          1383	#589:  **********************************************************************************************************************/
                          1384		.align	1
                          1385		.align	1
                          1386	..gh.f.p.0.a.1.r.0.e.5:
                          1387		.type	..gh.f.p.0.a.1.r.0.e.5,@object

                                   Fri Apr 10 08:31:51 2020           Page 26
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1388		.size	..gh.f.p.0.a.1.r.0.e.5,0
                          1389		.global	ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                          1390	ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.:
                          1391	ApplFblCheckSwSwCompatibility:
00000064 182106c8         1392		e_stwu	sp, -56(sp)
00000068 0080             1393		se_mflr	r0
0000006a ddf1             1394		se_stw	r31, 52(sp)
0000006c df01             1395		se_stw	r0, 60(sp)
                          1396	#	    .bf
                          1397	.LDW02:
                          1398	#590: static vuint8 ApplFblCheckSwSwCompatibility( void )
                          1399	#591: {
                          1400	#592: #if ( FBL_MTAB_NO_OF_BLOCKS < FBL_MIN_BLOCKS_FOR_DEPENDENCY )
                          1401	#593:    /* Only one block, no inconsistency possible */
                          1402	#594:    return kDiagCheckCompatibilityOk;
                          1403	#595: #else
                          1404	#596:    vuint8 idx;
                          1405	#597:    vuint8 actualVersion[kApplHdrOffsetSupplierSwVersion + kApplSizeSupplierSwVersion];
                          1406	#598:    vuint8 referenceVersion[kApplHdrOffsetSupplierSwVersion + kApplSizeSupplierSwVersion];
                          1407	#599:    vuint8 validityFlags[kEepSizeValidityFlags];
                          1408	#601:    /* Read validity flags */
                          1409	#602:    if (ApplFblNvReadValidityFlags(validityFlags) != kFblOk)
0000006e 18618008         1410		e_addi	r3, sp, 8
00000072 70a8e001         1411		e_lis	r5, 16385
00000076 4814             1412		se_li	r4, 1
00000078 1ca58b03         1413		e_add16i	r5, r5, -29949
0000007c 78000001         1414		e_bl	EepromDriver_RReadSync
00000080 2a03             1415		se_cmpi	r3, 0
00000082 e600             1416		se_beq	.L288
                          1417	#603:    {
                          1418	#604:       /* Report internal error */
                          1419	#605:       return kFblFailed;
                          1420	#line605
                          1421	..lin.5de73d21..9c5f9392.0_5::
                          1422	.LDWlin5:
00000084 4813             1423		se_li	r3, 1
00000086 e800             1424		se_b	.L286
                          1425	.L288:
                          1426	#606:    }
                          1427	#608:    /* Read first application version from application */
                          1428	#609:    (void)FblReadProm(ApplFblGetModuleHeaderAddress(FBL_START_LBT_APP), referenceVersion, 
                          1429	#line609
                          1430	..lin.5de73d21..9c5f9392.0_6::
                          1431	.LDWlin6:
00000088 78000001         1432		e_bl	ApplFblGetModuleHeaderAddress
0000008c 18818020         1433		e_addi	r4, sp, 32
00000090 4945             1434		se_li	r5, 20
00000092 78000001         1435		e_bl	FblReadProm
                          1436	#610:       kApplSizeSwInfo + kApplSizeSupplierSwVersion);
                          1437	#612:    for (idx = (FBL_START_LBT_APP + 1u); idx < FblLogicalBlockTable.noOfBlocks; idx++)
00000096 481f             1438		se_li	r31, 1
00000098 e800             1439		se_b	.L294
                          1440	.L293:
                          1441	#613:    {
                          1442	#614:       /* Check is performed for valid logical blocks only. If an optional block  *
                          1443	#615:        * is not valid, the compatibility status will be ignored.                 */

                                   Fri Apr 10 08:31:51 2020           Page 27
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1444	#616:       if ((validityFlags[idx >> 3u] & (vuint8)(1<<(idx & 7u))) == 0u)
                          1445	#line616
                          1446	..lin.5de73d21..9c5f9392.0_7::
                          1447	.LDWlin7:
0000009a 1be0c007         1448		e_andi	r0, r31, 7
0000009e 4817             1449		se_li	r7, 1
000000a0 4207             1450		se_slw	r7, r0
000000a2 8801             1451		se_lbz	r0, 8(sp)
000000a4 00c7             1452		se_extzb	r7
000000a6 4770             1453		se_and.	r0, r7
000000a8 e200             1454		se_bne	.L292
                          1455	#617:       {
                          1456	#618:          /* Check if module version matches */
                          1457	#619:          (void)FblReadProm(ApplFblGetModuleHeaderAddress(idx), actualVersion, 
                          1458	#line619
                          1459	..lin.5de73d21..9c5f9392.0_8::
                          1460	.LDWlin8:
000000aa 01f3             1461		se_mr	r3, r31
000000ac 78000001         1462		e_bl	ApplFblGetModuleHeaderAddress
000000b0 1881800c         1463		e_addi	r4, sp, 12
000000b4 4945             1464		se_li	r5, 20
000000b6 78000001         1465		e_bl	FblReadProm
000000ba 30e1001d         1466		e_lbz	r7, 29(sp)
                          1467	#620:             kApplSizeSwInfo + kApplSizeSupplierSwVersion);
                          1468	#622:          /* Compare SYMC Part Number, SYMC Software Version and System Supplier Code */
                          1469	#624:          /* Compare major and minor version number */
                          1470	#625:          if ((referenceVersion[kApplSizeSwInfo] != actualVersion[kApplSizeSwInfo]) ||
000000be 30010031         1471		e_lbz	r0, 49(sp)
000000c2 0d70             1472		se_cmpl	r0, r7
000000c4 e200             1473		se_bne	.L298
000000c6 30e1001e         1474		e_lbz	r7, 30(sp)
000000ca 30010032         1475		e_lbz	r0, 50(sp)
000000ce 0d70             1476		se_cmpl	r0, r7
000000d0 e600             1477		se_beq	.L292
                          1478	.L298:
                          1479	#626:              (referenceVersion[kApplSizeSwInfo + 1u] != actualVersion[kApplSizeSwInfo + 1u]))
                          1480	#627:          {
                          1481	#628:             /* Inconsistency found */
                          1482	#629:             return kDiagCheckCompatibilitySwSw;
                          1483	#line629
                          1484	..lin.5de73d21..9c5f9392.0_9::
                          1485	.LDWlin9:
000000d2 4833             1486		se_li	r3, 3
000000d4 e800             1487		se_b	.L286
                          1488	.L292:
                          1489	#line612
                          1490	..lin.5de73d21..9c5f9392.0_10::
                          1491	.LDWlin10:
000000d6 200f             1492		se_addi	r31, 1
000000d8 00cf             1493		se_extzb	r31
                          1494	.L294:
000000da 70e0e000         1495		e_lis	r7, %hiadj(FblLogicalBlockTable+5)
000000de 30070000         1496		e_lbz	r0, %lo(FblLogicalBlockTable+5)(r7)
000000e2 0d0f             1497		se_cmpl	r31, r0
000000e4 e400             1498		se_blt	.L293
                          1499	#630:          }

                                   Fri Apr 10 08:31:51 2020           Page 28
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1500	#631:       }
                          1501	#632:    }
                          1502	#634:    /* All blocks successfully checked */
                          1503	#635:    return kDiagCheckCompatibilityOk;
                          1504	#line635
                          1505	..lin.5de73d21..9c5f9392.0_11::
                          1506	.LDWlin11:
000000e6 4803             1507		se_li	r3, 0
                          1508	.L286:
                          1509	#	    .ef
                          1510	.LDW12:
000000e8 cf01             1511		se_lwz	r0, 60(sp)
000000ea cdf1             1512		se_lwz	r31, 52(sp)
000000ec 18218038         1513		e_addi	sp, sp, 56
000000f0 0090             1514		se_mtlr	r0
000000f2 0004             1515		se_blr
                          1516	__ghs_eofn_ApplFblCheckSwSwCompatibility:
                          1517		.type	ApplFblCheckSwSwCompatibility,@function
                          1518		.size	ApplFblCheckSwSwCompatibility,$-ApplFblCheckSwSwCompatibility
                          1519		.type	ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,@function
                          1520		.size	ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,$-ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                          1521		.align	1
                          1522	
                          1523	#function:			ApplFblCheckSwSwCompatibility
                          1524	#stack frame size:		56
                          1525	#link area offset:		0
                          1526	#local storage area offset:	8
                          1527	#gpr save area offset:		52
                          1528	#
                          1529	#idx	r31	local
                          1530	#actualVersion	12(sp)	local
                          1531	#referenceVersion	32(sp)	local
                          1532	#validityFlags	8(sp)	local
                          1533	
                          1534		.data
                          1535		.section ".vletext", "vax"
                          1536		.vle
                          1537		.vle
                          1538	
                          1539	#636: #endif /* FBL_MTAB_NO_OF_BLOCKS < FBL_MIN_BLOCKS_FOR_DEPENDENCY */
                          1540	#637: }  /* PRQA S 2006 */ /* MD_CBD_14.7 */
                          1541	
                          1542	#639: /***********************************************************************************************************************
                          1543	#640:  *  ApplFblCheckHwSwCompatibility
                          1544	#641:  **********************************************************************************************************************/
                          1545	#642: /*! \brief       Check if current logical block is compatible with hardware
                          1546	#643:  *  \pre         Logical block has to be valid
                          1547	#644:  *  \param[in]   blockIdx Index of logical block
                          1548	#645:  *  \return      Status of hardware-software compatibility check
                          1549	#646:  **********************************************************************************************************************/
                          1550		.align	1
                          1551		.align	1
                          1552	..gh.f.p.3.a.1.r.0.e.6:
                          1553		.type	..gh.f.p.3.a.1.r.0.e.6,@object
                          1554		.size	..gh.f.p.3.a.1.r.0.e.6,0
                          1555		.global	ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.

                                   Fri Apr 10 08:31:51 2020           Page 29
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1556	ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.:
                          1557	ApplFblCheckHwSwCompatibility:
000000f4 182106e8         1558		e_stwu	sp, -24(sp)
000000f8 0080             1559		se_mflr	r0
000000fa 1ba1090c         1560		e_stmw	r29, 12(sp)
000000fe d701             1561		se_stw	r0, 28(sp)
                          1562	#	    .bf
                          1563	.LDW22:
                          1564	#647: static vuint8 ApplFblCheckHwSwCompatibility( vuint8 blockIdx )
                          1565	#648: {
                          1566	#649:    vuint8 compatibilityListLength;
                          1567	#650:    tFblAddress pCompatibilityField;
                          1568	#651:    vuint8 versionBuffer[2];
                          1569	#652:    vuint8 listIndex;
                          1570	#653:    vuint8 returnValue;
                          1571	#655:    /* Preset values */
                          1572	#656:    listIndex = 0u;
00000100 480d             1573		se_li	r29, 0
                          1574	#657:    returnValue = kDiagCheckCompatibilitySwHw;
00000102 484e             1575		se_li	r30, 4
                          1576	#659:    /* Get address of compatibility list */
                          1577	#660:    pCompatibilityField = (ApplFblGetModuleHeaderAddress(blockIdx) + kApplHdrOffsetNumberHwCompatibilityEntries );
00000104 78000001         1578		e_bl	ApplFblGetModuleHeaderAddress
00000108 1be38014         1579		e_addi	r31, r3, 20
                          1580	#662:    /* Read length of compatibility list */
                          1581	#663:    (void)FblReadProm(pCompatibilityField, &compatibilityListLength, kApplSizeNumberHwCompatibilityEntries);
0000010c 01f3             1582		se_mr	r3, r31
0000010e 18818008         1583		e_addi	r4, sp, 8
00000112 4815             1584		se_li	r5, 1
00000114 78000001         1585		e_bl	FblReadProm
                          1586	#664:    pCompatibilityField += kApplSizeNumberHwCompatibilityEntries;
00000118 200f             1587		se_addi	r31, 1
                          1588	#666:    /* Compare compatibility list to hardware compatibility version */
                          1589	#667:    while ((listIndex < compatibilityListLength) && (returnValue == kDiagCheckCompatibilitySwHw))
0000011a e800             1590		se_b	.L428
                          1591	.L430:
                          1592	#668:    {
                          1593	#669:       (void)FblReadProm(pCompatibilityField, versionBuffer, kApplSizeSupplierHwVersion);
                          1594	#line669
                          1595	..lin.5de73d21..4d02dd87.0_12::
                          1596	.LDWlin12:
0000011c 01f3             1597		se_mr	r3, r31
0000011e 18818009         1598		e_addi	r4, sp, 9
00000122 4825             1599		se_li	r5, 2
00000124 78000001         1600		e_bl	FblReadProm
00000128 8901             1601		se_lbz	r0, 9(sp)
                          1602	#670:       if ((versionBuffer[0] == HardwareCompatibilityVersion[0]) &&
0000012a 2a00             1603		se_cmpi	r0, 0
0000012c e200             1604		se_bne	.L431
0000012e 8a01             1605		se_lbz	r0, 10(sp)
00000130 2b20             1606		se_cmpi	r0, 18
00000132 7fc0f09e         1607		iseleq	r30, r0, r30
00000136 00ce             1608		se_extzb	r30
                          1609	.L431:
                          1610	#671:           (versionBuffer[1] == HardwareCompatibilityVersion[1]))
                          1611	#672:       {

                                   Fri Apr 10 08:31:51 2020           Page 30
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1612	#673:          returnValue = kDiagCheckCompatibilityOk;
                          1613	#674:       }
                          1614	#675:       pCompatibilityField += kApplSizeSupplierHwVersion;
                          1615	#line675
                          1616	..lin.5de73d21..4d02dd87.0_13::
                          1617	.LDWlin13:
00000138 200d             1618		se_addi	r29, 1
                          1619	#676:       listIndex++;
0000013a 00cd             1620		se_extzb	r29
0000013c 201f             1621		se_addi	r31, 2
                          1622	.L428:
0000013e 8801             1623		se_lbz	r0, 8(sp)
00000140 0d0d             1624		se_cmpl	r29, r0
00000142 e000             1625		se_bge	.L429
00000144 2a4e             1626		se_cmpi	r30, 4
00000146 e600             1627		se_beq	.L430
                          1628	.L429:
                          1629	#677:    }
                          1630	#679:    return kDiagCheckCompatibilityOk;//returnValue; //todo : customer should check this
                          1631	#line679
                          1632	..lin.5de73d21..4d02dd87.0_14::
                          1633	.LDWlin14:
00000148 4803             1634		se_li	r3, 0
                          1635	#	    .ef
                          1636	.LDW32:
0000014a c701             1637		se_lwz	r0, 28(sp)
0000014c 1ba1080c         1638		e_lmw	r29, 12(sp)
00000150 2171             1639		se_addi	sp, 24
00000152 0090             1640		se_mtlr	r0
00000154 0004             1641		se_blr
                          1642	__ghs_eofn_ApplFblCheckHwSwCompatibility:
                          1643		.type	ApplFblCheckHwSwCompatibility,@function
                          1644		.size	ApplFblCheckHwSwCompatibility,$-ApplFblCheckHwSwCompatibility
                          1645		.type	ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,@function
                          1646		.size	ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.,$-ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                          1647		.align	1
                          1648	
                          1649	#function:			ApplFblCheckHwSwCompatibility
                          1650	#stack frame size:		24
                          1651	#link area offset:		0
                          1652	#local storage area offset:	8
                          1653	#gpr save area offset:		12
                          1654	#
                          1655	#compatibilityListLength	8(sp)	local
                          1656	#pCompatibilityField	r31	local
                          1657	#versionBuffer	9(sp)	local
                          1658	#listIndex	r29	local
                          1659	#returnValue	r30	local
                          1660	
                          1661	#blockIdx	none	param
                          1662	
                          1663		.data
                          1664		.section ".vletext", "vax"
                          1665		.vle
                          1666		.vle
                          1667	

                                   Fri Apr 10 08:31:51 2020           Page 31
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1668	#680: }
                          1669	
                          1670	#682: /***********************************************************************************************************************
                          1671	#683:  *  ApplFblCheckProgDependencies
                          1672	#684:  **********************************************************************************************************************/
                          1673	#685: /*! \brief       Check if programming dependencies are given
                          1674	#686:  *  \return      Status of programming dependencies (OEM specific)
                          1675	#687:  **********************************************************************************************************************/
                          1676		.align	1
                          1677		.align	1
                          1678	..gh.f.p.0.a.1.r.0.e.7:
                          1679		.type	..gh.f.p.0.a.1.r.0.e.7,@object
                          1680		.size	..gh.f.p.0.a.1.r.0.e.7,0
                          1681		.global	ApplFblCheckProgDependencies
                          1682	ApplFblCheckProgDependencies:
00000156 182106d0         1683		e_stwu	sp, -48(sp)
0000015a 1b810920         1684		e_stmw	r28, 32(sp)
0000015e 0080             1685		se_mflr	r0
00000160 dd01             1686		se_stw	r0, 52(sp)
                          1687	#	    .bf
                          1688	.LDW42:
                          1689	#688: vuint8 ApplFblCheckProgDependencies( void )
                          1690	#689: {
                          1691	#690:    vuint8 result;
                          1692	#691:    vuintx idx;
                          1693	#692:    vuint8 validityFlags[kEepSizeValidityFlags];
                          1694	#694:    /* Initialize variables */
                          1695	#695:    result = kDiagCheckCompatibilityOk;
                          1696	#697:    /* Check if LBT is valid */
                          1697	#698:    if (!IsLogicalBlockTableValid())
00000162 73a0e000         1698		e_lis	r29, %hiadj(FblLogicalBlockTable)
00000166 1fbd0000         1699		e_add16i	r29, r29, %lo(FblLogicalBlockTable)
0000016a c07d             1700		se_lwz	r7, 0(r29)
0000016c 7016e5a5         1701		e_lis	r0, 46501
00000170 1c00c3d2         1702		e_add16i	r0, r0, -15406
00000174 0d07             1703		se_cmpl	r7, r0
00000176 e200             1704		se_bne	.L567
                          1705	#699:    {
                          1706	#700:       result = kDiagCheckCompatibilityFailed;
                          1707	#701:    }
                          1708	#702:    else
                          1709	#703:    {
                          1710	#704:       /* Mandatory logical blocks must be valid. Otherwise, they cannot be consistent. */
                          1711	#705:       /* Read validity flags */
                          1712	#706:       if (ApplFblNvReadValidityFlags(validityFlags) != kFblOk)
                          1713	#line706
                          1714	..lin.5de73d21..621e83a3.0_15::
                          1715	.LDWlin15:
00000178 73c8e001         1716		e_lis	r30, 16385
0000017c 1fde8b03         1717		e_add16i	r30, r30, -29949
00000180 18618008         1718		e_addi	r3, sp, 8
00000184 4814             1719		se_li	r4, 1
00000186 01e5             1720		se_mr	r5, r30
00000188 78000001         1721		e_bl	EepromDriver_RReadSync
0000018c 2a03             1722		se_cmpi	r3, 0
0000018e e200             1723		se_bne	.L567

                                   Fri Apr 10 08:31:51 2020           Page 32
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000190 847d             1724		se_lbz	r7, 4(r29)
                          1725	#707:       {
                          1726	#708:          result = kDiagCheckCompatibilityFailed;   /* General failure - validity flags couldn't be read */
                          1727	#709:       }
                          1728	#710:    }
                          1729	#712:    if (result == kDiagCheckCompatibilityOk)
                          1730	#713:    {
                          1731	#714:       for (idx = 0u; idx < kEepSizeValidityFlags; idx++)
                          1732	#715:       {
                          1733	#716:          if ((validityFlags[idx] & FblLogicalBlockTable.assignFlags[idx]) != 0) /* PRQA S 3353 */ /* MD_FblKbApiOem_3353 */
                          1734	#line716
                          1735	..lin.5de73d21..621e83a3.0_16::
                          1736	.LDWlin16:
00000192 8801             1737		se_lbz	r0, 8(sp)
00000194 4770             1738		se_and.	r0, r7
00000196 e600             1739		se_beq	.L557
                          1740	#717:          {
                          1741	#718:             result = kDiagCheckCompatibilityBlockMissing;   /* Failure - at least one logical block is missing */
                          1742	#line718
                          1743	..lin.5de73d21..621e83a3.0_17::
                          1744	.LDWlin17:
00000198 482f             1745		se_li	r31, 2
                          1746	#719:             break;
0000019a e800             1747		se_b	.L564
                          1748	.L557:
                          1749	#720:          }
                          1750	#721:       }
                          1751	#722:    }
                          1752	#724:    if (result == kDiagCheckCompatibilityOk)
                          1753	#725:    {
                          1754	#726:       /* Check SwSw-compatibility */
                          1755	#727:       result = ApplFblCheckSwSwCompatibility();
                          1756	#line727
                          1757	..lin.5de73d21..621e83a3.0_18::
                          1758	.LDWlin18:
0000019c 78000001         1759		se_bl	ApplFblCheckSwSwCompatibility
000001a0 013f             1760		se_mr	r31, r3
                          1761	#729:       /* Check Hw/Sw-compatibility of all programmed logical blocks */
                          1762	#730:       idx = (FBL_START_LBT_APP);
                          1763	#line730
                          1764	..lin.5de73d21..621e83a3.0_19::
                          1765	.LDWlin19:
000001a2 480c             1766		se_li	r28, 0
                          1767	#731:       while((idx < FblLogicalBlockTable.noOfBlocks) && (result == kDiagCheckCompatibilityOk))
000001a4 e800             1768		se_b	.L558
                          1769	.L560:
                          1770	#732:       {
                          1771	#733:          /* Check if block is programmed */
                          1772	#734:          if ((validityFlags[idx >> 3u] & (vuint8)(1u << (idx & 7u))) == 0u)
                          1773	#line734
                          1774	..lin.5de73d21..621e83a3.0_20::
                          1775	.LDWlin20:
000001a6 1b87c007         1776		e_andi	r7, r28, 7
000001aa 4810             1777		se_li	r0, 1
000001ac 4270             1778		se_slw	r0, r7
000001ae 8871             1779		se_lbz	r7, 8(sp)

                                   Fri Apr 10 08:31:51 2020           Page 33
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000001b0 00c0             1780		se_extzb	r0
000001b2 4770             1781		se_and.	r0, r7
000001b4 e200             1782		se_bne	.L561
                          1783	#735:          {
                          1784	#736:             result = ApplFblCheckHwSwCompatibility((vuint8)idx);
                          1785	#line736
                          1786	..lin.5de73d21..621e83a3.0_21::
                          1787	.LDWlin21:
000001b6 7783063f         1788		clrlwi	r3, r28, 24
000001ba e900             1789		se_bl	ApplFblCheckHwSwCompatibility
000001bc 013f             1790		se_mr	r31, r3
                          1791	.L561:
                          1792	#737:          }
                          1793	#738:          idx++;
                          1794	#line738
                          1795	..lin.5de73d21..621e83a3.0_22::
                          1796	.LDWlin22:
000001be 200c             1797		se_addi	r28, 1
                          1798	.L558:
000001c0 2a03             1799		se_cmpi	r3, 0
000001c2 e200             1800		se_bne	.L564
000001c4 850d             1801		se_lbz	r0, 5(r29)
000001c6 0d0c             1802		se_cmpl	r28, r0
000001c8 e400             1803		se_blt	.L560
                          1804	#	    .bs
                          1805	.LDW52:
                          1806	#739:       }
                          1807	#740:    }
                          1808	#742:    /* If required, additional checks can be added here
                          1809	#743:       (e.g. SW-HW, version number, ... ) */
                          1810	#744:    /* Failures can be indicated using the following error codes:
                          1811	#745:       kDiagCheckCompatibilitySwHw
                          1812	#746:       kDiagCheckCompatibilitySwSw
                          1813	#747:    */
                          1814	#749:    /* Copy Identification information into Nv-memory*/
                          1815	#750:    if (result == kDiagCheckCompatibilityOk)
                          1816	#751:    {
                          1817	#	    .bs
                          1818	.LDW62:
                          1819	#752:       vuint8 buffer[kApplSizeSwInfo];
                          1820	#753:       tFblAddress applHdrAddr;
                          1821	#755:       applHdrAddr = ApplFblGetModuleHeaderAddress(0);
                          1822	#line755
                          1823	..lin.5de73d21..621e83a3.0_23::
                          1824	.LDWlin23:
000001ca 78000001         1825		e_bl	ApplFblGetModuleHeaderAddress
                          1826	#756:       (void)FblReadProm(applHdrAddr, buffer, kApplSizeSwInfo);
000001ce 1881800c         1827		e_addi	r4, sp, 12
000001d2 4915             1828		se_li	r5, 17
000001d4 78000001         1829		e_bl	FblReadProm
                          1830	#757:       /* Write software information into NVM */
                          1831	#758:       (void)ApplFblNvWriteSymcPartNumber(0u, &buffer[kApplHdrOffsetSymcPartNumber]);  /* PRQA S 3425 */ /* MD_FblKbApiOem_3425 */
000001d8 1861800c         1832		e_addi	r3, sp, 12
000001dc 48a4             1833		se_li	r4, 10
000001de 18be800c         1834		e_addi	r5, r30, 12
000001e2 78000001         1835		e_bl	EepromDriver_RWriteSync

                                   Fri Apr 10 08:31:51 2020           Page 34
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1836	#759:       (void)ApplFblNvWriteSymcSoftwareVersion(0u, &buffer[kApplHdrOffsetSymcSoftwareVersion]);  /* PRQA S 3425 */ /* MD_FblKbApiOem_3425 */
000001e6 18618016         1837		e_addi	r3, sp, 22
000001ea 4824             1838		se_li	r4, 2
000001ec 18be8016         1839		e_addi	r5, r30, 22
000001f0 78000001         1840		e_bl	EepromDriver_RWriteSync
                          1841	#760:       (void)ApplFblNvWriteSystemSupplierCode(0u, &buffer[kApplHdrOffsetSystemSupplierCode]);  /* PRQA S 3425 */ /* MD_FblKbApiOem_3425 */
000001f4 18618018         1842		e_addi	r3, sp, 24
000001f8 4854             1843		se_li	r4, 5
000001fa 18be8018         1844		e_addi	r5, r30, 24
000001fe 78000001         1845		e_bl	EepromDriver_RWriteSync
                          1846	#762:       /* Compatibility check done - write application valid flag now */
                          1847	#763:       if (ApplFblValidateApp() != kFblOk)
00000202 78000001         1848		e_bl	ApplFblValidateApp
00000206 2a03             1849		se_cmpi	r3, 0
00000208 e600             1850		se_beq	.L564
                          1851	.L567:
                          1852	#764:       {
                          1853	#765:          result = kDiagCheckCompatibilityFailed;   /* General failure - application valid flag couldn't be written */
                          1854	#line765
                          1855	..lin.5de73d21..621e83a3.0_24::
                          1856	.LDWlin24:
0000020a 481f             1857		se_li	r31, 1
                          1858	.L564:
                          1859	#	    .es
                          1860	.LDW72:
                          1861	#	    .es
                          1862	.LDW82:
                          1863	#766:       }
                          1864	#767:    }
                          1865	#769:    return result;
0000020c 01f3             1866		se_mr	r3, r31
                          1867	#	    .ef
                          1868	.LDW92:
0000020e cd01             1869		se_lwz	r0, 52(sp)
00000210 1b810820         1870		e_lmw	r28, 32(sp)
00000214 18218030         1871		e_addi	sp, sp, 48
00000218 0090             1872		se_mtlr	r0
0000021a 0004             1873		se_blr
                          1874		.global	__ghs_eofn_ApplFblCheckProgDependencies
                          1875	__ghs_eofn_ApplFblCheckProgDependencies:
                          1876		.type	ApplFblCheckProgDependencies,@function
                          1877		.size	ApplFblCheckProgDependencies,$-ApplFblCheckProgDependencies
                          1878		.align	1
                          1879	
                          1880	#function:			ApplFblCheckProgDependencies
                          1881	#stack frame size:		48
                          1882	#link area offset:		0
                          1883	#local storage area offset:	8
                          1884	#gpr save area offset:		32
                          1885	#
                          1886	#result	r31	local
                          1887	#idx	r28	local
                          1888	#validityFlags	8(sp)	local
                          1889	#buffer	12(sp)	local
                          1890	
                          1891		.data

                                   Fri Apr 10 08:31:51 2020           Page 35
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1892		.section ".vletext", "vax"
                          1893		.vle
                          1894		.vle
                          1895	
                          1896	#770: }
                          1897	
                          1898	#772: /***********************************************************************************************************************
                          1899	#773:  *  ApplTrcvrNormalMode
                          1900	#774:  **********************************************************************************************************************/
                          1901	#775: /*! \brief       Activate transceiver if necessary (e.g. pin configuration ENABLE = 1, _STDBY = 1)
                          1902	#776:  **********************************************************************************************************************/
                          1903		.align	1
                          1904		.align	1
                          1905	..gh.f.p.0.a.1.r.0.e.8:
                          1906		.type	..gh.f.p.0.a.1.r.0.e.8,@object
                          1907		.size	..gh.f.p.0.a.1.r.0.e.8,0
                          1908		.global	ApplTrcvrNormalMode
                          1909	ApplTrcvrNormalMode:
                          1910	#	    .bf
                          1911	.LDW03:
                          1912	#777: void ApplTrcvrNormalMode( void )
                          1913	#778: {
                          1914	#779: }
                          1915	#	    .ef
                          1916	.LDW13:
0000021c 0004             1917		se_blr
                          1918		.global	__ghs_eofn_ApplTrcvrNormalMode
                          1919	__ghs_eofn_ApplTrcvrNormalMode:
                          1920		.type	ApplTrcvrNormalMode,@function
                          1921		.size	ApplTrcvrNormalMode,$-ApplTrcvrNormalMode
                          1922		.align	1
                          1923	
                          1924	#function:			ApplTrcvrNormalMode
                          1925	#stack frame size:		0
                          1926	#
                          1927	
                          1928		.data
                          1929		.section ".vletext", "vax"
                          1930		.vle
                          1931		.vle
                          1932	
                          1933	
                          1934	#781: /***********************************************************************************************************************
                          1935	#782:  *  ApplTrcvrSleepMode
                          1936	#783:  **********************************************************************************************************************/
                          1937	#784: /*! \brief       Turn off the transceiver to enter sleep mode (e.g. pin configuration ENABLE = 1, _STDBY = 0)
                          1938	#785:  **********************************************************************************************************************/
                          1939		.align	1
                          1940		.align	1
                          1941	..gh.f.p.0.a.1.r.0.e.9:
                          1942		.type	..gh.f.p.0.a.1.r.0.e.9,@object
                          1943		.size	..gh.f.p.0.a.1.r.0.e.9,0
                          1944		.global	ApplTrcvrSleepMode
                          1945	ApplTrcvrSleepMode:
                          1946	#	    .bf
                          1947	.LDW23:

                                   Fri Apr 10 08:31:51 2020           Page 36
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          1948	#786: void ApplTrcvrSleepMode( void )
                          1949	#787: {
                          1950	#788: }
                          1951	#	    .ef
                          1952	.LDW33:
0000021e 0004             1953		se_blr
                          1954		.global	__ghs_eofn_ApplTrcvrSleepMode
                          1955	__ghs_eofn_ApplTrcvrSleepMode:
                          1956		.type	ApplTrcvrSleepMode,@function
                          1957		.size	ApplTrcvrSleepMode,$-ApplTrcvrSleepMode
                          1958		.align	1
                          1959	
                          1960	#function:			ApplTrcvrSleepMode
                          1961	#stack frame size:		0
                          1962	#
                          1963	
                          1964		.data
                          1965		.section ".vletext", "vax"
                          1966		.vle
                          1967		.vle
                          1968	
                          1969	
                          1970	#790: /***********************************************************************************************************************
                          1971	#791:  *  ApplFblSetVfp
                          1972	#792:  **********************************************************************************************************************/
                          1973	#793: /*! \brief       Function is called when the FBL enters programming mode.
                          1974	#794:  *  \details     Port bits have to be set so that the required programming voltage is available.
                          1975	#795:  **********************************************************************************************************************/
                          1976		.align	1
                          1977		.align	1
                          1978	..gh.f.p.0.a.1.r.0.e.10:
                          1979		.type	..gh.f.p.0.a.1.r.0.e.10,@object
                          1980		.size	..gh.f.p.0.a.1.r.0.e.10,0
                          1981		.global	ApplFblSetVfp
                          1982	ApplFblSetVfp:
                          1983	#	    .bf
                          1984	.LDW43:
                          1985	#796: void ApplFblSetVfp( void )
                          1986	#797: {
                          1987	#798:    /* Set flash programming voltage */
                          1988	#799: #if defined (BRSHW_VOLTAGE_FOR_FLASH_PROGRAMMING_AVAILABLE)
                          1989	#800:    BrsHwSetVfp(); 
                          1990	#801: #endif
                          1991	#802: }
                          1992	#	    .ef
                          1993	.LDW53:
00000220 0004             1994		se_blr
                          1995		.global	__ghs_eofn_ApplFblSetVfp
                          1996	__ghs_eofn_ApplFblSetVfp:
                          1997		.type	ApplFblSetVfp,@function
                          1998		.size	ApplFblSetVfp,$-ApplFblSetVfp
                          1999		.align	1
                          2000	
                          2001	#function:			ApplFblSetVfp
                          2002	#stack frame size:		0
                          2003	#

                                   Fri Apr 10 08:31:51 2020           Page 37
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2004	
                          2005		.data
                          2006		.section ".vletext", "vax"
                          2007		.vle
                          2008		.vle
                          2009	
                          2010	
                          2011	#804: /***********************************************************************************************************************
                          2012	#805:  *  ApplFblResetVfp
                          2013	#806:  **********************************************************************************************************************/
                          2014	#807: /*! \brief       This function is called when the programming is done.
                          2015	#808:  **********************************************************************************************************************/
                          2016		.align	1
                          2017		.align	1
                          2018	..gh.f.p.0.a.1.r.0.e.11:
                          2019		.type	..gh.f.p.0.a.1.r.0.e.11,@object
                          2020		.size	..gh.f.p.0.a.1.r.0.e.11,0
                          2021		.global	ApplFblResetVfp
                          2022	ApplFblResetVfp:
                          2023	#	    .bf
                          2024	.LDW63:
                          2025	#809: void ApplFblResetVfp( void )
                          2026	#810: {
                          2027	#811:    /* Reset flash programming voltage */
                          2028	#812: #if defined (BRSHW_VOLTAGE_FOR_FLASH_PROGRAMMING_AVAILABLE)
                          2029	#813:    BrsHwResetVfp();
                          2030	#814: #endif
                          2031	#815: }
                          2032	#	    .ef
                          2033	.LDW73:
00000222 0004             2034		se_blr
                          2035		.global	__ghs_eofn_ApplFblResetVfp
                          2036	__ghs_eofn_ApplFblResetVfp:
                          2037		.type	ApplFblResetVfp,@function
                          2038		.size	ApplFblResetVfp,$-ApplFblResetVfp
                          2039		.align	1
                          2040	
                          2041	#function:			ApplFblResetVfp
                          2042	#stack frame size:		0
                          2043	#
                          2044	
                          2045		.data
                          2046		.section ".vletext", "vax"
                          2047		.vle
                          2048		.vle
                          2049	
                          2050	
                          2051	#817: /***********************************************************************************************************************
                          2052	#818:  *  ApplFblReset
                          2053	#819:  **********************************************************************************************************************/
                          2054	#820: /*! \brief       This function performs a reset.
                          2055	#821:  *  \details     The function will wait until the reset is performed. Please note: This function will
                          2056	#822:  *               never return to the calling code.
                          2057	#823:  **********************************************************************************************************************/
                          2058		.align	1
                          2059		.align	1

                                   Fri Apr 10 08:31:51 2020           Page 38
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2060	..gh.f.p.0.a.1.r.0.e.12:
                          2061		.type	..gh.f.p.0.a.1.r.0.e.12,@object
                          2062		.size	..gh.f.p.0.a.1.r.0.e.12,0
                          2063		.global	ApplFblReset
                          2064	ApplFblReset:
                          2065	#	    .bf
                          2066	.LDW83:
                          2067	#824: void ApplFblReset( void )
                          2068	#825: {
                          2069	#826:    /* Fingerprint is invalidated in case of reset */
                          2070	#827:    fpStatus = 0u;
00000224 4800             2071		se_li	r0, 0
00000226 70e0e000         2072		e_lis	r7, %hiadj(fpStatus)
0000022a 34070000         2073		e_stb	r0, %lo(fpStatus)(r7)
                          2074	#828:    /* Reset ECU */
                          2075	#829:    BrsHwSoftwareResetECU();
0000022e 78000000         2076		e_b	BrsHwSoftwareResetECU
                          2077	#830: }
                          2078	#	    .ef
                          2079	.LDW93:
                          2080		.global	__ghs_eofn_ApplFblReset
                          2081	__ghs_eofn_ApplFblReset:
                          2082		.type	ApplFblReset,@function
                          2083		.size	ApplFblReset,$-ApplFblReset
                          2084		.align	1
                          2085	
                          2086	#function:			ApplFblReset
                          2087	#stack frame size:		0
                          2088	#
                          2089	
                          2090		.data
                          2091		.section ".vletext", "vax"
                          2092		.vle
                          2093		.vle
                          2094	
                          2095		.section ".RAMCODE","axv"
                          2096		.vle
                          2097	
                          2098	#832: # define FBLAP_RAMCODE_START_SEC_CODE
                          2099	#833: # include "MemMap.h"   /* PRQA S 5087 *//* MD_MSR_19.1 */
                          2100	#834: /***********************************************************************************************************************
                          2101	#835:  *  ApplFblSecuritySeedInit
                          2102	#836:  **********************************************************************************************************************/
                          2103	#837: /*! \brief       Initialize seed values.
                          2104	#838:  *  \return      Status of seed initialization
                          2105	#839:  **********************************************************************************************************************/
                          2106		.align	1
                          2107	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB067..1::
                          2108		.align	1
                          2109	..gh.f.p.0.a.1.r.0.e.13:
                          2110		.type	..gh.f.p.0.a.1.r.0.e.13,@object
                          2111		.size	..gh.f.p.0.a.1.r.0.e.13,0
                          2112		.global	ApplFblSecuritySeedInit
                          2113	ApplFblSecuritySeedInit:
00000000 182106f0         2114		e_stwu	sp, -16(sp)
00000004 0080             2115		se_mflr	r0

                                   Fri Apr 10 08:31:51 2020           Page 39
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000006 d3f1             2116		se_stw	r31, 12(sp)
00000008 d501             2117		se_stw	r0, 20(sp)
                          2118	#	    .bf
                          2119	.LDW04:
                          2120	#840: vuint8 ApplFblSecuritySeedInit( void )
                          2121	#841: {
                          2122	#842:    /* Initialize seed values */
                          2123	#843:    secSeedInput.seedY += secSeedInput.seedX;
0000000a 73e0e000         2124		e_lis	r31, %hiadj(secSeedInput)
0000000e 1fff0000         2125		e_add16i	r31, r31, %lo(secSeedInput)
00000012 c07f             2126		se_lwz	r7, 0(r31)
00000014 c10f             2127		se_lwz	r0, 4(r31)
00000016 0470             2128		se_add	r0, r7
00000018 d10f             2129		se_stw	r0, 4(r31)
                          2130	#844:    secSeedInput.seedX = FblGetTimerValue();
0000001a 78000001         2131		e_bl	FblGetTimerValue
0000001e d03f             2132		se_stw	r3, 0(r31)
                          2133	#846:    return kFblOk;
00000020 4803             2134		se_li	r3, 0
                          2135	#	    .ef
                          2136	.LDW14:
00000022 c501             2137		se_lwz	r0, 20(sp)
00000024 c3f1             2138		se_lwz	r31, 12(sp)
00000026 20f1             2139		se_addi	sp, 16
00000028 0090             2140		se_mtlr	r0
0000002a 0004             2141		se_blr
                          2142		.global	__ghs_eofn_ApplFblSecuritySeedInit
                          2143	__ghs_eofn_ApplFblSecuritySeedInit:
                          2144		.type	ApplFblSecuritySeedInit,@function
                          2145		.size	ApplFblSecuritySeedInit,$-ApplFblSecuritySeedInit
                          2146		.align	1
                          2147	
                          2148	#function:			ApplFblSecuritySeedInit
                          2149	#stack frame size:		16
                          2150	#link area offset:		0
                          2151	#local storage area offset:	12
                          2152	#gpr save area offset:		12
                          2153	#
                          2154	
                          2155		.data
                          2156		.section ".RAMCODE","axv"
                          2157		.vle
                          2158	
                          2159	#847: }
                          2160		.section ".vletext", "vax"
                          2161		.vle
                          2162		.vle
                          2163	
                          2164	#848: # define FBLAP_RAMCODE_STOP_SEC_CODE
                          2165	#849: # include "MemMap.h"   /* PRQA S 5087 *//* MD_MSR_19.1 */
                          2166	#851: /***********************************************************************************************************************
                          2167	#852:  *  ApplFblSecuritySeed
                          2168	#853:  **********************************************************************************************************************/
                          2169	#854: /*! \brief       This function is called when the tester requests the security seed.
                          2170	#855:  *  \return      Status of seed generation
                          2171	#856:  **********************************************************************************************************************/

                                   Fri Apr 10 08:31:51 2020           Page 40
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2172		.align	1
                          2173		.align	1
                          2174	..gh.f.p.0.a.1.r.0.e.14:
                          2175		.type	..gh.f.p.0.a.1.r.0.e.14,@object
                          2176		.size	..gh.f.p.0.a.1.r.0.e.14,0
                          2177		.global	ApplFblSecuritySeed
                          2178	ApplFblSecuritySeed:
00000232 182106e8         2179		e_stwu	sp, -24(sp)
00000236 1b810908         2180		e_stmw	r28, 8(sp)
0000023a 0080             2181		se_mflr	r0
0000023c d701             2182		se_stw	r0, 28(sp)
                          2183	#	    .bf
                          2184	.LDW24:
                          2185	#857: vuint8 ApplFblSecuritySeed( void )
                          2186	#858: {
                          2187	#859:    vuint8 result;
                          2188	#861:    result = kFblOk;
0000023e 7380e000         2189		e_lis	r28, %hiadj(securitySeedResponse)
                          2190	#863:    /* Last seed is repeated if it was already sent to tester */
                          2191	#864:    if (securitySeedResponse != kSeedAlreadyRequested)
00000242 1f9c0000         2192		e_add16i	r28, r28, %lo(securitySeedResponse)
00000246 800c             2193		se_lbz	r0, 0(r28)
00000248 480e             2194		se_li	r30, 0
0000024a 73a0e000         2195		e_lis	r29, %hiadj(seed)
0000024e 1fbd0000         2196		e_add16i	r29, r29, %lo(seed)
00000252 2a00             2197		se_cmpi	r0, 0
00000254 e200             2198		se_bne	.L1508
                          2199	.L1521:
                          2200	#890:       }
                          2201	#891:    }
                          2202	#893:    /* Write seed value into DiagBuffer */
                          2203	#894:    if (kFblOk == result)
                          2204	#895:    {
                          2205	#896:       FblMemSetInteger(SEC_SEED_LENGTH/2, seed.seedX, &DiagBuffer[kDiagFmtSeedKeyStart]);
                          2206	#line896
                          2207	..lin.5de73d21..a361341f.0_25::
                          2208	.LDWlin25:
00000256 73e0e000         2209		e_lis	r31, %hiadj(DiagBuffer)
0000025a 1fff0000         2210		e_add16i	r31, r31, %lo(DiagBuffer)
0000025e c05f             2211		se_lwz	r5, 0(r31)
00000260 c04d             2212		se_lwz	r4, 0(r29)
00000262 4843             2213		se_li	r3, 4
00000264 2015             2214		se_addi	r5, 2
00000266 78000001         2215		e_bl	FblMemSetInteger
                          2216	#897:       FblMemSetInteger(SEC_SEED_LENGTH/2, seed.seedY, &DiagBuffer[kDiagFmtSeedKeyStart + (SEC_SEED_LENGTH/2)]);
0000026a c05f             2217		se_lwz	r5, 0(r31)
0000026c c14d             2218		se_lwz	r4, 4(r29)
0000026e 4843             2219		se_li	r3, 4
00000270 2055             2220		se_addi	r5, 6
00000272 78000001         2221		e_bl	FblMemSetInteger
                          2222	#899:       /* Set seed status to seed requested */
                          2223	#900:       securitySeedResponse = kSeedAlreadyRequested;
00000276 4800             2224		se_li	r0, 0
00000278 900c             2225		se_stb	r0, 0(r28)
0000027a e800             2226		se_b	.L1520
                          2227	.L1510:

                                   Fri Apr 10 08:31:51 2020           Page 41
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2228	#865:    {
                          2229	#866:       /* Ensure that seed has been initialized */
                          2230	#867:       while ((0u == secSeedInput.seedX) || (0u == secSeedInput.seedY))
                          2231	#868:       {
                          2232	#869:          (void)ApplFblSecuritySeedInit();
                          2233	#line869
                          2234	..lin.5de73d21..a361341f.0_26::
                          2235	.LDWlin26:
0000027c 78000001         2236		e_bl	ApplFblSecuritySeedInit
                          2237	.L1508:
00000280 73e0e000         2238		e_lis	r31, %hiadj(secSeedInput)
00000284 1fff0000         2239		e_add16i	r31, r31, %lo(secSeedInput)
00000288 c00f             2240		se_lwz	r0, 0(r31)
0000028a 2a00             2241		se_cmpi	r0, 0
0000028c e600             2242		se_beq	.L1510
0000028e c10f             2243		se_lwz	r0, 4(r31)
00000290 2a00             2244		se_cmpi	r0, 0
00000292 e600             2245		se_beq	.L1510
                          2246	#870:       }
                          2247	#872:       /* Generate seed */
                          2248	#873:       if (SECM_OK == SecM_GenerateSeed(&secSeedInput))
                          2249	#line873
                          2250	..lin.5de73d21..a361341f.0_27::
                          2251	.LDWlin27:
00000294 01f3             2252		se_mr	r3, r31
00000296 78000001         2253		e_bl	SecM_GenerateSeed
0000029a 2a03             2254		se_cmpi	r3, 0
0000029c e200             2255		se_bne	.L1512
                          2256	#874:       {
                          2257	#875:          /* Seed values 0 and 0xff... are not accepted */
                          2258	#876:          if (  ((0x00u == secSeedInput.seedX) && (0x00u == secSeedInput.seedY)) 
                          2259	#line876
                          2260	..lin.5de73d21..a361341f.0_28::
                          2261	.LDWlin28:
0000029e c00f             2262		se_lwz	r0, 0(r31)
000002a0 2a00             2263		se_cmpi	r0, 0
000002a2 e200             2264		se_bne	.L1516
000002a4 c17f             2265		se_lwz	r7, 4(r31)
000002a6 2a07             2266		se_cmpi	r7, 0
000002a8 e600             2267		se_beq	.L1515
                          2268	.L1516:
000002aa 2c07             2269		se_bmaski	r7, 0
000002ac 0c70             2270		se_cmp	r0, r7
000002ae e200             2271		se_bne	.L1514
000002b0 c16f             2272		se_lwz	r6, 4(r31)
000002b2 0c76             2273		se_cmp	r6, r7
000002b4 e200             2274		se_bne	.L1514
                          2275	.L1515:
                          2276	#877:              ||((0xFFFFFFFFu == secSeedInput.seedX) && (0xFFFFFFFFu == secSeedInput.seedY)) )
                          2277	#878:          {
                          2278	#879:             /* invalid seed, use default values */
                          2279	#880:             secSeedInput.seedX = 0xEDB88327ul;
                          2280	#line880
                          2281	..lin.5de73d21..a361341f.0_29::
                          2282	.LDWlin29:
000002b6 701de5b9         2283		e_lis	r0, 60857

                                   Fri Apr 10 08:31:51 2020           Page 42
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000002ba 1c008327         2284		e_add16i	r0, r0, -31961
000002be 70f7e5be         2285		e_lis	r7, 48574
                          2286	#881:             secSeedInput.seedY = 0xBDBDF21Dul;
000002c2 d00f             2287		se_stw	r0, 0(r31)
000002c4 1ce7f21d         2288		e_add16i	r7, r7, -3555
000002c8 d17f             2289		se_stw	r7, 4(r31)
                          2290	.L1514:
                          2291	#882:          }
                          2292	#883:    
                          2293	#884:          /* Save last seed */
                          2294	#885:          seed = secSeedInput;
000002ca d00d             2295		se_stw	r0, 0(r29)
000002cc c10f             2296		se_lwz	r0, 4(r31)
000002ce d10d             2297		se_stw	r0, 4(r29)
000002d0 e800             2298		se_b	.L1521
                          2299	.L1512:
                          2300	#886:       }
                          2301	#887:       else
                          2302	#888:       {
                          2303	#889:          result = kFblFailed;
                          2304	#line889
                          2305	..lin.5de73d21..a361341f.0_30::
                          2306	.LDWlin30:
000002d2 481e             2307		se_li	r30, 1
                          2308	.L1520:
                          2309	#901:    }
                          2310	#903:    return result;
000002d4 01e3             2311		se_mr	r3, r30
                          2312	#	    .ef
                          2313	.LDW34:
000002d6 c701             2314		se_lwz	r0, 28(sp)
000002d8 1b810808         2315		e_lmw	r28, 8(sp)
000002dc 2171             2316		se_addi	sp, 24
000002de 0090             2317		se_mtlr	r0
000002e0 0004             2318		se_blr
                          2319		.global	__ghs_eofn_ApplFblSecuritySeed
                          2320	__ghs_eofn_ApplFblSecuritySeed:
                          2321		.type	ApplFblSecuritySeed,@function
                          2322		.size	ApplFblSecuritySeed,$-ApplFblSecuritySeed
                          2323		.align	1
                          2324	
                          2325	#function:			ApplFblSecuritySeed
                          2326	#stack frame size:		24
                          2327	#link area offset:		0
                          2328	#local storage area offset:	8
                          2329	#gpr save area offset:		8
                          2330	#
                          2331	#result	r30	local
                          2332	
                          2333		.data
                          2334		.section ".vletext", "vax"
                          2335		.vle
                          2336		.vle
                          2337	
                          2338	#904: }
                          2339	

                                   Fri Apr 10 08:31:51 2020           Page 43
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2340	#906: /***********************************************************************************************************************
                          2341	#907:  *  ApplFblSecurityKey
                          2342	#908:  **********************************************************************************************************************/
                          2343	#909: /*! \brief       This function is called when the security key has been received from tester
                          2344	#910:  *  \return      Status of key verification
                          2345	#911:  **********************************************************************************************************************/
                          2346		.align	1
                          2347		.align	1
                          2348	..gh.f.p.0.a.1.r.0.e.15:
                          2349		.type	..gh.f.p.0.a.1.r.0.e.15,@object
                          2350		.size	..gh.f.p.0.a.1.r.0.e.15,0
                          2351		.global	ApplFblSecurityKey
                          2352	ApplFblSecurityKey:
000002e2 182106e8         2353		e_stwu	sp, -24(sp)
000002e6 0080             2354		se_mflr	r0
000002e8 d5f1             2355		se_stw	r31, 20(sp)
000002ea d701             2356		se_stw	r0, 28(sp)
                          2357	#	    .bf
                          2358	.LDW44:
                          2359	#912: vuint8 ApplFblSecurityKey( void )
                          2360	#913: {
                          2361	#914:    vuint8 result;
                          2362	#915:    SecM_KeyType localKey;
                          2363	#917:    /* Initialize variables */
                          2364	#918:    result = kFblFailed;
000002ec 7080e000         2365		e_lis	r4, %hiadj(DiagBuffer)
                          2366	#920:    /* Key received => New seed can be requested */
                          2367	#921:    securitySeedResponse = kNewSeedRequest;
000002f0 50840000         2368		e_lwz	r4, %lo(DiagBuffer)(r4)
000002f4 70e0e000         2369		e_lis	r7, %hiadj(securitySeedResponse)
000002f8 481f             2370		se_li	r31, 1
000002fa 37e70000         2371		e_stb	r31, %lo(securitySeedResponse)(r7)
                          2372	#923:    /* Check key from tester */
                          2373	#924:    localKey = FblMemGetInteger(SEC_KEY_LENGTH, &DiagBuffer[kDiagFmtSeedKeyStart]);
000002fe 4843             2374		se_li	r3, 4
00000300 2014             2375		se_addi	r4, 2
00000302 78000001         2376		e_bl	FblMemGetInteger
                          2377	#925:    if (SECM_OK == SecM_CompareKey(localKey, seed))
00000306 70c0e000         2378		e_lis	r6, %hiadj(seed)
0000030a 1cc60000         2379		e_add16i	r6, r6, %lo(seed)
0000030e c006             2380		se_lwz	r0, 0(r6)
00000310 d201             2381		se_stw	r0, 8(sp)
00000312 c106             2382		se_lwz	r0, 4(r6)
00000314 d301             2383		se_stw	r0, 12(sp)
00000316 18818008         2384		e_addi	r4, sp, 8
0000031a 78000001         2385		e_bl	SecM_CompareKey
0000031e 2a03             2386		se_cmpi	r3, 0
00000320 7c63f89e         2387		iseleq	r3, r3, r31
                          2388	#926:    {
                          2389	#927:       /* Key bytes are accepted */
                          2390	#928:       result = kFblOk;
                          2391	#929:    }
                          2392	#931:    return result;
                          2393	#	    .ef
                          2394	.LDW54:
00000324 c701             2395		se_lwz	r0, 28(sp)

                                   Fri Apr 10 08:31:51 2020           Page 44
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000326 c5f1             2396		se_lwz	r31, 20(sp)
00000328 2171             2397		se_addi	sp, 24
0000032a 0090             2398		se_mtlr	r0
0000032c 0004             2399		se_blr
                          2400		.global	__ghs_eofn_ApplFblSecurityKey
                          2401	__ghs_eofn_ApplFblSecurityKey:
                          2402		.type	ApplFblSecurityKey,@function
                          2403		.size	ApplFblSecurityKey,$-ApplFblSecurityKey
                          2404		.align	1
                          2405	
                          2406	#function:			ApplFblSecurityKey
                          2407	#stack frame size:		24
                          2408	#link area offset:		0
                          2409	#local storage area offset:	12
                          2410	#gpr save area offset:		20
                          2411	#
                          2412	#result	r31	local
                          2413	
                          2414		.data
                          2415		.section ".vletext", "vax"
                          2416		.vle
                          2417		.vle
                          2418	
                          2419	#932: }
                          2420	
                          2421	#934: /***********************************************************************************************************************
                          2422	#935:  *  ApplFblSecurityInit
                          2423	#936:  **********************************************************************************************************************/
                          2424	#937: /*! \brief       Initialize security module.
                          2425	#938:  *  \return      Status of security module initialization
                          2426	#939:  **********************************************************************************************************************/
                          2427		.align	1
                          2428		.align	1
                          2429	..gh.f.p.0.a.1.r.0.e.16:
                          2430		.type	..gh.f.p.0.a.1.r.0.e.16,@object
                          2431		.size	..gh.f.p.0.a.1.r.0.e.16,0
                          2432		.global	ApplFblSecurityInit
                          2433	ApplFblSecurityInit:
                          2434	#	    .bf
                          2435	.LDW64:
                          2436	#940: vuint8 ApplFblSecurityInit( void )
                          2437	#941: {
                          2438	#942:    secSeedInput.seedX = 0u;
0000032e 70e0e000         2439		e_lis	r7, %hiadj(secSeedInput)
00000332 1ce70000         2440		e_add16i	r7, r7, %lo(secSeedInput)
00000336 4803             2441		se_li	r3, 0
00000338 d037             2442		se_stw	r3, 0(r7)
                          2443	#943:    secSeedInput.seedY = 0u;
0000033a d137             2444		se_stw	r3, 4(r7)
                          2445	#945:    return kFblOk;
                          2446	#	    .ef
                          2447	.LDW74:
0000033c 0004             2448		se_blr
                          2449		.global	__ghs_eofn_ApplFblSecurityInit
                          2450	__ghs_eofn_ApplFblSecurityInit:
                          2451		.type	ApplFblSecurityInit,@function

                                   Fri Apr 10 08:31:51 2020           Page 45
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2452		.size	ApplFblSecurityInit,$-ApplFblSecurityInit
                          2453		.align	1
                          2454	
                          2455	#function:			ApplFblSecurityInit
                          2456	#stack frame size:		0
                          2457	#
                          2458	
                          2459		.data
                          2460		.section ".vletext", "vax"
                          2461		.vle
                          2462		.vle
                          2463	
                          2464	#946: }
                          2465	
                          2466	#948: #if defined( FBL_ENABLE_DATA_PROCESSING )
                          2467	#949: /***********************************************************************************************************************
                          2468	#950:  *  ApplFblInitDataProcessing
                          2469	#951:  **********************************************************************************************************************/
                          2470	#952: /*! \brief         This function is called to initialize the application specific data processing function.
                          2471	#953:  *  \param[in,out] procParam Processing parameter data structure
                          2472	#954:  *  \return        kFblOk/kFblFailed
                          2473	#955:  **********************************************************************************************************************/
                          2474	#956: tFblResult ApplFblInitDataProcessing( tProcParam * procParam )
                          2475	#957: {
                          2476	#958:    /* Example implementation. Data not processed at all. */
                          2477	#959:    tFblResult result;
                          2478	#961:    result = kFblOk;
                          2479	#963:    return result;
                          2480	#964: }
                          2481	#966: /***********************************************************************************************************************
                          2482	#967:  *  ApplFblDataProcessing
                          2483	#968:  **********************************************************************************************************************/
                          2484	#969: /*! \brief         Data processing function.
                          2485	#970:  *  \pre           Data processing has to be initialized by call of ApplFblInitDataProcessing
                          2486	#971:  *  \param[in,out] procParam Processing parameter data structure
                          2487	#972:  *  \return        kFblOk/kFblFailed
                          2488	#973:  **********************************************************************************************************************/
                          2489	#974: tFblResult ApplFblDataProcessing( tProcParam * procParam )
                          2490	#975: {
                          2491	#976:    /* Example implementation. Data not processed at all. */
                          2492	#977:    tFblResult result;
                          2493	#979:    result = kFblOk;
                          2494	#981:    /* Calculate output length. Length will not change */
                          2495	#982:    if (procParam->dataLength > procParam->dataOutMaxLength)
                          2496	#983:    {
                          2497	#984:       procParam->dataOutLength = procParam->dataOutMaxLength;
                          2498	#985:    }
                          2499	#986:    else
                          2500	#987:    {
                          2501	#988:       procParam->dataOutLength = procParam->dataLength;
                          2502	#989:    }
                          2503	#991:    /* Update actually consumed length */
                          2504	#992:    procParam->dataLength = procParam->dataOutLength;
                          2505	#994:    /* Copy data from input to output buffer. */
                          2506	#995:    FblLookForWatchdogVoid();
                          2507	#996:    (void)MEMCPY(procParam->dataOutBuffer, procParam->dataBuffer, procParam->dataOutLength);

                                   Fri Apr 10 08:31:51 2020           Page 46
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2508	#998:    return result;
                          2509	#999: }
                          2510	#1001: /***********************************************************************************************************************
                          2511	#1002:  *  ApplFblDeinitDataProcessing
                          2512	#1003:  **********************************************************************************************************************/
                          2513	#1004: /*! \brief         Deinitialize data processing function.
                          2514	#1005:  *  \pre           Data processing has to be initialized by call of ApplFblInitDataProcessing
                          2515	#1006:  *  \param[in,out] procParam Processing parameter data structure
                          2516	#1007:  *  \return        kFblOk/kFblFailed
                          2517	#1008:  **********************************************************************************************************************/
                          2518	#1009: tFblResult ApplFblDeinitDataProcessing( tProcParam * procParam )
                          2519	#1010: {
                          2520	#1011:    /* Example implementation. Data not processed at all. */
                          2521	#1012:    tFblResult result;
                          2522	#1014:    /* Conclude data processing in last round */
                          2523	#1015:    result = ApplFblDataProcessing(procParam);
                          2524	#1017:    return result;
                          2525	#1018: }
                          2526	#1019: #endif /* FBL_ENABLE_DATA_PROCESSING */
                          2527	#1021: #if defined( FBL_ENABLE_APPL_TASK ) || \
                          2528	#1022:     defined( FBL_ENABLE_APPL_TIMER_TASK )
                          2529	#1023: /***********************************************************************************************************************
                          2530	#1024:  *  ApplFblTask
                          2531	#1025:  **********************************************************************************************************************/
                          2532	#1026: /*! \brief       1ms user task.
                          2533	#1027:  *  \details     This function is called every millisecond if the Bootloader is in idle state. It is not called during
                          2534	#1028:  *               flash operations.
                          2535	#1029:  **********************************************************************************************************************/
                          2536		.align	1
                          2537		.align	1
                          2538	..gh.f.p.0.a.1.r.0.e.17:
                          2539		.type	..gh.f.p.0.a.1.r.0.e.17,@object
                          2540		.size	..gh.f.p.0.a.1.r.0.e.17,0
                          2541		.global	ApplFblTask
                          2542	ApplFblTask:
                          2543	#	    .bf
                          2544	.LDW84:
                          2545	#1030: void ApplFblTask( void )
                          2546	#1031: {
                          2547	#1032: #if 0   
                          2548	#1033: 	 static V_MEMRAM1 vuint16 V_MEMRAM2 flashlight;
                          2549	#1034:    static tMsgObject test;
                          2550	#1036:    flashlight++;
                          2551	#1037:    if (flashlight >= 500u)
                          2552	#1038:    {
                          2553	#1039:       flashlight = 0u;
                          2554	#1041:       FblCanSetTxDLC(test, 8);
                          2555	#1042:       FblCanSetTxId(test,MK_STDID(0x600));
                          2556	#1043:       test.msgObject.DataFld[0] = 0x11;
                          2557	#1044:       test.msgObject.DataFld[1] = 0x22;
                          2558	#1045:       test.msgObject.DataFld[2] = 0x33;
                          2559	#1046:       test.msgObject.DataFld[3] = 0x44;
                          2560	#1047:       test.msgObject.DataFld[4] = 0x55;
                          2561	#1048:       test.msgObject.DataFld[5] = 0x66;
                          2562	#1049:       test.msgObject.DataFld[6] = 0x77;
                          2563	#1050:       test.msgObject.DataFld[7] = 0x88;

                                   Fri Apr 10 08:31:51 2020           Page 47
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2564	#1052:       FblCanSetTxConfirmation (test, V_NULL);
                          2565	#1053:       FblCanTransmit(&test);
                          2566	#1054:    }
                          2567	#1055: #endif	 
                          2568	#1056: }
                          2569	#	    .ef
                          2570	.LDW94:
0000033e 0004             2571		se_blr
                          2572		.global	__ghs_eofn_ApplFblTask
                          2573	__ghs_eofn_ApplFblTask:
                          2574		.type	ApplFblTask,@function
                          2575		.size	ApplFblTask,$-ApplFblTask
                          2576		.align	1
                          2577	
                          2578	#function:			ApplFblTask
                          2579	#stack frame size:		0
                          2580	#
                          2581	
                          2582		.data
                          2583		.section ".vletext", "vax"
                          2584		.vle
                          2585		.vle
                          2586	
                          2587	
                          2588	#1057: #endif /* FBL_ENABLE_APPL_TASK || FBL_ENABLE_APPL_TIMER_TASK */
                          2589	#1059: #if defined( FBL_ENABLE_APPL_TASK ) ||\
                          2590	#1060:     defined( FBL_ENABLE_APPL_STATE_TASK )
                          2591	#1061: /***********************************************************************************************************************
                          2592	#1062:  *  ApplFblStateTask
                          2593	#1063:  **********************************************************************************************************************/
                          2594	#1064: /*! \brief       Background user task.
                          2595	#1065:  *  \details     This function is polled if the Bootloader is in idle state. It is not called during flash operations.
                          2596	#1066:  **********************************************************************************************************************/
                          2597		.align	1
                          2598		.align	1
                          2599	..gh.f.p.0.a.1.r.0.e.18:
                          2600		.type	..gh.f.p.0.a.1.r.0.e.18,@object
                          2601		.size	..gh.f.p.0.a.1.r.0.e.18,0
                          2602		.global	ApplFblStateTask
                          2603	ApplFblStateTask:
                          2604	#	    .bf
                          2605	.LDW05:
                          2606	#1067: void ApplFblStateTask( void )
                          2607	#1068: {
                          2608	#1069: }
                          2609	#	    .ef
                          2610	.LDW15:
00000340 0004             2611		se_blr
                          2612		.global	__ghs_eofn_ApplFblStateTask
                          2613	__ghs_eofn_ApplFblStateTask:
                          2614		.type	ApplFblStateTask,@function
                          2615		.size	ApplFblStateTask,$-ApplFblStateTask
                          2616		.align	1
                          2617	
                          2618	#function:			ApplFblStateTask
                          2619	#stack frame size:		0

                                   Fri Apr 10 08:31:51 2020           Page 48
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2620	#
                          2621	
                          2622		.data
                          2623		.section ".vletext", "vax"
                          2624		.vle
                          2625		.vle
                          2626	
                          2627	
                          2628	#1070: #endif /* FBL_ENABLE_APPL_TASK || FBL_ENABLE_APPL_STATE_TASK */
                          2629	#1072: #if defined( FBL_ENABLE_ASSERTION )
                          2630	#1073: /***********************************************************************************************************************
                          2631	#1074:  *  ApplFblFatalError
                          2632	#1075:  **********************************************************************************************************************/
                          2633	#1076: /*! \brief       If the bootloader assertions are enabled, this function will be called in case an invalid bootloader
                          2634	#1077:  *               state is encountered.
                          2635	#1078:  *  \param[in]   errorCode Code number of the encountered assertion
                          2636	#1079:  *  \param[in]   module Name of the affected module (Only if extended info is enabled)
                          2637	#1080:  *  \param[in]   line Line number where the assertion occurred (Only if extended info is enabled)
                          2638	#1081:  **********************************************************************************************************************/
                          2639	#1082: void ApplFblFatalError( FBL_DECL_ASSERT_EXTENDED_INFO(vuint8 errorCode) )
                          2640	#1083: {
                          2641	#1084: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          2642	#1085:    (void)errorCode;  /* PRQA S 3112 */ /* MD_MSR_14.2 */
                          2643	#1086: #endif
                          2644	#1088:    /* TODO: This feature should be activated in development only. Please make sure this
                          2645	#1089:             function isn't called in production code and assertions are disabled in GENy
                          2646	#1090:             (set "Project State" to "Production (default)" or "Production (reduced tests)".
                          2647	#1091:    */
                          2648	#1092:    while (1)
                          2649	#1093:    {
                          2650	#1094:       ;
                          2651	#1095:    }
                          2652	#1096: }
                          2653	#1097: #endif
                          2654	#1099: #if defined( FBL_ENABLE_MULTIPLE_NODES ) || \
                          2655	#1100:     defined( FBL_ENABLE_CAN_CONFIGURATION) || \
                          2656	#1101:     defined( FBL_CW_ENABLE_MULTIPLE_NODES )
                          2657	#1102: /***********************************************************************************************************************
                          2658	#1103:  *  ApplFblCanParamInit
                          2659	#1104:  **********************************************************************************************************************/
                          2660	#1105: /*! \brief       Overwrite default CAN parameters
                          2661	#1106:  *  \details     This function is called before CAN controller initialization so that default initialization values
                          2662	#1107:  *               can be overridden according to the boot mode.
                          2663	#1108:  *               If this function is empty, the default/reset settings are used to initialize the CAN controller.
                          2664	#1109:  *  \pre         fblCanIdTable has to be initialized with default/reset
                          2665	#1110:  **********************************************************************************************************************/
                          2666	#1111: void ApplFblCanParamInit( void )
                          2667	#1112: {
                          2668	#1113:    vuint8 currentEcu = 1;
                          2669	#1115:    /* This is only an example:      */
                          2670	#1116:    /* currentEcu = GetCurrentEcu(); */
                          2671	#1118:    if (FblMainGetStartFromAppl())
                          2672	#1119:    {
                          2673	#1120:       /* At this position, it is possible to read CAN init parameters from
                          2674	#1121:        * EEPROM, which have been programmed by the ECU application before
                          2675	#1122:        * the FBL was started. */

                                   Fri Apr 10 08:31:51 2020           Page 49
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2676	#1123:    }
                          2677	#1124:    switch (currentEcu)
                          2678	#1125:    {
                          2679	#1126:       case 0:
                          2680	#1127:       {
                          2681	#1128:          fblEcuHandle = FBL_ECU_HDLE_Demo;
                          2682	#1129:          break;
                          2683	#1130:       }
                          2684	#1131:       case 1:
                          2685	#1132:       {
                          2686	#1133:          fblEcuHandle = FBL_ECU_HDLE_DemoExtIDs;
                          2687	#1134:          break;
                          2688	#1135:       }
                          2689	#1136:    }
                          2690	#1137: }
                          2691	#1138: #endif
                          2692	#1140: /***********************************************************************************************************************
                          2693	#1141:  *  ApplFblCanWakeUp
                          2694	#1142:  **********************************************************************************************************************/
                          2695	#1143: /*! \brief       This call-back function is called if a wake-up condition on the CAN bus is detected during sleep mode
                          2696	#1144:  *               of the CAN controller.
                          2697	#1145:  **********************************************************************************************************************/
                          2698		.align	1
                          2699		.align	1
                          2700	..gh.f.p.0.a.1.r.0.e.19:
                          2701		.type	..gh.f.p.0.a.1.r.0.e.19,@object
                          2702		.size	..gh.f.p.0.a.1.r.0.e.19,0
                          2703		.global	ApplFblCanWakeUp
                          2704	ApplFblCanWakeUp:
                          2705	#	    .bf
                          2706	.LDW25:
                          2707	#1146: void ApplFblCanWakeUp( void )
                          2708	#1147: {
                          2709	#1148: }
                          2710	#	    .ef
                          2711	.LDW35:
00000342 0004             2712		se_blr
                          2713		.global	__ghs_eofn_ApplFblCanWakeUp
                          2714	__ghs_eofn_ApplFblCanWakeUp:
                          2715		.type	ApplFblCanWakeUp,@function
                          2716		.size	ApplFblCanWakeUp,$-ApplFblCanWakeUp
                          2717		.align	1
                          2718	
                          2719	#function:			ApplFblCanWakeUp
                          2720	#stack frame size:		0
                          2721	#
                          2722	
                          2723		.data
                          2724		.section ".vletext", "vax"
                          2725		.vle
                          2726		.vle
                          2727	
                          2728	
                          2729	#1150: /***********************************************************************************************************************
                          2730	#1151:  *  ApplFblCanBusOff
                          2731	#1152:  **********************************************************************************************************************/

                                   Fri Apr 10 08:31:51 2020           Page 50
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2732	#1153: /*! \brief       This call-back function is called if the CAN controller enters bus-off state.
                          2733	#1154:  **********************************************************************************************************************/
                          2734		.align	1
                          2735		.align	1
                          2736	..gh.f.p.0.a.1.r.0.e.20:
                          2737		.type	..gh.f.p.0.a.1.r.0.e.20,@object
                          2738		.size	..gh.f.p.0.a.1.r.0.e.20,0
                          2739		.global	ApplFblCanBusOff
                          2740	ApplFblCanBusOff:
                          2741	#	    .bf
                          2742	.LDW45:
                          2743	#1155: void ApplFblCanBusOff( void )
                          2744	#1156: {
                          2745	#1157:    /* Bus off detected, issue ECU reset */
                          2746	#1158:    ApplFblReset();
00000344 78000000         2747		se_b	ApplFblReset
                          2748	#1159: }
                          2749	#	    .ef
                          2750	.LDW55:
                          2751	..lin.5de73d21..8abcf0dd.0_31::
                          2752	.LDWlin31:
                          2753		.global	__ghs_eofn_ApplFblCanBusOff
                          2754	__ghs_eofn_ApplFblCanBusOff:
                          2755		.type	ApplFblCanBusOff,@function
                          2756		.size	ApplFblCanBusOff,$-ApplFblCanBusOff
                          2757		.align	1
                          2758	
                          2759	#function:			ApplFblCanBusOff
                          2760	#stack frame size:		0
                          2761	#
                          2762	
                          2763		.data
                          2764		.section ".vletext", "vax"
                          2765		.vle
                          2766		.vle
                          2767	
                          2768	
                          2769	#1163: #if defined( FBL_ENABLE_SLEEPMODE )
                          2770	#1164: /***********************************************************************************************************************
                          2771	#1165:  *  ApplFblBusSleep
                          2772	#1166:  **********************************************************************************************************************/
                          2773	#1167: /*! \brief       Indicates transition to bus silence.
                          2774	#1168:  *  \details     By calling this function the FBL indicates the application
                          2775	#1169:  *               that the bootloader can go to sleep (bus silence, no diagnostic requests).
                          2776	#1170:  **********************************************************************************************************************/
                          2777		.align	1
                          2778		.align	1
                          2779	..gh.f.p.0.a.1.r.0.e.21:
                          2780		.type	..gh.f.p.0.a.1.r.0.e.21,@object
                          2781		.size	..gh.f.p.0.a.1.r.0.e.21,0
                          2782		.global	ApplFblBusSleep
                          2783	ApplFblBusSleep:
00000348 0080             2784		se_mflr	r0
0000034a d101             2785		se_stw	r0, 4(sp)
0000034c 182106f8         2786		e_stwu	sp, -8(sp)
                          2787	#	    .bf

                                   Fri Apr 10 08:31:51 2020           Page 51
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2788	.LDW65:
                          2789	#1171: void ApplFblBusSleep( void )
                          2790	#1172: {
                          2791	#1173:    /* Cancel any ongoing transmissions */
                          2792	#1174:    FblCanInit();
00000350 78000001         2793		e_bl	FblCanInit
                          2794	#1176: #if defined( FBL_WATCHDOG_ON )
                          2795	#1177:    /* Wait for watchdog to be triggered */
                          2796	#1178:    while (FblLookForWatchdog() != FBL_WD_TRIGGERED)
                          2797	.L2050:
                          2798	#1179:    {
                          2799	#1180:       ;
00000354 78000001         2800		e_bl	FblLookForWatchdog
00000358 2a33             2801		se_cmpi	r3, 3
0000035a e200             2802		se_bne	.L2050
                          2803	#1181:    }
                          2804	#1182: #endif
                          2805	#1184:    if (FblCanSleep() == kFblOk)
                          2806	#line1184
                          2807	..lin.5de73d21..ac386b69.0_32::
                          2808	.LDWlin32:
0000035c 78000001         2809		e_bl	FblCanSleep
                          2810	#1185:    {
                          2811	#1186:       /* Put transceiver in sleep mode, power down */
                          2812	#1187:       ApplTrcvrSleepMode();
                          2813	#1189:       /* Wait for power down, check for wakeup request */
                          2814	#1190:       while (FblCanIsAsleep() != 0)
                          2815	#1191:       {
                          2816	#1192:          ;
                          2817	#1193:       }
                          2818	#1194:    }
                          2819	#1195:    /* Wake-up request received, generate reset */
                          2820	#1196:    ApplFblReset();
00000360 78000001         2821		se_bl	ApplFblReset
                          2822	#1197: }
                          2823	#	    .ef
                          2824	.LDW75:
                          2825	#line1197
                          2826	..lin.5de73d21..ac386b69.0_33::
                          2827	.LDWlin33:
00000364 c301             2828		se_lwz	r0, 12(sp)
00000366 2071             2829		se_addi	sp, 8
00000368 0090             2830		se_mtlr	r0
0000036a 0004             2831		se_blr
                          2832		.global	__ghs_eofn_ApplFblBusSleep
                          2833	__ghs_eofn_ApplFblBusSleep:
                          2834		.type	ApplFblBusSleep,@function
                          2835		.size	ApplFblBusSleep,$-ApplFblBusSleep
                          2836		.align	1
                          2837	
                          2838	#function:			ApplFblBusSleep
                          2839	#stack frame size:		8
                          2840	#link area offset:		0
                          2841	#local storage area offset:	8
                          2842	#
                          2843	

                                   Fri Apr 10 08:31:51 2020           Page 52
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2844		.data
                          2845		.section ".vletext", "vax"
                          2846		.vle
                          2847		.vle
                          2848	
                          2849	
                          2850	#1198: #endif /* FBL_ENABLE_SLEEPMODE */
                          2851	#1200: #if defined( FBL_MEM_ENABLE_VERIFY_INPUT )
                          2852	#1201: /***********************************************************************************************************************
                          2853	#1202:  *  ApplFblGetVerifyMemorySize
                          2854	#1203:  **********************************************************************************************************************/
                          2855	#1204: /*! \brief       This callback is used to adapt the memory size from the request download service to a memory size
                          2856	#1205:  *               suitable for the verify function.
                          2857	#1206:  *  \param[in]   dataFormatId The data format identifier
                          2858	#1207:  *  \param[in]   diagMemorySize Memory size (from RequestDownload service)
                          2859	#1208:  *  \return      Memory size for verification
                          2860	#1209:  **********************************************************************************************************************/
                          2861	#1210: tFblLength ApplFblGetVerifyMemorySize( vuint8 dataFormatId, tFblLength diagMemorySize )
                          2862	#1211: {
                          2863	#1212: #if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          2864	#1213:    (void)dataFormatId;  /* PRQA S 3112 */ /* MD_MSR_14.2 */
                          2865	#1214: #endif /* V_ENABLE_USE_DUMMY_STATEMENT */
                          2866	#1216:    return diagMemorySize;
                          2867	#1217: }
                          2868	#1218: #endif /* FBL_MEM_ENABLE_VERIFY_INPUT */
                          2869	#1223: /***********************************************************************************************************************
                          2870	#1224:  *  ApplFblStartApplication
                          2871	#1225:  **********************************************************************************************************************/
                          2872	#1226: /*! \brief       This function is called to start the application.
                          2873	#1227:  *  \details     Please note: The function will never return because control is handed over to the application.
                          2874	#1228:  *  \pre         Application validity has been checked, Application is valid
                          2875	#1229:  **********************************************************************************************************************/
                          2876		.align	1
                          2877		.align	1
                          2878	..gh.f.p.0.a.1.r.0.e.22:
                          2879		.type	..gh.f.p.0.a.1.r.0.e.22,@object
                          2880		.size	..gh.f.p.0.a.1.r.0.e.22,0
                          2881		.global	ApplFblStartApplication
                          2882	ApplFblStartApplication:
0000036c 0080             2883		se_mflr	r0
0000036e d101             2884		se_stw	r0, 4(sp)
00000370 182106f8         2885		e_stwu	sp, -8(sp)
                          2886	#	    .bf
                          2887	.LDW85:
00000374 70e0e000         2888		e_lis	r7, %hiadj(ApplIntJmpTable+4)
00000378 50e70000         2889		e_lwz	r7, %lo(ApplIntJmpTable+4)(r7)
                          2890	#1230: void ApplFblStartApplication( void )
                          2891	#1231: {
                          2892	#1232:    /* Start application */
                          2893	#1233:    JSR_APPL();
0000037c 00b7             2894		se_mtctr	r7
0000037e 0007             2895		se_bctrl
                          2896	#1235: #if defined( FBL_ENABLE_SYSTEM_CHECK )
                          2897	#1236:    /* Code should never be reached */
                          2898	#1237:    while (1)
                          2899	.L2133:

                                   Fri Apr 10 08:31:51 2020           Page 53
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2900	#1238:    {
                          2901	#1239:       ;
00000380 e800             2902		se_b	.L2133
                          2903	#	    .ef
                          2904	.LDW95:
                          2905	..lin.5de73d21..ec35c0c8.0_34::
                          2906	.LDWlin34:
                          2907		.global	__ghs_eofn_ApplFblStartApplication
                          2908	__ghs_eofn_ApplFblStartApplication:
                          2909		.type	ApplFblStartApplication,@function
                          2910		.size	ApplFblStartApplication,$-ApplFblStartApplication
                          2911		.align	1
                          2912	
                          2913	#function:			ApplFblStartApplication
                          2914	#stack frame size:		8
                          2915	#link area offset:		0
                          2916	#local storage area offset:	8
                          2917	#
                          2918	
                          2919		.data
                          2920		.section ".vletext", "vax"
                          2921		.vle
                          2922		.vle
                          2923	
                          2924	#1240:    }
                          2925	#1241: #endif /* FBL_ENABLE_SYSTEM_CHECK */
                          2926	#1242: }
                          2927		.align	1
                          2928	#FblLogicalBlockTable	FblLogicalBlockTable	import
                          2929	#ApplIntJmpTable	ApplIntJmpTable	import
                          2930	#DiagBuffer	DiagBuffer	import
                          2931	#secSeedInput	secSeedInput	static
                          2932	#seed	seed	static
                          2933	#securitySeedResponse	securitySeedResponse	static
                          2934	
                          2935		.data
                          2936		.section ".bss","awb"
                          2937		.global	fpStatus
00000011                  2938	fpStatus:	.space	1
                          2939		.type	fpStatus,@object
                          2940		.size	fpStatus,1
                          2941		.data
                          2942		.note ".PPC.EMB.apuinfo",""
00000000 00000008         2943		.long	0x00000008
00000004 00000004         2944		.long	4
00000008 00000002         2945		.long	0x00000002
                          2946		# "APUinfo\000"
0000000c 41505569         2947		.byte	65,80,85,105
00000010 6e666f00         2948		.byte	110,102,111,0
00000014 01040001         2949		.long	0x01040001
                          2950		.ghsnote version,20
                          2951		.ghsnote tools,3
                          2952		.ghsnote options,644
                          2953		.section ".vletext", "vax"
                          2954		.vle
                          2955		.vle

                                   Fri Apr 10 08:31:51 2020           Page 54
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          2956		.align	1
                          2957		.section ".RAMCODE","axv"
                          2958		.vle
                          2959		.align	1
                          2960		.section ".vletext", "vax"
                          2961		.vle
                          2962		.vle
                          2963	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB067..0::
                          2964		.section ".RAMCODE","axv"
                          2965		.vle
                          2966	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB067..1::
                          2967		.section	.debug_info
                          2968	.Ldw_begin:
00000000 000011c0         2969		.long	.Ldw_end-.Ldw_begin-4
00000004 0002             2970		.byte	0,2
00000006 00000000         2971		.long	.Ldw_abbr_begin
0000000a 04               2972		.byte	4
                          2973		.section	.debug_abbrev
                          2974	.Ldw_abbr_begin:
                          2975		.section	.debug_info
0000000b 02               2976		.byte	2
0000000c 536f757263652f66 2977		.strz	"Source/fbl_ap.c"
00000014 626c5f61702e6300
0000001c 433a5c566563746f 2978		.strz	"C:\\Vector\\CBD1800772_D00_Mpc57xx\\Demo\\DemoFbl\\Appl"
00000024 725c434244313830
0000002c 303737325f443030
00000034 5f4d706335377878
0000003c 5c44656d6f5c4465
00000044 6d6f46626c5c4170
0000004c 706c00          
0000004f 4748532043203230 2979		.strz	"GHS C 2017.5.4 [dual]"
00000057 31372e352e34205b
0000005f 6475616c5d00    
00000065 0001             2980		.byte	0,1
00000067 00000000         2981		.long	.Ldw_line_begin
0000006b 00000000         2982		.long	.Ldw_macinfo_begin
0000006f 00               2983		.byte	0
                          2984	
                          2985		.section	.debug_abbrev
00000000 02               2986		.byte	2
00000001 11               2987		.byte	17
00000002 01               2988		.byte	1
00000003 0308             2989		.byte	3,8
00000005 1b08             2990		.byte	27,8
00000007 2508             2991		.byte	37,8
00000009 1305             2992		.byte	19,5
0000000b 1006             2993		.byte	16,6
0000000d 4306             2994		.byte	67,6
0000000f 420b             2995		.byte	66,11
00000011 0000             2996		.byte	0,0
                          2997	
                          2998		.section	.debug_line
                          2999	.Ldw_line_begin:
00000000 00000a5a         3000		.long	.Ldw_line_end-.Ldw_line_begin-4
00000004 0002             3001		.byte	0,2
00000006 0000065c         3002		.long	.Ldw_lpro_end-.Ldw_lpro_begin
                          3003	.Ldw_lpro_begin:
0000000a 01               3004		.byte	1
0000000b 00               3005		.byte	0
0000000c 00               3006		.byte	0
0000000d 04               3007		.byte	4
0000000e 0a               3008		.byte	10
0000000f 000101           3009		.byte	0,1,1
00000012 010100           3010		.byte	1,1,0
00000015 000001           3011		.byte	0,0,1

                                   Fri Apr 10 08:31:51 2020           Page 55
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000018 00               3012		.byte	0
00000019 536f757263652f66 3013		.strz	"Source/fbl_ap.c"
00000021 626c5f61702e6300
00000029 000000           3014		.byte	0,0,0
0000002c 696e636c7564655c 3015		.strz	"include\\fbl_inc.h"
00000034 66626c5f696e632e
0000003c 6800            
0000003e 000000           3016		.byte	0,0,0
00000041 2e2e2f2e2e2f2e2e 3017		.strz	"../../../bsw/fbl/v_ver.h"
00000049 2f6273772f66626c
00000051 2f765f7665722e68
00000059 00              
0000005a 000000           3018		.byte	0,0,0
0000005d 67656e646174615c 3019		.strz	"gendata\\v_cfg.h"
00000065 765f6366672e6800
0000006d 000000           3020		.byte	0,0,0
00000070 67656e646174615c 3021		.strz	"gendata\\v_inc.h"
00000078 765f696e632e6800
00000080 000000           3022		.byte	0,0,0
00000083 67656e646174615c 3023		.strz	"gendata\\v_par.h"
0000008b 765f7061722e6800
00000093 000000           3024		.byte	0,0,0
00000096 2e2e2f2e2e2f2e2e 3025		.strz	"../../../bsw/_common/v_def.h"
0000009e 2f6273772f5f636f
000000a6 6d6d6f6e2f765f64
000000ae 65662e6800      
000000b3 000000           3026		.byte	0,0,0
000000b6 2e2e2f2e2e2f2e2e 3027		.strz	"../../../bsw/secmod/SecM.h"
000000be 2f6273772f736563
000000c6 6d6f642f5365634d
000000ce 2e6800          
000000d1 000000           3028		.byte	0,0,0
000000d4 2e2e2f2e2e2f2e2e 3029		.strz	"../../../bsw/secmod/Sec.h"
000000dc 2f6273772f736563
000000e4 6d6f642f5365632e
000000ec 6800            
000000ee 000000           3030		.byte	0,0,0
000000f1 2e2e2f2e2e2f2e2e 3031		.strz	"../../../bsw/secmod/Sec_Inc.h"
000000f9 2f6273772f736563
00000101 6d6f642f5365635f
00000109 496e632e6800    
0000010f 000000           3032		.byte	0,0,0
00000112 67656e646174615c 3033		.strz	"gendata\\SecM_cfg.h"
0000011a 5365634d5f636667
00000122 2e6800          
00000125 000000           3034		.byte	0,0,0
00000128 2e2e2f2e2e2f2e2e 3035		.strz	"../../../bsw/secmod/Sec_Types.h"
00000130 2f6273772f736563
00000138 6d6f642f5365635f
00000140 54797065732e6800
00000148 000000           3036		.byte	0,0,0
0000014b 67656e646174615c 3037		.strz	"gendata\\SecMPar.h"
00000153 5365634d5061722e
0000015b 6800            
0000015d 000000           3038		.byte	0,0,0
00000160 2e2e2f2e2e2f2e2e 3039		.strz	"../../../bsw/secmod/SecM_inc.h"
00000168 2f6273772f736563
00000170 6d6f642f5365634d
00000178 5f696e632e6800  
0000017f 000000           3040		.byte	0,0,0
00000182 2e2e2f2e2e2f2e2e 3041		.strz	"../../../bsw/secmod/Sec_Crc.h"
0000018a 2f6273772f736563
00000192 6d6f642f5365635f
0000019a 4372632e6800    
000001a0 000000           3042		.byte	0,0,0
000001a3 2e2e2f2e2e2f2e2e 3043		.strz	"../../../bsw/secmod/Sec_SeedKey.h"
000001ab 2f6273772f736563
000001b3 6d6f642f5365635f
000001bb 536565644b65792e
000001c3 6800            
000001c5 000000           3044		.byte	0,0,0
000001c8 696e636c7564655c 3045		.strz	"include\\Sec_SeedKey_Cfg.h"
000001d0 5365635f53656564
000001d8 4b65795f4366672e
000001e0 6800            
000001e2 000000           3046		.byte	0,0,0
000001e5 2e2e2f2e2e2f2e2e 3047		.strz	"../../../bsw/secmod/Sec_Verification.h"
000001ed 2f6273772f736563
000001f5 6d6f642f5365635f
000001fd 5665726966696361
00000205 74696f6e2e6800  
0000020c 000000           3048		.byte	0,0,0
0000020f 2e2e2f2e2e2f2e2e 3049		.strz	"../../../bsw/fbl/fbl_def.h"
00000217 2f6273772f66626c
0000021f 2f66626c5f646566
00000227 2e6800          
0000022a 000000           3050		.byte	0,0,0
0000022d 67656e646174615c 3051		.strz	"gendata\\fbl_cfg.h"
00000235 66626c5f6366672e
0000023d 6800            
0000023f 000000           3052		.byte	0,0,0
00000242 2e2e2f2e2e2f2e2e 3053		.strz	"../../../bsw/fbl/fbl_assert.h"
0000024a 2f6273772f66626c
00000252 2f66626c5f617373
0000025a 6572742e6800    
00000260 000000           3054		.byte	0,0,0
00000263 2e2e2f2e2e2f2e2e 3055		.strz	"../../../bsw/fbl/fbl_assert_oem.h"
0000026b 2f6273772f66626c
00000273 2f66626c5f617373
0000027b 6572745f6f656d2e
00000283 6800            
00000285 000000           3056		.byte	0,0,0
00000288 67656e646174615c 3057		.strz	"gendata\\fbl_mtab.h"
00000290 66626c5f6d746162
00000298 2e6800          
0000029b 000000           3058		.byte	0,0,0
0000029e 696e636c7564655c 3059		.strz	"include\\MemMap.h"
000002a6 4d656d4d61702e68
000002ae 00              
000002af 000000           3060		.byte	0,0,0
000002b2 2e2e2f2e2e2f2e2e 3061		.strz	"../../../bsw/flash/flashdrv.h"
000002ba 2f6273772f666c61
000002c2 73682f666c617368
000002ca 6472762e6800    
000002d0 000000           3062		.byte	0,0,0
000002d3 2e2e2f2e2e2f2e2e 3063		.strz	"../../../bsw/flash_xd1/flashdrv_xd1.h"
000002db 2f6273772f666c61
000002e3 73685f7864312f66
000002eb 6c6173686472765f
000002f3 7864312e6800    
000002f9 000000           3064		.byte	0,0,0
000002fc 2e2e2f2e2e2f2e2e 3065		.strz	"../../../bsw/fbl/fbl_wd.h"
00000304 2f6273772f66626c
0000030c 2f66626c5f77642e
00000314 6800            
00000316 000000           3066		.byte	0,0,0
00000319 2e2e2f2e2e2f2e2e 3067		.strz	"../../../bsw/fbl/iotypes.h"
00000321 2f6273772f66626c
00000329 2f696f7479706573
00000331 2e6800          

                                   Fri Apr 10 08:31:51 2020           Page 56
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000334 000000           3068		.byte	0,0,0
00000337 2e2e2f2e2e2f2e2e 3069		.strz	"../../../bsw/fbl/fbl_mio.h"
0000033f 2f6273772f66626c
00000347 2f66626c5f6d696f
0000034f 2e6800          
00000352 000000           3070		.byte	0,0,0
00000355 2e2e2f2e2e2f2e2e 3071		.strz	"../../../bsw/fbl/fbl_flio.h"
0000035d 2f6273772f66626c
00000365 2f66626c5f666c69
0000036d 6f2e6800        
00000371 000000           3072		.byte	0,0,0
00000374 2e2e2f2e2e2f2e2e 3073		.strz	"../../../bsw/fbl/fbl_flio_xd1.h"
0000037c 2f6273772f66626c
00000384 2f66626c5f666c69
0000038c 6f5f7864312e6800
00000394 000000           3074		.byte	0,0,0
00000397 2e2e2f2e2e2f2e2e 3075		.strz	"../../../bsw/eep/EepInc.h"
0000039f 2f6273772f656570
000003a7 2f456570496e632e
000003af 6800            
000003b1 000000           3076		.byte	0,0,0
000003b4 2e2e2f2e2e2f2e2e 3077		.strz	"../../../bsw/eep/EepIO.h"
000003bc 2f6273772f656570
000003c4 2f456570494f2e68
000003cc 00              
000003cd 000000           3078		.byte	0,0,0
000003d0 2e2e2f2e2e2f2e2e 3079		.strz	"../../../bsw/fbl/applvect.h"
000003d8 2f6273772f66626c
000003e0 2f6170706c766563
000003e8 742e6800        
000003ec 000000           3080		.byte	0,0,0
000003ef 2e2e2f2e2e2f2e2e 3081		.strz	"../../../bsw/fbl/fbl_cw.h"
000003f7 2f6273772f66626c
000003ff 2f66626c5f63772e
00000407 6800            
00000409 000000           3082		.byte	0,0,0
0000040c 67656e646174615c 3083		.strz	"gendata\\fbl_cw_cfg.h"
00000414 66626c5f63775f63
0000041c 66672e6800      
00000421 000000           3084		.byte	0,0,0
00000424 2e2e2f2e2e2f2e2e 3085		.strz	"../../../bsw/fbl/fbl_hw.h"
0000042c 2f6273772f66626c
00000434 2f66626c5f68772e
0000043c 6800            
0000043e 000000           3086		.byte	0,0,0
00000441 2e2e2f2e2e2f2e2e 3087		.strz	"../../../bsw/fbl/fbl_sfr.h"
00000449 2f6273772f66626c
00000451 2f66626c5f736672
00000459 2e6800          
0000045c 000000           3088		.byte	0,0,0
0000045f 67656e646174615c 3089		.strz	"gendata\\ftp_cfg.h"
00000467 6674705f6366672e
0000046f 6800            
00000471 000000           3090		.byte	0,0,0
00000474 2e2e2f2e2e2f2e2e 3091		.strz	"../../../bsw/fbl/fbl_tp.h"
0000047c 2f6273772f66626c
00000484 2f66626c5f74702e
0000048c 6800            
0000048e 000000           3092		.byte	0,0,0
00000491 696e636c7564655c 3093		.strz	"include\\WrapNv_inc.h"
00000499 577261704e765f69
000004a1 6e632e6800      
000004a6 000000           3094		.byte	0,0,0
000004a9 2e2e2f2e2e2f2e2e 3095		.strz	"../../../bsw/wrapnv/WrapNv.h"
000004b1 2f6273772f777261
000004b9 706e762f57726170
000004c1 4e762e6800      
000004c6 000000           3096		.byte	0,0,0
000004c9 67656e646174615c 3097		.strz	"gendata\\WrapNv_cfg.h"
000004d1 577261704e765f63
000004d9 66672e6800      
000004de 000000           3098		.byte	0,0,0
000004e1 67656e646174615c 3099		.strz	"gendata\\fbl_apfb.h"
000004e9 66626c5f61706662
000004f1 2e6800          
000004f4 000000           3100		.byte	0,0,0
000004f7 2e2e2f2e2e2f2e2e 3101		.strz	"../../../bsw/fbl/fbl_diag.h"
000004ff 2f6273772f66626c
00000507 2f66626c5f646961
0000050f 672e6800        
00000513 000000           3102		.byte	0,0,0
00000516 2e2e2f2e2e2f2e2e 3103		.strz	"../../../bsw/fbl/fbl_diag_oem.h"
0000051e 2f6273772f66626c
00000526 2f66626c5f646961
0000052e 675f6f656d2e6800
00000536 000000           3104		.byte	0,0,0
00000539 2e2e2f2e2e2f2e2e 3105		.strz	"../../../bsw/fbl/fbl_mem.h"
00000541 2f6273772f66626c
00000549 2f66626c5f6d656d
00000551 2e6800          
00000554 000000           3106		.byte	0,0,0
00000557 2e2e2f2e2e2f2e2e 3107		.strz	"../../../bsw/fbl/fbl_mem_oem.h"
0000055f 2f6273772f66626c
00000567 2f66626c5f6d656d
0000056f 5f6f656d2e6800  
00000576 000000           3108		.byte	0,0,0
00000579 696e636c7564655c 3109		.strz	"include\\fbl_ap.h"
00000581 66626c5f61702e68
00000589 00              
0000058a 000000           3110		.byte	0,0,0
0000058d 696e636c7564655c 3111		.strz	"include\\fbl_apwd.h"
00000595 66626c5f61707764
0000059d 2e6800          
000005a0 000000           3112		.byte	0,0,0
000005a3 696e636c7564655c 3113		.strz	"include\\fbl_apdi.h"
000005ab 66626c5f61706469
000005b3 2e6800          
000005b6 000000           3114		.byte	0,0,0
000005b9 696e636c7564655c 3115		.strz	"include\\fbl_apnv.h"
000005c1 66626c5f61706e76
000005c9 2e6800          
000005cc 000000           3116		.byte	0,0,0
000005cf 2e2e2f2e2e2f2e2e 3117		.strz	"../../../bsw/fbl/fbl_main.h"
000005d7 2f6273772f66626c
000005df 2f66626c5f6d6169
000005e7 6e2e6800        
000005eb 000000           3118		.byte	0,0,0
000005ee 696e636c7564655c 3119		.strz	"include\\BrsHw.h"
000005f6 42727348772e6800
000005fe 000000           3120		.byte	0,0,0
00000601 696e636c7564655c 3121		.strz	"include\\BrsHw_DerivativeList.h"
00000609 42727348775f4465
00000611 7269766174697665
00000619 4c6973742e6800  
00000620 000000           3122		.byte	0,0,0
00000623 696e636c7564655c 3123		.strz	"include\\BrsCfg.h"
0000062b 4272734366672e68
00000633 00              

                                   Fri Apr 10 08:31:51 2020           Page 57
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000634 000000           3124		.byte	0,0,0
00000637 696e636c7564655c 3125		.strz	"include\\BrsTypes.h"
0000063f 4272735479706573
00000647 2e6800          
0000064a 000000           3126		.byte	0,0,0
0000064d 696e636c7564655c 3127		.strz	"include\\Brs_MemMap.h"
00000655 4272735f4d656d4d
0000065d 61702e6800      
00000662 000000           3128		.byte	0,0,0
00000665 00               3129		.byte	0
                          3130	.Ldw_lpro_end:
                          3131		.section	.debug_macinfo
                          3132	.Ldw_macinfo_begin:
                          3133		.section	.debug_frame
                          3134	.LDW_5d73e00:
00000000 0000008c         3135		.long	.LDW_unq_2-.LDW_unq_1
                          3136	.LDW_unq_1:
00000004 ffffffff         3137		.byte	255,255,255,255
00000008 01               3138		.byte	1
00000009 00               3139		.byte	0
0000000a 01               3140		.byte	1
0000000b 01               3141		.byte	1
0000000c 6c               3142		.byte	108
0000000d 0c               3143		.byte	12
0000000e 01               3144		.byte	1
0000000f 00               3145		.byte	0
00000010 07               3146		.byte	7
00000011 00               3147		.byte	0
00000012 07               3148		.byte	7
00000013 01               3149		.byte	1
00000014 07               3150		.byte	7
00000015 02               3151		.byte	2
00000016 07               3152		.byte	7
00000017 03               3153		.byte	3
00000018 07               3154		.byte	7
00000019 04               3155		.byte	4
0000001a 07               3156		.byte	7
0000001b 05               3157		.byte	5
0000001c 07               3158		.byte	7
0000001d 06               3159		.byte	6
0000001e 07               3160		.byte	7
0000001f 07               3161		.byte	7
00000020 07               3162		.byte	7
00000021 08               3163		.byte	8
00000022 07               3164		.byte	7
00000023 09               3165		.byte	9
00000024 07               3166		.byte	7
00000025 0a               3167		.byte	10
00000026 07               3168		.byte	7
00000027 0b               3169		.byte	11
00000028 07               3170		.byte	7
00000029 0c               3171		.byte	12
0000002a 07               3172		.byte	7
0000002b 0d               3173		.byte	13
0000002c 07               3174		.byte	7
0000002d 0e               3175		.byte	14
0000002e 07               3176		.byte	7
0000002f 0f               3177		.byte	15
00000030 07               3178		.byte	7
00000031 10               3179		.byte	16

                                   Fri Apr 10 08:31:51 2020           Page 58
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000032 07               3180		.byte	7
00000033 11               3181		.byte	17
00000034 07               3182		.byte	7
00000035 12               3183		.byte	18
00000036 07               3184		.byte	7
00000037 13               3185		.byte	19
00000038 07               3186		.byte	7
00000039 14               3187		.byte	20
0000003a 07               3188		.byte	7
0000003b 15               3189		.byte	21
0000003c 07               3190		.byte	7
0000003d 16               3191		.byte	22
0000003e 07               3192		.byte	7
0000003f 17               3193		.byte	23
00000040 07               3194		.byte	7
00000041 18               3195		.byte	24
00000042 07               3196		.byte	7
00000043 19               3197		.byte	25
00000044 07               3198		.byte	7
00000045 1a               3199		.byte	26
00000046 07               3200		.byte	7
00000047 1b               3201		.byte	27
00000048 07               3202		.byte	7
00000049 1c               3203		.byte	28
0000004a 07               3204		.byte	7
0000004b 1d               3205		.byte	29
0000004c 07               3206		.byte	7
0000004d 1e               3207		.byte	30
0000004e 07               3208		.byte	7
0000004f 1f               3209		.byte	31
00000050 07               3210		.byte	7
00000051 20               3211		.byte	32
00000052 07               3212		.byte	7
00000053 21               3213		.byte	33
00000054 07               3214		.byte	7
00000055 22               3215		.byte	34
00000056 07               3216		.byte	7
00000057 23               3217		.byte	35
00000058 07               3218		.byte	7
00000059 24               3219		.byte	36
0000005a 07               3220		.byte	7
0000005b 25               3221		.byte	37
0000005c 07               3222		.byte	7
0000005d 26               3223		.byte	38
0000005e 07               3224		.byte	7
0000005f 27               3225		.byte	39
00000060 07               3226		.byte	7
00000061 28               3227		.byte	40
00000062 07               3228		.byte	7
00000063 29               3229		.byte	41
00000064 07               3230		.byte	7
00000065 2a               3231		.byte	42
00000066 07               3232		.byte	7
00000067 2b               3233		.byte	43
00000068 07               3234		.byte	7
00000069 2c               3235		.byte	44

                                   Fri Apr 10 08:31:51 2020           Page 59
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000006a 07               3236		.byte	7
0000006b 2d               3237		.byte	45
0000006c 07               3238		.byte	7
0000006d 2e               3239		.byte	46
0000006e 07               3240		.byte	7
0000006f 2f               3241		.byte	47
00000070 07               3242		.byte	7
00000071 30               3243		.byte	48
00000072 07               3244		.byte	7
00000073 31               3245		.byte	49
00000074 07               3246		.byte	7
00000075 32               3247		.byte	50
00000076 07               3248		.byte	7
00000077 33               3249		.byte	51
00000078 07               3250		.byte	7
00000079 34               3251		.byte	52
0000007a 07               3252		.byte	7
0000007b 35               3253		.byte	53
0000007c 07               3254		.byte	7
0000007d 36               3255		.byte	54
0000007e 07               3256		.byte	7
0000007f 37               3257		.byte	55
00000080 07               3258		.byte	7
00000081 38               3259		.byte	56
00000082 07               3260		.byte	7
00000083 39               3261		.byte	57
00000084 07               3262		.byte	7
00000085 3a               3263		.byte	58
00000086 07               3264		.byte	7
00000087 3b               3265		.byte	59
00000088 07               3266		.byte	7
00000089 3c               3267		.byte	60
0000008a 07               3268		.byte	7
0000008b 3d               3269		.byte	61
0000008c 07               3270		.byte	7
0000008d 3e               3271		.byte	62
0000008e 07               3272		.byte	7
0000008f 3f               3273		.byte	63
                          3274	.LDW_unq_2:
                          3275		.section	.debug_info
                          3276	.LDW_49dc928:
00000070 47               3277		.byte	71
00000071 01               3278		.byte	1
                          3279	
                          3280		.section	.debug_abbrev
00000013 47               3281		.byte	71
00000014 15               3282		.byte	21
00000015 01               3283		.byte	1
00000016 270c             3284		.byte	39,12
00000018 0000             3285		.byte	0,0
                          3286	
                          3287		.section	.debug_info
00000072 00               3288		.byte	0
                          3289	
                          3290	.LDW_49dc960:
00000073 27               3291		.byte	39

                                   Fri Apr 10 08:31:51 2020           Page 60
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000074 756e7369676e6564 3292		.strz	"unsigned char"
0000007c 206368617200    
00000082 08               3293		.byte	8
00000083 01               3294		.byte	1
                          3295	
                          3296		.section	.debug_abbrev
0000001a 27               3297		.byte	39
0000001b 24               3298		.byte	36
0000001c 00               3299		.byte	0
0000001d 0308             3300		.byte	3,8
0000001f 3e0b             3301		.byte	62,11
00000021 0b0b             3302		.byte	11,11
00000023 0000             3303		.byte	0,0
                          3304	
                          3305		.section	.debug_info
                          3306	.LDW_49dc570:
00000084 47               3307		.byte	71
00000085 01               3308		.byte	1
                          3309	
                          3310	.LDW_49d3508:
00000086 14               3311		.byte	20
00000087 00000000         3312		.long	.LDW_4a1b9a0
0000008b 00               3313		.byte	0
                          3314	
                          3315		.section	.debug_abbrev
00000025 14               3316		.byte	20
00000026 05               3317		.byte	5
00000027 00               3318		.byte	0
00000028 4910             3319		.byte	73,16
0000002a 4b0c             3320		.byte	75,12
0000002c 0000             3321		.byte	0,0
                          3322	
                          3323		.section	.debug_info
0000008c 00               3324		.byte	0
                          3325	
                          3326	.LDW_49dc618:
0000008d 46               3327		.byte	70
0000008e 00000000         3328		.long	.LDW_4a1a4b0
00000092 01               3329		.byte	1
                          3330	
                          3331		.section	.debug_abbrev
0000002e 46               3332		.byte	70
0000002f 15               3333		.byte	21
00000030 01               3334		.byte	1
00000031 4910             3335		.byte	73,16
00000033 270c             3336		.byte	39,12
00000035 0000             3337		.byte	0,0
                          3338	
                          3339		.section	.debug_info
00000093 00               3340		.byte	0
                          3341	
                          3342	.LDW_49dc490:
00000094 31               3343		.byte	49
00000095 00000000         3344		.long	.LDW_4a1b9a0
                          3345	
                          3346		.section	.debug_abbrev
00000037 31               3347		.byte	49

                                   Fri Apr 10 08:31:51 2020           Page 61
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000038 0f               3348		.byte	15
00000039 00               3349		.byte	0
0000003a 4910             3350		.byte	73,16
0000003c 0000             3351		.byte	0,0
                          3352	
                          3353		.section	.debug_info
                          3354	.LDW_49dc7a0:
00000099 27               3355		.byte	39
0000009a 756e7369676e6564 3356		.strz	"unsigned short"
000000a2 2073686f727400  
000000a9 07               3357		.byte	7
000000aa 02               3358		.byte	2
                          3359	
                          3360	.LDW_49dc5a8:
000000ab 46               3361		.byte	70
000000ac 00000000         3362		.long	.LDW_4a1a4b0
000000b0 01               3363		.byte	1
                          3364	
                          3365	.LDW_49d3478:
000000b1 14               3366		.byte	20
000000b2 00000000         3367		.long	.LDW_49dc490
000000b6 00               3368		.byte	0
                          3369	
                          3370	.LDW_49d33b8:
000000b7 14               3371		.byte	20
000000b8 00000000         3372		.long	.LDW_4a1a650
000000bc 00               3373		.byte	0
                          3374	
000000bd 00               3375		.byte	0
                          3376	
                          3377	.LDW_49dc768:
000000be 46               3378		.byte	70
000000bf 00000000         3379		.long	.LDW_4a1b9a0
000000c3 01               3380		.byte	1
                          3381	
000000c4 00               3382		.byte	0
                          3383	
                          3384	.LDW_49dc4c8:
000000c5 27               3385		.byte	39
000000c6 696e7400         3386		.strz	"int"
000000ca 05               3387		.byte	5
000000cb 04               3388		.byte	4
                          3389	
                          3390	.LDW_5bc4d00:
000000cc 3c               3391		.byte	60
000000cd 00               3392		.byte	0
000000ce 14               3393		.byte	20
000000cf 00000000         3394		.long	.LDW_4a1b9a0
                          3395	
                          3396		.section	.debug_abbrev
0000003e 3c               3397		.byte	60
0000003f 01               3398		.byte	1
00000040 01               3399		.byte	1
00000041 090b             3400		.byte	9,11
00000043 0b0f             3401		.byte	11,15
00000045 4910             3402		.byte	73,16
00000047 0000             3403		.byte	0,0

                                   Fri Apr 10 08:31:51 2020           Page 62
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          3404	
                          3405		.section	.debug_info
000000d3 34               3406		.byte	52
000000d4 00000000         3407		.long	.LDW_49dc4c8
000000d8 04               3408		.byte	4
000000d9 00               3409		.byte	0
000000da 13               3410		.byte	19
                          3411	
                          3412		.section	.debug_abbrev
00000049 34               3413		.byte	52
0000004a 21               3414		.byte	33
0000004b 00               3415		.byte	0
0000004c 4910             3416		.byte	73,16
0000004e 0b0f             3417		.byte	11,15
00000050 220d             3418		.byte	34,13
00000052 2f0d             3419		.byte	47,13
00000054 0000             3420		.byte	0,0
                          3421	
                          3422		.section	.debug_info
000000db 00               3423		.byte	0
                          3424	
                          3425	.LDW_5bc4de0:
000000dc 3c               3426		.byte	60
000000dd 00               3427		.byte	0
000000de 14               3428		.byte	20
000000df 00000000         3429		.long	.LDW_4a1b9a0
                          3430	
000000e3 34               3431		.byte	52
000000e4 00000000         3432		.long	.LDW_49dc4c8
000000e8 04               3433		.byte	4
000000e9 00               3434		.byte	0
000000ea 13               3435		.byte	19
                          3436	
000000eb 00               3437		.byte	0
                          3438	
                          3439	.LDW_5bc4ec0:
000000ec 3c               3440		.byte	60
000000ed 00               3441		.byte	0
000000ee 01               3442		.byte	1
000000ef 00000000         3443		.long	.LDW_4a1b9a0
                          3444	
000000f3 34               3445		.byte	52
000000f4 00000000         3446		.long	.LDW_49dc4c8
000000f8 04               3447		.byte	4
000000f9 00               3448		.byte	0
000000fa 00               3449		.byte	0
                          3450	
000000fb 00               3451		.byte	0
                          3452	
                          3453	.LDW_49dc6c0:
000000fc 46               3454		.byte	70
000000fd 00000000         3455		.long	.LDW_4a1b9a0
00000101 01               3456		.byte	1
                          3457	
                          3458	.LDW_49d35c8:
00000102 14               3459		.byte	20

                                   Fri Apr 10 08:31:51 2020           Page 63
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000103 00000000         3460		.long	.LDW_4a1b9a0
00000107 00               3461		.byte	0
                          3462	
00000108 00               3463		.byte	0
                          3464	
                          3465	.LDW_49dc500:
00000109 27               3466		.byte	39
0000010a 756e7369676e6564 3467		.strz	"unsigned long"
00000112 206c6f6e6700    
00000118 07               3468		.byte	7
00000119 04               3469		.byte	4
                          3470	
                          3471	.LDW_5bc5948:
0000011a 3c               3472		.byte	60
0000011b 00               3473		.byte	0
0000011c 02               3474		.byte	2
0000011d 00000000         3475		.long	.LDW_4a1b9a0
                          3476	
00000121 34               3477		.byte	52
00000122 00000000         3478		.long	.LDW_49dc4c8
00000126 04               3479		.byte	4
00000127 00               3480		.byte	0
00000128 01               3481		.byte	1
                          3482	
00000129 00               3483		.byte	0
                          3484	
                          3485	.LDW_49dc730:
0000012a 46               3486		.byte	70
0000012b 00000000         3487		.long	.LDW_4a1b9a0
0000012f 01               3488		.byte	1
                          3489	
00000130 00               3490		.byte	0
                          3491	
                          3492	.LDW_5bc5a68:
00000131 3c               3493		.byte	60
00000132 00               3494		.byte	0
00000133 01               3495		.byte	1
00000134 00000000         3496		.long	.LDW_4a1b9a0
                          3497	
00000138 34               3498		.byte	52
00000139 00000000         3499		.long	.LDW_49dc4c8
0000013d 04               3500		.byte	4
0000013e 00               3501		.byte	0
0000013f 00               3502		.byte	0
                          3503	
00000140 00               3504		.byte	0
                          3505	
                          3506	.LDW_5bc5af0:
00000141 3c               3507		.byte	60
00000142 00               3508		.byte	0
00000143 11               3509		.byte	17
00000144 00000000         3510		.long	.LDW_4a1b9a0
                          3511	
00000148 34               3512		.byte	52
00000149 00000000         3513		.long	.LDW_49dc4c8
0000014d 04               3514		.byte	4
0000014e 00               3515		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 64
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000014f 10               3516		.byte	16
                          3517	
00000150 00               3518		.byte	0
                          3519	
                          3520	.LDW_49dc7d8:
00000151 47               3521		.byte	71
00000152 01               3522		.byte	1
                          3523	
00000153 00               3524		.byte	0
                          3525	
                          3526	.LDW_49dc3b0:
00000154 47               3527		.byte	71
00000155 01               3528		.byte	1
                          3529	
00000156 00               3530		.byte	0
                          3531	
                          3532	.LDW_49dc5e0:
00000157 47               3533		.byte	71
00000158 01               3534		.byte	1
                          3535	
00000159 00               3536		.byte	0
                          3537	
                          3538	.LDW_49dc998:
0000015a 47               3539		.byte	71
0000015b 01               3540		.byte	1
                          3541	
0000015c 00               3542		.byte	0
                          3543	
                          3544	.LDW_49dc420:
0000015d 47               3545		.byte	71
0000015e 01               3546		.byte	1
                          3547	
0000015f 00               3548		.byte	0
                          3549	
                          3550	.LDW_49dc650:
00000160 46               3551		.byte	70
00000161 00000000         3552		.long	.LDW_4a1b9a0
00000165 01               3553		.byte	1
                          3554	
00000166 00               3555		.byte	0
                          3556	
                          3557	.LDW_49dca08:
00000167 46               3558		.byte	70
00000168 00000000         3559		.long	.LDW_4a1b9a0
0000016c 01               3560		.byte	1
                          3561	
0000016d 00               3562		.byte	0
                          3563	
                          3564	.LDW_49dca40:
0000016e 46               3565		.byte	70
0000016f 00000000         3566		.long	.LDW_4a1b9a0
00000173 01               3567		.byte	1
                          3568	
00000174 00               3569		.byte	0
                          3570	
                          3571	.LDW_49dc3e8:

                                   Fri Apr 10 08:31:51 2020           Page 65
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000175 46               3572		.byte	70
00000176 00000000         3573		.long	.LDW_4a1b9a0
0000017a 01               3574		.byte	1
                          3575	
0000017b 00               3576		.byte	0
                          3577	
                          3578	.LDW_49dc458:
0000017c 47               3579		.byte	71
0000017d 01               3580		.byte	1
                          3581	
0000017e 00               3582		.byte	0
                          3583	
                          3584	.LDW_49dc688:
0000017f 47               3585		.byte	71
00000180 01               3586		.byte	1
                          3587	
00000181 00               3588		.byte	0
                          3589	
                          3590	.LDW_49dc6f8:
00000182 47               3591		.byte	71
00000183 01               3592		.byte	1
                          3593	
                          3594	.LDW_49d33e8:
00000184 14               3595		.byte	20
00000185 00000000         3596		.long	.LDW_4a1b9a0
00000189 00               3597		.byte	0
                          3598	
0000018a 00               3599		.byte	0
                          3600	
                          3601	.LDW_49dc810:
0000018b 47               3602		.byte	71
0000018c 01               3603		.byte	1
                          3604	
0000018d 00               3605		.byte	0
                          3606	
                          3607	.LDW_49dc848:
0000018e 47               3608		.byte	71
0000018f 01               3609		.byte	1
                          3610	
00000190 00               3611		.byte	0
                          3612	
                          3613	.LDW_49dc880:
00000191 47               3614		.byte	71
00000192 01               3615		.byte	1
                          3616	
00000193 00               3617		.byte	0
                          3618	
                          3619	.LDW_49dc8b8:
00000194 47               3620		.byte	71
00000195 01               3621		.byte	1
                          3622	
00000196 00               3623		.byte	0
                          3624	
                          3625	.LDW_5c5e7b8:
00000197 27               3626		.byte	39
00000198 766f69642a00     3627		.strz	"void*"

                                   Fri Apr 10 08:31:51 2020           Page 66
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000019e 01               3628		.byte	1
0000019f 04               3629		.byte	4
                          3630	
                          3631	.LDW_5c5ecc0:
000001a0 31               3632		.byte	49
000001a1 00000000         3633		.long	.LDW_5df1c10
                          3634	
                          3635	.LDW_5df2248:
000001a5 47               3636		.byte	71
000001a6 01               3637		.byte	1
                          3638	
000001a7 00               3639		.byte	0
                          3640	
                          3641	.LDW_5df20f8:
000001a8 31               3642		.byte	49
000001a9 00000000         3643		.long	.LDW_5df2248
                          3644	
                          3645	.LDW_5c5eec8:
000001ad 3c               3646		.byte	60
000001ae 00               3647		.byte	0
000001af 01               3648		.byte	1
000001b0 00000000         3649		.long	.LDW_4a1b9a0
                          3650	
000001b4 34               3651		.byte	52
000001b5 00000000         3652		.long	.LDW_49dc4c8
000001b9 04               3653		.byte	4
000001ba 00               3654		.byte	0
000001bb 00               3655		.byte	0
                          3656	
000001bc 00               3657		.byte	0
                          3658	
                          3659	.LDW_5c5ef50:
000001bd 3c               3660		.byte	60
000001be 00               3661		.byte	0
000001bf 30               3662		.byte	48
000001c0 00000000         3663		.long	.LDW_5df3738
                          3664	
000001c4 34               3665		.byte	52
000001c5 00000000         3666		.long	.LDW_49dc4c8
000001c9 04               3667		.byte	4
000001ca 00               3668		.byte	0
000001cb 01               3669		.byte	1
                          3670	
000001cc 00               3671		.byte	0
                          3672	
                          3673	.LDW_5df2c90:
000001cd 2b               3674		.byte	43
000001ce 00000000         3675		.long	.LDW_5bc50e8
                          3676	
                          3677		.section	.debug_abbrev
00000056 2b               3678		.byte	43
00000057 26               3679		.byte	38
00000058 00               3680		.byte	0
00000059 4910             3681		.byte	73,16
0000005b 0000             3682		.byte	0,0
                          3683	

                                   Fri Apr 10 08:31:51 2020           Page 67
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          3684		.section	.debug_info
                          3685	.LDW_5df5bb8:
000001d2 31               3686		.byte	49
000001d3 00000000         3687		.long	.LDW_5df2c90
                          3688	
                          3689	.LDW_5df8a98:
000001d7 2b               3690		.byte	43
000001d8 00000000         3691		.long	.LDW_4a1b9a0
                          3692	
                          3693	.LDW_5df5e90:
000001dc 31               3694		.byte	49
000001dd 00000000         3695		.long	.LDW_5df8a98
                          3696	
                          3697	.LDW_5df87d8:
000001e1 2b               3698		.byte	43
000001e2 00000000         3699		.long	.LDW_5df3790
                          3700	
                          3701	.LDW_5df4958:
000001e6 3d               3702		.byte	61
000001e7 00               3703		.byte	0
000001e8 00000000         3704		.long	.LDW_5df2c90
                          3705	
                          3706		.section	.debug_abbrev
0000005d 3d               3707		.byte	61
0000005e 01               3708		.byte	1
0000005f 01               3709		.byte	1
00000060 090b             3710		.byte	9,11
00000062 4910             3711		.byte	73,16
00000064 0000             3712		.byte	0,0
                          3713	
                          3714		.section	.debug_info
000001ec 34               3715		.byte	52
000001ed 00000000         3716		.long	.LDW_49dc4c8
000001f1 04               3717		.byte	4
000001f2 00               3718		.byte	0
000001f3 7f               3719		.byte	127
                          3720	
000001f4 00               3721		.byte	0
                          3722	
                          3723	.LDW_5df52e8:
000001f5 3c               3724		.byte	60
000001f6 00               3725		.byte	0
000001f7 02               3726		.byte	2
000001f8 00000000         3727		.long	.LDW_5df8a98
                          3728	
000001fc 34               3729		.byte	52
000001fd 00000000         3730		.long	.LDW_49dc4c8
00000201 04               3731		.byte	4
00000202 00               3732		.byte	0
00000203 01               3733		.byte	1
                          3734	
00000204 00               3735		.byte	0
                          3736	
                          3737	.LDW_5df59f8:
00000205 46               3738		.byte	70
00000206 00000000         3739		.long	.LDW_5bb3570

                                   Fri Apr 10 08:31:51 2020           Page 68
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000020a 01               3740		.byte	1
                          3741	
                          3742	.LDW_5d7e968:
0000020b 14               3743		.byte	20
0000020c 00000000         3744		.long	.LDW_5c5ecc0
00000210 00               3745		.byte	0
                          3746	
00000211 00               3747		.byte	0
                          3748	
                          3749	.LDW_5df5c98:
00000212 46               3750		.byte	70
00000213 00000000         3751		.long	.LDW_5bb3570
00000217 01               3752		.byte	1
                          3753	
                          3754	.LDW_5dfe0e8:
00000218 14               3755		.byte	20
00000219 00000000         3756		.long	.LDW_5bc57f0
0000021d 00               3757		.byte	0
                          3758	
                          3759	.LDW_5dfe178:
0000021e 14               3760		.byte	20
0000021f 00000000         3761		.long	.LDW_5df1c10
00000223 00               3762		.byte	0
                          3763	
00000224 00               3764		.byte	0
                          3765	
                          3766	.LDW_5dfeae0:
00000225 46               3767		.byte	70
00000226 00000000         3768		.long	.LDW_4a1b9a0
0000022a 01               3769		.byte	1
                          3770	
0000022b 00               3771		.byte	0
                          3772	
                          3773	.LDW_5dfe7d0:
0000022c 46               3774		.byte	70
0000022d 00000000         3775		.long	.LDW_5df3210
00000231 01               3776		.byte	1
                          3777	
                          3778	.LDW_5dfe478:
00000232 14               3779		.byte	20
00000233 00000000         3780		.long	.LDW_5c5e7b8
00000237 00               3781		.byte	0
                          3782	
00000238 00               3783		.byte	0
                          3784	
                          3785	.LDW_5dfe990:
00000239 46               3786		.byte	70
0000023a 00000000         3787		.long	.LDW_5df3210
0000023e 01               3788		.byte	1
                          3789	
                          3790	.LDW_5e00fb0:
0000023f 14               3791		.byte	20
00000240 00000000         3792		.long	.LDW_5c5e7b8
00000244 00               3793		.byte	0
                          3794	
00000245 00               3795		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 69
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          3796	
                          3797	.LDW_5dfea70:
00000246 46               3798		.byte	70
00000247 00000000         3799		.long	.LDW_5df3210
0000024b 01               3800		.byte	1
                          3801	
                          3802	.LDW_5e00f50:
0000024c 14               3803		.byte	20
0000024d 00000000         3804		.long	.LDW_5df2920
00000251 00               3805		.byte	0
                          3806	
                          3807	.LDW_5e00fe0:
00000252 14               3808		.byte	20
00000253 00000000         3809		.long	.LDW_5df2d98
00000257 00               3810		.byte	0
                          3811	
                          3812	.LDW_5e01010:
00000258 14               3813		.byte	20
00000259 00000000         3814		.long	.LDW_5df32c0
0000025d 00               3815		.byte	0
                          3816	
0000025e 00               3817		.byte	0
                          3818	
                          3819	.LDW_5dfe958:
0000025f 46               3820		.byte	70
00000260 00000000         3821		.long	.LDW_5df3210
00000264 01               3822		.byte	1
                          3823	
                          3824	.LDW_5e01190:
00000265 14               3825		.byte	20
00000266 00000000         3826		.long	.LDW_5df2920
0000026a 00               3827		.byte	0
                          3828	
                          3829	.LDW_5e011f0:
0000026b 14               3830		.byte	20
0000026c 00000000         3831		.long	.LDW_5df2d98
00000270 00               3832		.byte	0
                          3833	
                          3834	.LDW_5e01220:
00000271 14               3835		.byte	20
00000272 00000000         3836		.long	.LDW_5df32c0
00000276 00               3837		.byte	0
                          3838	
00000277 00               3839		.byte	0
                          3840	
                          3841	.LDW_5dfe9c8:
00000278 46               3842		.byte	70
00000279 00000000         3843		.long	.LDW_4a1a5f8
0000027d 01               3844		.byte	1
                          3845	
0000027e 00               3846		.byte	0
                          3847	
                          3848	.LDW_5e01628:
0000027f 47               3849		.byte	71
00000280 01               3850		.byte	1
                          3851	

                                   Fri Apr 10 08:31:51 2020           Page 70
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000281 00               3852		.byte	0
                          3853	
                          3854	.LDW_5e01ba0:
00000282 46               3855		.byte	70
00000283 00000000         3856		.long	.LDW_4a1b9a0
00000287 01               3857		.byte	1
                          3858	
00000288 00               3859		.byte	0
                          3860	
                          3861	.LDW_5e01b30:
00000289 27               3862		.byte	39
0000028a 756e7369676e6564 3863		.strz	"unsigned int"
00000292 20696e7400      
00000297 07               3864		.byte	7
00000298 04               3865		.byte	4
                          3866	
                          3867	.LDW_5e04298:
00000299 46               3868		.byte	70
0000029a 00000000         3869		.long	.LDW_5df10b8
0000029e 01               3870		.byte	1
                          3871	
                          3872	.LDW_5e04920:
0000029f 14               3873		.byte	20
000002a0 00000000         3874		.long	.LDW_5bc5270
000002a4 00               3875		.byte	0
                          3876	
                          3877	.LDW_5e04860:
000002a5 14               3878		.byte	20
000002a6 00000000         3879		.long	.LDW_49dc490
000002aa 00               3880		.byte	0
                          3881	
                          3882	.LDW_5e04950:
000002ab 14               3883		.byte	20
000002ac 00000000         3884		.long	.LDW_5df10b8
000002b0 00               3885		.byte	0
                          3886	
000002b1 00               3887		.byte	0
                          3888	
                          3889	.LDW_5e05808:
000002b2 47               3890		.byte	71
000002b3 01               3891		.byte	1
                          3892	
                          3893	.LDW_5e04da0:
000002b4 14               3894		.byte	20
000002b5 00000000         3895		.long	.LDW_5bc50e8
000002b9 00               3896		.byte	0
                          3897	
                          3898	.LDW_5e04d70:
000002ba 14               3899		.byte	20
000002bb 00000000         3900		.long	.LDW_5bc50e8
000002bf 00               3901		.byte	0
                          3902	
                          3903	.LDW_5e04fe0:
000002c0 14               3904		.byte	20
000002c1 00000000         3905		.long	.LDW_5df8678
000002c5 00               3906		.byte	0
                          3907	

                                   Fri Apr 10 08:31:51 2020           Page 71
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000002c6 00               3908		.byte	0
                          3909	
                          3910	.LDW_5e05c30:
000002c7 46               3911		.byte	70
000002c8 00000000         3912		.long	.LDW_5bc50e8
000002cc 01               3913		.byte	1
                          3914	
                          3915	.LDW_5e04ce0:
000002cd 14               3916		.byte	20
000002ce 00000000         3917		.long	.LDW_5bc50e8
000002d2 00               3918		.byte	0
                          3919	
                          3920	.LDW_5e04dd0:
000002d3 14               3921		.byte	20
000002d4 00000000         3922		.long	.LDW_5df86d0
000002d8 00               3923		.byte	0
                          3924	
000002d9 00               3925		.byte	0
                          3926	
                          3927	.LDW_5e05bc0:
000002da 46               3928		.byte	70
000002db 00000000         3929		.long	.LDW_5bc5270
000002df 01               3930		.byte	1
                          3931	
                          3932	.LDW_5e04f20:
000002e0 14               3933		.byte	20
000002e1 00000000         3934		.long	.LDW_4a1b9a0
000002e5 00               3935		.byte	0
                          3936	
000002e6 00               3937		.byte	0
                          3938	
                          3939	.LDW_5e05df0:
000002e7 46               3940		.byte	70
000002e8 00000000         3941		.long	.LDW_4a1a4b0
000002ec 01               3942		.byte	1
                          3943	
000002ed 00               3944		.byte	0
                          3945	
                          3946	.LDW_5e05d48:
000002ee 47               3947		.byte	71
000002ef 01               3948		.byte	1
                          3949	
000002f0 00               3950		.byte	0
                          3951	
                          3952	.LDW_5e06250:
000002f1 47               3953		.byte	71
000002f2 01               3954		.byte	1
                          3955	
000002f3 00               3956		.byte	0
                          3957	
                          3958	.LDW_5e05fe8:
000002f4 47               3959		.byte	71
000002f5 01               3960		.byte	1
                          3961	
000002f6 00               3962		.byte	0
                          3963	

                                   Fri Apr 10 08:31:51 2020           Page 72
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          3964	.LDW_5e05f40:
000002f7 47               3965		.byte	71
000002f8 01               3966		.byte	1
                          3967	
000002f9 00               3968		.byte	0
                          3969	
                          3970	.LDW_4a1b9a0:
000002fa 2a               3971		.byte	42
000002fb 7675696e743800   3972		.strz	"vuint8"
00000302 9b04             3973		.byte	155,4
00000304 18               3974		.byte	24
00000305 07               3975		.byte	7
00000306 00000000         3976		.long	.LDW_49dc960
                          3977	
                          3978		.section	.debug_abbrev
00000066 2a               3979		.byte	42
00000067 16               3980		.byte	22
00000068 00               3981		.byte	0
00000069 0308             3982		.byte	3,8
0000006b 3b0f             3983		.byte	59,15
0000006d 390f             3984		.byte	57,15
0000006f 3a0f             3985		.byte	58,15
00000071 4910             3986		.byte	73,16
00000073 0000             3987		.byte	0,0
                          3988	
                          3989		.section	.debug_info
                          3990	.LDW_4a1a5f8:
0000030a 2a               3991		.byte	42
0000030b 7675696e74313600 3992		.strz	"vuint16"
00000313 a604             3993		.byte	166,4
00000315 18               3994		.byte	24
00000316 07               3995		.byte	7
00000317 00000000         3996		.long	.LDW_49dc7a0
                          3997	
                          3998	.LDW_5bc50e8:
0000031b 2a               3999		.byte	42
0000031c 7675696e74333200 4000		.strz	"vuint32"
00000324 b204             4001		.byte	178,4
00000326 18               4002		.byte	24
00000327 07               4003		.byte	7
00000328 00000000         4004		.long	.LDW_49dc500
                          4005	
                          4006	.LDW_5bb3ba0:
0000032c 2a               4007		.byte	42
0000032d 5365634d5f427974 4008		.strz	"SecM_ByteType"
00000335 655479706500    
0000033b 9802             4009		.byte	152,2
0000033d 11               4010		.byte	17
0000033e 0c               4011		.byte	12
0000033f 00000000         4012		.long	.LDW_4a1b9a0
                          4013	
                          4014	.LDW_5bb3570:
00000343 2a               4015		.byte	42
00000344 5365634d5f537461 4016		.strz	"SecM_StatusType"
0000034c 7475735479706500
00000354 ac02             4017		.byte	172,2
00000356 17               4018		.byte	23
00000357 0c               4019		.byte	12

                                   Fri Apr 10 08:31:51 2020           Page 73
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000358 00000000         4020		.long	.LDW_5bb3ba0
                          4021	
                          4022	.LDW_5bc5740:
0000035c 2a               4023		.byte	42
0000035d 5365634d5f576f72 4024		.strz	"SecM_WordType"
00000365 645479706500    
0000036b ae02             4025		.byte	174,2
0000036d 11               4026		.byte	17
0000036e 0c               4027		.byte	12
0000036f 00000000         4028		.long	.LDW_5bc50e8
                          4029	
                          4030	.LDW_5bc5428:
00000373 2a               4031		.byte	42
00000374 5365634d5f4b6579 4032		.strz	"SecM_KeyBaseType"
0000037c 4261736554797065
00000384 00              
00000385 a401             4033		.byte	164,1
00000387 1c               4034		.byte	28
00000388 10               4035		.byte	16
00000389 00000000         4036		.long	.LDW_5bc5740
                          4037	
                          4038	.LDW_5bc56e8:
0000038d 2a               4039		.byte	42
0000038e 5365634d5f4b6579 4040		.strz	"SecM_KeyStorageType"
00000396 53746f7261676554
0000039e 79706500        
000003a2 a601             4041		.byte	166,1
000003a4 1c               4042		.byte	28
000003a5 10               4043		.byte	16
000003a6 00000000         4044		.long	.LDW_5bc5428
                          4045	
                          4046	.LDW_5df1dc8:
000003aa 43               4047		.byte	67
000003ab b901             4048		.byte	185,1
000003ad 01               4049		.byte	1
000003ae 10               4050		.byte	16
000003af 08               4051		.byte	8
000003b0 01               4052		.byte	1
                          4053	
                          4054		.section	.debug_abbrev
00000075 43               4055		.byte	67
00000076 13               4056		.byte	19
00000077 01               4057		.byte	1
00000078 3b0f             4058		.byte	59,15
0000007a 390f             4059		.byte	57,15
0000007c 3a0f             4060		.byte	58,15
0000007e 0b0f             4061		.byte	11,15
00000080 320b             4062		.byte	50,11
00000082 0000             4063		.byte	0,0
                          4064	
                          4065		.section	.debug_info
                          4066	.LDW_5df0c38:
000003b1 25               4067		.byte	37
000003b2 736565645800     4068		.strz	"seedX"
000003b8 ba01             4069		.byte	186,1
000003ba 12               4070		.byte	18
000003bb 10               4071		.byte	16
000003bc 00000000         4072		.long	.LDW_5bc5740
000003c0 0223             4073		.byte	2,35
000003c2 00               4074		.byte	0
000003c3 01               4075		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 74
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          4076	
                          4077		.section	.debug_abbrev
00000084 25               4078		.byte	37
00000085 0d               4079		.byte	13
00000086 00               4080		.byte	0
00000087 0308             4081		.byte	3,8
00000089 3b0f             4082		.byte	59,15
0000008b 390f             4083		.byte	57,15
0000008d 3a0f             4084		.byte	58,15
0000008f 4910             4085		.byte	73,16
00000091 380a             4086		.byte	56,10
00000093 320b             4087		.byte	50,11
00000095 0000             4088		.byte	0,0
                          4089	
                          4090		.section	.debug_info
                          4091	.LDW_5df0c80:
000003c4 25               4092		.byte	37
000003c5 736565645900     4093		.strz	"seedY"
000003cb bb01             4094		.byte	187,1
000003cd 12               4095		.byte	18
000003ce 10               4096		.byte	16
000003cf 00000000         4097		.long	.LDW_5bc5740
000003d3 0223             4098		.byte	2,35
000003d5 04               4099		.byte	4
000003d6 01               4100		.byte	1
                          4101	
000003d7 00               4102		.byte	0
                          4103	
                          4104	.LDW_5df1e78:
000003d8 2a               4105		.byte	42
000003d9 5365634d5f536565 4106		.strz	"SecM_SeedBaseType"
000003e1 6442617365547970
000003e9 6500            
000003eb bc01             4107		.byte	188,1
000003ed 03               4108		.byte	3
000003ee 10               4109		.byte	16
000003ef 00000000         4110		.long	.LDW_5df1dc8
                          4111	
                          4112	.LDW_5df1d18:
000003f3 2a               4113		.byte	42
000003f4 5365634d5f536565 4114		.strz	"SecM_SeedStorageType"
000003fc 6453746f72616765
00000404 5479706500      
00000409 be01             4115		.byte	190,1
0000040b 1c               4116		.byte	28
0000040c 10               4117		.byte	16
0000040d 00000000         4118		.long	.LDW_5df1e78
                          4119	
                          4120	.LDW_5df1c10:
00000411 2a               4121		.byte	42
00000412 5365634d5f536565 4122		.strz	"SecM_SeedType"
0000041a 645479706500    
00000420 fa01             4123		.byte	250,1
00000422 1f               4124		.byte	31
00000423 10               4125		.byte	16
00000424 00000000         4126		.long	.LDW_5df1d18
                          4127	
                          4128	.LDW_5bc57f0:
00000428 2a               4129		.byte	42
00000429 5365634d5f4b6579 4130		.strz	"SecM_KeyType"
00000431 5479706500      
00000436 8a02             4131		.byte	138,2

                                   Fri Apr 10 08:31:51 2020           Page 75
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000438 1f               4132		.byte	31
00000439 10               4133		.byte	16
0000043a 00000000         4134		.long	.LDW_5bc56e8
                          4135	
                          4136	.LDW_4a1a4b0:
0000043e 2a               4137		.byte	42
0000043f 7446626c52657375 4138		.strz	"tFblResult"
00000447 6c7400          
0000044a 9f02             4139		.byte	159,2
0000044c 10               4140		.byte	16
0000044d 13               4141		.byte	19
0000044e 00000000         4142		.long	.LDW_4a1b9a0
                          4143	
                          4144	.LDW_5bc51c0:
00000452 2a               4145		.byte	42
00000453 46424c5f41444452 4146		.strz	"FBL_ADDR_TYPE"
0000045b 5f5459504500    
00000461 ae02             4147		.byte	174,2
00000463 11               4148		.byte	17
00000464 13               4149		.byte	19
00000465 00000000         4150		.long	.LDW_5bc50e8
                          4151	
                          4152	.LDW_5df1b08:
00000469 2a               4153		.byte	42
0000046a 46424c5f4d454d53 4154		.strz	"FBL_MEMSIZE_TYPE"
00000472 495a455f54595045
0000047a 00              
0000047b af02             4155		.byte	175,2
0000047d 11               4156		.byte	17
0000047e 13               4157		.byte	19
0000047f 00000000         4158		.long	.LDW_5bc50e8
                          4159	
                          4160	.LDW_5bc5270:
00000483 2a               4161		.byte	42
00000484 7446626c41646472 4162		.strz	"tFblAddress"
0000048c 65737300        
00000490 b902             4163		.byte	185,2
00000492 1d               4164		.byte	29
00000493 13               4165		.byte	19
00000494 00000000         4166		.long	.LDW_5bc51c0
                          4167	
                          4168	.LDW_5df10b8:
00000498 2a               4169		.byte	42
00000499 7446626c4c656e67 4170		.strz	"tFblLength"
000004a1 746800          
000004a4 ba02             4171		.byte	186,2
000004a6 1d               4172		.byte	29
000004a7 13               4173		.byte	19
000004a8 00000000         4174		.long	.LDW_5df1b08
                          4175	
                          4176	.LDW_5df3478:
000004ac 2a               4177		.byte	42
000004ad 744578706f727446 4178		.strz	"tExportFct"
000004b5 637400          
000004b8 ca02             4179		.byte	202,2
000004ba 1b               4180		.byte	27
000004bb 13               4181		.byte	19
000004bc 00000000         4182		.long	.LDW_5df20f8
                          4183	
                          4184	.LDW_5df3528:
000004c0 42               4185		.byte	66
000004c1 74426c6f636b4465 4186		.strz	"tBlockDescriptorTag"
000004c9 7363726970746f72
000004d1 54616700        
000004d5 48               4187		.byte	72

                                   Fri Apr 10 08:31:51 2020           Page 76
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000004d6 10               4188		.byte	16
000004d7 17               4189		.byte	23
000004d8 18               4190		.byte	24
000004d9 01               4191		.byte	1
                          4192	
                          4193		.section	.debug_abbrev
00000097 42               4194		.byte	66
00000098 13               4195		.byte	19
00000099 01               4196		.byte	1
0000009a 0308             4197		.byte	3,8
0000009c 3b0f             4198		.byte	59,15
0000009e 390f             4199		.byte	57,15
000000a0 3a0f             4200		.byte	58,15
000000a2 0b0f             4201		.byte	11,15
000000a4 320b             4202		.byte	50,11
000000a6 0000             4203		.byte	0,0
                          4204	
                          4205		.section	.debug_info
                          4206	.LDW_5df08d8:
000004da 25               4207		.byte	37
000004db 626c6f636b4e7200 4208		.strz	"blockNr"
000004e3 4a               4209		.byte	74
000004e4 0a               4210		.byte	10
000004e5 17               4211		.byte	23
000004e6 00000000         4212		.long	.LDW_4a1b9a0
000004ea 0223             4213		.byte	2,35
000004ec 00               4214		.byte	0
000004ed 01               4215		.byte	1
                          4216	
                          4217	.LDW_5df0458:
000004ee 25               4218		.byte	37
000004ef 626c6f636b547970 4219		.strz	"blockType"
000004f7 6500            
000004f9 4b               4220		.byte	75
000004fa 0b               4221		.byte	11
000004fb 17               4222		.byte	23
000004fc 00000000         4223		.long	.LDW_5bc50e8
00000500 0223             4224		.byte	2,35
00000502 04               4225		.byte	4
00000503 01               4226		.byte	1
                          4227	
                          4228	.LDW_5df0920:
00000504 25               4229		.byte	37
00000505 626c6f636b537461 4230		.strz	"blockStartAddress"
0000050d 7274416464726573
00000515 7300            
00000517 4c               4231		.byte	76
00000518 0f               4232		.byte	15
00000519 17               4233		.byte	23
0000051a 00000000         4234		.long	.LDW_5bc5270
0000051e 0223             4235		.byte	2,35
00000520 08               4236		.byte	8
00000521 01               4237		.byte	1
                          4238	
                          4239	.LDW_5df00b0:
00000522 25               4240		.byte	37
00000523 626c6f636b4c656e 4241		.strz	"blockLength"
0000052b 67746800        
0000052f 4d               4242		.byte	77
00000530 0e               4243		.byte	14

                                   Fri Apr 10 08:31:51 2020           Page 77
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000531 17               4244		.byte	23
00000532 00000000         4245		.long	.LDW_5df10b8
00000536 0223             4246		.byte	2,35
00000538 0c               4247		.byte	12
00000539 01               4248		.byte	1
                          4249	
                          4250	.LDW_5df00f8:
0000053a 25               4251		.byte	37
0000053b 6d617850726f6741 4252		.strz	"maxProgAttempts"
00000543 7474656d70747300
0000054b 4e               4253		.byte	78
0000054c 0b               4254		.byte	11
0000054d 17               4255		.byte	23
0000054e 00000000         4256		.long	.LDW_4a1a5f8
00000552 0223             4257		.byte	2,35
00000554 10               4258		.byte	16
00000555 01               4259		.byte	1
                          4260	
                          4261	.LDW_5df0188:
00000556 25               4262		.byte	37
00000557 7665726966794f75 4263		.strz	"verifyOutput"
0000055f 7470757400      
00000564 4f               4264		.byte	79
00000565 0e               4265		.byte	14
00000566 17               4266		.byte	23
00000567 00000000         4267		.long	.LDW_5df3478
0000056b 0223             4268		.byte	2,35
0000056d 14               4269		.byte	20
0000056e 01               4270		.byte	1
                          4271	
0000056f 00               4272		.byte	0
                          4273	
                          4274	.LDW_5df3738:
00000570 2a               4275		.byte	42
00000571 74426c6f636b4465 4276		.strz	"tBlockDescriptor"
00000579 7363726970746f72
00000581 00              
00000582 50               4277		.byte	80
00000583 03               4278		.byte	3
00000584 17               4279		.byte	23
00000585 00000000         4280		.long	.LDW_5df3528
                          4281	
                          4282	.LDW_5df34d0:
00000589 42               4283		.byte	66
0000058a 744c6f676963616c 4284		.strz	"tLogicalBlockTableTag"
00000592 426c6f636b546162
0000059a 6c6554616700    
000005a0 53               4285		.byte	83
000005a1 10               4286		.byte	16
000005a2 17               4287		.byte	23
000005a3 38               4288		.byte	56
000005a4 01               4289		.byte	1
                          4290	
                          4291	.LDW_5df02a8:
000005a5 25               4292		.byte	37
000005a6 6d61676963466c61 4293		.strz	"magicFlag"
000005ae 6700            
000005b0 55               4294		.byte	85
000005b1 0b               4295		.byte	11
000005b2 17               4296		.byte	23
000005b3 00000000         4297		.long	.LDW_5bc50e8
000005b7 0223             4298		.byte	2,35
000005b9 00               4299		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 78
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000005ba 01               4300		.byte	1
                          4301	
                          4302	.LDW_5df02f0:
000005bb 25               4303		.byte	37
000005bc 61737369676e466c 4304		.strz	"assignFlags"
000005c4 61677300        
000005c8 56               4305		.byte	86
000005c9 0a               4306		.byte	10
000005ca 17               4307		.byte	23
000005cb 00000000         4308		.long	.LDW_5c5eec8
000005cf 0223             4309		.byte	2,35
000005d1 04               4310		.byte	4
000005d2 01               4311		.byte	1
                          4312	
                          4313	.LDW_5df3ac8:
000005d3 25               4314		.byte	37
000005d4 6e6f4f66426c6f63 4315		.strz	"noOfBlocks"
000005dc 6b7300          
000005df 57               4316		.byte	87
000005e0 0a               4317		.byte	10
000005e1 17               4318		.byte	23
000005e2 00000000         4319		.long	.LDW_4a1b9a0
000005e6 0223             4320		.byte	2,35
000005e8 05               4321		.byte	5
000005e9 01               4322		.byte	1
                          4323	
                          4324	.LDW_5df4068:
000005ea 25               4325		.byte	37
000005eb 6c6f676963616c42 4326		.strz	"logicalBlock"
000005f3 6c6f636b00      
000005f8 58               4327		.byte	88
000005f9 14               4328		.byte	20
000005fa 17               4329		.byte	23
000005fb 00000000         4330		.long	.LDW_5c5ef50
000005ff 0223             4331		.byte	2,35
00000601 08               4332		.byte	8
00000602 01               4333		.byte	1
                          4334	
00000603 00               4335		.byte	0
                          4336	
                          4337	.LDW_5df3790:
00000604 2a               4338		.byte	42
00000605 744c6f676963616c 4339		.strz	"tLogicalBlockTable"
0000060d 426c6f636b546162
00000615 6c6500          
00000618 59               4340		.byte	89
00000619 03               4341		.byte	3
0000061a 17               4342		.byte	23
0000061b 00000000         4343		.long	.LDW_5df34d0
                          4344	
                          4345	.LDW_5df2d98:
0000061f 2a               4346		.byte	42
00000620 494f5f53697a6554 4347		.strz	"IO_SizeType"
00000628 79706500        
0000062c 5e               4348		.byte	94
0000062d 13               4349		.byte	19
0000062e 1c               4350		.byte	28
0000062f 00000000         4351		.long	.LDW_5bc50e8
                          4352	
                          4353	.LDW_5df32c0:
00000633 2a               4354		.byte	42
00000634 494f5f506f736974 4355		.strz	"IO_PositionType"
0000063c 696f6e5479706500

                                   Fri Apr 10 08:31:51 2020           Page 79
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000644 5f               4356		.byte	95
00000645 13               4357		.byte	19
00000646 1c               4358		.byte	28
00000647 00000000         4359		.long	.LDW_5bc50e8
                          4360	
                          4361	.LDW_5df3210:
0000064b 2a               4362		.byte	42
0000064c 494f5f4572726f72 4363		.strz	"IO_ErrorType"
00000654 5479706500      
00000659 65               4364		.byte	101
0000065a 13               4365		.byte	19
0000065b 1c               4366		.byte	28
0000065c 00000000         4367		.long	.LDW_4a1a5f8
                          4368	
                          4369	.LDW_5df2920:
00000660 2a               4370		.byte	42
00000661 494f5f4d656d5074 4371		.strz	"IO_MemPtrType"
00000669 725479706500    
0000066f 66               4372		.byte	102
00000670 13               4373		.byte	19
00000671 1c               4374		.byte	28
00000672 00000000         4375		.long	.LDW_49dc490
                          4376	
                          4377	.LDW_4a1a650:
00000676 2a               4378		.byte	42
00000677 7454704461746154 4379		.strz	"tTpDataType"
0000067f 79706500        
00000683 59               4380		.byte	89
00000684 11               4381		.byte	17
00000685 27               4382		.byte	39
00000686 00000000         4383		.long	.LDW_4a1a5f8
                          4384	
                          4385	.LDW_5df8678:
0000068a 2a               4386		.byte	42
0000068b 7446626c4d656d52 4387		.strz	"tFblMemRamData"
00000693 616d4461746100  
0000069a c205             4388		.byte	194,5
0000069c 37               4389		.byte	55
0000069d 2f               4390		.byte	47
0000069e 00000000         4391		.long	.LDW_49dc490
                          4392	
                          4393	.LDW_5df86d0:
000006a2 2a               4394		.byte	42
000006a3 7446626c4d656d43 4395		.strz	"tFblMemConstRamData"
000006ab 6f6e737452616d44
000006b3 61746100        
000006b7 c405             4396		.byte	196,5
000006b9 37               4397		.byte	55
000006ba 2f               4398		.byte	47
000006bb 00000000         4399		.long	.LDW_5df5e90
                          4400	
                          4401	.LDW_5df8eb8:
000006bf 07               4402		.byte	7
000006c0 46626c4c6f676963 4403		.strz	"FblLogicalBlockTable"
000006c8 616c426c6f636b54
000006d0 61626c6500      
000006d5 5e               4404		.byte	94
000006d6 3a               4405		.byte	58
000006d7 17               4406		.byte	23
000006d8 00000000         4407		.long	.LDW_5df87d8
000006dc 01               4408		.byte	1
000006dd 01               4409		.byte	1
                          4410	
                          4411		.section	.debug_abbrev

                                   Fri Apr 10 08:31:51 2020           Page 80
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000000a8 07               4412		.byte	7
000000a9 34               4413		.byte	52
000000aa 00               4414		.byte	0
000000ab 0308             4415		.byte	3,8
000000ad 3b0f             4416		.byte	59,15
000000af 390f             4417		.byte	57,15
000000b1 3a0f             4418		.byte	58,15
000000b3 4910             4419		.byte	73,16
000000b5 3f0c             4420		.byte	63,12
000000b7 3c0c             4421		.byte	60,12
000000b9 0000             4422		.byte	0,0
                          4423	
                          4424		.section	.debug_info
                          4425	.LDW_5dfc500:
000006de 07               4426		.byte	7
000006df 4170706c496e744a 4427		.strz	"ApplIntJmpTable"
000006e7 6d705461626c6500
000006ef 58               4428		.byte	88
000006f0 2e               4429		.byte	46
000006f1 22               4430		.byte	34
000006f2 00000000         4431		.long	.LDW_5df4958
000006f6 01               4432		.byte	1
000006f7 01               4433		.byte	1
                          4434	
                          4435	.LDW_5dfcbe0:
000006f8 07               4436		.byte	7
000006f9 4469616742756666 4437		.strz	"DiagBuffer"
00000701 657200          
00000704 e303             4438		.byte	227,3
00000706 5e               4439		.byte	94
00000707 2d               4440		.byte	45
00000708 00000000         4441		.long	.LDW_49dc490
0000070c 01               4442		.byte	1
0000070d 01               4443		.byte	1
                          4444	
                          4445	.LDW_5dfd4b0:
0000070e 06               4446		.byte	6
0000070f 6670537461747573 4447		.strz	"fpStatus"
00000717 00              
00000718 d602             4448		.byte	214,2
0000071a 26               4449		.byte	38
0000071b 01               4450		.byte	1
0000071c 00000000         4451		.long	.LDW_4a1b9a0
00000720 01               4452		.byte	1
00000721 00               4453		.byte	0
00000722 0503             4454		.byte	5,3
00000724 00000000         4455		.long	fpStatus
                          4456	
                          4457		.section	.debug_abbrev
000000bb 06               4458		.byte	6
000000bc 34               4459		.byte	52
000000bd 00               4460		.byte	0
000000be 0308             4461		.byte	3,8
000000c0 3b0f             4462		.byte	59,15
000000c2 390f             4463		.byte	57,15
000000c4 3a0f             4464		.byte	58,15
000000c6 4910             4465		.byte	73,16
000000c8 3f0c             4466		.byte	63,12
000000ca 3c0c             4467		.byte	60,12

                                   Fri Apr 10 08:31:51 2020           Page 81
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000000cc 020a             4468		.byte	2,10
000000ce 0000             4469		.byte	0,0
                          4470	
                          4471		.section	.debug_info
                          4472	.LDW_5dfd508:
00000728 06               4473		.byte	6
00000729 7365635365656449 4474		.strz	"secSeedInput"
00000731 6e70757400      
00000736 dc02             4475		.byte	220,2
00000738 34               4476		.byte	52
00000739 01               4477		.byte	1
0000073a 00000000         4478		.long	.LDW_5df1c10
0000073e 00               4479		.byte	0
0000073f 00               4480		.byte	0
00000740 0503             4481		.byte	5,3
00000742 00000000         4482		.long	secSeedInput..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                          4483	
                          4484	.LDW_5dfd7c8:
00000746 06               4485		.byte	6
00000747 7365656400       4486		.strz	"seed"
0000074c dd02             4487		.byte	221,2
0000074e 34               4488		.byte	52
0000074f 01               4489		.byte	1
00000750 00000000         4490		.long	.LDW_5df1c10
00000754 00               4491		.byte	0
00000755 00               4492		.byte	0
00000756 0503             4493		.byte	5,3
00000758 00000000         4494		.long	seed..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                          4495	
                          4496	.LDW_5dfd458:
0000075c 06               4497		.byte	6
0000075d 7365637572697479 4498		.strz	"securitySeedResponse"
00000765 5365656452657370
0000076d 6f6e736500      
00000772 de02             4499		.byte	222,2
00000774 2d               4500		.byte	45
00000775 01               4501		.byte	1
00000776 00000000         4502		.long	.LDW_4a1b9a0
0000077a 00               4503		.byte	0
0000077b 00               4504		.byte	0
0000077c 0503             4505		.byte	5,3
0000077e 00000000         4506		.long	securitySeedResponse..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
                          4507	
                          4508	.LDW_5dfd038:
00000782 07               4509		.byte	7
00000783 4861726477617265 4510		.strz	"HardwareCompatibilityVersion"
0000078b 436f6d7061746962
00000793 696c697479566572
0000079b 73696f6e00      
000007a0 e302             4511		.byte	227,2
000007a2 2d               4512		.byte	45
000007a3 01               4513		.byte	1
000007a4 00000000         4514		.long	.LDW_5df52e8
000007a8 00               4515		.byte	0
000007a9 00               4516		.byte	0
                          4517	
                          4518	.LDW_5c8df78:
000007aa 18               4519		.byte	24
000007ab 5365634d5f47656e 4520		.strz	"SecM_GenerateSeed"
000007b3 6572617465536565
000007bb 6400            
000007bd a202             4521		.byte	162,2
000007bf 18               4522		.byte	24
000007c0 10               4523		.byte	16

                                   Fri Apr 10 08:31:51 2020           Page 82
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000007c1 00000000         4524		.long	.LDW_5bb3570
000007c5 01               4525		.byte	1
000007c6 00               4526		.byte	0
000007c7 01               4527		.byte	1
000007c8 01               4528		.byte	1
000007c9 00               4529		.byte	0
000007ca 01               4530		.byte	1
                          4531	
                          4532		.section	.debug_abbrev
000000d0 18               4533		.byte	24
000000d1 2e               4534		.byte	46
000000d2 01               4535		.byte	1
000000d3 0308             4536		.byte	3,8
000000d5 3b0f             4537		.byte	59,15
000000d7 390f             4538		.byte	57,15
000000d9 3a0f             4539		.byte	58,15
000000db 4910             4540		.byte	73,16
000000dd 3c0c             4541		.byte	60,12
000000df 200b             4542		.byte	32,11
000000e1 3f0c             4543		.byte	63,12
000000e3 320b             4544		.byte	50,11
000000e5 4c0b             4545		.byte	76,11
000000e7 270c             4546		.byte	39,12
000000e9 0000             4547		.byte	0,0
                          4548	
                          4549		.section	.debug_info
000007cb 00               4550		.byte	0
                          4551	
                          4552	.LDW_5c8ddb0:
000007cc 18               4553		.byte	24
000007cd 5365634d5f436f6d 4554		.strz	"SecM_CompareKey"
000007d5 706172654b657900
000007dd aa02             4555		.byte	170,2
000007df 18               4556		.byte	24
000007e0 10               4557		.byte	16
000007e1 00000000         4558		.long	.LDW_5bb3570
000007e5 01               4559		.byte	1
000007e6 00               4560		.byte	0
000007e7 01               4561		.byte	1
000007e8 01               4562		.byte	1
000007e9 00               4563		.byte	0
000007ea 01               4564		.byte	1
                          4565	
000007eb 00               4566		.byte	0
                          4567	
                          4568	.LDW_5dff880:
000007ec 18               4569		.byte	24
000007ed 46626c4c6f6f6b46 4570		.strz	"FblLookForWatchdog"
000007f5 6f72576174636864
000007fd 6f6700          
00000800 8e01             4571		.byte	142,1
00000802 13               4572		.byte	19
00000803 1b               4573		.byte	27
00000804 00000000         4574		.long	.LDW_4a1b9a0
00000808 01               4575		.byte	1
00000809 00               4576		.byte	0
0000080a 01               4577		.byte	1
0000080b 01               4578		.byte	1
0000080c 00               4579		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 83
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000080d 01               4580		.byte	1
                          4581	
0000080e 00               4582		.byte	0
                          4583	
                          4584	.LDW_5dffd40:
0000080f 18               4585		.byte	24
00000810 466c6173685f5844 4586		.strz	"Flash_XD1Driver_InitSync"
00000818 314472697665725f
00000820 496e697453796e63
00000828 00              
00000829 6b               4587		.byte	107
0000082a 0e               4588		.byte	14
0000082b 1f               4589		.byte	31
0000082c 00000000         4590		.long	.LDW_5df3210
00000830 01               4591		.byte	1
00000831 00               4592		.byte	0
00000832 01               4593		.byte	1
00000833 01               4594		.byte	1
00000834 00               4595		.byte	0
00000835 01               4596		.byte	1
                          4597	
00000836 00               4598		.byte	0
                          4599	
                          4600	.LDW_5dff4f0:
00000837 18               4601		.byte	24
00000838 456570726f6d4472 4602		.strz	"EepromDriver_InitSync"
00000840 697665725f496e69
00000848 7453796e6300    
0000084e 4d               4603		.byte	77
0000084f 19               4604		.byte	25
00000850 21               4605		.byte	33
00000851 00000000         4606		.long	.LDW_5df3210
00000855 01               4607		.byte	1
00000856 00               4608		.byte	0
00000857 01               4609		.byte	1
00000858 01               4610		.byte	1
00000859 00               4611		.byte	0
0000085a 01               4612		.byte	1
                          4613	
0000085b 00               4614		.byte	0
                          4615	
                          4616	.LDW_5dffae0:
0000085c 18               4617		.byte	24
0000085d 456570726f6d4472 4618		.strz	"EepromDriver_RReadSync"
00000865 697665725f525265
0000086d 616453796e6300  
00000874 50               4619		.byte	80
00000875 19               4620		.byte	25
00000876 21               4621		.byte	33
00000877 00000000         4622		.long	.LDW_5df3210
0000087b 01               4623		.byte	1
0000087c 00               4624		.byte	0
0000087d 01               4625		.byte	1
0000087e 01               4626		.byte	1
0000087f 00               4627		.byte	0
00000880 01               4628		.byte	1
                          4629	
00000881 00               4630		.byte	0
                          4631	
                          4632	.LDW_5dffc10:
00000882 18               4633		.byte	24
00000883 456570726f6d4472 4634		.strz	"EepromDriver_RWriteSync"
0000088b 697665725f525772
00000893 69746553796e6300
0000089b 51               4635		.byte	81

                                   Fri Apr 10 08:31:51 2020           Page 84
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000089c 19               4636		.byte	25
0000089d 21               4637		.byte	33
0000089e 00000000         4638		.long	.LDW_5df3210
000008a2 01               4639		.byte	1
000008a3 00               4640		.byte	0
000008a4 01               4641		.byte	1
000008a5 01               4642		.byte	1
000008a6 00               4643		.byte	0
000008a7 01               4644		.byte	1
                          4645	
000008a8 00               4646		.byte	0
                          4647	
                          4648	.LDW_5dff620:
000008a9 18               4649		.byte	24
000008aa 46626c4765745469 4650		.strz	"FblGetTimerValue"
000008b2 6d657256616c7565
000008ba 00              
000008bb cf03             4651		.byte	207,3
000008bd 09               4652		.byte	9
000008be 25               4653		.byte	37
000008bf 00000000         4654		.long	.LDW_4a1a5f8
000008c3 01               4655		.byte	1
000008c4 00               4656		.byte	0
000008c5 01               4657		.byte	1
000008c6 01               4658		.byte	1
000008c7 00               4659		.byte	0
000008c8 01               4660		.byte	1
                          4661	
000008c9 00               4662		.byte	0
                          4663	
                          4664	.LDW_5dff9b0:
000008ca 17               4665		.byte	23
000008cb 46626c43616e496e 4666		.strz	"FblCanInit"
000008d3 697400          
000008d6 d503             4667		.byte	213,3
000008d8 09               4668		.byte	9
000008d9 25               4669		.byte	37
000008da 01               4670		.byte	1
000008db 00               4671		.byte	0
000008dc 01               4672		.byte	1
000008dd 01               4673		.byte	1
000008de 00               4674		.byte	0
000008df 01               4675		.byte	1
                          4676	
                          4677		.section	.debug_abbrev
000000eb 17               4678		.byte	23
000000ec 2e               4679		.byte	46
000000ed 01               4680		.byte	1
000000ee 0308             4681		.byte	3,8
000000f0 3b0f             4682		.byte	59,15
000000f2 390f             4683		.byte	57,15
000000f4 3a0f             4684		.byte	58,15
000000f6 3c0c             4685		.byte	60,12
000000f8 200b             4686		.byte	32,11
000000fa 3f0c             4687		.byte	63,12
000000fc 320b             4688		.byte	50,11
000000fe 4c0b             4689		.byte	76,11
00000100 270c             4690		.byte	39,12
00000102 0000             4691		.byte	0,0

                                   Fri Apr 10 08:31:51 2020           Page 85
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          4692	
                          4693		.section	.debug_info
000008e0 00               4694		.byte	0
                          4695	
                          4696	.LDW_5e007f0:
000008e1 18               4697		.byte	24
000008e2 46626c43616e536c 4698		.strz	"FblCanSleep"
000008ea 65657000        
000008ee f003             4699		.byte	240,3
000008f0 08               4700		.byte	8
000008f1 25               4701		.byte	37
000008f2 00000000         4702		.long	.LDW_4a1b9a0
000008f6 01               4703		.byte	1
000008f7 00               4704		.byte	0
000008f8 01               4705		.byte	1
000008f9 01               4706		.byte	1
000008fa 00               4707		.byte	0
000008fb 01               4708		.byte	1
                          4709	
000008fc 00               4710		.byte	0
                          4711	
                          4712	.LDW_5e02048:
000008fd 18               4713		.byte	24
000008fe 46626c5265616450 4714		.strz	"FblReadProm"
00000906 726f6d00        
0000090a c703             4715		.byte	199,3
0000090c 0d               4716		.byte	13
0000090d 2d               4717		.byte	45
0000090e 00000000         4718		.long	.LDW_5df10b8
00000912 01               4719		.byte	1
00000913 00               4720		.byte	0
00000914 01               4721		.byte	1
00000915 01               4722		.byte	1
00000916 00               4723		.byte	0
00000917 01               4724		.byte	1
                          4725	
00000918 00               4726		.byte	0
                          4727	
                          4728	.LDW_5e06c90:
00000919 17               4729		.byte	23
0000091a 46626c4d656d5365 4730		.strz	"FblMemSetInteger"
00000922 74496e7465676572
0000092a 00              
0000092b d806             4731		.byte	216,6
0000092d 06               4732		.byte	6
0000092e 2f               4733		.byte	47
0000092f 01               4734		.byte	1
00000930 00               4735		.byte	0
00000931 01               4736		.byte	1
00000932 01               4737		.byte	1
00000933 00               4738		.byte	0
00000934 01               4739		.byte	1
                          4740	
00000935 00               4741		.byte	0
                          4742	
                          4743	.LDW_5e076a8:
00000936 18               4744		.byte	24
00000937 46626c4d656d4765 4745		.strz	"FblMemGetInteger"
0000093f 74496e7465676572
00000947 00              
00000948 d906             4746		.byte	217,6
0000094a 09               4747		.byte	9

                                   Fri Apr 10 08:31:51 2020           Page 86
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000094b 2f               4748		.byte	47
0000094c 00000000         4749		.long	.LDW_5bc50e8
00000950 01               4750		.byte	1
00000951 00               4751		.byte	0
00000952 01               4752		.byte	1
00000953 01               4753		.byte	1
00000954 00               4754		.byte	0
00000955 01               4755		.byte	1
                          4756	
00000956 00               4757		.byte	0
                          4758	
                          4759	.LDW_5e066a0:
00000957 18               4760		.byte	24
00000958 4170706c46626c47 4761		.strz	"ApplFblGetModuleHeaderAddress"
00000960 65744d6f64756c65
00000968 4865616465724164
00000970 647265737300    
00000976 a002             4762		.byte	160,2
00000978 0d               4763		.byte	13
00000979 34               4764		.byte	52
0000097a 00000000         4765		.long	.LDW_5bc5270
0000097e 01               4766		.byte	1
0000097f 00               4767		.byte	0
00000980 01               4768		.byte	1
00000981 01               4769		.byte	1
00000982 00               4770		.byte	0
00000983 01               4771		.byte	1
                          4772	
00000984 00               4773		.byte	0
                          4774	
                          4775	.LDW_5e06a30:
00000985 18               4776		.byte	24
00000986 4170706c46626c56 4777		.strz	"ApplFblValidateApp"
0000098e 616c696461746541
00000996 707000          
00000999 b202             4778		.byte	178,2
0000099b 0c               4779		.byte	12
0000099c 34               4780		.byte	52
0000099d 00000000         4781		.long	.LDW_4a1a4b0
000009a1 01               4782		.byte	1
000009a2 00               4783		.byte	0
000009a3 01               4784		.byte	1
000009a4 01               4785		.byte	1
000009a5 00               4786		.byte	0
000009a6 01               4787		.byte	1
                          4788	
000009a7 00               4789		.byte	0
                          4790	
                          4791	.LDW_5e073b0:
000009a8 17               4792		.byte	23
000009a9 4272734877576174 4793		.strz	"BrsHwWatchdogInitPowerOn"
000009b1 6368646f67496e69
000009b9 74506f7765724f6e
000009c1 00              
000009c2 ca01             4794		.byte	202,1
000009c4 06               4795		.byte	6
000009c5 36               4796		.byte	54
000009c6 01               4797		.byte	1
000009c7 00               4798		.byte	0
000009c8 01               4799		.byte	1
000009c9 01               4800		.byte	1
000009ca 00               4801		.byte	0
000009cb 01               4802		.byte	1
                          4803	

                                   Fri Apr 10 08:31:51 2020           Page 87
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000009cc 00               4804		.byte	0
                          4805	
                          4806	.LDW_5e07020:
000009cd 17               4807		.byte	23
000009ce 4272734877506c6c 4808		.strz	"BrsHwPllInitPowerOn"
000009d6 496e6974506f7765
000009de 724f6e00        
000009e2 d601             4809		.byte	214,1
000009e4 06               4810		.byte	6
000009e5 36               4811		.byte	54
000009e6 01               4812		.byte	1
000009e7 00               4813		.byte	0
000009e8 01               4814		.byte	1
000009e9 01               4815		.byte	1
000009ea 00               4816		.byte	0
000009eb 01               4817		.byte	1
                          4818	
000009ec 00               4819		.byte	0
                          4820	
                          4821	.LDW_5e07870:
000009ed 17               4822		.byte	23
000009ee 4272734877506f72 4823		.strz	"BrsHwPortInitPowerOn"
000009f6 74496e6974506f77
000009fe 65724f6e00      
00000a03 fa01             4824		.byte	250,1
00000a05 06               4825		.byte	6
00000a06 36               4826		.byte	54
00000a07 01               4827		.byte	1
00000a08 00               4828		.byte	0
00000a09 01               4829		.byte	1
00000a0a 01               4830		.byte	1
00000a0b 00               4831		.byte	0
00000a0c 01               4832		.byte	1
                          4833	
00000a0d 00               4834		.byte	0
                          4835	
                          4836	.LDW_5e07f90:
00000a0e 17               4837		.byte	23
00000a0f 4272734877536f66 4838		.strz	"BrsHwSoftwareResetECU"
00000a17 7477617265526573
00000a1f 657445435500    
00000a25 f002             4839		.byte	240,2
00000a27 06               4840		.byte	6
00000a28 36               4841		.byte	54
00000a29 01               4842		.byte	1
00000a2a 00               4843		.byte	0
00000a2b 01               4844		.byte	1
00000a2c 01               4845		.byte	1
00000a2d 00               4846		.byte	0
00000a2e 01               4847		.byte	1
                          4848	
00000a2f 00               4849		.byte	0
                          4850	
                          4851	.LDW_4a1b768:
00000a30 15               4852		.byte	21
00000a31 4170706c46626c49 4853		.strz	"ApplFblInit"
00000a39 6e697400        
00000a3d fb02             4854		.byte	251,2
00000a3f 06               4855		.byte	6
00000a40 01               4856		.byte	1
00000a41 00000000         4857		.long	ApplFblInit
00000a45 00000000         4858		.long	__ghs_eofn_ApplFblInit
00000a49 0151             4859		.byte	1,81

                                   Fri Apr 10 08:31:51 2020           Page 88
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000a4b 00               4860		.byte	0
00000a4c 08               4861		.byte	8
00000a4d 00               4862		.byte	0
00000a4e 08               4863		.byte	8
00000a4f 00               4864		.byte	0
00000a50 00               4865		.byte	0
00000a51 00               4866		.byte	0
00000a52 01               4867		.byte	1
00000a53 01               4868		.byte	1
00000a54 00               4869		.byte	0
00000a55 01               4870		.byte	1
                          4871	
                          4872		.section	.debug_abbrev
00000104 15               4873		.byte	21
00000105 2e               4874		.byte	46
00000106 01               4875		.byte	1
00000107 0308             4876		.byte	3,8
00000109 3b0f             4877		.byte	59,15
0000010b 390f             4878		.byte	57,15
0000010d 3a0f             4879		.byte	58,15
0000010f 1101             4880		.byte	17,1
00000111 1201             4881		.byte	18,1
00000113 400a             4882		.byte	64,10
00000115 8341             4883		.byte	131,65
00000117 0f               4884		.byte	15
00000118 8741             4885		.byte	135,65
0000011a 0d               4886		.byte	13
0000011b 8541             4887		.byte	133,65
0000011d 0f               4888		.byte	15
0000011e 8641             4889		.byte	134,65
00000120 0d               4890		.byte	13
00000121 9241             4891		.byte	146,65
00000123 0f               4892		.byte	15
00000124 3c0c             4893		.byte	60,12
00000126 200b             4894		.byte	32,11
00000128 3f0c             4895		.byte	63,12
0000012a 320b             4896		.byte	50,11
0000012c 4c0b             4897		.byte	76,11
0000012e 270c             4898		.byte	39,12
00000130 0000             4899		.byte	0,0
                          4900	
                          4901		.section	.debug_frame
                          4902	.LDW_5dfa2c8:
00000090 00000014         4903		.long	.LDW_unq_4-.LDW_unq_3
                          4904	.LDW_unq_3:
00000094 00000000         4905		.long	.LDW_5d73e00
00000098 00000000         4906		.long	ApplFblInit
0000009c 0000003c         4907		.long	__ghs_eofn_ApplFblInit-ApplFblInit
000000a0 01               4908		.byte	1
000000a1 00000000         4909		.long	.LDW11
000000a5 00               4910		.byte	0
000000a6 00               4911		.byte	0
000000a7 00               4912		.byte	0
                          4913	.LDW_unq_4:
                          4914		.section	.debug_line
00000666 000502           4915		.byte	0,5,2

                                   Fri Apr 10 08:31:51 2020           Page 89
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000669 00000000         4916		.long	ApplFblInit
0000066d 06               4917		.byte	6
0000066e 03               4918		.byte	3
0000066f fb02             4919		.byte	251,2
00000671 02               4920		.byte	2
00000672 00               4921		.byte	0
00000673 01               4922		.byte	1
00000674 2d               4923		.byte	45
00000675 1d               4924		.byte	29
00000676 03               4925		.byte	3
00000677 09               4926		.byte	9
00000678 02               4927		.byte	2
00000679 04               4928		.byte	4
0000067a 01               4929		.byte	1
0000067b 03               4930		.byte	3
0000067c 04               4931		.byte	4
0000067d 02               4932		.byte	2
0000067e 04               4933		.byte	4
0000067f 01               4934		.byte	1
00000680 25               4935		.byte	37
00000681 25               4936		.byte	37
00000682 35               4937		.byte	53
00000683 33               4938		.byte	51
00000684 02               4939		.byte	2
00000685 08               4940		.byte	8
00000686 000101           4941		.byte	0,1,1
                          4942		.section	.debug_info
                          4943	.LDW_49d34a8:
00000a56 1f               4944		.byte	31
00000a57 00000000         4945		.long	.LDW01
00000a5b 00000000         4946		.long	.LDW11
                          4947	
                          4948		.section	.debug_abbrev
00000132 1f               4949		.byte	31
00000133 0b               4950		.byte	11
00000134 01               4951		.byte	1
00000135 1101             4952		.byte	17,1
00000137 1201             4953		.byte	18,1
00000139 0000             4954		.byte	0,0
                          4955	
                          4956		.section	.debug_info
00000a5f 00               4957		.byte	0
                          4958	
00000a60 00               4959		.byte	0
                          4960	
                          4961	.LDW_4a1d9e8:
00000a61 15               4962		.byte	21
00000a62 4170706c46626c53 4963		.strz	"ApplFblStartup"
00000a6a 74617274757000  
00000a71 a503             4964		.byte	165,3
00000a73 06               4965		.byte	6
00000a74 01               4966		.byte	1
00000a75 00000000         4967		.long	ApplFblStartup
00000a79 00000000         4968		.long	__ghs_eofn_ApplFblStartup
00000a7d 0151             4969		.byte	1,81
00000a7f 03               4970		.byte	3
00000a80 00               4971		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 90
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000a81 00               4972		.byte	0
00000a82 00               4973		.byte	0
00000a83 00               4974		.byte	0
00000a84 00               4975		.byte	0
00000a85 00               4976		.byte	0
00000a86 01               4977		.byte	1
00000a87 01               4978		.byte	1
00000a88 00               4979		.byte	0
00000a89 01               4980		.byte	1
                          4981	
                          4982		.section	.debug_frame
                          4983	.LDW_5dfa3c8:
000000a8 00000014         4984		.long	.LDW_unq_6-.LDW_unq_5
                          4985	.LDW_unq_5:
000000ac 00000000         4986		.long	.LDW_5d73e00
000000b0 00000000         4987		.long	ApplFblStartup
000000b4 0000001e         4988		.long	__ghs_eofn_ApplFblStartup-ApplFblStartup
000000b8 01               4989		.byte	1
000000b9 00000000         4990		.long	.LDW51
000000bd 00               4991		.byte	0
000000be 00               4992		.byte	0
000000bf 00               4993		.byte	0
                          4994	.LDW_unq_6:
                          4995		.section	.debug_line
00000689 000502           4996		.byte	0,5,2
0000068c 00000000         4997		.long	ApplFblStartup
00000690 06               4998		.byte	6
00000691 03               4999		.byte	3
00000692 a603             5000		.byte	166,3
00000694 02               5001		.byte	2
00000695 00               5002		.byte	0
00000696 01               5003		.byte	1
00000697 000502           5004		.byte	0,5,2
0000069a 00000000         5005		.long	.LDWlin2
0000069e 03               5006		.byte	3
0000069f 21               5007		.byte	33
000006a0 02               5008		.byte	2
000006a1 00               5009		.byte	0
000006a2 01               5010		.byte	1
000006a3 02               5011		.byte	2
000006a4 00               5012		.byte	0
000006a5 0b               5013		.byte	11
000006a6 03               5014		.byte	3
000006a7 72               5015		.byte	114
000006a8 02               5016		.byte	2
000006a9 02               5017		.byte	2
000006aa 01               5018		.byte	1
000006ab 0b               5019		.byte	11
000006ac 0d               5020		.byte	13
000006ad 0b               5021		.byte	11
000006ae 0d               5022		.byte	13
000006af 02               5023		.byte	2
000006b0 00               5024		.byte	0
000006b1 0c               5025		.byte	12
000006b2 000502           5026		.byte	0,5,2
000006b5 00000000         5027		.long	.LDWlin3

                                   Fri Apr 10 08:31:51 2020           Page 91
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000006b9 03               5028		.byte	3
000006ba 65               5029		.byte	101
000006bb 02               5030		.byte	2
000006bc 00               5031		.byte	0
000006bd 01               5032		.byte	1
000006be 0d               5033		.byte	13
000006bf 0b               5034		.byte	11
000006c0 0d               5035		.byte	13
000006c1 0b               5036		.byte	11
000006c2 0d               5037		.byte	13
000006c3 0b               5038		.byte	11
000006c4 0c               5039		.byte	12
000006c5 000502           5040		.byte	0,5,2
000006c8 00000000         5041		.long	__ghs_eofn_ApplFblStartup
000006cc 0b               5042		.byte	11
000006cd 000101           5043		.byte	0,1,1
                          5044		.section	.debug_info
                          5045	.LDW_4a1a458:
00000a8a 11               5046		.byte	17
00000a8b 696e6974706f7369 5047		.strz	"initposition"
00000a93 74696f6e00      
00000a98 a503             5048		.byte	165,3
00000a9a 1d               5049		.byte	29
00000a9b 01               5050		.byte	1
00000a9c 00000000         5051		.long	.LDW_4a1b9a0
00000aa0 00               5052		.byte	0
00000aa1 0153             5053		.byte	1,83
                          5054	
                          5055		.section	.debug_abbrev
0000013b 11               5056		.byte	17
0000013c 05               5057		.byte	5
0000013d 00               5058		.byte	0
0000013e 0308             5059		.byte	3,8
00000140 3b0f             5060		.byte	59,15
00000142 390f             5061		.byte	57,15
00000144 3a0f             5062		.byte	58,15
00000146 4910             5063		.byte	73,16
00000148 4b0c             5064		.byte	75,12
0000014a 020a             5065		.byte	2,10
0000014c 0000             5066		.byte	0,0
                          5067	
                          5068		.section	.debug_info
                          5069	.LDW_49d31d8:
00000aa3 1f               5070		.byte	31
00000aa4 00000000         5071		.long	.LDW41
00000aa8 00000000         5072		.long	.LDW51
                          5073	
00000aac 00               5074		.byte	0
                          5075	
00000aad 00               5076		.byte	0
                          5077	
                          5078	.LDW_4a1a508:
00000aae 16               5079		.byte	22
00000aaf 4170706c46626c43 5080		.strz	"ApplFblCheckProgConditions"
00000ab7 6865636b50726f67
00000abf 436f6e646974696f
00000ac7 6e7300          
00000aca d203             5081		.byte	210,3
00000acc 0c               5082		.byte	12
00000acd 01               5083		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 92
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000ace 00000000         5084		.long	.LDW_4a1a4b0
00000ad2 00000000         5085		.long	ApplFblCheckProgConditions
00000ad6 00000000         5086		.long	__ghs_eofn_ApplFblCheckProgConditions
00000ada 0151             5087		.byte	1,81
00000adc 03               5088		.byte	3
00000add 00               5089		.byte	0
00000ade 00               5090		.byte	0
00000adf 00               5091		.byte	0
00000ae0 00               5092		.byte	0
00000ae1 00               5093		.byte	0
00000ae2 00               5094		.byte	0
00000ae3 01               5095		.byte	1
00000ae4 01               5096		.byte	1
00000ae5 00               5097		.byte	0
00000ae6 01               5098		.byte	1
                          5099	
                          5100		.section	.debug_abbrev
0000014e 16               5101		.byte	22
0000014f 2e               5102		.byte	46
00000150 01               5103		.byte	1
00000151 0308             5104		.byte	3,8
00000153 3b0f             5105		.byte	59,15
00000155 390f             5106		.byte	57,15
00000157 3a0f             5107		.byte	58,15
00000159 4910             5108		.byte	73,16
0000015b 1101             5109		.byte	17,1
0000015d 1201             5110		.byte	18,1
0000015f 400a             5111		.byte	64,10
00000161 8341             5112		.byte	131,65
00000163 0f               5113		.byte	15
00000164 8741             5114		.byte	135,65
00000166 0d               5115		.byte	13
00000167 8541             5116		.byte	133,65
00000169 0f               5117		.byte	15
0000016a 8641             5118		.byte	134,65
0000016c 0d               5119		.byte	13
0000016d 9241             5120		.byte	146,65
0000016f 0f               5121		.byte	15
00000170 3c0c             5122		.byte	60,12
00000172 200b             5123		.byte	32,11
00000174 3f0c             5124		.byte	63,12
00000176 320b             5125		.byte	50,11
00000178 4c0b             5126		.byte	76,11
0000017a 270c             5127		.byte	39,12
0000017c 0000             5128		.byte	0,0
                          5129	
                          5130		.section	.debug_frame
                          5131	.LDW_5dfa208:
000000c0 00000014         5132		.long	.LDW_unq_8-.LDW_unq_7
                          5133	.LDW_unq_7:
000000c4 00000000         5134		.long	.LDW_5d73e00
000000c8 00000000         5135		.long	ApplFblCheckProgConditions
000000cc 00000004         5136		.long	__ghs_eofn_ApplFblCheckProgConditions-ApplFblCheckProgConditions
000000d0 01               5137		.byte	1
000000d1 00000000         5138		.long	.LDW71
000000d5 00               5139		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 93
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000000d6 00               5140		.byte	0
000000d7 00               5141		.byte	0
                          5142	.LDW_unq_8:
                          5143		.section	.debug_line
000006d0 000502           5144		.byte	0,5,2
000006d3 00000000         5145		.long	ApplFblCheckProgConditions
000006d7 06               5146		.byte	6
000006d8 03               5147		.byte	3
000006d9 ed03             5148		.byte	237,3
000006db 02               5149		.byte	2
000006dc 00               5150		.byte	0
000006dd 01               5151		.byte	1
000006de 06               5152		.byte	6
000006df 02               5153		.byte	2
000006e0 02               5154		.byte	2
000006e1 02               5155		.byte	2
000006e2 02               5156		.byte	2
000006e3 000101           5157		.byte	0,1,1
                          5158		.section	.debug_info
                          5159	.LDW_49d34d8:
00000ae7 1f               5160		.byte	31
00000ae8 00000000         5161		.long	.LDW61
00000aec 00000000         5162		.long	.LDW71
                          5163	
                          5164	.LDW_4a1a5a0:
00000af0 07               5165		.byte	7
00000af1 726573756c7400   5166		.strz	"result"
00000af8 d703             5167		.byte	215,3
00000afa 0f               5168		.byte	15
00000afb 01               5169		.byte	1
00000afc 00000000         5170		.long	.LDW_4a1a4b0
00000b00 00               5171		.byte	0
00000b01 00               5172		.byte	0
                          5173	
00000b02 00               5174		.byte	0
                          5175	
00000b03 00               5176		.byte	0
                          5177	
                          5178	.LDW_4a1a6a8:
00000b04 16               5179		.byte	22
00000b05 4170706c46626c43 5180		.strz	"ApplFblCheckConditions"
00000b0d 6865636b436f6e64
00000b15 6974696f6e7300  
00000b1c fb03             5181		.byte	251,3
00000b1e 0c               5182		.byte	12
00000b1f 01               5183		.byte	1
00000b20 00000000         5184		.long	.LDW_4a1a4b0
00000b24 00000000         5185		.long	ApplFblCheckConditions
00000b28 00000000         5186		.long	__ghs_eofn_ApplFblCheckConditions
00000b2c 0151             5187		.byte	1,81
00000b2e 03               5188		.byte	3
00000b2f 00               5189		.byte	0
00000b30 00               5190		.byte	0
00000b31 00               5191		.byte	0
00000b32 00               5192		.byte	0
00000b33 00               5193		.byte	0
00000b34 00               5194		.byte	0
00000b35 01               5195		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 94
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000b36 01               5196		.byte	1
00000b37 00               5197		.byte	0
00000b38 01               5198		.byte	1
                          5199	
                          5200		.section	.debug_frame
                          5201	.LDW_5dfa7c8:
000000d8 00000014         5202		.long	.LDW_unq_a-.LDW_unq_9
                          5203	.LDW_unq_9:
000000dc 00000000         5204		.long	.LDW_5d73e00
000000e0 00000000         5205		.long	ApplFblCheckConditions
000000e4 00000004         5206		.long	__ghs_eofn_ApplFblCheckConditions-ApplFblCheckConditions
000000e8 01               5207		.byte	1
000000e9 00000000         5208		.long	.LDW91
000000ed 00               5209		.byte	0
000000ee 00               5210		.byte	0
000000ef 00               5211		.byte	0
                          5212	.LDW_unq_a:
                          5213		.section	.debug_line
000006e6 000502           5214		.byte	0,5,2
000006e9 00000000         5215		.long	ApplFblCheckConditions
000006ed 06               5216		.byte	6
000006ee 03               5217		.byte	3
000006ef c404             5218		.byte	196,4
000006f1 02               5219		.byte	2
000006f2 00               5220		.byte	0
000006f3 01               5221		.byte	1
000006f4 06               5222		.byte	6
000006f5 02               5223		.byte	2
000006f6 02               5224		.byte	2
000006f7 02               5225		.byte	2
000006f8 02               5226		.byte	2
000006f9 000101           5227		.byte	0,1,1
                          5228		.section	.debug_info
                          5229	.LDW_4a1a740:
00000b39 11               5230		.byte	17
00000b3a 7062446961674461 5231		.strz	"pbDiagData"
00000b42 746100          
00000b45 fb03             5232		.byte	251,3
00000b47 2d               5233		.byte	45
00000b48 01               5234		.byte	1
00000b49 00000000         5235		.long	.LDW_49dc490
00000b4d 00               5236		.byte	0
00000b4e 0153             5237		.byte	1,83
                          5238	
                          5239	.LDW_4a1a798:
00000b50 11               5240		.byte	17
00000b51 6469616752657144 5241		.strz	"diagReqDataLen"
00000b59 6174614c656e00  
00000b60 fb03             5242		.byte	251,3
00000b62 45               5243		.byte	69
00000b63 01               5244		.byte	1
00000b64 00000000         5245		.long	.LDW_4a1a650
00000b68 00               5246		.byte	0
00000b69 0154             5247		.byte	1,84
                          5248	
                          5249	.LDW_49d3538:
00000b6b 1f               5250		.byte	31
00000b6c 00000000         5251		.long	.LDW81

                                   Fri Apr 10 08:31:51 2020           Page 95
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000b70 00000000         5252		.long	.LDW91
                          5253	
00000b74 00               5254		.byte	0
                          5255	
00000b75 00               5256		.byte	0
                          5257	
                          5258	.LDW_4a1a7f0:
00000b76 16               5259		.byte	22
00000b77 4170706c46626c43 5260		.strz	"ApplFblCheckSwSwCompatibility"
00000b7f 6865636b53775377
00000b87 436f6d7061746962
00000b8f 696c69747900    
00000b95 ce04             5261		.byte	206,4
00000b97 0f               5262		.byte	15
00000b98 01               5263		.byte	1
00000b99 00000000         5264		.long	.LDW_4a1b9a0
00000b9d 00000000         5265		.long	ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
00000ba1 00000000         5266		.long	__ghs_eofn_ApplFblCheckSwSwCompatibility
00000ba5 0151             5267		.byte	1,81
00000ba7 8080808008       5268		.byte	128,128,128,128,8
00000bac 34               5269		.byte	52
00000bad 00               5270		.byte	0
00000bae 38               5271		.byte	56
00000baf 00               5272		.byte	0
00000bb0 00               5273		.byte	0
00000bb1 00               5274		.byte	0
00000bb2 00               5275		.byte	0
00000bb3 01               5276		.byte	1
00000bb4 00               5277		.byte	0
00000bb5 01               5278		.byte	1
                          5279	
                          5280		.section	.debug_frame
                          5281	.LDW_5dfa848:
000000f0 00000014         5282		.long	.LDW_unq_c-.LDW_unq_b
                          5283	.LDW_unq_b:
000000f4 00000000         5284		.long	.LDW_5d73e00
000000f8 00000000         5285		.long	ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
000000fc 00000090         5286		.long	__ghs_eofn_ApplFblCheckSwSwCompatibility-ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
00000100 01               5287		.byte	1
00000101 00000000         5288		.long	.LDW12
00000105 00               5289		.byte	0
00000106 00               5290		.byte	0
00000107 00               5291		.byte	0
                          5292	.LDW_unq_c:
                          5293		.section	.debug_line
000006fc 000502           5294		.byte	0,5,2
000006ff 00000000         5295		.long	ApplFblCheckSwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
00000703 06               5296		.byte	6
00000704 03               5297		.byte	3
00000705 ce04             5298		.byte	206,4
00000707 02               5299		.byte	2
00000708 00               5300		.byte	0
00000709 01               5301		.byte	1
0000070a 03               5302		.byte	3
0000070b 0b               5303		.byte	11
0000070c 02               5304		.byte	2
0000070d 0a               5305		.byte	10
0000070e 01               5306		.byte	1
0000070f 000502           5307		.byte	0,5,2

                                   Fri Apr 10 08:31:51 2020           Page 96
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000712 00000000         5308		.long	.LDWlin5
00000716 0b               5309		.byte	11
00000717 0c               5310		.byte	12
00000718 000502           5311		.byte	0,5,2
0000071b 00000000         5312		.long	.LDWlin6
0000071f 0b               5313		.byte	11
00000720 02               5314		.byte	2
00000721 00               5315		.byte	0
00000722 0d               5316		.byte	13
00000723 45               5317		.byte	69
00000724 02               5318		.byte	2
00000725 02               5319		.byte	2
00000726 000502           5320		.byte	0,5,2
00000729 00000000         5321		.long	.LDWlin7
0000072d 03               5322		.byte	3
0000072e 04               5323		.byte	4
0000072f 02               5324		.byte	2
00000730 00               5325		.byte	0
00000731 01               5326		.byte	1
00000732 000502           5327		.byte	0,5,2
00000735 00000000         5328		.long	.LDWlin8
00000739 0b               5329		.byte	11
0000073a 0c               5330		.byte	12
0000073b 03               5331		.byte	3
0000073c 06               5332		.byte	6
0000073d 02               5333		.byte	2
0000073e 10               5334		.byte	16
0000073f 01               5335		.byte	1
00000740 02               5336		.byte	2
00000741 04               5337		.byte	4
00000742 000502           5338		.byte	0,5,2
00000745 00000000         5339		.long	.LDWlin9
00000749 0c               5340		.byte	12
0000074a 0c               5341		.byte	12
0000074b 000502           5342		.byte	0,5,2
0000074e 00000000         5343		.long	.LDWlin10
00000752 0b               5344		.byte	11
00000753 02               5345		.byte	2
00000754 00               5346		.byte	0
00000755 0b               5347		.byte	11
00000756 02               5348		.byte	2
00000757 00               5349		.byte	0
00000758 03               5350		.byte	3
00000759 6d               5351		.byte	109
0000075a 02               5352		.byte	2
0000075b 00               5353		.byte	0
0000075c 01               5354		.byte	1
0000075d 000502           5355		.byte	0,5,2
00000760 00000000         5356		.long	.LDWlin11
00000764 03               5357		.byte	3
00000765 14               5358		.byte	20
00000766 02               5359		.byte	2
00000767 00               5360		.byte	0
00000768 01               5361		.byte	1
00000769 0d               5362		.byte	13
0000076a 06               5363		.byte	6

                                   Fri Apr 10 08:31:51 2020           Page 97
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000076b 02               5364		.byte	2
0000076c 02               5365		.byte	2
0000076d 02               5366		.byte	2
0000076e 0c               5367		.byte	12
0000076f 000101           5368		.byte	0,1,1
                          5369		.section	.debug_info
                          5370	.LDW_49d3598:
00000bb6 1f               5371		.byte	31
00000bb7 00000000         5372		.long	.LDW02
00000bbb 00000000         5373		.long	.LDW12
                          5374	
                          5375	.LDW_5bc4ca8:
00000bbf 06               5376		.byte	6
00000bc0 69647800         5377		.strz	"idx"
00000bc4 d404             5378		.byte	212,4
00000bc6 0b               5379		.byte	11
00000bc7 01               5380		.byte	1
00000bc8 00000000         5381		.long	.LDW_4a1b9a0
00000bcc 00               5382		.byte	0
00000bcd 00               5383		.byte	0
00000bce 016f             5384		.byte	1,111
                          5385	
                          5386	.LDW_5bc4d88:
00000bd0 06               5387		.byte	6
00000bd1 61637475616c5665 5388		.strz	"actualVersion"
00000bd9 7273696f6e00    
00000bdf d504             5389		.byte	213,4
00000be1 0b               5390		.byte	11
00000be2 01               5391		.byte	1
00000be3 00000000         5392		.long	.LDW_5bc4d00
00000be7 00               5393		.byte	0
00000be8 00               5394		.byte	0
00000be9 0271             5395		.byte	2,113
00000beb 0c               5396		.byte	12
                          5397	
                          5398	.LDW_5bc4e68:
00000bec 06               5399		.byte	6
00000bed 7265666572656e63 5400		.strz	"referenceVersion"
00000bf5 6556657273696f6e
00000bfd 00              
00000bfe d604             5401		.byte	214,4
00000c00 0b               5402		.byte	11
00000c01 01               5403		.byte	1
00000c02 00000000         5404		.long	.LDW_5bc4de0
00000c06 00               5405		.byte	0
00000c07 00               5406		.byte	0
00000c08 0271             5407		.byte	2,113
00000c0a 20               5408		.byte	32
                          5409	
                          5410	.LDW_5bc4f48:
00000c0b 06               5411		.byte	6
00000c0c 76616c6964697479 5412		.strz	"validityFlags"
00000c14 466c61677300    
00000c1a d704             5413		.byte	215,4
00000c1c 0b               5414		.byte	11
00000c1d 01               5415		.byte	1
00000c1e 00000000         5416		.long	.LDW_5bc4ec0
00000c22 00               5417		.byte	0
00000c23 00               5418		.byte	0
00000c24 0271             5419		.byte	2,113

                                   Fri Apr 10 08:31:51 2020           Page 98
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000c26 08               5420		.byte	8
                          5421	
00000c27 00               5422		.byte	0
                          5423	
00000c28 00               5424		.byte	0
                          5425	
                          5426	.LDW_5bc4fa0:
00000c29 16               5427		.byte	22
00000c2a 4170706c46626c43 5428		.strz	"ApplFblCheckHwSwCompatibility"
00000c32 6865636b48775377
00000c3a 436f6d7061746962
00000c42 696c69747900    
00000c48 8705             5429		.byte	135,5
00000c4a 0f               5430		.byte	15
00000c4b 01               5431		.byte	1
00000c4c 00000000         5432		.long	.LDW_4a1b9a0
00000c50 00000000         5433		.long	ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
00000c54 00000000         5434		.long	__ghs_eofn_ApplFblCheckHwSwCompatibility
00000c58 0151             5435		.byte	1,81
00000c5a 808080800e       5436		.byte	128,128,128,128,14
00000c5f 0c               5437		.byte	12
00000c60 00               5438		.byte	0
00000c61 18               5439		.byte	24
00000c62 00               5440		.byte	0
00000c63 00               5441		.byte	0
00000c64 00               5442		.byte	0
00000c65 00               5443		.byte	0
00000c66 01               5444		.byte	1
00000c67 00               5445		.byte	0
00000c68 01               5446		.byte	1
                          5447	
                          5448		.section	.debug_frame
                          5449	.LDW_5dfa608:
00000108 00000014         5450		.long	.LDW_unq_e-.LDW_unq_d
                          5451	.LDW_unq_d:
0000010c 00000000         5452		.long	.LDW_5d73e00
00000110 00000000         5453		.long	ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
00000114 00000062         5454		.long	__ghs_eofn_ApplFblCheckHwSwCompatibility-ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
00000118 01               5455		.byte	1
00000119 00000000         5456		.long	.LDW32
0000011d 00               5457		.byte	0
0000011e 00               5458		.byte	0
0000011f 00               5459		.byte	0
                          5460	.LDW_unq_e:
                          5461		.section	.debug_line
00000772 000502           5462		.byte	0,5,2
00000775 00000000         5463		.long	ApplFblCheckHwSwCompatibility..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cfbl_ap.
00000779 06               5464		.byte	6
0000077a 03               5465		.byte	3
0000077b 8705             5466		.byte	135,5
0000077d 02               5467		.byte	2
0000077e 00               5468		.byte	0
0000077f 01               5469		.byte	1
00000780 03               5470		.byte	3
00000781 08               5471		.byte	8
00000782 02               5472		.byte	2
00000783 0c               5473		.byte	12
00000784 01               5474		.byte	1
00000785 13               5475		.byte	19

                                   Fri Apr 10 08:31:51 2020           Page 99
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000786 15               5476		.byte	21
00000787 2d               5477		.byte	45
00000788 3b               5478		.byte	59
00000789 15               5479		.byte	21
0000078a 000502           5480		.byte	0,5,2
0000078d 00000000         5481		.long	.LDWlin12
00000791 0c               5482		.byte	12
00000792 3b               5483		.byte	59
00000793 02               5484		.byte	2
00000794 02               5485		.byte	2
00000795 000502           5486		.byte	0,5,2
00000798 00000000         5487		.long	.LDWlin13
0000079c 0c               5488		.byte	12
0000079d 0c               5489		.byte	12
0000079e 02               5490		.byte	2
0000079f 00               5491		.byte	0
000007a0 0b               5492		.byte	11
000007a1 13               5493		.byte	19
000007a2 03               5494		.byte	3
000007a3 77               5495		.byte	119
000007a4 02               5496		.byte	2
000007a5 04               5497		.byte	4
000007a6 01               5498		.byte	1
000007a7 000502           5499		.byte	0,5,2
000007aa 00000000         5500		.long	.LDWlin14
000007ae 03               5501		.byte	3
000007af 0a               5502		.byte	10
000007b0 02               5503		.byte	2
000007b1 00               5504		.byte	0
000007b2 01               5505		.byte	1
000007b3 0c               5506		.byte	12
000007b4 06               5507		.byte	6
000007b5 02               5508		.byte	2
000007b6 02               5509		.byte	2
000007b7 02               5510		.byte	2
000007b8 0c               5511		.byte	12
000007b9 000101           5512		.byte	0,1,1
                          5513		.section	.debug_info
                          5514	.LDW_5bc5038:
00000c69 11               5515		.byte	17
00000c6a 626c6f636b496478 5516		.strz	"blockIdx"
00000c72 00              
00000c73 8705             5517		.byte	135,5
00000c75 35               5518		.byte	53
00000c76 01               5519		.byte	1
00000c77 00000000         5520		.long	.LDW_4a1b9a0
00000c7b 00               5521		.byte	0
00000c7c 0153             5522		.byte	1,83
                          5523	
                          5524	.LDW_49d3208:
00000c7e 1f               5525		.byte	31
00000c7f 00000000         5526		.long	.LDW22
00000c83 00000000         5527		.long	.LDW32
                          5528	
                          5529	.LDW_5bc5090:
00000c87 06               5530		.byte	6
00000c88 636f6d7061746962 5531		.strz	"compatibilityListLength"
00000c90 696c6974794c6973
00000c98 744c656e67746800

                                   Fri Apr 10 08:31:51 2020           Page 100
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000ca0 8905             5532		.byte	137,5
00000ca2 0b               5533		.byte	11
00000ca3 01               5534		.byte	1
00000ca4 00000000         5535		.long	.LDW_4a1b9a0
00000ca8 00               5536		.byte	0
00000ca9 00               5537		.byte	0
00000caa 0271             5538		.byte	2,113
00000cac 08               5539		.byte	8
                          5540	
                          5541	.LDW_5bc5168:
00000cad 06               5542		.byte	6
00000cae 70436f6d70617469 5543		.strz	"pCompatibilityField"
00000cb6 62696c6974794669
00000cbe 656c6400        
00000cc2 8a05             5544		.byte	138,5
00000cc4 10               5545		.byte	16
00000cc5 01               5546		.byte	1
00000cc6 00000000         5547		.long	.LDW_5bc5270
00000cca 00               5548		.byte	0
00000ccb 00               5549		.byte	0
00000ccc 016f             5550		.byte	1,111
                          5551	
                          5552	.LDW_5bc54d8:
00000cce 06               5553		.byte	6
00000ccf 76657273696f6e42 5554		.strz	"versionBuffer"
00000cd7 756666657200    
00000cdd 8b05             5555		.byte	139,5
00000cdf 0b               5556		.byte	11
00000ce0 01               5557		.byte	1
00000ce1 00000000         5558		.long	.LDW_5bc5948
00000ce5 00               5559		.byte	0
00000ce6 00               5560		.byte	0
00000ce7 0271             5561		.byte	2,113
00000ce9 09               5562		.byte	9
                          5563	
                          5564	.LDW_5bc58a0:
00000cea 06               5565		.byte	6
00000ceb 6c697374496e6465 5566		.strz	"listIndex"
00000cf3 7800            
00000cf5 8c05             5567		.byte	140,5
00000cf7 0b               5568		.byte	11
00000cf8 01               5569		.byte	1
00000cf9 00000000         5570		.long	.LDW_4a1b9a0
00000cfd 00               5571		.byte	0
00000cfe 00               5572		.byte	0
00000cff 016d             5573		.byte	1,109
                          5574	
                          5575	.LDW_5bc5588:
00000d01 06               5576		.byte	6
00000d02 72657475726e5661 5577		.strz	"returnValue"
00000d0a 6c756500        
00000d0e 8d05             5578		.byte	141,5
00000d10 0b               5579		.byte	11
00000d11 01               5580		.byte	1
00000d12 00000000         5581		.long	.LDW_4a1b9a0
00000d16 00               5582		.byte	0
00000d17 00               5583		.byte	0
00000d18 016e             5584		.byte	1,110
                          5585	
00000d1a 00               5586		.byte	0
                          5587	

                                   Fri Apr 10 08:31:51 2020           Page 101
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000d1b 00               5588		.byte	0
                          5589	
                          5590	.LDW_5bc59d0:
00000d1c 16               5591		.byte	22
00000d1d 4170706c46626c43 5592		.strz	"ApplFblCheckProgDependencies"
00000d25 6865636b50726f67
00000d2d 446570656e64656e
00000d35 6369657300      
00000d3a b005             5593		.byte	176,5
00000d3c 08               5594		.byte	8
00000d3d 01               5595		.byte	1
00000d3e 00000000         5596		.long	.LDW_4a1b9a0
00000d42 00000000         5597		.long	ApplFblCheckProgDependencies
00000d46 00000000         5598		.long	__ghs_eofn_ApplFblCheckProgDependencies
00000d4a 0151             5599		.byte	1,81
00000d4c 808080800f       5600		.byte	128,128,128,128,15
00000d51 20               5601		.byte	32
00000d52 00               5602		.byte	0
00000d53 30               5603		.byte	48
00000d54 00               5604		.byte	0
00000d55 00               5605		.byte	0
00000d56 00               5606		.byte	0
00000d57 01               5607		.byte	1
00000d58 01               5608		.byte	1
00000d59 00               5609		.byte	0
00000d5a 01               5610		.byte	1
                          5611	
                          5612		.section	.debug_frame
                          5613	.LDW_5dfa888:
00000120 00000014         5614		.long	.LDW_unq_10-.LDW_unq_f
                          5615	.LDW_unq_f:
00000124 00000000         5616		.long	.LDW_5d73e00
00000128 00000000         5617		.long	ApplFblCheckProgDependencies
0000012c 000000c6         5618		.long	__ghs_eofn_ApplFblCheckProgDependencies-ApplFblCheckProgDependencies
00000130 01               5619		.byte	1
00000131 00000000         5620		.long	.LDW92
00000135 00               5621		.byte	0
00000136 00               5622		.byte	0
00000137 00               5623		.byte	0
                          5624	.LDW_unq_10:
                          5625		.section	.debug_line
000007bc 000502           5626		.byte	0,5,2
000007bf 00000000         5627		.long	ApplFblCheckProgDependencies
000007c3 06               5628		.byte	6
000007c4 03               5629		.byte	3
000007c5 b005             5630		.byte	176,5
000007c7 02               5631		.byte	2
000007c8 00               5632		.byte	0
000007c9 01               5633		.byte	1
000007ca 03               5634		.byte	3
000007cb 09               5635		.byte	9
000007cc 02               5636		.byte	2
000007cd 0c               5637		.byte	12
000007ce 01               5638		.byte	1
000007cf 000502           5639		.byte	0,5,2
000007d2 00000000         5640		.long	.LDWlin15
000007d6 0d               5641		.byte	13
000007d7 0c               5642		.byte	12
000007d8 0d               5643		.byte	13

                                   Fri Apr 10 08:31:51 2020           Page 102
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000007d9 000502           5644		.byte	0,5,2
000007dc 00000000         5645		.long	.LDWlin16
000007e0 0d               5646		.byte	13
000007e1 02               5647		.byte	2
000007e2 00               5648		.byte	0
000007e3 0b               5649		.byte	11
000007e4 02               5650		.byte	2
000007e5 00               5651		.byte	0
000007e6 0c               5652		.byte	12
000007e7 0b               5653		.byte	11
000007e8 0b               5654		.byte	11
000007e9 0c               5655		.byte	12
000007ea 000502           5656		.byte	0,5,2
000007ed 00000000         5657		.long	.LDWlin17
000007f1 0b               5658		.byte	11
000007f2 0b               5659		.byte	11
000007f3 13               5660		.byte	19
000007f4 000502           5661		.byte	0,5,2
000007f7 00000000         5662		.long	.LDWlin18
000007fb 0b               5663		.byte	11
000007fc 02               5664		.byte	2
000007fd 00               5665		.byte	0
000007fe 0b               5666		.byte	11
000007ff 0b               5667		.byte	11
00000800 02               5668		.byte	2
00000801 00               5669		.byte	0
00000802 0c               5670		.byte	12
00000803 0b               5671		.byte	11
00000804 0c               5672		.byte	12
00000805 000502           5673		.byte	0,5,2
00000808 00000000         5674		.long	.LDWlin19
0000080c 0d               5675		.byte	13
0000080d 13               5676		.byte	19
0000080e 000502           5677		.byte	0,5,2
00000811 00000000         5678		.long	.LDWlin20
00000815 0d               5679		.byte	13
00000816 000502           5680		.byte	0,5,2
00000819 00000000         5681		.long	.LDWlin21
0000081d 0b               5682		.byte	11
0000081e 0b               5683		.byte	11
0000081f 000502           5684		.byte	0,5,2
00000822 00000000         5685		.long	.LDWlin22
00000826 0b               5686		.byte	11
00000827 02               5687		.byte	2
00000828 00               5688		.byte	0
00000829 0b               5689		.byte	11
0000082a 03               5690		.byte	3
0000082b 79               5691		.byte	121
0000082c 02               5692		.byte	2
0000082d 02               5693		.byte	2
0000082e 01               5694		.byte	1
0000082f 000502           5695		.byte	0,5,2
00000832 00000000         5696		.long	.LDWlin23
00000836 03               5697		.byte	3
00000837 08               5698		.byte	8
00000838 02               5699		.byte	2

                                   Fri Apr 10 08:31:51 2020           Page 103
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000839 00               5700		.byte	0
0000083a 01               5701		.byte	1
0000083b 0b               5702		.byte	11
0000083c 02               5703		.byte	2
0000083d 00               5704		.byte	0
0000083e 03               5705		.byte	3
0000083f 0a               5706		.byte	10
00000840 02               5707		.byte	2
00000841 00               5708		.byte	0
00000842 01               5709		.byte	1
00000843 0b               5710		.byte	11
00000844 03               5711		.byte	3
00000845 04               5712		.byte	4
00000846 02               5713		.byte	2
00000847 00               5714		.byte	0
00000848 01               5715		.byte	1
00000849 1b               5716		.byte	27
0000084a 34               5717		.byte	52
0000084b 43               5718		.byte	67
0000084c 43               5719		.byte	67
0000084d 45               5720		.byte	69
0000084e 06               5721		.byte	6
0000084f 000502           5722		.byte	0,5,2
00000852 00000000         5723		.long	.LDWlin24
00000856 03               5724		.byte	3
00000857 41               5725		.byte	65
00000858 02               5726		.byte	2
00000859 00               5727		.byte	0
0000085a 01               5728		.byte	1
0000085b 03               5729		.byte	3
0000085c 08               5730		.byte	8
0000085d 02               5731		.byte	2
0000085e 00               5732		.byte	0
0000085f 01               5733		.byte	1
00000860 06               5734		.byte	6
00000861 03               5735		.byte	3
00000862 38               5736		.byte	56
00000863 02               5737		.byte	2
00000864 00               5738		.byte	0
00000865 01               5739		.byte	1
00000866 0b               5740		.byte	11
00000867 13               5741		.byte	19
00000868 02               5742		.byte	2
00000869 00               5743		.byte	0
0000086a 0b               5744		.byte	11
0000086b 02               5745		.byte	2
0000086c 00               5746		.byte	0
0000086d 0c               5747		.byte	12
0000086e 06               5748		.byte	6
0000086f 02               5749		.byte	2
00000870 02               5750		.byte	2
00000871 02               5751		.byte	2
00000872 0e               5752		.byte	14
00000873 000101           5753		.byte	0,1,1
                          5754		.section	.debug_info
                          5755	.LDW_49d3238:

                                   Fri Apr 10 08:31:51 2020           Page 104
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000d5b 1f               5756		.byte	31
00000d5c 00000000         5757		.long	.LDW42
00000d60 00000000         5758		.long	.LDW92
                          5759	
                          5760	.LDW_5bc5320:
00000d64 06               5761		.byte	6
00000d65 726573756c7400   5762		.strz	"result"
00000d6c b205             5763		.byte	178,5
00000d6e 0b               5764		.byte	11
00000d6f 01               5765		.byte	1
00000d70 00000000         5766		.long	.LDW_4a1b9a0
00000d74 00               5767		.byte	0
00000d75 00               5768		.byte	0
00000d76 016f             5769		.byte	1,111
                          5770	
                          5771	.LDW_5bc5798:
00000d78 06               5772		.byte	6
00000d79 69647800         5773		.strz	"idx"
00000d7d b305             5774		.byte	179,5
00000d7f 0b               5775		.byte	11
00000d80 01               5776		.byte	1
00000d81 00000000         5777		.long	.LDW_5bc50e8
00000d85 00               5778		.byte	0
00000d86 00               5779		.byte	0
00000d87 016c             5780		.byte	1,108
                          5781	
                          5782	.LDW_5bc5218:
00000d89 06               5783		.byte	6
00000d8a 76616c6964697479 5784		.strz	"validityFlags"
00000d92 466c61677300    
00000d98 b405             5785		.byte	180,5
00000d9a 0b               5786		.byte	11
00000d9b 01               5787		.byte	1
00000d9c 00000000         5788		.long	.LDW_5bc5a68
00000da0 00               5789		.byte	0
00000da1 00               5790		.byte	0
00000da2 0271             5791		.byte	2,113
00000da4 08               5792		.byte	8
                          5793	
                          5794	.LDW_49d35f8:
00000da5 1f               5795		.byte	31
00000da6 00000000         5796		.long	.LDW52
00000daa 00000000         5797		.long	.LDW82
                          5798	
                          5799	.LDW_49d3658:
00000dae 1f               5800		.byte	31
00000daf 00000000         5801		.long	.LDW62
00000db3 00000000         5802		.long	.LDW72
                          5803	
                          5804	.LDW_5bc52c8:
00000db7 06               5805		.byte	6
00000db8 62756666657200   5806		.strz	"buffer"
00000dbf f005             5807		.byte	240,5
00000dc1 0e               5808		.byte	14
00000dc2 01               5809		.byte	1
00000dc3 00000000         5810		.long	.LDW_5bc5af0
00000dc7 00               5811		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 105
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000dc8 00               5812		.byte	0
00000dc9 0271             5813		.byte	2,113
00000dcb 0c               5814		.byte	12
                          5815	
                          5816	.LDW_5bc5378:
00000dcc 07               5817		.byte	7
00000dcd 6170706c48647241 5818		.strz	"applHdrAddr"
00000dd5 64647200        
00000dd9 f105             5819		.byte	241,5
00000ddb 13               5820		.byte	19
00000ddc 01               5821		.byte	1
00000ddd 00000000         5822		.long	.LDW_5bc5270
00000de1 00               5823		.byte	0
00000de2 00               5824		.byte	0
                          5825	
00000de3 00               5826		.byte	0
                          5827	
00000de4 00               5828		.byte	0
                          5829	
00000de5 00               5830		.byte	0
                          5831	
00000de6 00               5832		.byte	0
                          5833	
                          5834	.LDW_5bc5b78:
00000de7 15               5835		.byte	21
00000de8 4170706c54726376 5836		.strz	"ApplTrcvrNormalMode"
00000df0 724e6f726d616c4d
00000df8 6f646500        
00000dfc 8906             5837		.byte	137,6
00000dfe 06               5838		.byte	6
00000dff 01               5839		.byte	1
00000e00 00000000         5840		.long	ApplTrcvrNormalMode
00000e04 00000000         5841		.long	__ghs_eofn_ApplTrcvrNormalMode
00000e08 0151             5842		.byte	1,81
00000e0a 03               5843		.byte	3
00000e0b 00               5844		.byte	0
00000e0c 00               5845		.byte	0
00000e0d 00               5846		.byte	0
00000e0e 00               5847		.byte	0
00000e0f 00               5848		.byte	0
00000e10 00               5849		.byte	0
00000e11 01               5850		.byte	1
00000e12 01               5851		.byte	1
00000e13 00               5852		.byte	0
00000e14 01               5853		.byte	1
                          5854	
                          5855		.section	.debug_frame
                          5856	.LDW_5dfa408:
00000138 00000014         5857		.long	.LDW_unq_12-.LDW_unq_11
                          5858	.LDW_unq_11:
0000013c 00000000         5859		.long	.LDW_5d73e00
00000140 00000000         5860		.long	ApplTrcvrNormalMode
00000144 00000002         5861		.long	__ghs_eofn_ApplTrcvrNormalMode-ApplTrcvrNormalMode
00000148 01               5862		.byte	1
00000149 00000000         5863		.long	.LDW13
0000014d 00               5864		.byte	0
0000014e 00               5865		.byte	0
0000014f 00               5866		.byte	0
                          5867	.LDW_unq_12:

                                   Fri Apr 10 08:31:51 2020           Page 106
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          5868		.section	.debug_line
00000876 000502           5869		.byte	0,5,2
00000879 00000000         5870		.long	ApplTrcvrNormalMode
0000087d 06               5871		.byte	6
0000087e 03               5872		.byte	3
0000087f 8a06             5873		.byte	138,6
00000881 02               5874		.byte	2
00000882 00               5875		.byte	0
00000883 01               5876		.byte	1
00000884 02               5877		.byte	2
00000885 02               5878		.byte	2
00000886 000101           5879		.byte	0,1,1
                          5880		.section	.debug_info
                          5881	.LDW_49d3688:
00000e15 1f               5882		.byte	31
00000e16 00000000         5883		.long	.LDW03
00000e1a 00000000         5884		.long	.LDW13
                          5885	
00000e1e 00               5886		.byte	0
                          5887	
00000e1f 00               5888		.byte	0
                          5889	
                          5890	.LDW_5bc5c10:
00000e20 15               5891		.byte	21
00000e21 4170706c54726376 5892		.strz	"ApplTrcvrSleepMode"
00000e29 72536c6565704d6f
00000e31 646500          
00000e34 9206             5893		.byte	146,6
00000e36 06               5894		.byte	6
00000e37 01               5895		.byte	1
00000e38 00000000         5896		.long	ApplTrcvrSleepMode
00000e3c 00000000         5897		.long	__ghs_eofn_ApplTrcvrSleepMode
00000e40 0151             5898		.byte	1,81
00000e42 03               5899		.byte	3
00000e43 00               5900		.byte	0
00000e44 00               5901		.byte	0
00000e45 00               5902		.byte	0
00000e46 00               5903		.byte	0
00000e47 00               5904		.byte	0
00000e48 00               5905		.byte	0
00000e49 01               5906		.byte	1
00000e4a 01               5907		.byte	1
00000e4b 00               5908		.byte	0
00000e4c 01               5909		.byte	1
                          5910	
                          5911		.section	.debug_frame
                          5912	.LDW_5dfa108:
00000150 00000014         5913		.long	.LDW_unq_14-.LDW_unq_13
                          5914	.LDW_unq_13:
00000154 00000000         5915		.long	.LDW_5d73e00
00000158 00000000         5916		.long	ApplTrcvrSleepMode
0000015c 00000002         5917		.long	__ghs_eofn_ApplTrcvrSleepMode-ApplTrcvrSleepMode
00000160 01               5918		.byte	1
00000161 00000000         5919		.long	.LDW33
00000165 00               5920		.byte	0
00000166 00               5921		.byte	0
00000167 00               5922		.byte	0
                          5923	.LDW_unq_14:

                                   Fri Apr 10 08:31:51 2020           Page 107
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          5924		.section	.debug_line
00000889 000502           5925		.byte	0,5,2
0000088c 00000000         5926		.long	ApplTrcvrSleepMode
00000890 06               5927		.byte	6
00000891 03               5928		.byte	3
00000892 9306             5929		.byte	147,6
00000894 02               5930		.byte	2
00000895 00               5931		.byte	0
00000896 01               5932		.byte	1
00000897 02               5933		.byte	2
00000898 02               5934		.byte	2
00000899 000101           5935		.byte	0,1,1
                          5936		.section	.debug_info
                          5937	.LDW_49d3268:
00000e4d 1f               5938		.byte	31
00000e4e 00000000         5939		.long	.LDW23
00000e52 00000000         5940		.long	.LDW33
                          5941	
00000e56 00               5942		.byte	0
                          5943	
00000e57 00               5944		.byte	0
                          5945	
                          5946	.LDW_5c5e178:
00000e58 15               5947		.byte	21
00000e59 4170706c46626c53 5948		.strz	"ApplFblSetVfp"
00000e61 657456667000    
00000e67 9c06             5949		.byte	156,6
00000e69 06               5950		.byte	6
00000e6a 01               5951		.byte	1
00000e6b 00000000         5952		.long	ApplFblSetVfp
00000e6f 00000000         5953		.long	__ghs_eofn_ApplFblSetVfp
00000e73 0151             5954		.byte	1,81
00000e75 03               5955		.byte	3
00000e76 00               5956		.byte	0
00000e77 00               5957		.byte	0
00000e78 00               5958		.byte	0
00000e79 00               5959		.byte	0
00000e7a 00               5960		.byte	0
00000e7b 00               5961		.byte	0
00000e7c 01               5962		.byte	1
00000e7d 01               5963		.byte	1
00000e7e 00               5964		.byte	0
00000e7f 01               5965		.byte	1
                          5966	
                          5967		.section	.debug_frame
                          5968	.LDW_5dfa148:
00000168 00000014         5969		.long	.LDW_unq_16-.LDW_unq_15
                          5970	.LDW_unq_15:
0000016c 00000000         5971		.long	.LDW_5d73e00
00000170 00000000         5972		.long	ApplFblSetVfp
00000174 00000002         5973		.long	__ghs_eofn_ApplFblSetVfp-ApplFblSetVfp
00000178 01               5974		.byte	1
00000179 00000000         5975		.long	.LDW53
0000017d 00               5976		.byte	0
0000017e 00               5977		.byte	0
0000017f 00               5978		.byte	0
                          5979	.LDW_unq_16:

                                   Fri Apr 10 08:31:51 2020           Page 108
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          5980		.section	.debug_line
0000089c 000502           5981		.byte	0,5,2
0000089f 00000000         5982		.long	ApplFblSetVfp
000008a3 06               5983		.byte	6
000008a4 03               5984		.byte	3
000008a5 a106             5985		.byte	161,6
000008a7 02               5986		.byte	2
000008a8 00               5987		.byte	0
000008a9 01               5988		.byte	1
000008aa 02               5989		.byte	2
000008ab 02               5990		.byte	2
000008ac 000101           5991		.byte	0,1,1
                          5992		.section	.debug_info
                          5993	.LDW_49d36b8:
00000e80 1f               5994		.byte	31
00000e81 00000000         5995		.long	.LDW43
00000e85 00000000         5996		.long	.LDW53
                          5997	
00000e89 00               5998		.byte	0
                          5999	
00000e8a 00               6000		.byte	0
                          6001	
                          6002	.LDW_5c5e210:
00000e8b 15               6003		.byte	21
00000e8c 4170706c46626c52 6004		.strz	"ApplFblResetVfp"
00000e94 6573657456667000
00000e9c a906             6005		.byte	169,6
00000e9e 06               6006		.byte	6
00000e9f 01               6007		.byte	1
00000ea0 00000000         6008		.long	ApplFblResetVfp
00000ea4 00000000         6009		.long	__ghs_eofn_ApplFblResetVfp
00000ea8 0151             6010		.byte	1,81
00000eaa 03               6011		.byte	3
00000eab 00               6012		.byte	0
00000eac 00               6013		.byte	0
00000ead 00               6014		.byte	0
00000eae 00               6015		.byte	0
00000eaf 00               6016		.byte	0
00000eb0 00               6017		.byte	0
00000eb1 01               6018		.byte	1
00000eb2 01               6019		.byte	1
00000eb3 00               6020		.byte	0
00000eb4 01               6021		.byte	1
                          6022	
                          6023		.section	.debug_frame
                          6024	.LDW_5df9b48:
00000180 00000014         6025		.long	.LDW_unq_18-.LDW_unq_17
                          6026	.LDW_unq_17:
00000184 00000000         6027		.long	.LDW_5d73e00
00000188 00000000         6028		.long	ApplFblResetVfp
0000018c 00000002         6029		.long	__ghs_eofn_ApplFblResetVfp-ApplFblResetVfp
00000190 01               6030		.byte	1
00000191 00000000         6031		.long	.LDW73
00000195 00               6032		.byte	0
00000196 00               6033		.byte	0
00000197 00               6034		.byte	0
                          6035	.LDW_unq_18:

                                   Fri Apr 10 08:31:51 2020           Page 109
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          6036		.section	.debug_line
000008af 000502           6037		.byte	0,5,2
000008b2 00000000         6038		.long	ApplFblResetVfp
000008b6 06               6039		.byte	6
000008b7 03               6040		.byte	3
000008b8 ae06             6041		.byte	174,6
000008ba 02               6042		.byte	2
000008bb 00               6043		.byte	0
000008bc 01               6044		.byte	1
000008bd 02               6045		.byte	2
000008be 02               6046		.byte	2
000008bf 000101           6047		.byte	0,1,1
                          6048		.section	.debug_info
                          6049	.LDW_49d30e8:
00000eb5 1f               6050		.byte	31
00000eb6 00000000         6051		.long	.LDW63
00000eba 00000000         6052		.long	.LDW73
                          6053	
00000ebe 00               6054		.byte	0
                          6055	
00000ebf 00               6056		.byte	0
                          6057	
                          6058	.LDW_5c5e2a8:
00000ec0 15               6059		.byte	21
00000ec1 4170706c46626c52 6060		.strz	"ApplFblReset"
00000ec9 6573657400      
00000ece b806             6061		.byte	184,6
00000ed0 06               6062		.byte	6
00000ed1 01               6063		.byte	1
00000ed2 00000000         6064		.long	ApplFblReset
00000ed6 00000000         6065		.long	__ghs_eofn_ApplFblReset
00000eda 0151             6066		.byte	1,81
00000edc 03               6067		.byte	3
00000edd 00               6068		.byte	0
00000ede 00               6069		.byte	0
00000edf 00               6070		.byte	0
00000ee0 00               6071		.byte	0
00000ee1 00               6072		.byte	0
00000ee2 00               6073		.byte	0
00000ee3 01               6074		.byte	1
00000ee4 01               6075		.byte	1
00000ee5 00               6076		.byte	0
00000ee6 01               6077		.byte	1
                          6078	
                          6079		.section	.debug_frame
                          6080	.LDW_5dfa088:
00000198 00000014         6081		.long	.LDW_unq_1a-.LDW_unq_19
                          6082	.LDW_unq_19:
0000019c 00000000         6083		.long	.LDW_5d73e00
000001a0 00000000         6084		.long	ApplFblReset
000001a4 0000000e         6085		.long	__ghs_eofn_ApplFblReset-ApplFblReset
000001a8 01               6086		.byte	1
000001a9 00000000         6087		.long	.LDW93
000001ad 00               6088		.byte	0
000001ae 00               6089		.byte	0
000001af 00               6090		.byte	0
                          6091	.LDW_unq_1a:

                                   Fri Apr 10 08:31:51 2020           Page 110
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          6092		.section	.debug_line
000008c2 000502           6093		.byte	0,5,2
000008c5 00000000         6094		.long	ApplFblReset
000008c9 06               6095		.byte	6
000008ca 03               6096		.byte	3
000008cb ba06             6097		.byte	186,6
000008cd 02               6098		.byte	2
000008ce 00               6099		.byte	0
000008cf 01               6100		.byte	1
000008d0 34               6101		.byte	52
000008d1 02               6102		.byte	2
000008d2 04               6103		.byte	4
000008d3 000101           6104		.byte	0,1,1
                          6105		.section	.debug_info
                          6106	.LDW_49d3148:
00000ee7 1f               6107		.byte	31
00000ee8 00000000         6108		.long	.LDW83
00000eec 00000000         6109		.long	.LDW93
                          6110	
00000ef0 00               6111		.byte	0
                          6112	
00000ef1 00               6113		.byte	0
                          6114	
                          6115	.LDW_5c5e340:
00000ef2 16               6116		.byte	22
00000ef3 4170706c46626c53 6117		.strz	"ApplFblSecuritySeedInit"
00000efb 6563757269747953
00000f03 656564496e697400
00000f0b c806             6118		.byte	200,6
00000f0d 08               6119		.byte	8
00000f0e 01               6120		.byte	1
00000f0f 00000000         6121		.long	.LDW_4a1b9a0
00000f13 00000000         6122		.long	ApplFblSecuritySeedInit
00000f17 00000000         6123		.long	__ghs_eofn_ApplFblSecuritySeedInit
00000f1b 0151             6124		.byte	1,81
00000f1d 8080808008       6125		.byte	128,128,128,128,8
00000f22 0c               6126		.byte	12
00000f23 00               6127		.byte	0
00000f24 10               6128		.byte	16
00000f25 00               6129		.byte	0
00000f26 00               6130		.byte	0
00000f27 00               6131		.byte	0
00000f28 01               6132		.byte	1
00000f29 01               6133		.byte	1
00000f2a 00               6134		.byte	0
00000f2b 01               6135		.byte	1
                          6136	
                          6137		.section	.debug_frame
                          6138	.LDW_5df9fc8:
000001b0 00000014         6139		.long	.LDW_unq_1c-.LDW_unq_1b
                          6140	.LDW_unq_1b:
000001b4 00000000         6141		.long	.LDW_5d73e00
000001b8 00000000         6142		.long	ApplFblSecuritySeedInit
000001bc 0000002c         6143		.long	__ghs_eofn_ApplFblSecuritySeedInit-ApplFblSecuritySeedInit
000001c0 01               6144		.byte	1
000001c1 00000000         6145		.long	.LDW14
000001c5 00               6146		.byte	0
000001c6 00               6147		.byte	0

                                   Fri Apr 10 08:31:51 2020           Page 111
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000001c7 00               6148		.byte	0
                          6149	.LDW_unq_1c:
                          6150		.section	.debug_line
000008d6 000502           6151		.byte	0,5,2
000008d9 00000000         6152		.long	ApplFblSecuritySeedInit
000008dd 06               6153		.byte	6
000008de 03               6154		.byte	3
000008df c806             6155		.byte	200,6
000008e1 02               6156		.byte	2
000008e2 00               6157		.byte	0
000008e3 01               6158		.byte	1
000008e4 34               6159		.byte	52
000008e5 4b               6160		.byte	75
000008e6 24               6161		.byte	36
000008e7 06               6162		.byte	6
000008e8 02               6163		.byte	2
000008e9 02               6164		.byte	2
000008ea 02               6165		.byte	2
000008eb 0a               6166		.byte	10
000008ec 000101           6167		.byte	0,1,1
                          6168		.section	.debug_info
                          6169	.LDW_49d3298:
00000f2c 1f               6170		.byte	31
00000f2d 00000000         6171		.long	.LDW04
00000f31 00000000         6172		.long	.LDW14
                          6173	
00000f35 00               6174		.byte	0
                          6175	
00000f36 00               6176		.byte	0
                          6177	
                          6178	.LDW_5c5e3d8:
00000f37 16               6179		.byte	22
00000f38 4170706c46626c53 6180		.strz	"ApplFblSecuritySeed"
00000f40 6563757269747953
00000f48 65656400        
00000f4c d906             6181		.byte	217,6
00000f4e 08               6182		.byte	8
00000f4f 01               6183		.byte	1
00000f50 00000000         6184		.long	.LDW_4a1b9a0
00000f54 00000000         6185		.long	ApplFblSecuritySeed
00000f58 00000000         6186		.long	__ghs_eofn_ApplFblSecuritySeed
00000f5c 0151             6187		.byte	1,81
00000f5e 808080800f       6188		.byte	128,128,128,128,15
00000f63 08               6189		.byte	8
00000f64 00               6190		.byte	0
00000f65 18               6191		.byte	24
00000f66 00               6192		.byte	0
00000f67 00               6193		.byte	0
00000f68 00               6194		.byte	0
00000f69 01               6195		.byte	1
00000f6a 01               6196		.byte	1
00000f6b 00               6197		.byte	0
00000f6c 01               6198		.byte	1
                          6199	
                          6200		.section	.debug_frame
                          6201	.LDW_5df9988:
000001c8 00000014         6202		.long	.LDW_unq_1e-.LDW_unq_1d
                          6203	.LDW_unq_1d:

                                   Fri Apr 10 08:31:51 2020           Page 112
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000001cc 00000000         6204		.long	.LDW_5d73e00
000001d0 00000000         6205		.long	ApplFblSecuritySeed
000001d4 000000b0         6206		.long	__ghs_eofn_ApplFblSecuritySeed-ApplFblSecuritySeed
000001d8 01               6207		.byte	1
000001d9 00000000         6208		.long	.LDW34
000001dd 00               6209		.byte	0
000001de 00               6210		.byte	0
000001df 00               6211		.byte	0
                          6212	.LDW_unq_1e:
                          6213		.section	.debug_line
000008ef 000502           6214		.byte	0,5,2
000008f2 00000000         6215		.long	ApplFblSecuritySeed
000008f6 06               6216		.byte	6
000008f7 03               6217		.byte	3
000008f8 d906             6218		.byte	217,6
000008fa 02               6219		.byte	2
000008fb 00               6220		.byte	0
000008fc 01               6221		.byte	1
000008fd 3d               6222		.byte	61
000008fe 1d               6223		.byte	29
000008ff 000502           6224		.byte	0,5,2
00000902 00000000         6225		.long	.LDWlin25
00000906 03               6226		.byte	3
00000907 1a               6227		.byte	26
00000908 02               6228		.byte	2
00000909 00               6229		.byte	0
0000090a 01               6230		.byte	1
0000090b 02               6231		.byte	2
0000090c 00               6232		.byte	0
0000090d 0b               6233		.byte	11
0000090e 02               6234		.byte	2
0000090f 00               6235		.byte	0
00000910 0d               6236		.byte	13
00000911 0b               6237		.byte	11
00000912 0b               6238		.byte	11
00000913 5b               6239		.byte	91
00000914 3d               6240		.byte	61
00000915 000502           6241		.byte	0,5,2
00000918 00000000         6242		.long	.LDWlin26
0000091c 03               6243		.byte	3
0000091d 5d               6244		.byte	93
0000091e 02               6245		.byte	2
0000091f 00               6246		.byte	0
00000920 01               6247		.byte	1
00000921 0c               6248		.byte	12
00000922 0c               6249		.byte	12
00000923 03               6250		.byte	3
00000924 7e               6251		.byte	126
00000925 02               6252		.byte	2
00000926 04               6253		.byte	4
00000927 01               6254		.byte	1
00000928 000502           6255		.byte	0,5,2
0000092b 00000000         6256		.long	.LDWlin27
0000092f 0d               6257		.byte	13
00000930 0d               6258		.byte	13
00000931 000502           6259		.byte	0,5,2

                                   Fri Apr 10 08:31:51 2020           Page 113
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000934 00000000         6260		.long	.LDWlin28
00000938 0b               6261		.byte	11
00000939 0c               6262		.byte	12
0000093a 000502           6263		.byte	0,5,2
0000093d 00000000         6264		.long	.LDWlin29
00000941 0c               6265		.byte	12
00000942 0c               6266		.byte	12
00000943 3b               6267		.byte	59
00000944 2b               6268		.byte	43
00000945 02               6269		.byte	2
00000946 00               6270		.byte	0
00000947 0d               6271		.byte	13
00000948 000502           6272		.byte	0,5,2
0000094b 00000000         6273		.long	.LDWlin30
0000094f 0b               6274		.byte	11
00000950 0c               6275		.byte	12
00000951 0b               6276		.byte	11
00000952 03               6277		.byte	3
00000953 0c               6278		.byte	12
00000954 02               6279		.byte	2
00000955 02               6280		.byte	2
00000956 01               6281		.byte	1
00000957 02               6282		.byte	2
00000958 00               6283		.byte	0
00000959 0c               6284		.byte	12
0000095a 06               6285		.byte	6
0000095b 02               6286		.byte	2
0000095c 02               6287		.byte	2
0000095d 02               6288		.byte	2
0000095e 0c               6289		.byte	12
0000095f 000101           6290		.byte	0,1,1
                          6291		.section	.debug_info
                          6292	.LDW_49d32c8:
00000f6d 1f               6293		.byte	31
00000f6e 00000000         6294		.long	.LDW24
00000f72 00000000         6295		.long	.LDW34
                          6296	
                          6297	.LDW_5bc53d0:
00000f76 06               6298		.byte	6
00000f77 726573756c7400   6299		.strz	"result"
00000f7e db06             6300		.byte	219,6
00000f80 0b               6301		.byte	11
00000f81 01               6302		.byte	1
00000f82 00000000         6303		.long	.LDW_4a1b9a0
00000f86 00               6304		.byte	0
00000f87 00               6305		.byte	0
00000f88 016e             6306		.byte	1,110
                          6307	
00000f8a 00               6308		.byte	0
                          6309	
00000f8b 00               6310		.byte	0
                          6311	
                          6312	.LDW_5c5e470:
00000f8c 16               6313		.byte	22
00000f8d 4170706c46626c53 6314		.strz	"ApplFblSecurityKey"
00000f95 656375726974794b
00000f9d 657900          
00000fa0 9007             6315		.byte	144,7

                                   Fri Apr 10 08:31:51 2020           Page 114
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000fa2 08               6316		.byte	8
00000fa3 01               6317		.byte	1
00000fa4 00000000         6318		.long	.LDW_4a1b9a0
00000fa8 00000000         6319		.long	ApplFblSecurityKey
00000fac 00000000         6320		.long	__ghs_eofn_ApplFblSecurityKey
00000fb0 0151             6321		.byte	1,81
00000fb2 8080808008       6322		.byte	128,128,128,128,8
00000fb7 14               6323		.byte	20
00000fb8 00               6324		.byte	0
00000fb9 18               6325		.byte	24
00000fba 00               6326		.byte	0
00000fbb 00               6327		.byte	0
00000fbc 00               6328		.byte	0
00000fbd 01               6329		.byte	1
00000fbe 01               6330		.byte	1
00000fbf 00               6331		.byte	0
00000fc0 01               6332		.byte	1
                          6333	
                          6334		.section	.debug_frame
                          6335	.LDW_5df9cc8:
000001e0 00000014         6336		.long	.LDW_unq_20-.LDW_unq_1f
                          6337	.LDW_unq_1f:
000001e4 00000000         6338		.long	.LDW_5d73e00
000001e8 00000000         6339		.long	ApplFblSecurityKey
000001ec 0000004c         6340		.long	__ghs_eofn_ApplFblSecurityKey-ApplFblSecurityKey
000001f0 01               6341		.byte	1
000001f1 00000000         6342		.long	.LDW54
000001f5 00               6343		.byte	0
000001f6 00               6344		.byte	0
000001f7 00               6345		.byte	0
                          6346	.LDW_unq_20:
                          6347		.section	.debug_line
00000962 000502           6348		.byte	0,5,2
00000965 00000000         6349		.long	ApplFblSecurityKey
00000969 06               6350		.byte	6
0000096a 03               6351		.byte	3
0000096b 9007             6352		.byte	144,7
0000096d 02               6353		.byte	2
0000096e 00               6354		.byte	0
0000096f 01               6355		.byte	1
00000970 03               6356		.byte	3
00000971 05               6357		.byte	5
00000972 02               6358		.byte	2
00000973 0a               6359		.byte	10
00000974 01               6360		.byte	1
00000975 1d               6361		.byte	29
00000976 2d               6362		.byte	45
00000977 43               6363		.byte	67
00000978 83               6364		.byte	131
00000979 0d               6365		.byte	13
0000097a 02               6366		.byte	2
0000097b 00               6367		.byte	0
0000097c 0c               6368		.byte	12
0000097d 02               6369		.byte	2
0000097e 0a               6370		.byte	10
0000097f 000101           6371		.byte	0,1,1

                                   Fri Apr 10 08:31:51 2020           Page 115
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          6372		.section	.debug_info
                          6373	.LDW_49d32f8:
00000fc1 1f               6374		.byte	31
00000fc2 00000000         6375		.long	.LDW44
00000fc6 00000000         6376		.long	.LDW54
                          6377	
                          6378	.LDW_5bc55e0:
00000fca 06               6379		.byte	6
00000fcb 726573756c7400   6380		.strz	"result"
00000fd2 9207             6381		.byte	146,7
00000fd4 0b               6382		.byte	11
00000fd5 01               6383		.byte	1
00000fd6 00000000         6384		.long	.LDW_4a1b9a0
00000fda 00               6385		.byte	0
00000fdb 00               6386		.byte	0
00000fdc 016f             6387		.byte	1,111
                          6388	
                          6389	.LDW_5bc5480:
00000fde 07               6390		.byte	7
00000fdf 6c6f63616c4b6579 6391		.strz	"localKey"
00000fe7 00              
00000fe8 9307             6392		.byte	147,7
00000fea 11               6393		.byte	17
00000feb 01               6394		.byte	1
00000fec 00000000         6395		.long	.LDW_5bc57f0
00000ff0 00               6396		.byte	0
00000ff1 00               6397		.byte	0
                          6398	
00000ff2 00               6399		.byte	0
                          6400	
00000ff3 00               6401		.byte	0
                          6402	
                          6403	.LDW_5c5e508:
00000ff4 16               6404		.byte	22
00000ff5 4170706c46626c53 6405		.strz	"ApplFblSecurityInit"
00000ffd 6563757269747949
00001005 6e697400        
00001009 ac07             6406		.byte	172,7
0000100b 08               6407		.byte	8
0000100c 01               6408		.byte	1
0000100d 00000000         6409		.long	.LDW_4a1b9a0
00001011 00000000         6410		.long	ApplFblSecurityInit
00001015 00000000         6411		.long	__ghs_eofn_ApplFblSecurityInit
00001019 0151             6412		.byte	1,81
0000101b 03               6413		.byte	3
0000101c 00               6414		.byte	0
0000101d 00               6415		.byte	0
0000101e 00               6416		.byte	0
0000101f 00               6417		.byte	0
00001020 00               6418		.byte	0
00001021 00               6419		.byte	0
00001022 01               6420		.byte	1
00001023 01               6421		.byte	1
00001024 00               6422		.byte	0
00001025 01               6423		.byte	1
                          6424	
                          6425		.section	.debug_frame
                          6426	.LDW_5df9f48:
000001f8 00000014         6427		.long	.LDW_unq_22-.LDW_unq_21

                                   Fri Apr 10 08:31:51 2020           Page 116
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          6428	.LDW_unq_21:
000001fc 00000000         6429		.long	.LDW_5d73e00
00000200 00000000         6430		.long	ApplFblSecurityInit
00000204 00000010         6431		.long	__ghs_eofn_ApplFblSecurityInit-ApplFblSecurityInit
00000208 01               6432		.byte	1
00000209 00000000         6433		.long	.LDW74
0000020d 00               6434		.byte	0
0000020e 00               6435		.byte	0
0000020f 00               6436		.byte	0
                          6437	.LDW_unq_22:
                          6438		.section	.debug_line
00000982 000502           6439		.byte	0,5,2
00000985 00000000         6440		.long	ApplFblSecurityInit
00000989 06               6441		.byte	6
0000098a 03               6442		.byte	3
0000098b ad07             6443		.byte	173,7
0000098d 02               6444		.byte	2
0000098e 00               6445		.byte	0
0000098f 01               6446		.byte	1
00000990 3b               6447		.byte	59
00000991 14               6448		.byte	20
00000992 02               6449		.byte	2
00000993 02               6450		.byte	2
00000994 000101           6451		.byte	0,1,1
                          6452		.section	.debug_info
                          6453	.LDW_49d3328:
00001026 1f               6454		.byte	31
00001027 00000000         6455		.long	.LDW64
0000102b 00000000         6456		.long	.LDW74
                          6457	
0000102f 00               6458		.byte	0
                          6459	
00001030 00               6460		.byte	0
                          6461	
                          6462	.LDW_5c5e5a0:
00001031 15               6463		.byte	21
00001032 4170706c46626c54 6464		.strz	"ApplFblTask"
0000103a 61736b00        
0000103e 8608             6465		.byte	134,8
00001040 06               6466		.byte	6
00001041 01               6467		.byte	1
00001042 00000000         6468		.long	ApplFblTask
00001046 00000000         6469		.long	__ghs_eofn_ApplFblTask
0000104a 0151             6470		.byte	1,81
0000104c 03               6471		.byte	3
0000104d 00               6472		.byte	0
0000104e 00               6473		.byte	0
0000104f 00               6474		.byte	0
00001050 00               6475		.byte	0
00001051 00               6476		.byte	0
00001052 00               6477		.byte	0
00001053 01               6478		.byte	1
00001054 01               6479		.byte	1
00001055 00               6480		.byte	0
00001056 01               6481		.byte	1
                          6482	
                          6483		.section	.debug_frame

                                   Fri Apr 10 08:31:51 2020           Page 117
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          6484	.LDW_5df9d08:
00000210 00000014         6485		.long	.LDW_unq_24-.LDW_unq_23
                          6486	.LDW_unq_23:
00000214 00000000         6487		.long	.LDW_5d73e00
00000218 00000000         6488		.long	ApplFblTask
0000021c 00000002         6489		.long	__ghs_eofn_ApplFblTask-ApplFblTask
00000220 01               6490		.byte	1
00000221 00000000         6491		.long	.LDW94
00000225 00               6492		.byte	0
00000226 00               6493		.byte	0
00000227 00               6494		.byte	0
                          6495	.LDW_unq_24:
                          6496		.section	.debug_line
00000997 000502           6497		.byte	0,5,2
0000099a 00000000         6498		.long	ApplFblTask
0000099e 06               6499		.byte	6
0000099f 03               6500		.byte	3
000009a0 9f08             6501		.byte	159,8
000009a2 02               6502		.byte	2
000009a3 00               6503		.byte	0
000009a4 01               6504		.byte	1
000009a5 02               6505		.byte	2
000009a6 02               6506		.byte	2
000009a7 000101           6507		.byte	0,1,1
                          6508		.section	.debug_info
                          6509	.LDW_49d3358:
00001057 1f               6510		.byte	31
00001058 00000000         6511		.long	.LDW84
0000105c 00000000         6512		.long	.LDW94
                          6513	
00001060 00               6514		.byte	0
                          6515	
00001061 00               6516		.byte	0
                          6517	
                          6518	.LDW_5c8d300:
00001062 15               6519		.byte	21
00001063 4170706c46626c53 6520		.strz	"ApplFblStateTask"
0000106b 746174655461736b
00001073 00              
00001074 ab08             6521		.byte	171,8
00001076 06               6522		.byte	6
00001077 01               6523		.byte	1
00001078 00000000         6524		.long	ApplFblStateTask
0000107c 00000000         6525		.long	__ghs_eofn_ApplFblStateTask
00001080 0151             6526		.byte	1,81
00001082 03               6527		.byte	3
00001083 00               6528		.byte	0
00001084 00               6529		.byte	0
00001085 00               6530		.byte	0
00001086 00               6531		.byte	0
00001087 00               6532		.byte	0
00001088 00               6533		.byte	0
00001089 01               6534		.byte	1
0000108a 01               6535		.byte	1
0000108b 00               6536		.byte	0
0000108c 01               6537		.byte	1
                          6538	
                          6539		.section	.debug_frame

                                   Fri Apr 10 08:31:51 2020           Page 118
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          6540	.LDW_5df9b08:
00000228 00000014         6541		.long	.LDW_unq_26-.LDW_unq_25
                          6542	.LDW_unq_25:
0000022c 00000000         6543		.long	.LDW_5d73e00
00000230 00000000         6544		.long	ApplFblStateTask
00000234 00000002         6545		.long	__ghs_eofn_ApplFblStateTask-ApplFblStateTask
00000238 01               6546		.byte	1
00000239 00000000         6547		.long	.LDW15
0000023d 00               6548		.byte	0
0000023e 00               6549		.byte	0
0000023f 00               6550		.byte	0
                          6551	.LDW_unq_26:
                          6552		.section	.debug_line
000009aa 000502           6553		.byte	0,5,2
000009ad 00000000         6554		.long	ApplFblStateTask
000009b1 06               6555		.byte	6
000009b2 03               6556		.byte	3
000009b3 ac08             6557		.byte	172,8
000009b5 02               6558		.byte	2
000009b6 00               6559		.byte	0
000009b7 01               6560		.byte	1
000009b8 02               6561		.byte	2
000009b9 02               6562		.byte	2
000009ba 000101           6563		.byte	0,1,1
                          6564		.section	.debug_info
                          6565	.LDW_49d3388:
0000108d 1f               6566		.byte	31
0000108e 00000000         6567		.long	.LDW05
00001092 00000000         6568		.long	.LDW15
                          6569	
00001096 00               6570		.byte	0
                          6571	
00001097 00               6572		.byte	0
                          6573	
                          6574	.LDW_5c8d398:
00001098 15               6575		.byte	21
00001099 4170706c46626c46 6576		.strz	"ApplFblFatalError"
000010a1 6174616c4572726f
000010a9 7200            
000010ab ba08             6577		.byte	186,8
000010ad 06               6578		.byte	6
000010ae 01               6579		.byte	1
000010af 00000000         6580		.long	ApplFblFatalError
000010b3 00000000         6581		.long	__ghs_eofn_ApplFblFatalError
000010b7 0151             6582		.byte	1,81
000010b9 03               6583		.byte	3
000010ba 00               6584		.byte	0
000010bb 00               6585		.byte	0
000010bc 00               6586		.byte	0
000010bd 00               6587		.byte	0
000010be 00               6588		.byte	0
000010bf 00               6589		.byte	0
000010c0 01               6590		.byte	1
000010c1 01               6591		.byte	1
000010c2 00               6592		.byte	0
000010c3 01               6593		.byte	1
                          6594	
                          6595		.section	.debug_frame

                                   Fri Apr 10 08:31:51 2020           Page 119
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
                          6596	.LDW_5dfa788:
00000240 00000014         6597		.long	.LDW_unq_28-.LDW_unq_27
                          6598	.LDW_unq_27:
00000244 00000000         6599		.long	.LDW_5d73e00
00000248 00000000         6600		.long	ApplFblFatalError
0000024c 00000002         6601		.long	__ghs_eofn_ApplFblFatalError-ApplFblFatalError
00000250 01               6602		.byte	1
00000251 00000000         6603		.long	.LDW31
00000255 00               6604		.byte	0
00000256 00               6605		.byte	0
00000257 00               6606		.byte	0
                          6607	.LDW_unq_28:
                          6608		.section	.debug_line
000009bd 000502           6609		.byte	0,5,2
000009c0 00000000         6610		.long	ApplFblFatalError
000009c4 06               6611		.byte	6
000009c5 03               6612		.byte	3
000009c6 c308             6613		.byte	195,8
000009c8 02               6614		.byte	2
000009c9 00               6615		.byte	0
000009ca 01               6616		.byte	1
000009cb 0d               6617		.byte	13
000009cc 000502           6618		.byte	0,5,2
000009cf 00000000         6619		.long	__ghs_eofn_ApplFblFatalError
000009d3 02               6620		.byte	2
000009d4 00               6621		.byte	0
000009d5 000101           6622		.byte	0,1,1
                          6623		.section	.debug_info
                          6624	.LDW_5bc5530:
000010c4 11               6625		.byte	17
000010c5 6572726f72436f64 6626		.strz	"errorCode"
000010cd 6500            
000010cf ba08             6627		.byte	186,8
000010d1 19               6628		.byte	25
000010d2 01               6629		.byte	1
000010d3 00000000         6630		.long	.LDW_4a1b9a0
000010d7 00               6631		.byte	0
000010d8 0153             6632		.byte	1,83
                          6633	
                          6634	.LDW_49d3418:
000010da 1f               6635		.byte	31
000010db 00000000         6636		.long	.LDW21
000010df 00000000         6637		.long	.LDW31
                          6638	
000010e3 00               6639		.byte	0
                          6640	
000010e4 00               6641		.byte	0
                          6642	
                          6643	.LDW_5c8d8f0:
000010e5 15               6644		.byte	21
000010e6 4170706c46626c43 6645		.strz	"ApplFblCanWakeUp"
000010ee 616e57616b655570
000010f6 00              
000010f7 fa08             6646		.byte	250,8
000010f9 06               6647		.byte	6
000010fa 01               6648		.byte	1
000010fb 00000000         6649		.long	ApplFblCanWakeUp
000010ff 00000000         6650		.long	__ghs_eofn_ApplFblCanWakeUp
00001103 0151             6651		.byte	1,81

                                   Fri Apr 10 08:31:51 2020           Page 120
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00001105 03               6652		.byte	3
00001106 00               6653		.byte	0
00001107 00               6654		.byte	0
00001108 00               6655		.byte	0
00001109 00               6656		.byte	0
0000110a 00               6657		.byte	0
0000110b 00               6658		.byte	0
0000110c 01               6659		.byte	1
0000110d 01               6660		.byte	1
0000110e 00               6661		.byte	0
0000110f 01               6662		.byte	1
                          6663	
                          6664		.section	.debug_frame
                          6665	.LDW_5df9a88:
00000258 00000014         6666		.long	.LDW_unq_2a-.LDW_unq_29
                          6667	.LDW_unq_29:
0000025c 00000000         6668		.long	.LDW_5d73e00
00000260 00000000         6669		.long	ApplFblCanWakeUp
00000264 00000002         6670		.long	__ghs_eofn_ApplFblCanWakeUp-ApplFblCanWakeUp
00000268 01               6671		.byte	1
00000269 00000000         6672		.long	.LDW35
0000026d 00               6673		.byte	0
0000026e 00               6674		.byte	0
0000026f 00               6675		.byte	0
                          6676	.LDW_unq_2a:
                          6677		.section	.debug_line
000009d8 000502           6678		.byte	0,5,2
000009db 00000000         6679		.long	ApplFblCanWakeUp
000009df 06               6680		.byte	6
000009e0 03               6681		.byte	3
000009e1 fb08             6682		.byte	251,8
000009e3 02               6683		.byte	2
000009e4 00               6684		.byte	0
000009e5 01               6685		.byte	1
000009e6 02               6686		.byte	2
000009e7 02               6687		.byte	2
000009e8 000101           6688		.byte	0,1,1
                          6689		.section	.debug_info
                          6690	.LDW_49d3778:
00001110 1f               6691		.byte	31
00001111 00000000         6692		.long	.LDW25
00001115 00000000         6693		.long	.LDW35
                          6694	
00001119 00               6695		.byte	0
                          6696	
0000111a 00               6697		.byte	0
                          6698	
                          6699	.LDW_5c8da20:
0000111b 15               6700		.byte	21
0000111c 4170706c46626c43 6701		.strz	"ApplFblCanBusOff"
00001124 616e4275734f6666
0000112c 00              
0000112d 8309             6702		.byte	131,9
0000112f 06               6703		.byte	6
00001130 01               6704		.byte	1
00001131 00000000         6705		.long	ApplFblCanBusOff
00001135 00000000         6706		.long	__ghs_eofn_ApplFblCanBusOff
00001139 0151             6707		.byte	1,81

                                   Fri Apr 10 08:31:51 2020           Page 121
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000113b 03               6708		.byte	3
0000113c 00               6709		.byte	0
0000113d 00               6710		.byte	0
0000113e 00               6711		.byte	0
0000113f 00               6712		.byte	0
00001140 00               6713		.byte	0
00001141 00               6714		.byte	0
00001142 01               6715		.byte	1
00001143 01               6716		.byte	1
00001144 00               6717		.byte	0
00001145 01               6718		.byte	1
                          6719	
                          6720		.section	.debug_frame
                          6721	.LDW_5df9d48:
00000270 00000014         6722		.long	.LDW_unq_2c-.LDW_unq_2b
                          6723	.LDW_unq_2b:
00000274 00000000         6724		.long	.LDW_5d73e00
00000278 00000000         6725		.long	ApplFblCanBusOff
0000027c 00000004         6726		.long	__ghs_eofn_ApplFblCanBusOff-ApplFblCanBusOff
00000280 01               6727		.byte	1
00000281 00000000         6728		.long	.LDW55
00000285 00               6729		.byte	0
00000286 00               6730		.byte	0
00000287 00               6731		.byte	0
                          6732	.LDW_unq_2c:
                          6733		.section	.debug_line
000009eb 000502           6734		.byte	0,5,2
000009ee 00000000         6735		.long	ApplFblCanBusOff
000009f2 06               6736		.byte	6
000009f3 03               6737		.byte	3
000009f4 8509             6738		.byte	133,9
000009f6 02               6739		.byte	2
000009f7 00               6740		.byte	0
000009f8 01               6741		.byte	1
000009f9 000502           6742		.byte	0,5,2
000009fc 00000000         6743		.long	__ghs_eofn_ApplFblCanBusOff
00000a00 0b               6744		.byte	11
00000a01 000101           6745		.byte	0,1,1
                          6746		.section	.debug_info
                          6747	.LDW_49d3838:
00001146 1f               6748		.byte	31
00001147 00000000         6749		.long	.LDW45
0000114b 00000000         6750		.long	.LDW55
                          6751	
0000114f 00               6752		.byte	0
                          6753	
00001150 00               6754		.byte	0
                          6755	
                          6756	.LDW_5c8d7c0:
00001151 15               6757		.byte	21
00001152 4170706c46626c42 6758		.strz	"ApplFblBusSleep"
0000115a 7573536c65657000
00001162 9309             6759		.byte	147,9
00001164 06               6760		.byte	6
00001165 01               6761		.byte	1
00001166 00000000         6762		.long	ApplFblBusSleep
0000116a 00000000         6763		.long	__ghs_eofn_ApplFblBusSleep

                                   Fri Apr 10 08:31:51 2020           Page 122
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000116e 0151             6764		.byte	1,81
00001170 00               6765		.byte	0
00001171 08               6766		.byte	8
00001172 00               6767		.byte	0
00001173 08               6768		.byte	8
00001174 00               6769		.byte	0
00001175 00               6770		.byte	0
00001176 00               6771		.byte	0
00001177 01               6772		.byte	1
00001178 01               6773		.byte	1
00001179 00               6774		.byte	0
0000117a 01               6775		.byte	1
                          6776	
                          6777		.section	.debug_frame
                          6778	.LDW_5df9ec8:
00000288 00000014         6779		.long	.LDW_unq_2e-.LDW_unq_2d
                          6780	.LDW_unq_2d:
0000028c 00000000         6781		.long	.LDW_5d73e00
00000290 00000000         6782		.long	ApplFblBusSleep
00000294 00000024         6783		.long	__ghs_eofn_ApplFblBusSleep-ApplFblBusSleep
00000298 01               6784		.byte	1
00000299 00000000         6785		.long	.LDW75
0000029d 00               6786		.byte	0
0000029e 00               6787		.byte	0
0000029f 00               6788		.byte	0
                          6789	.LDW_unq_2e:
                          6790		.section	.debug_line
00000a04 000502           6791		.byte	0,5,2
00000a07 00000000         6792		.long	ApplFblBusSleep
00000a0b 06               6793		.byte	6
00000a0c 03               6794		.byte	3
00000a0d 9309             6795		.byte	147,9
00000a0f 02               6796		.byte	2
00000a10 00               6797		.byte	0
00000a11 01               6798		.byte	1
00000a12 2c               6799		.byte	44
00000a13 03               6800		.byte	3
00000a14 04               6801		.byte	4
00000a15 02               6802		.byte	2
00000a16 04               6803		.byte	4
00000a17 01               6804		.byte	1
00000a18 02               6805		.byte	2
00000a19 00               6806		.byte	0
00000a1a 000502           6807		.byte	0,5,2
00000a1d 00000000         6808		.long	.LDWlin32
00000a21 0d               6809		.byte	13
00000a22 0d               6810		.byte	13
00000a23 1b               6811		.byte	27
00000a24 03               6812		.byte	3
00000a25 05               6813		.byte	5
00000a26 02               6814		.byte	2
00000a27 00               6815		.byte	0
00000a28 01               6816		.byte	1
00000a29 0d               6817		.byte	13
00000a2a 0b               6818		.byte	11
00000a2b 02               6819		.byte	2

                                   Fri Apr 10 08:31:51 2020           Page 123
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000a2c 00               6820		.byte	0
00000a2d 0c               6821		.byte	12
00000a2e 000502           6822		.byte	0,5,2
00000a31 00000000         6823		.long	.LDWlin33
00000a35 0b               6824		.byte	11
00000a36 02               6825		.byte	2
00000a37 08               6826		.byte	8
00000a38 000101           6827		.byte	0,1,1
                          6828		.section	.debug_info
                          6829	.LDW_49d36e8:
0000117b 1f               6830		.byte	31
0000117c 00000000         6831		.long	.LDW65
00001180 00000000         6832		.long	.LDW75
                          6833	
00001184 00               6834		.byte	0
                          6835	
00001185 00               6836		.byte	0
                          6837	
                          6838	.LDW_5c8d430:
00001186 15               6839		.byte	21
00001187 4170706c46626c53 6840		.strz	"ApplFblStartApplication"
0000118f 746172744170706c
00001197 69636174696f6e00
0000119f ce09             6841		.byte	206,9
000011a1 06               6842		.byte	6
000011a2 01               6843		.byte	1
000011a3 00000000         6844		.long	ApplFblStartApplication
000011a7 00000000         6845		.long	__ghs_eofn_ApplFblStartApplication
000011ab 0151             6846		.byte	1,81
000011ad 00               6847		.byte	0
000011ae 08               6848		.byte	8
000011af 00               6849		.byte	0
000011b0 08               6850		.byte	8
000011b1 00               6851		.byte	0
000011b2 00               6852		.byte	0
000011b3 00               6853		.byte	0
000011b4 01               6854		.byte	1
000011b5 01               6855		.byte	1
000011b6 00               6856		.byte	0
000011b7 01               6857		.byte	1
                          6858	
                          6859		.section	.debug_frame
                          6860	.LDW_5df9e08:
000002a0 00000014         6861		.long	.LDW_unq_30-.LDW_unq_2f
                          6862	.LDW_unq_2f:
000002a4 00000000         6863		.long	.LDW_5d73e00
000002a8 00000000         6864		.long	ApplFblStartApplication
000002ac 00000016         6865		.long	__ghs_eofn_ApplFblStartApplication-ApplFblStartApplication
000002b0 01               6866		.byte	1
000002b1 00000000         6867		.long	.LDW95
000002b5 00               6868		.byte	0
000002b6 00               6869		.byte	0
000002b7 00               6870		.byte	0
                          6871	.LDW_unq_30:
                          6872		.section	.debug_line
00000a3b 000502           6873		.byte	0,5,2
00000a3e 00000000         6874		.long	ApplFblStartApplication
00000a42 06               6875		.byte	6

                                   Fri Apr 10 08:31:51 2020           Page 124
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000a43 03               6876		.byte	3
00000a44 ce09             6877		.byte	206,9
00000a46 02               6878		.byte	2
00000a47 00               6879		.byte	0
00000a48 01               6880		.byte	1
00000a49 02               6881		.byte	2
00000a4a 08               6882		.byte	8
00000a4b 2c               6883		.byte	44
00000a4c 03               6884		.byte	3
00000a4d 04               6885		.byte	4
00000a4e 02               6886		.byte	2
00000a4f 04               6887		.byte	4
00000a50 01               6888		.byte	1
00000a51 0d               6889		.byte	13
00000a52 000502           6890		.byte	0,5,2
00000a55 00000000         6891		.long	__ghs_eofn_ApplFblStartApplication
00000a59 02               6892		.byte	2
00000a5a 00               6893		.byte	0
00000a5b 000101           6894		.byte	0,1,1
                          6895		.section	.debug_info
                          6896	.LDW_49d37a8:
000011b8 1f               6897		.byte	31
000011b9 00000000         6898		.long	.LDW85
000011bd 00000000         6899		.long	.LDW95
                          6900	
000011c1 00               6901		.byte	0
                          6902	
000011c2 00               6903		.byte	0
                          6904	
000011c3 00               6905		.byte	0
                          6906	
                          6907		.section	.debug_line
                          6908	.Ldw_line_end:
                          6909		.section	.debug_macinfo
00000000 01               6910		.byte	1
00000001 00               6911		.byte	0
00000002 5f5f4c494e455f5f 6912		.strz	"__LINE__"
0000000a 00              
0000000b 01               6913		.byte	1
0000000c 00               6914		.byte	0
0000000d 5f5f46494c455f5f 6915		.strz	"__FILE__"
00000015 00              
00000016 01               6916		.byte	1
00000017 00               6917		.byte	0
00000018 4252535f44455249 6918		.strz	"BRS_DERIVATIVE_SPC570S50 1"
00000020 5641544956455f53
00000028 5043353730533530
00000030 203100          
00000033 01               6919		.byte	1
00000034 00               6920		.byte	0
00000035 4252535f4f535f55 6921		.strz	"BRS_OS_USECASE_BRS 1"
0000003d 5345434153455f42
00000045 5253203100      
0000004a 01               6922		.byte	1
0000004b 00               6923		.byte	0
0000004c 4252535f434f4d50 6924		.strz	"BRS_COMP_GHS 1"
00000054 5f474853203100  
0000005b 01               6925		.byte	1
0000005c 00               6926		.byte	0
0000005d 42525348575f494e 6927		.strz	"BRSHW_INSTRUCTION_SET_VLE 1"
00000065 535452554354494f
0000006d 4e5f5345545f564c
00000075 45203100        
00000079 03               6928		.byte	3
0000007a 00               6929		.byte	0
0000007b 01               6930		.byte	1
0000007c 03               6931		.byte	3

                                   Fri Apr 10 08:31:51 2020           Page 125
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000007d f401             6932		.byte	244,1
0000007f 02               6933		.byte	2
00000080 01               6934		.byte	1
00000081 4a               6935		.byte	74
00000082 5f5f46424c5f494e 6936		.strz	"__FBL_INC_H__ "
0000008a 435f485f5f2000  
00000091 03               6937		.byte	3
00000092 59               6938		.byte	89
00000093 03               6939		.byte	3
00000094 01               6940		.byte	1
00000095 2e               6941		.byte	46
00000096 5f46424c4b424150 6942		.strz	"_FBLKBAPI_VERSION 0x0183u"
0000009e 495f56455253494f
000000a6 4e20307830313833
000000ae 7500            
000000b0 01               6943		.byte	1
000000b1 2f               6944		.byte	47
000000b2 5f46424c4b424150 6945		.strz	"_FBLKBAPI_RELEASE_VERSION 0x00u"
000000ba 495f52454c454153
000000c2 455f56455253494f
000000ca 4e20307830307500
000000d2 01               6946		.byte	1
000000d3 34               6947		.byte	52
000000d4 5f46424c4b424150 6948		.strz	"_FBLKBAPI_HW_VERSION 0x0100u"
000000dc 495f48575f564552
000000e4 53494f4e20307830
000000ec 3130307500      
000000f1 01               6949		.byte	1
000000f2 35               6950		.byte	53
000000f3 5f46424c4b424150 6951		.strz	"_FBLKBAPI_HW_RELEASE_VERSION 0x01u"
000000fb 495f48575f52454c
00000103 454153455f564552
0000010b 53494f4e20307830
00000113 317500          
00000116 01               6952		.byte	1
00000117 3a               6953		.byte	58
00000118 5f46424c4b424150 6954		.strz	"_FBLKBAPI_FRAME_OEM_VERSION 0x0200u"
00000120 495f4652414d455f
00000128 4f454d5f56455253
00000130 494f4e2030783032
00000138 30307500        
0000013c 01               6955		.byte	1
0000013d 3b               6956		.byte	59
0000013e 5f46424c4b424150 6957		.strz	"_FBLKBAPI_FRAME_OEM_RELEASE_VERSION 0x00u"
00000146 495f4652414d455f
0000014e 4f454d5f52454c45
00000156 4153455f56455253
0000015e 494f4e2030783030
00000166 7500            
00000168 01               6958		.byte	1
00000169 52               6959		.byte	82
0000016a 5f46424c4b424150 6960		.strz	"_FBLKBAPI_OEM_VERSION 0x0201u"
00000172 495f4f454d5f5645
0000017a 5253494f4e203078
00000182 303230317500    
00000188 01               6961		.byte	1
00000189 53               6962		.byte	83
0000018a 5f46424c4b424150 6963		.strz	"_FBLKBAPI_OEM_RELEASE_VERSION 0x00u"
00000192 495f4f454d5f5245
0000019a 4c454153455f5645
000001a2 5253494f4e203078
000001aa 30307500        
000001ae 04               6964		.byte	4
000001af 03               6965		.byte	3
000001b0 5a               6966		.byte	90
000001b1 04               6967		.byte	4
000001b2 01               6968		.byte	1
000001b3 30               6969		.byte	48
000001b4 5647454e5f47454e 6970		.strz	"VGEN_GENY "
000001bc 592000          
000001bf 01               6971		.byte	1
000001c0 4a               6972		.byte	74
000001c1 435f435055545950 6973		.strz	"C_CPUTYPE_32BIT "
000001c9 455f333242495420
000001d1 00              
000001d2 01               6974		.byte	1
000001d3 54               6975		.byte	84
000001d4 435f435055545950 6976		.strz	"C_CPUTYPE_BIGENDIAN "
000001dc 455f424947454e44
000001e4 49414e2000      
000001e9 01               6977		.byte	1
000001ea 59               6978		.byte	89
000001eb 435f435055545950 6979		.strz	"C_CPUTYPE_BITORDER_MSB2LSB "
000001f3 455f4249544f5244
000001fb 45525f4d5342324c
00000203 53422000        
00000207 01               6980		.byte	1
00000208 63               6981		.byte	99
00000209 565f454e41424c45 6982		.strz	"V_ENABLE_USE_DUMMY_STATEMENT "
00000211 5f5553455f44554d
00000219 4d595f5354415445
00000221 4d454e542000    
00000227 01               6983		.byte	1
00000228 8901             6984		.byte	137,1
0000022a 5647454e5f454e41 6985		.strz	"VGEN_ENABLE_CANFBL "
00000232 424c455f43414e46
0000023a 424c2000        
0000023e 01               6986		.byte	1
0000023f be01             6987		.byte	190,1

                                   Fri Apr 10 08:31:51 2020           Page 126
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000241 565f434f4d505f47 6988		.strz	"V_COMP_GHS_MPC5700 "
00000249 48535f4d50433537
00000251 30302000        
00000255 01               6989		.byte	1
00000256 bf01             6990		.byte	191,1
00000258 565f4350555f4d50 6991		.strz	"V_CPU_MPC5700 "
00000260 43353730302000  
00000267 01               6992		.byte	1
00000268 ca01             6993		.byte	202,1
0000026a 4d414749435f4e55 6994		.strz	"MAGIC_NUMBER 312540478"
00000272 4d42455220333132
0000027a 35343034373800  
00000281 04               6995		.byte	4
00000282 03               6996		.byte	3
00000283 5c               6997		.byte	92
00000284 05               6998		.byte	5
00000285 03               6999		.byte	3
00000286 31               7000		.byte	49
00000287 06               7001		.byte	6
00000288 03               7002		.byte	3
00000289 34               7003		.byte	52
0000028a 07               7004		.byte	7
0000028b 01               7005		.byte	1
0000028c 8704             7006		.byte	135,4
0000028e 565f4445465f5355 7007		.strz	"V_DEF_SUPPORTED_PLATFORM "
00000296 50504f525445445f
0000029e 504c4154464f524d
000002a6 2000            
000002a8 01               7008		.byte	1
000002a9 e104             7009		.byte	225,4
000002ab 7675696e74782076 7010		.strz	"vuintx vuint32"
000002b3 75696e74333200  
000002ba 01               7011		.byte	1
000002bb da06             7012		.byte	218,6
000002bd 4c4f43414c5f494e 7013		.strz	"LOCAL_INLINE static inline"
000002c5 4c494e4520737461
000002cd 74696320696e6c69
000002d5 6e6500          
000002d8 01               7014		.byte	1
000002d9 e406             7015		.byte	228,6
000002db 565f4d454d524f4d 7016		.strz	"V_MEMROM0 "
000002e3 302000          
000002e6 01               7017		.byte	1
000002e7 ec06             7018		.byte	236,6
000002e9 565f4d454d524f4d 7019		.strz	"V_MEMROM1 "
000002f1 312000          
000002f4 01               7020		.byte	1
000002f5 f006             7021		.byte	240,6
000002f7 565f4d454d524f4d 7022		.strz	"V_MEMROM1_FAR "
000002ff 315f4641522000  
00000306 01               7023		.byte	1
00000307 8007             7024		.byte	128,7
00000309 565f4d454d524f4d 7025		.strz	"V_MEMROM2 const"
00000311 3220636f6e737400
00000319 01               7026		.byte	1
0000031a 8307             7027		.byte	131,7
0000031c 4d454d4f52595f52 7028		.strz	"MEMORY_ROM V_MEMROM2"
00000324 4f4d20565f4d454d
0000032c 524f4d3200      
00000331 01               7029		.byte	1
00000332 8a07             7030		.byte	138,7
00000334 565f4d454d524f4d 7031		.strz	"V_MEMROM2_FAR const"
0000033c 325f46415220636f
00000344 6e737400        
00000348 01               7032		.byte	1
00000349 9307             7033		.byte	147,7
0000034b 565f4d454d524f4d 7034		.strz	"V_MEMROM3 "
00000353 332000          
00000356 01               7035		.byte	1
00000357 9907             7036		.byte	153,7
00000359 565f4d454d52414d 7037		.strz	"V_MEMRAM0 "
00000361 302000          
00000364 01               7038		.byte	1
00000365 9d07             7039		.byte	157,7
00000367 565f4d454d52414d 7040		.strz	"V_MEMRAM1_NEAR "
0000036f 315f4e4541522000
00000377 01               7041		.byte	1
00000378 a107             7042		.byte	161,7
0000037a 565f4d454d52414d 7043		.strz	"V_MEMRAM1 "
00000382 312000          

                                   Fri Apr 10 08:31:51 2020           Page 127
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000385 01               7044		.byte	1
00000386 ab07             7045		.byte	171,7
00000388 565f4d454d52414d 7046		.strz	"V_MEMRAM2_NEAR "
00000390 325f4e4541522000
00000398 01               7047		.byte	1
00000399 ae07             7048		.byte	174,7
0000039b 4d454d4f52595f4e 7049		.strz	"MEMORY_NEAR V_MEMRAM2_NEAR"
000003a3 45415220565f4d45
000003ab 4d52414d325f4e45
000003b3 415200          
000003b6 01               7050		.byte	1
000003b7 b507             7051		.byte	181,7
000003b9 565f4d454d52414d 7052		.strz	"V_MEMRAM2 "
000003c1 322000          
000003c4 01               7053		.byte	1
000003c5 bf07             7054		.byte	191,7
000003c7 565f4d454d52414d 7055		.strz	"V_MEMRAM2_FAR "
000003cf 325f4641522000  
000003d6 01               7056		.byte	1
000003d7 c207             7057		.byte	194,7
000003d9 4d454d4f52595f46 7058		.strz	"MEMORY_FAR V_MEMRAM2_FAR"
000003e1 415220565f4d454d
000003e9 52414d325f464152
000003f1 00              
000003f2 01               7059		.byte	1
000003f3 cc07             7060		.byte	204,7
000003f5 565f4d454d52414d 7061		.strz	"V_MEMRAM3 "
000003fd 332000          
00000400 01               7062		.byte	1
00000401 f907             7063		.byte	249,7
00000403 565f4e554c4c2028 7064		.strz	"V_NULL ((void*)0)"
0000040b 28766f69642a2930
00000413 2900            
00000415 01               7065		.byte	1
00000416 fe07             7066		.byte	254,7
00000418 4e554c4c20565f4e 7067		.strz	"NULL V_NULL"
00000420 554c4c00        
00000424 04               7068		.byte	4
00000425 01               7069		.byte	1
00000426 45               7070		.byte	69
00000427 6b47454e79566572 7071		.strz	"kGENyVersionNumberOfBytes 10"
0000042f 73696f6e4e756d62
00000437 65724f6642797465
0000043f 7320313000      
00000444 04               7072		.byte	4
00000445 04               7073		.byte	4
00000446 03               7074		.byte	3
00000447 60               7075		.byte	96
00000448 08               7076		.byte	8
00000449 03               7077		.byte	3
0000044a 44               7078		.byte	68
0000044b 09               7079		.byte	9
0000044c 03               7080		.byte	3
0000044d 55               7081		.byte	85
0000044e 0a               7082		.byte	10
0000044f 01               7083		.byte	1
00000450 45               7084		.byte	69
00000451 5f5f5345435f494e 7085		.strz	"__SEC_INC_H__ "
00000459 435f485f5f2000  
00000460 03               7086		.byte	3
00000461 56               7087		.byte	86
00000462 0b               7088		.byte	11
00000463 01               7089		.byte	1
00000464 2f               7090		.byte	47
00000465 5345435f434c4153 7091		.strz	"SEC_CLASS_DDD 0"
0000046d 535f444444203000
00000475 01               7092		.byte	1
00000476 30               7093		.byte	48
00000477 5345435f434c4153 7094		.strz	"SEC_CLASS_C 1"
0000047f 535f43203100    
00000485 01               7095		.byte	1
00000486 31               7096		.byte	49
00000487 5345435f434c4153 7097		.strz	"SEC_CLASS_CCC 2"
0000048f 535f434343203200
00000497 01               7098		.byte	1
00000498 32               7099		.byte	50

                                   Fri Apr 10 08:31:51 2020           Page 128
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000499 5345435f434c4153 7100		.strz	"SEC_CLASS_VENDOR 3"
000004a1 535f56454e444f52
000004a9 203300          
000004ac 01               7101		.byte	1
000004ad 39               7102		.byte	57
000004ae 5345435f52495045 7103		.strz	"SEC_RIPEMD160 0"
000004b6 4d44313630203000
000004be 01               7104		.byte	1
000004bf 3a               7105		.byte	58
000004c0 5345435f53484131 7106		.strz	"SEC_SHA1 1"
000004c8 203100          
000004cb 01               7107		.byte	1
000004cc 3b               7108		.byte	59
000004cd 5345435f53484132 7109		.strz	"SEC_SHA256 2"
000004d5 3536203200      
000004da 01               7110		.byte	1
000004db 44               7111		.byte	68
000004dc 5345435f4b45595f 7112		.strz	"SEC_KEY_TIMEOUT 0"
000004e4 54494d454f555420
000004ec 3000            
000004ee 01               7113		.byte	1
000004ef 48               7114		.byte	72
000004f0 5345435f48415348 7115		.strz	"SEC_HASH_ALGORITHM SEC_SHA1"
000004f8 5f414c474f524954
00000500 484d205345435f53
00000508 48413100        
0000050c 01               7116		.byte	1
0000050d 49               7117		.byte	73
0000050e 5345435f53454355 7118		.strz	"SEC_SECURITY_CLASS SEC_CLASS_DDD"
00000516 524954595f434c41
0000051e 5353205345435f43
00000526 4c4153535f444444
0000052e 00              
0000052f 01               7119		.byte	1
00000530 4f               7120		.byte	79
00000531 5345435f454e4142 7121		.strz	"SEC_ENABLE_VERIFICATION_KEY_INTERNAL "
00000539 4c455f5645524946
00000541 49434154494f4e5f
00000549 4b45595f494e5445
00000551 524e414c2000    
00000557 01               7122		.byte	1
00000558 50               7123		.byte	80
00000559 5345435f53495a45 7124		.strz	"SEC_SIZE_CHECKSUM_VENDOR 0"
00000561 5f434845434b5355
00000569 4d5f56454e444f52
00000571 203000          
00000574 01               7125		.byte	1
00000575 52               7126		.byte	82
00000576 5345435f56455249 7127		.strz	"SEC_VERIFY_BYTES 64"
0000057e 46595f4259544553
00000586 20363400        
0000058a 01               7128		.byte	1
0000058b 53               7129		.byte	83
0000058c 5345435f454e4142 7130		.strz	"SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH "
00000594 4c455f5645524946
0000059c 49434154494f4e5f
000005a4 414444524553535f
000005ac 4c454e4754482000
000005b4 01               7131		.byte	1
000005b5 54               7132		.byte	84
000005b6 5345435f454e4142 7133		.strz	"SEC_ENABLE_CRC_TOTAL "
000005be 4c455f4352435f54
000005c6 4f54414c2000    
000005cc 01               7134		.byte	1
000005cd 57               7135		.byte	87
000005ce 5345435f5645525f 7136		.strz	"SEC_VER_SIG_OFFSET 0"
000005d6 5349475f4f464653
000005de 4554203000      
000005e3 01               7137		.byte	1
000005e4 58               7138		.byte	88
000005e5 5345435f5645525f 7139		.strz	"SEC_VER_CRC_OFFSET 0"
000005ed 4352435f4f464653
000005f5 4554203000      
000005fa 04               7140		.byte	4
000005fb 03               7141		.byte	3
000005fc 59               7142		.byte	89
000005fd 0c               7143		.byte	12
000005fe 03               7144		.byte	3
000005ff 4d               7145		.byte	77
00000600 0a               7146		.byte	10
00000601 04               7147		.byte	4
00000602 01               7148		.byte	1
00000603 59               7149		.byte	89
00000604 5345435f57415443 7150		.strz	"SEC_WATCHDOG_CYCLE_COUNT (0x20u)"
0000060c 48444f475f435943
00000614 4c455f434f554e54
0000061c 2028307832307529
00000624 00              
00000625 01               7151		.byte	1
00000626 60               7152		.byte	96
00000627 5345435f454e4142 7153		.strz	"SEC_ENABLE_WORKSPACE_INTERNAL "
0000062f 4c455f574f524b53
00000637 504143455f494e54
0000063f 45524e414c2000  
00000646 01               7154		.byte	1
00000647 66               7155		.byte	102

                                   Fri Apr 10 08:31:51 2020           Page 129
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000648 5345435f43484543 7156		.strz	"SEC_CHECKSUM_TYPE_CRC 0u"
00000650 4b53554d5f545950
00000658 455f435243203075
00000660 00              
00000661 01               7157		.byte	1
00000662 6b               7158		.byte	107
00000663 5345435f43484543 7159		.strz	"SEC_CHECKSUM_TYPE_HASH (SEC_CHECKSUM_TYPE_CRC + 1u)"
0000066b 4b53554d5f545950
00000673 455f484153482028
0000067b 5345435f43484543
00000683 4b53554d5f545950
0000068b 455f435243202b20
00000693 31752900        
00000697 01               7160		.byte	1
00000698 71               7161		.byte	113
00000699 5345435f4d41435f 7162		.strz	"SEC_MAC_TYPE_HMAC 0u"
000006a1 545950455f484d41
000006a9 4320307500      
000006ae 01               7163		.byte	1
000006af 8601             7164		.byte	134,1
000006b1 5345435f43524333 7165		.strz	"SEC_CRC32 0u"
000006b9 3220307500      
000006be 01               7166		.byte	1
000006bf 8e01             7167		.byte	142,1
000006c1 5345435f43524331 7168		.strz	"SEC_CRC16 (SEC_CRC32 + 1u)"
000006c9 3620285345435f43
000006d1 52433332202b2031
000006d9 752900          
000006dc 01               7169		.byte	1
000006dd ca01             7170		.byte	202,1
000006df 5345435f5349474e 7171		.strz	"SEC_SIGNATURE_SCHEME_RSA_V15 0u"
000006e7 41545552455f5343
000006ef 48454d455f525341
000006f7 5f56313520307500
000006ff 01               7172		.byte	1
00000700 dc01             7173		.byte	220,1
00000702 5345434d5f4f4b20 7174		.strz	"SECM_OK 0x00u"
0000070a 307830307500    
00000710 01               7175		.byte	1
00000711 e301             7176		.byte	227,1
00000713 5345435f43414c4c 7177		.strz	"SEC_CALL_TYPE "
0000071b 5f545950452000  
00000722 04               7178		.byte	4
00000723 03               7179		.byte	3
00000724 5c               7180		.byte	92
00000725 0d               7181		.byte	13
00000726 03               7182		.byte	3
00000727 2f               7183		.byte	47
00000728 0e               7184		.byte	14
00000729 04               7185		.byte	4
0000072a 04               7186		.byte	4
0000072b 04               7187		.byte	4
0000072c 03               7188		.byte	3
0000072d 58               7189		.byte	88
0000072e 0f               7190		.byte	15
0000072f 01               7191		.byte	1
00000730 6d               7192		.byte	109
00000731 5345435f4352435f 7193		.strz	"SEC_CRC_TYPE SEC_CRC32"
00000739 5459504520534543
00000741 5f435243333200  
00000748 01               7194		.byte	1
00000749 78               7195		.byte	120
0000074a 5345435f454e4142 7196		.strz	"SEC_ENABLE_CRC_TYPE_CRC32 "
00000752 4c455f4352435f54
0000075a 5950455f43524333
00000762 322000          
00000765 04               7197		.byte	4
00000766 03               7198		.byte	3
00000767 59               7199		.byte	89
00000768 10               7200		.byte	16
00000769 03               7201		.byte	3
0000076a 55               7202		.byte	85
0000076b 11               7203		.byte	17
0000076c 01               7204		.byte	1
0000076d 3e               7205		.byte	62
0000076e 5345435f53454544 7206		.strz	"SEC_SEED_LENGTH 8u"
00000776 5f4c454e47544820
0000077e 387500          
00000781 01               7207		.byte	1
00000782 40               7208		.byte	64
00000783 5345435f4b45595f 7209		.strz	"SEC_KEY_LENGTH 4u"
0000078b 4c454e4754482034
00000793 7500            
00000795 04               7210		.byte	4
00000796 01               7211		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 130
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000797 7e               7212		.byte	126
00000798 5345435f50524e47 7213		.strz	"SEC_PRNG_LCG 0u"
000007a0 5f4c434720307500
000007a8 01               7214		.byte	1
000007a9 8301             7215		.byte	131,1
000007ab 5345435f50524e47 7216		.strz	"SEC_PRNG_FIPS186 (SEC_PRNG_LCG + 1u)"
000007b3 5f46495053313836
000007bb 20285345435f5052
000007c3 4e475f4c4347202b
000007cb 2031752900      
000007d0 01               7217		.byte	1
000007d1 8901             7218		.byte	137,1
000007d3 5345435f50524e47 7219		.strz	"SEC_PRNG SEC_PRNG_LCG"
000007db 205345435f50524e
000007e3 475f4c434700    
000007e9 04               7220		.byte	4
000007ea 03               7221		.byte	3
000007eb 5a               7222		.byte	90
000007ec 12               7223		.byte	18
000007ed 01               7224		.byte	1
000007ee ba01             7225		.byte	186,1
000007f0 5345435f53454355 7226		.strz	"SEC_SECURITY_CLASS_VERIFY SEC_SECURITY_CLASS"
000007f8 524954595f434c41
00000800 53535f5645524946
00000808 59205345435f5345
00000810 4355524954595f43
00000818 4c41535300      
0000081d 01               7227		.byte	1
0000081e c001             7228		.byte	192,1
00000820 5345435f53454355 7229		.strz	"SEC_SECURITY_CLASS_VERIFICATION SEC_SECURITY_CLASS"
00000828 524954595f434c41
00000830 53535f5645524946
00000838 49434154494f4e20
00000840 5345435f53454355
00000848 524954595f434c41
00000850 535300          
00000853 01               7230		.byte	1
00000854 c701             7231		.byte	199,1
00000856 5345435f43484543 7232		.strz	"SEC_CHECKSUM_TYPE SEC_CHECKSUM_TYPE_CRC"
0000085e 4b53554d5f545950
00000866 45205345435f4348
0000086e 45434b53554d5f54
00000876 5950455f43524300
0000087e 01               7233		.byte	1
0000087f cd01             7234		.byte	205,1
00000881 5345435f4d41435f 7235		.strz	"SEC_MAC_TYPE SEC_MAC_TYPE_HMAC"
00000889 5459504520534543
00000891 5f4d41435f545950
00000899 455f484d414300  
000008a0 01               7236		.byte	1
000008a1 d301             7237		.byte	211,1
000008a3 5345435f5349474e 7238		.strz	"SEC_SIGNATURE_SCHEME SEC_SIGNATURE_SCHEME_RSA_V15"
000008ab 41545552455f5343
000008b3 48454d4520534543
000008bb 5f5349474e415455
000008c3 52455f534348454d
000008cb 455f5253415f5631
000008d3 3500            
000008d5 01               7239		.byte	1
000008d6 fd01             7240		.byte	253,1
000008d8 5345435f454e4142 7241		.strz	"SEC_ENABLE_SECURITY_CLASS_DDD "
000008e0 4c455f5345435552
000008e8 4954595f434c4153
000008f0 535f4444442000  
000008f7 01               7242		.byte	1
000008f8 8f02             7243		.byte	143,2
000008fa 5345435f454e4142 7244		.strz	"SEC_ENABLE_CHECKSUM_TYPE_CRC "
00000902 4c455f434845434b
0000090a 53554d5f54595045
00000912 5f4352432000    
00000918 01               7245		.byte	1
00000919 db02             7246		.byte	219,2
0000091b 5345435f454e4142 7247		.strz	"SEC_ENABLE_VERIFY_CHECKSUM_CRC "
00000923 4c455f5645524946
0000092b 595f434845434b53
00000933 554d5f4352432000
0000093b 04               7248		.byte	4
0000093c 04               7249		.byte	4
0000093d 04               7250		.byte	4
0000093e 03               7251		.byte	3
0000093f 62               7252		.byte	98
00000940 13               7253		.byte	19
00000941 03               7254		.byte	3
00000942 48               7255		.byte	72
00000943 14               7256		.byte	20
00000944 01               7257		.byte	1
00000945 33               7258		.byte	51
00000946 46424c5f5553455f 7259		.strz	"FBL_USE_OWN_MEMCPY "
0000094e 4f574e5f4d454d43
00000956 50592000        
0000095a 01               7260		.byte	1
0000095b 34               7261		.byte	52
0000095c 46424c5f57415443 7262		.strz	"FBL_WATCHDOG_ON "
00000964 48444f475f4f4e20
0000096c 00              
0000096d 01               7263		.byte	1
0000096e 35               7264		.byte	53
0000096f 46424c5f57415443 7265		.strz	"FBL_WATCHDOG_TIME (1 / FBL_REPEAT_CALL_CYCLE)"
00000977 48444f475f54494d
0000097f 45202831202f2046
00000987 424c5f5245504541
0000098f 545f43414c4c5f43
00000997 59434c452900    
0000099d 01               7266		.byte	1
0000099e 36               7267		.byte	54

                                   Fri Apr 10 08:31:51 2020           Page 131
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000099f 46424c5f48454144 7268		.strz	"FBL_HEADER_ADDRESS 0xFC0400u"
000009a7 45525f4144445245
000009af 5353203078464330
000009b7 3430307500      
000009bc 01               7269		.byte	1
000009bd 37               7270		.byte	55
000009be 46424c5f454e4142 7271		.strz	"FBL_ENABLE_APPL_TASK "
000009c6 4c455f4150504c5f
000009ce 5441534b2000    
000009d4 01               7272		.byte	1
000009d5 39               7273		.byte	57
000009d6 46424c5f44494147 7274		.strz	"FBL_DIAG_BUFFER_LENGTH 4095"
000009de 5f4255464645525f
000009e6 4c454e4754482034
000009ee 30393500        
000009f2 01               7275		.byte	1
000009f3 3b               7276		.byte	59
000009f4 46424c5f44494147 7277		.strz	"FBL_DIAG_TIME_P3MAX (2000 / FBL_REPEAT_CALL_CYCLE)"
000009fc 5f54494d455f5033
00000a04 4d41582028323030
00000a0c 30202f2046424c5f
00000a14 5245504541545f43
00000a1c 414c4c5f4359434c
00000a24 452900          
00000a27 01               7278		.byte	1
00000a28 3c               7279		.byte	60
00000a29 46424c5f454e4142 7280		.strz	"FBL_ENABLE_SLEEPMODE "
00000a31 4c455f534c454550
00000a39 4d4f44452000    
00000a3f 01               7281		.byte	1
00000a40 3e               7282		.byte	62
00000a41 46424c5f454e4142 7283		.strz	"FBL_ENABLE_GAP_FILL "
00000a49 4c455f4741505f46
00000a51 494c4c2000      
00000a56 01               7284		.byte	1
00000a57 40               7285		.byte	64
00000a58 46424c5f454e4142 7286		.strz	"FBL_ENABLE_MULTIPLE_MEM_DEVICES "
00000a60 4c455f4d554c5449
00000a68 504c455f4d454d5f
00000a70 4445564943455320
00000a78 00              
00000a79 01               7287		.byte	1
00000a7a 41               7288		.byte	65
00000a7b 46424c5f4d454d44 7289		.strz	"FBL_MEMDRV_SEGMENT_SIZE 8"
00000a83 52565f5345474d45
00000a8b 4e545f53495a4520
00000a93 3800            
00000a95 01               7290		.byte	1
00000a96 42               7291		.byte	66
00000a97 46424c5f454e4142 7292		.strz	"FBL_ENABLE_PRESENCE_PATTERN "
00000a9f 4c455f5052455345
00000aa7 4e43455f50415454
00000aaf 45524e2000      
00000ab4 01               7293		.byte	1
00000ab5 43               7294		.byte	67
00000ab6 46424c5f454e4142 7295		.strz	"FBL_ENABLE_FBL_START "
00000abe 4c455f46424c5f53
00000ac6 544152542000    
00000acc 01               7296		.byte	1
00000acd 45               7297		.byte	69
00000ace 46424c5f44495341 7298		.strz	"FBL_DISABLE_USERSUBFUNCTION "
00000ad6 424c455f55534552
00000ade 53554246554e4354
00000ae6 494f4e2000      
00000aeb 01               7299		.byte	1
00000aec 47               7300		.byte	71
00000aed 46424c5f4d544142 7301		.strz	"FBL_MTAB_NO_OF_BLOCKS 2"
00000af5 5f4e4f5f4f465f42
00000afd 4c4f434b53203200
00000b05 01               7302		.byte	1
00000b06 49               7303		.byte	73
00000b07 46424c5f44495341 7304		.strz	"FBL_DISABLE_DATA_PROCESSING "
00000b0f 424c455f44415441
00000b17 5f50524f43455353
00000b1f 494e472000      
00000b24 01               7305		.byte	1
00000b25 51               7306		.byte	81
00000b26 46424c5f454e4142 7307		.strz	"FBL_ENABLE_SYSTEM_CHECK "
00000b2e 4c455f5359535445
00000b36 4d5f434845434b20
00000b3e 00              
00000b3f 01               7308		.byte	1
00000b40 52               7309		.byte	82
00000b41 46424c5f454e4142 7310		.strz	"FBL_ENABLE_DEBUG_STATUS "
00000b49 4c455f4445425547
00000b51 5f53544154555320
00000b59 00              
00000b5a 01               7311		.byte	1
00000b5b 53               7312		.byte	83
00000b5c 46424c5f454e4142 7313		.strz	"FBL_ENABLE_ASSERTION "
00000b64 4c455f4153534552
00000b6c 54494f4e2000    
00000b72 01               7314		.byte	1
00000b73 56               7315		.byte	86
00000b74 46424c5f4d454d5f 7316		.strz	"FBL_MEM_ENABLE_VERIFY_OUTPUT "
00000b7c 454e41424c455f56
00000b84 45524946595f4f55
00000b8c 545055542000    
00000b92 01               7317		.byte	1
00000b93 5f               7318		.byte	95
00000b94 464c4153485f5349 7319		.strz	"FLASH_SIZE 1536"
00000b9c 5a45203135333600
00000ba4 01               7320		.byte	1
00000ba5 72               7321		.byte	114
00000ba6 53574d5f44415441 7322		.strz	"SWM_DATA_MAX_NOAR 8"
00000bae 5f4d41585f4e4f41
00000bb6 52203800        
00000bba 01               7323		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 132
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000bbb 74               7324		.byte	116
00000bbc 46424c5f454e4142 7325		.strz	"FBL_ENABLE_SEC_ACCESS_DELAY "
00000bc4 4c455f5345435f41
00000bcc 43434553535f4445
00000bd4 4c41592000      
00000bd9 01               7326		.byte	1
00000bda 7f               7327		.byte	127
00000bdb 46424c5f454e4142 7328		.strz	"FBL_ENABLE_VECTOR_HW "
00000be3 4c455f564543544f
00000beb 525f48572000    
00000bf1 01               7329		.byte	1
00000bf2 8201             7330		.byte	130,1
00000bf4 46424c5f454e4142 7331		.strz	"FBL_ENABLE_CAN_CONFIRMATION "
00000bfc 4c455f43414e5f43
00000c04 4f4e4649524d4154
00000c0c 494f4e2000      
00000c11 01               7332		.byte	1
00000c12 8301             7333		.byte	131,1
00000c14 46424c5f454e4142 7334		.strz	"FBL_ENABLE_SECMOD_VECTOR "
00000c1c 4c455f5345434d4f
00000c24 445f564543544f52
00000c2c 2000            
00000c2e 01               7335		.byte	1
00000c2f 8501             7336		.byte	133,1
00000c31 46424c5f454e4142 7337		.strz	"FBL_ENABLE_WRAPPER_NV "
00000c39 4c455f5752415050
00000c41 45525f4e562000  
00000c48 01               7338		.byte	1
00000c49 8d01             7339		.byte	141,1
00000c4b 46424c5f454e4142 7340		.strz	"FBL_ENABLE_APPL_STATE_TASK "
00000c53 4c455f4150504c5f
00000c5b 53544154455f5441
00000c63 534b2000        
00000c67 01               7341		.byte	1
00000c68 9001             7342		.byte	144,1
00000c6a 46424c5f454e4142 7343		.strz	"FBL_ENABLE_APPL_TIMER_TASK "
00000c72 4c455f4150504c5f
00000c7a 54494d45525f5441
00000c82 534b2000        
00000c86 01               7344		.byte	1
00000c87 9901             7345		.byte	153,1
00000c89 46424c5f5346525f 7346		.strz	"FBL_SFR_SIU_TYPE 2u"
00000c91 5349555f54595045
00000c99 20327500        
00000c9d 01               7347		.byte	1
00000c9e 9f01             7348		.byte	159,1
00000ca0 46424c5f4d455f42 7349		.strz	"FBL_ME_BASE 0xFFFB8000ul"
00000ca8 4153452030784646
00000cb0 464238303030756c
00000cb8 00              
00000cb9 01               7350		.byte	1
00000cba a001             7351		.byte	160,1
00000cbc 46424c5f434d555f 7352		.strz	"FBL_CMU_BASE 0xC3FE0100ul"
00000cc4 4241534520307843
00000ccc 3346453031303075
00000cd4 6c00            
00000cd6 01               7353		.byte	1
00000cd7 a101             7354		.byte	161,1
00000cd9 46424c5f434d555f 7355		.strz	"FBL_CMU_PLL_BASE 0xFFFB0200ul"
00000ce1 504c4c5f42415345
00000ce9 2030784646464230
00000cf1 323030756c00    
00000cf7 01               7356		.byte	1
00000cf8 a201             7357		.byte	162,1
00000cfa 46424c5f43474d5f 7358		.strz	"FBL_CGM_BASE 0xFFFB0000ul"
00000d02 4241534520307846
00000d0a 4646423030303075
00000d12 6c00            
00000d14 01               7359		.byte	1
00000d15 a301             7360		.byte	163,1
00000d17 46424c5f52474d5f 7361		.strz	"FBL_RGM_BASE 0xFFFA8000ul"
00000d1f 4241534520307846
00000d27 4646413830303075
00000d2f 6c00            
00000d31 01               7362		.byte	1
00000d32 a901             7363		.byte	169,1
00000d34 46424c5f5346525f 7364		.strz	"FBL_SFR_BASE_ADRESSES_PRECONFIGURED "
00000d3c 424153455f414452
00000d44 45535345535f5052
00000d4c 45434f4e46494755
00000d54 5245442000      
00000d59 04               7365		.byte	4
00000d5a 03               7366		.byte	3
00000d5b 5a               7367		.byte	90
00000d5c 15               7368		.byte	21
00000d5d 01               7369		.byte	1
00000d5e 4b               7370		.byte	75
00000d5f 6b46626c53797341 7371		.strz	"kFblSysAssertParameterOutOfRange 0x50u"
00000d67 7373657274506172
00000d6f 616d657465724f75
00000d77 744f6652616e6765
00000d7f 20307835307500  
00000d86 03               7372		.byte	3
00000d87 54               7373		.byte	84
00000d88 16               7374		.byte	22
00000d89 04               7375		.byte	4
00000d8a 01               7376		.byte	1
00000d8b 5a               7377		.byte	90
00000d8c 46424c5f4445434c 7378		.strz	"FBL_DECL_ASSERT_EXTENDED_INFO(n) n"
00000d94 5f4153534552545f
00000d9c 455854454e444544
00000da4 5f494e464f286e29
00000dac 206e00          
00000daf 01               7379		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 133
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000db0 5b               7380		.byte	91
00000db1 46424c5f55534544 7381		.strz	"FBL_USED_ASSERT_EXTENDED_INFO(n) (n)"
00000db9 5f4153534552545f
00000dc1 455854454e444544
00000dc9 5f494e464f286e29
00000dd1 20286e2900      
00000dd6 01               7382		.byte	1
00000dd7 62               7383		.byte	98
00000dd8 6173736572744662 7384		.strz	"assertFblInternal(p,e) if (!(p)) ApplFblFatalError(FBL_USED_ASSERT_EXTENDED_INFO(e))"
00000de0 6c496e7465726e61
00000de8 6c28702c65292069
00000df0 6620282128702929
00000df8 204170706c46626c
00000e00 466174616c457272
00000e08 6f722846424c5f55
00000e10 5345445f41535345
00000e18 52545f455854454e
00000e20 4445445f494e464f
00000e28 2865292900      
00000e2d 04               7385		.byte	4
00000e2e 01               7386		.byte	1
00000e2f 6c               7387		.byte	108
00000e30 46424c5f4445465f 7388		.strz	"FBL_DEF_ENABLE_NON_KB_MAIN "
00000e38 454e41424c455f4e
00000e40 4f4e5f4b425f4d41
00000e48 494e2000        
00000e4c 01               7389		.byte	1
00000e4d 7e               7390		.byte	126
00000e4e 6b46626c4f6b2030 7391		.strz	"kFblOk 0x00u"
00000e56 7830307500      
00000e5b 01               7392		.byte	1
00000e5c 7f               7393		.byte	127
00000e5d 6b46626c4661696c 7394		.strz	"kFblFailed 0x01u"
00000e65 6564203078303175
00000e6d 00              
00000e6e 01               7395		.byte	1
00000e6f 9501             7396		.byte	149,1
00000e71 46424c5f52455045 7397		.strz	"FBL_REPEAT_CALL_CYCLE 1"
00000e79 41545f43414c4c5f
00000e81 4359434c45203100
00000e89 01               7398		.byte	1
00000e8a 9a01             7399		.byte	154,1
00000e8c 46424c5f43414c4c 7400		.strz	"FBL_CALL_TYPE "
00000e94 5f545950452000  
00000e9b 01               7401		.byte	1
00000e9c 9e01             7402		.byte	158,1
00000e9e 565f43414c4c4241 7403		.strz	"V_CALLBACK_NEAR "
00000ea6 434b5f4e45415220
00000eae 00              
00000eaf 01               7404		.byte	1
00000eb0 a101             7405		.byte	161,1
00000eb2 565f4150495f4e45 7406		.strz	"V_API_NEAR "
00000eba 41522000        
00000ebe 01               7407		.byte	1
00000ebf 8502             7408		.byte	133,2
00000ec1 46424c5f53544154 7409		.strz	"FBL_STATE_BITS 32"
00000ec9 455f424954532033
00000ed1 3200            
00000ed3 01               7410		.byte	1
00000ed4 9302             7411		.byte	147,2
00000ed6 46424c5f53544154 7412		.strz	"FBL_STATE_INDEX(bit) ((bit) / FBL_STATE_BITS)"
00000ede 455f494e44455828
00000ee6 6269742920282862
00000eee 697429202f204642
00000ef6 4c5f53544154455f
00000efe 424954532900    
00000f04 01               7413		.byte	1
00000f05 b002             7414		.byte	176,2
00000f07 4d454d53495a455f 7415		.strz	"MEMSIZE_OK "
00000f0f 4f4b2000        
00000f13 04               7416		.byte	4
00000f14 03               7417		.byte	3
00000f15 68               7418		.byte	104
00000f16 17               7419		.byte	23
00000f17 01               7420		.byte	1
00000f18 3b               7421		.byte	59
00000f19 6b4e724f6656616c 7422		.strz	"kNrOfValidationBytes 1"
00000f21 69646174696f6e42
00000f29 79746573203100  
00000f30 01               7423		.byte	1
00000f31 3e               7424		.byte	62
00000f32 46424c5f4d544142 7425		.strz	"FBL_MTAB_MAGIC_FLAG 0xB5A4C3D2u"
00000f3a 5f4d414749435f46
00000f42 4c41472030784235
00000f4a 4134433344327500
00000f52 01               7426		.byte	1
00000f53 3f               7427		.byte	63
00000f54 49734c6f67696361 7428		.strz	"IsLogicalBlockTableValid() (FblLogicalBlockTable.magicFlag == FBL_MTAB_MAGIC_FLAG)"
00000f5c 6c426c6f636b5461
00000f64 626c6556616c6964
00000f6c 2829202846626c4c
00000f74 6f676963616c426c
00000f7c 6f636b5461626c65
00000f84 2e6d61676963466c
00000f8c 6167203d3d204642
00000f94 4c5f4d5441425f4d
00000f9c 414749435f464c41
00000fa4 472900          
00000fa7 01               7429		.byte	1
00000fa8 5c               7430		.byte	92
00000fa9 46424c5f4c42545f 7431		.strz	"FBL_LBT_START_SEC_CONST "
00000fb1 53544152545f5345
00000fb9 435f434f4e535420
00000fc1 00              
00000fc2 03               7432		.byte	3
00000fc3 5d               7433		.byte	93
00000fc4 18               7434		.byte	24
00000fc5 01               7435		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 134
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00000fc6 2b               7436		.byte	43
00000fc7 46424c5f4d454d4d 7437		.strz	"FBL_MEMMAP_ERROR "
00000fcf 41505f4552524f52
00000fd7 2000            
00000fd9 04               7438		.byte	4
00000fda 01               7439		.byte	1
00000fdb 5f               7440		.byte	95
00000fdc 46424c5f4c42545f 7441		.strz	"FBL_LBT_STOP_SEC_CONST "
00000fe4 53544f505f534543
00000fec 5f434f4e53542000
00000ff4 03               7442		.byte	3
00000ff5 60               7443		.byte	96
00000ff6 18               7444		.byte	24
00000ff7 01               7445		.byte	1
00000ff8 2b               7446		.byte	43
00000ff9 46424c5f4d454d4d 7447		.strz	"FBL_MEMMAP_ERROR "
00001001 41505f4552524f52
00001009 2000            
0000100b 04               7448		.byte	4
0000100c 04               7449		.byte	4
0000100d 03               7450		.byte	3
0000100e 6e               7451		.byte	110
0000100f 19               7452		.byte	25
00001010 01               7453		.byte	1
00001011 54               7454		.byte	84
00001012 464c4153485f5345 7455		.strz	"FLASH_SEGMENT_SIZE 8u"
0000101a 474d454e545f5349
00001022 5a4520387500    
00001028 04               7456		.byte	4
00001029 03               7457		.byte	3
0000102a 6f               7458		.byte	111
0000102b 1a               7459		.byte	26
0000102c 04               7460		.byte	4
0000102d 03               7461		.byte	3
0000102e 75               7462		.byte	117
0000102f 1b               7463		.byte	27
00001030 01               7464		.byte	1
00001031 53               7465		.byte	83
00001032 46424c5f57445f54 7466		.strz	"FBL_WD_TRIGGERED 0x03u"
0000103a 5249474745524544
00001042 20307830337500  
00001049 01               7467		.byte	1
0000104a 7c               7468		.byte	124
0000104b 494e495457415443 7469		.strz	"INITWATCHDOG_START_SEC_CODE_EXPORT "
00001053 48444f475f535441
0000105b 52545f5345435f43
00001063 4f44455f4558504f
0000106b 52542000        
0000106f 03               7470		.byte	3
00001070 7d               7471		.byte	125
00001071 18               7472		.byte	24
00001072 01               7473		.byte	1
00001073 2b               7474		.byte	43
00001074 46424c5f4d454d4d 7475		.strz	"FBL_MEMMAP_ERROR "
0000107c 41505f4552524f52
00001084 2000            
00001086 04               7476		.byte	4
00001087 01               7477		.byte	1
00001088 8001             7478		.byte	128,1
0000108a 494e495457415443 7479		.strz	"INITWATCHDOG_STOP_SEC_CODE_EXPORT "
00001092 48444f475f53544f
0000109a 505f5345435f434f
000010a2 44455f4558504f52
000010aa 542000          
000010ad 03               7480		.byte	3
000010ae 8101             7481		.byte	129,1
000010b0 18               7482		.byte	24
000010b1 01               7483		.byte	1
000010b2 2b               7484		.byte	43
000010b3 46424c5f4d454d4d 7485		.strz	"FBL_MEMMAP_ERROR "
000010bb 41505f4552524f52
000010c3 2000            
000010c5 04               7486		.byte	4
000010c6 01               7487		.byte	1
000010c7 8301             7488		.byte	131,1
000010c9 4c4f4f4b464f5257 7489		.strz	"LOOKFORWATCHDOG_START_SEC_CODE_EXPORT "
000010d1 41544348444f475f
000010d9 53544152545f5345
000010e1 435f434f44455f45
000010e9 58504f52542000  
000010f0 03               7490		.byte	3
000010f1 8401             7491		.byte	132,1

                                   Fri Apr 10 08:31:51 2020           Page 135
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000010f3 18               7492		.byte	24
000010f4 01               7493		.byte	1
000010f5 2b               7494		.byte	43
000010f6 46424c5f4d454d4d 7495		.strz	"FBL_MEMMAP_ERROR "
000010fe 41505f4552524f52
00001106 2000            
00001108 04               7496		.byte	4
00001109 01               7497		.byte	1
0000110a 8801             7498		.byte	136,1
0000110c 4c4f4f4b464f5257 7499		.strz	"LOOKFORWATCHDOG_STOP_SEC_CODE_EXPORT "
00001114 41544348444f475f
0000111c 53544f505f534543
00001124 5f434f44455f4558
0000112c 504f52542000    
00001132 03               7500		.byte	3
00001133 8901             7501		.byte	137,1
00001135 18               7502		.byte	24
00001136 01               7503		.byte	1
00001137 2b               7504		.byte	43
00001138 46424c5f4d454d4d 7505		.strz	"FBL_MEMMAP_ERROR "
00001140 41505f4552524f52
00001148 2000            
0000114a 04               7506		.byte	4
0000114b 01               7507		.byte	1
0000114c 8b01             7508		.byte	139,1
0000114e 4c4f4f4b464f5257 7509		.strz	"LOOKFORWATCHDOG_START_SEC_CODE_EXPORT "
00001156 41544348444f475f
0000115e 53544152545f5345
00001166 435f434f44455f45
0000116e 58504f52542000  
00001175 03               7510		.byte	3
00001176 8c01             7511		.byte	140,1
00001178 18               7512		.byte	24
00001179 01               7513		.byte	1
0000117a 2b               7514		.byte	43
0000117b 46424c5f4d454d4d 7515		.strz	"FBL_MEMMAP_ERROR "
00001183 41505f4552524f52
0000118b 2000            
0000118d 04               7516		.byte	4
0000118e 01               7517		.byte	1
0000118f 9001             7518		.byte	144,1
00001191 4c4f4f4b464f5257 7519		.strz	"LOOKFORWATCHDOG_STOP_SEC_CODE_EXPORT "
00001199 41544348444f475f
000011a1 53544f505f534543
000011a9 5f434f44455f4558
000011b1 504f52542000    
000011b7 03               7520		.byte	3
000011b8 9101             7521		.byte	145,1
000011ba 18               7522		.byte	24
000011bb 01               7523		.byte	1
000011bc 2b               7524		.byte	43
000011bd 46424c5f4d454d4d 7525		.strz	"FBL_MEMMAP_ERROR "
000011c5 41505f4552524f52
000011cd 2000            
000011cf 04               7526		.byte	4
000011d0 04               7527		.byte	4
000011d1 03               7528		.byte	3
000011d2 76               7529		.byte	118
000011d3 1c               7530		.byte	28
000011d4 01               7531		.byte	1
000011d5 4d               7532		.byte	77
000011d6 494f5f455f4f4b20 7533		.strz	"IO_E_OK ((vuint8)0x00u)"
000011de 28287675696e7438
000011e6 2930783030752900
000011ee 04               7534		.byte	4
000011ef 03               7535		.byte	3
000011f0 7e               7536		.byte	126
000011f1 1d               7537		.byte	29
000011f2 01               7538		.byte	1
000011f3 ca01             7539		.byte	202,1
000011f5 46424c5f4d41585f 7540		.strz	"FBL_MAX_SEGMENT_SIZE_MIO FBL_MEMDRV_SEGMENT_SIZE"
000011fd 5345474d454e545f
00001205 53495a455f4d494f
0000120d 2046424c5f4d454d
00001215 4452565f5345474d
0000121d 454e545f53495a45
00001225 00              
00001226 01               7541		.byte	1
00001227 e601             7542		.byte	230,1
00001229 46424c5f4d41585f 7543		.strz	"FBL_MAX_SEGMENT_SIZE FBL_MAX_SEGMENT_SIZE_MIO"
00001231 5345474d454e545f
00001239 53495a452046424c
00001241 5f4d41585f534547
00001249 4d454e545f53495a
00001251 455f4d494f00    
00001257 01               7544		.byte	1
00001258 8702             7545		.byte	135,2
0000125a 46424c5f4d494f5f 7546		.strz	"FBL_MIO_DEFAULT_FCT_PTR "
00001262 44454641554c545f
0000126a 4643545f50545220
00001272 00              
00001273 01               7547		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 136
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00001274 a002             7548		.byte	160,2
00001276 46424c4d494f5f53 7549		.strz	"FBLMIO_START_SEC_CODE "
0000127e 544152545f534543
00001286 5f434f44452000  
0000128d 03               7550		.byte	3
0000128e a102             7551		.byte	161,2
00001290 18               7552		.byte	24
00001291 01               7553		.byte	1
00001292 2b               7554		.byte	43
00001293 46424c5f4d454d4d 7555		.strz	"FBL_MEMMAP_ERROR "
0000129b 41505f4552524f52
000012a3 2000            
000012a5 04               7556		.byte	4
000012a6 01               7557		.byte	1
000012a7 b102             7558		.byte	177,2
000012a9 46424c4d494f5f53 7559		.strz	"FBLMIO_STOP_SEC_CODE "
000012b1 544f505f5345435f
000012b9 434f44452000    
000012bf 03               7560		.byte	3
000012c0 b202             7561		.byte	178,2
000012c2 18               7562		.byte	24
000012c3 01               7563		.byte	1
000012c4 2b               7564		.byte	43
000012c5 46424c5f4d454d4d 7565		.strz	"FBL_MEMMAP_ERROR "
000012cd 41505f4552524f52
000012d5 2000            
000012d7 04               7566		.byte	4
000012d8 04               7567		.byte	4
000012d9 03               7568		.byte	3
000012da 7f               7569		.byte	127
000012db 1e               7570		.byte	30
000012dc 01               7571		.byte	1
000012dd 66               7572		.byte	102
000012de 46424c464c494f5f 7573		.strz	"FBLFLIO_FLASHCODE_START_SEC_VAR "
000012e6 464c415348434f44
000012ee 455f53544152545f
000012f6 5345435f56415220
000012fe 00              
000012ff 03               7574		.byte	3
00001300 67               7575		.byte	103
00001301 18               7576		.byte	24
00001302 01               7577		.byte	1
00001303 2b               7578		.byte	43
00001304 46424c5f4d454d4d 7579		.strz	"FBL_MEMMAP_ERROR "
0000130c 41505f4552524f52
00001314 2000            
00001316 04               7580		.byte	4
00001317 01               7581		.byte	1
00001318 69               7582		.byte	105
00001319 46424c464c494f5f 7583		.strz	"FBLFLIO_FLASHCODE_STOP_SEC_VAR "
00001321 464c415348434f44
00001329 455f53544f505f53
00001331 45435f5641522000
00001339 03               7584		.byte	3
0000133a 6a               7585		.byte	106
0000133b 18               7586		.byte	24
0000133c 01               7587		.byte	1
0000133d 2b               7588		.byte	43
0000133e 46424c5f4d454d4d 7589		.strz	"FBL_MEMMAP_ERROR "
00001346 41505f4552524f52
0000134e 2000            
00001350 04               7590		.byte	4
00001351 04               7591		.byte	4
00001352 03               7592		.byte	3
00001353 8001             7593		.byte	128,1
00001355 1f               7594		.byte	31
00001356 04               7595		.byte	4
00001357 03               7596		.byte	3
00001358 8101             7597		.byte	129,1
0000135a 20               7598		.byte	32
0000135b 03               7599		.byte	3
0000135c 2a               7600		.byte	42
0000135d 02               7601		.byte	2
0000135e 04               7602		.byte	4
0000135f 03               7603		.byte	3

                                   Fri Apr 10 08:31:51 2020           Page 137
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00001360 2b               7604		.byte	43
00001361 21               7605		.byte	33
00001362 01               7606		.byte	1
00001363 49               7607		.byte	73
00001364 45455044554d4d59 7608		.strz	"EEPDUMMY_FULL_START_SEC_CODE "
0000136c 5f46554c4c5f5354
00001374 4152545f5345435f
0000137c 434f44452000    
00001382 03               7609		.byte	3
00001383 4a               7610		.byte	74
00001384 18               7611		.byte	24
00001385 01               7612		.byte	1
00001386 2b               7613		.byte	43
00001387 46424c5f4d454d4d 7614		.strz	"FBL_MEMMAP_ERROR "
0000138f 41505f4552524f52
00001397 2000            
00001399 04               7615		.byte	4
0000139a 01               7616		.byte	1
0000139b 54               7617		.byte	84
0000139c 45455044554d4d59 7618		.strz	"EEPDUMMY_FULL_STOP_SEC_CODE "
000013a4 5f46554c4c5f5354
000013ac 4f505f5345435f43
000013b4 4f44452000      
000013b9 03               7619		.byte	3
000013ba 55               7620		.byte	85
000013bb 18               7621		.byte	24
000013bc 01               7622		.byte	1
000013bd 2b               7623		.byte	43
000013be 46424c5f4d454d4d 7624		.strz	"FBL_MEMMAP_ERROR "
000013c6 41505f4552524f52
000013ce 2000            
000013d0 04               7625		.byte	4
000013d1 04               7626		.byte	4
000013d2 04               7627		.byte	4
000013d3 03               7628		.byte	3
000013d4 8401             7629		.byte	132,1
000013d6 22               7630		.byte	34
000013d7 01               7631		.byte	1
000013d8 55               7632		.byte	85
000013d9 46424c5f4150504c 7633		.strz	"FBL_APPLVECT_START_SEC_CONST "
000013e1 564543545f535441
000013e9 52545f5345435f43
000013f1 4f4e53542000    
000013f7 03               7634		.byte	3
000013f8 56               7635		.byte	86
000013f9 18               7636		.byte	24
000013fa 01               7637		.byte	1
000013fb 2b               7638		.byte	43
000013fc 46424c5f4d454d4d 7639		.strz	"FBL_MEMMAP_ERROR "
00001404 41505f4552524f52
0000140c 2000            
0000140e 04               7640		.byte	4
0000140f 01               7641		.byte	1
00001410 5a               7642		.byte	90
00001411 46424c5f4150504c 7643		.strz	"FBL_APPLVECT_STOP_SEC_CONST "
00001419 564543545f53544f
00001421 505f5345435f434f
00001429 4e53542000      
0000142e 03               7644		.byte	3
0000142f 5b               7645		.byte	91
00001430 18               7646		.byte	24
00001431 01               7647		.byte	1
00001432 2b               7648		.byte	43
00001433 46424c5f4d454d4d 7649		.strz	"FBL_MEMMAP_ERROR "
0000143b 41505f4552524f52
00001443 2000            
00001445 04               7650		.byte	4
00001446 04               7651		.byte	4
00001447 03               7652		.byte	3
00001448 8801             7653		.byte	136,1
0000144a 23               7654		.byte	35
0000144b 03               7655		.byte	3
0000144c 3c               7656		.byte	60
0000144d 24               7657		.byte	36
0000144e 01               7658		.byte	1
0000144f 49               7659		.byte	73

                                   Fri Apr 10 08:31:51 2020           Page 138
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00001450 46424c5f43414e5f 7660		.strz	"FBL_CAN_NUMBER_OF_RX_ID 2u"
00001458 4e554d4245525f4f
00001460 465f52585f494420
00001468 327500          
0000146b 01               7661		.byte	1
0000146c 4a               7662		.byte	74
0000146d 46424c5f43414e5f 7663		.strz	"FBL_CAN_NUMBER_OF_RANGES 0u"
00001475 4e554d4245525f4f
0000147d 465f52414e474553
00001485 20307500        
00001489 01               7664		.byte	1
0000148a 4b               7665		.byte	75
0000148b 46424c5f4e554d42 7666		.strz	"FBL_NUMBER_OF_RX_ID (FBL_CAN_NUMBER_OF_RX_ID + FBL_CAN_NUMBER_OF_RANGES)"
00001493 45525f4f465f5258
0000149b 5f4944202846424c
000014a3 5f43414e5f4e554d
000014ab 4245525f4f465f52
000014b3 585f4944202b2046
000014bb 424c5f43414e5f4e
000014c3 554d4245525f4f46
000014cb 5f52414e47455329
000014d3 00              
000014d4 01               7667		.byte	1
000014d5 54               7668		.byte	84
000014d6 46424c5f4e554d42 7669		.strz	"FBL_NUMBER_OF_TX_ID 1u"
000014de 45525f4f465f5458
000014e6 5f494420317500  
000014ed 01               7670		.byte	1
000014ee 57               7671		.byte	87
000014ef 46424c5f43575f43 7672		.strz	"FBL_CW_CFG_START_SEC_CONST "
000014f7 46475f5354415254
000014ff 5f5345435f434f4e
00001507 53542000        
0000150b 03               7673		.byte	3
0000150c 58               7674		.byte	88
0000150d 18               7675		.byte	24
0000150e 01               7676		.byte	1
0000150f 2b               7677		.byte	43
00001510 46424c5f4d454d4d 7678		.strz	"FBL_MEMMAP_ERROR "
00001518 41505f4552524f52
00001520 2000            
00001522 04               7679		.byte	4
00001523 01               7680		.byte	1
00001524 67               7681		.byte	103
00001525 46424c5f43575f43 7682		.strz	"FBL_CW_CFG_STOP_SEC_CONST "
0000152d 46475f53544f505f
00001535 5345435f434f4e53
0000153d 542000          
00001540 03               7683		.byte	3
00001541 68               7684		.byte	104
00001542 18               7685		.byte	24
00001543 01               7686		.byte	1
00001544 2b               7687		.byte	43
00001545 46424c5f4d454d4d 7688		.strz	"FBL_MEMMAP_ERROR "
0000154d 41505f4552524f52
00001555 2000            
00001557 04               7689		.byte	4
00001558 01               7690		.byte	1
00001559 6d               7691		.byte	109
0000155a 46424c5f43575f45 7692		.strz	"FBL_CW_ENABLE_PHYSICAL_REQUEST_HANDLER "
00001562 4e41424c455f5048
0000156a 59534943414c5f52
00001572 4551554553545f48
0000157a 414e444c45522000
00001582 01               7693		.byte	1
00001583 6e               7694		.byte	110
00001584 46424c5f43575f45 7695		.strz	"FBL_CW_ENABLE_FUNCTIONAL_REQUEST_HANDLER "
0000158c 4e41424c455f4655
00001594 4e4354494f4e414c
0000159c 5f52455155455354
000015a4 5f48414e444c4552
000015ac 2000            
000015ae 04               7696		.byte	4
000015af 03               7697		.byte	3
000015b0 4d               7698		.byte	77
000015b1 25               7699		.byte	37
000015b2 03               7700		.byte	3
000015b3 54               7701		.byte	84
000015b4 26               7702		.byte	38
000015b5 04               7703		.byte	4
000015b6 01               7704		.byte	1
000015b7 68               7705		.byte	104
000015b8 4150504c53544152 7706		.strz	"APPLSTART (*((vuint32 *)&ApplIntJmpTable[1]))"
000015c0 5420282a28287675
000015c8 696e743332202a29
000015d0 264170706c496e74
000015d8 4a6d705461626c65
000015e0 5b315d292900    
000015e6 01               7707		.byte	1
000015e7 74               7708		.byte	116
000015e8 4d554c5449504c45 7709		.strz	"MULTIPLE_RECEIVE_BUFFER "
000015f0 5f52454345495645
000015f8 5f42554646455220
00001600 00              
00001601 01               7710		.byte	1
00001602 9902             7711		.byte	153,2
00001604 6b46626c43616e4d 7712		.strz	"kFblCanMaxMB 16"
0000160c 61784d4220313600
00001614 01               7713		.byte	1
00001615 9b02             7714		.byte	155,2
00001617 46626c43616e4973 7715		.strz	"FblCanIsAsleep() 0u"
0000161f 41736c6565702829
00001627 20307500        

                                   Fri Apr 10 08:31:51 2020           Page 139
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000162b 01               7716		.byte	1
0000162c d202             7717		.byte	210,2
0000162e 4a53522878292028 7718		.strz	"JSR(x) (((void(*)(void))(x))())"
00001636 2828766f6964282a
0000163e 2928766f69642929
00001646 2878292928292900
0000164e 01               7719		.byte	1
0000164f d402             7720		.byte	212,2
00001651 4a53525f4150504c 7721		.strz	"JSR_APPL() JSR(APPLSTART)"
00001659 2829204a53522841
00001661 50504c5354415254
00001669 2900            
0000166b 01               7722		.byte	1
0000166c cd03             7723		.byte	205,3
0000166e 46424c48575f5241 7724		.strz	"FBLHW_RAMCODE_START_SEC_CODE "
00001676 4d434f44455f5354
0000167e 4152545f5345435f
00001686 434f44452000    
0000168c 03               7725		.byte	3
0000168d ce03             7726		.byte	206,3
0000168f 18               7727		.byte	24
00001690 01               7728		.byte	1
00001691 2b               7729		.byte	43
00001692 46424c5f4d454d4d 7730		.strz	"FBL_MEMMAP_ERROR "
0000169a 41505f4552524f52
000016a2 2000            
000016a4 04               7731		.byte	4
000016a5 01               7732		.byte	1
000016a6 d003             7733		.byte	208,3
000016a8 46424c48575f5241 7734		.strz	"FBLHW_RAMCODE_STOP_SEC_CODE "
000016b0 4d434f44455f5354
000016b8 4f505f5345435f43
000016c0 4f44452000      
000016c5 03               7735		.byte	3
000016c6 d103             7736		.byte	209,3
000016c8 18               7737		.byte	24
000016c9 01               7738		.byte	1
000016ca 2b               7739		.byte	43
000016cb 46424c5f4d454d4d 7740		.strz	"FBL_MEMMAP_ERROR "
000016d3 41505f4552524f52
000016db 2000            
000016dd 04               7741		.byte	4
000016de 01               7742		.byte	1
000016df d703             7743		.byte	215,3
000016e1 46424c48575f5354 7744		.strz	"FBLHW_START_SEC_CODE "
000016e9 4152545f5345435f
000016f1 434f44452000    
000016f7 03               7745		.byte	3
000016f8 d803             7746		.byte	216,3
000016fa 18               7747		.byte	24
000016fb 01               7748		.byte	1
000016fc 2b               7749		.byte	43
000016fd 46424c5f4d454d4d 7750		.strz	"FBL_MEMMAP_ERROR "
00001705 41505f4552524f52
0000170d 2000            
0000170f 04               7751		.byte	4
00001710 01               7752		.byte	1
00001711 da03             7753		.byte	218,3
00001713 46424c48575f5354 7754		.strz	"FBLHW_STOP_SEC_CODE "
0000171b 4f505f5345435f43
00001723 4f44452000      
00001728 03               7755		.byte	3
00001729 db03             7756		.byte	219,3
0000172b 18               7757		.byte	24
0000172c 01               7758		.byte	1
0000172d 2b               7759		.byte	43
0000172e 46424c5f4d454d4d 7760		.strz	"FBL_MEMMAP_ERROR "
00001736 41505f4552524f52
0000173e 2000            
00001740 04               7761		.byte	4
00001741 01               7762		.byte	1
00001742 df03             7763		.byte	223,3
00001744 46424c48575f4642 7764		.strz	"FBLHW_FBLCANTRANSMITTED_START_SEC_CODE "
0000174c 4c43414e5452414e
00001754 534d49545445445f
0000175c 53544152545f5345
00001764 435f434f44452000
0000176c 03               7765		.byte	3
0000176d e003             7766		.byte	224,3
0000176f 18               7767		.byte	24
00001770 01               7768		.byte	1
00001771 2b               7769		.byte	43
00001772 46424c5f4d454d4d 7770		.strz	"FBL_MEMMAP_ERROR "
0000177a 41505f4552524f52
00001782 2000            
00001784 04               7771		.byte	4

                                   Fri Apr 10 08:31:51 2020           Page 140
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00001785 01               7772		.byte	1
00001786 e203             7773		.byte	226,3
00001788 46424c48575f4642 7774		.strz	"FBLHW_FBLCANTRANSMITTED_STOP_SEC_CODE "
00001790 4c43414e5452414e
00001798 534d49545445445f
000017a0 53544f505f534543
000017a8 5f434f44452000  
000017af 03               7775		.byte	3
000017b0 e303             7776		.byte	227,3
000017b2 18               7777		.byte	24
000017b3 01               7778		.byte	1
000017b4 2b               7779		.byte	43
000017b5 46424c5f4d454d4d 7780		.strz	"FBL_MEMMAP_ERROR "
000017bd 41505f4552524f52
000017c5 2000            
000017c7 04               7781		.byte	4
000017c8 01               7782		.byte	1
000017c9 e503             7783		.byte	229,3
000017cb 46424c48575f5354 7784		.strz	"FBLHW_START_SEC_CODE "
000017d3 4152545f5345435f
000017db 434f44452000    
000017e1 03               7785		.byte	3
000017e2 e603             7786		.byte	230,3
000017e4 18               7787		.byte	24
000017e5 01               7788		.byte	1
000017e6 2b               7789		.byte	43
000017e7 46424c5f4d454d4d 7790		.strz	"FBL_MEMMAP_ERROR "
000017ef 41505f4552524f52
000017f7 2000            
000017f9 04               7791		.byte	4
000017fa 01               7792		.byte	1
000017fb e803             7793		.byte	232,3
000017fd 46424c48575f5354 7794		.strz	"FBLHW_STOP_SEC_CODE "
00001805 4f505f5345435f43
0000180d 4f44452000      
00001812 03               7795		.byte	3
00001813 e903             7796		.byte	233,3
00001815 18               7797		.byte	24
00001816 01               7798		.byte	1
00001817 2b               7799		.byte	43
00001818 46424c5f4d454d4d 7800		.strz	"FBL_MEMMAP_ERROR "
00001820 41505f4552524f52
00001828 2000            
0000182a 04               7801		.byte	4
0000182b 01               7802		.byte	1
0000182c f903             7803		.byte	249,3
0000182e 4d454d4350595f53 7804		.strz	"MEMCPY_START_SEC_CODE "
00001836 544152545f534543
0000183e 5f434f44452000  
00001845 03               7805		.byte	3
00001846 fa03             7806		.byte	250,3
00001848 18               7807		.byte	24
00001849 01               7808		.byte	1
0000184a 2b               7809		.byte	43
0000184b 46424c5f4d454d4d 7810		.strz	"FBL_MEMMAP_ERROR "
00001853 41505f4552524f52
0000185b 2000            
0000185d 04               7811		.byte	4
0000185e 01               7812		.byte	1
0000185f fd03             7813		.byte	253,3
00001861 4d454d4350595f53 7814		.strz	"MEMCPY_STOP_SEC_CODE "
00001869 544f505f5345435f
00001871 434f44452000    
00001877 03               7815		.byte	3
00001878 fe03             7816		.byte	254,3
0000187a 18               7817		.byte	24
0000187b 01               7818		.byte	1
0000187c 2b               7819		.byte	43
0000187d 46424c5f4d454d4d 7820		.strz	"FBL_MEMMAP_ERROR "
00001885 41505f4552524f52
0000188d 2000            
0000188f 04               7821		.byte	4
00001890 04               7822		.byte	4
00001891 03               7823		.byte	3
00001892 4e               7824		.byte	78
00001893 27               7825		.byte	39
00001894 01               7826		.byte	1
00001895 3b               7827		.byte	59

                                   Fri Apr 10 08:31:51 2020           Page 141
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00001896 46424c5f54505f45 7828		.strz	"FBL_TP_ENABLE_ISO15765_2_2 "
0000189e 4e41424c455f4953
000018a6 4f31353736355f32
000018ae 5f322000        
000018b2 01               7829		.byte	1
000018b3 41               7830		.byte	65
000018b4 46424c5f54505f45 7831		.strz	"FBL_TP_ENABLE_CONFIRMATION_INTERRUPT "
000018bc 4e41424c455f434f
000018c4 4e4649524d415449
000018cc 4f4e5f494e544552
000018d4 525550542000    
000018da 04               7832		.byte	4
000018db 03               7833		.byte	3
000018dc 4f               7834		.byte	79
000018dd 28               7835		.byte	40
000018de 01               7836		.byte	1
000018df b101             7837		.byte	177,1
000018e1 46424c54505f5241 7838		.strz	"FBLTP_RAMCODE_START_SEC_CODE "
000018e9 4d434f44455f5354
000018f1 4152545f5345435f
000018f9 434f44452000    
000018ff 03               7839		.byte	3
00001900 b201             7840		.byte	178,1
00001902 18               7841		.byte	24
00001903 01               7842		.byte	1
00001904 2b               7843		.byte	43
00001905 46424c5f4d454d4d 7844		.strz	"FBL_MEMMAP_ERROR "
0000190d 41505f4552524f52
00001915 2000            
00001917 04               7845		.byte	4
00001918 01               7846		.byte	1
00001919 c301             7847		.byte	195,1
0000191b 46424c54505f5241 7848		.strz	"FBLTP_RAMCODE_STOP_SEC_CODE "
00001923 4d434f44455f5354
0000192b 4f505f5345435f43
00001933 4f44452000      
00001938 03               7849		.byte	3
00001939 c401             7850		.byte	196,1
0000193b 18               7851		.byte	24
0000193c 01               7852		.byte	1
0000193d 2b               7853		.byte	43
0000193e 46424c5f4d454d4d 7854		.strz	"FBL_MEMMAP_ERROR "
00001946 41505f4552524f52
0000194e 2000            
00001950 04               7855		.byte	4
00001951 04               7856		.byte	4
00001952 01               7857		.byte	1
00001953 c601             7858		.byte	198,1
00001955 46424c5f43575f46 7859		.strz	"FBL_CW_FULL_START_SEC_CODE "
0000195d 554c4c5f53544152
00001965 545f5345435f434f
0000196d 44452000        
00001971 03               7860		.byte	3
00001972 c701             7861		.byte	199,1
00001974 18               7862		.byte	24
00001975 01               7863		.byte	1
00001976 2b               7864		.byte	43
00001977 46424c5f4d454d4d 7865		.strz	"FBL_MEMMAP_ERROR "
0000197f 41505f4552524f52
00001987 2000            
00001989 04               7866		.byte	4
0000198a 01               7867		.byte	1
0000198b cd01             7868		.byte	205,1
0000198d 46424c5f43575f54 7869		.strz	"FBL_CW_TASK_START_SEC_CODE "
00001995 41534b5f53544152
0000199d 545f5345435f434f
000019a5 44452000        
000019a9 03               7870		.byte	3
000019aa ce01             7871		.byte	206,1
000019ac 18               7872		.byte	24
000019ad 01               7873		.byte	1
000019ae 2b               7874		.byte	43
000019af 46424c5f4d454d4d 7875		.strz	"FBL_MEMMAP_ERROR "
000019b7 41505f4552524f52
000019bf 2000            
000019c1 04               7876		.byte	4
000019c2 01               7877		.byte	1
000019c3 d101             7878		.byte	209,1
000019c5 46424c5f43575f54 7879		.strz	"FBL_CW_TASK_STOP_SEC_CODE "
000019cd 41534b5f53544f50
000019d5 5f5345435f434f44
000019dd 452000          
000019e0 03               7880		.byte	3
000019e1 d201             7881		.byte	210,1
000019e3 18               7882		.byte	24
000019e4 01               7883		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 142
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000019e5 2b               7884		.byte	43
000019e6 46424c5f4d454d4d 7885		.strz	"FBL_MEMMAP_ERROR "
000019ee 41505f4552524f52
000019f6 2000            
000019f8 04               7886		.byte	4
000019f9 01               7887		.byte	1
000019fa fa01             7888		.byte	250,1
000019fc 46424c5f43575f46 7889		.strz	"FBL_CW_FULL_STOP_SEC_CODE "
00001a04 554c4c5f53544f50
00001a0c 5f5345435f434f44
00001a14 452000          
00001a17 03               7890		.byte	3
00001a18 fb01             7891		.byte	251,1
00001a1a 18               7892		.byte	24
00001a1b 01               7893		.byte	1
00001a1c 2b               7894		.byte	43
00001a1d 46424c5f4d454d4d 7895		.strz	"FBL_MEMMAP_ERROR "
00001a25 41505f4552524f52
00001a2d 2000            
00001a2f 04               7896		.byte	4
00001a30 04               7897		.byte	4
00001a31 03               7898		.byte	3
00001a32 8e01             7899		.byte	142,1
00001a34 29               7900		.byte	41
00001a35 03               7901		.byte	3
00001a36 39               7902		.byte	57
00001a37 2a               7903		.byte	42
00001a38 03               7904		.byte	3
00001a39 3b               7905		.byte	59
00001a3a 2b               7906		.byte	43
00001a3b 01               7907		.byte	1
00001a3c 31               7908		.byte	49
00001a3d 4e565f454e41424c 7909		.strz	"NV_ENABLE_ADDRESS_LOOKUP "
00001a45 455f414444524553
00001a4d 535f4c4f4f4b5550
00001a55 2000            
00001a57 01               7910		.byte	1
00001a58 5c               7911		.byte	92
00001a59 6b45657053697a65 7912		.strz	"kEepSizeProgReqFlag 0x01u"
00001a61 50726f6752657146
00001a69 6c61672030783031
00001a71 7500            
00001a73 01               7913		.byte	1
00001a74 5d               7914		.byte	93
00001a75 6b45657053697a65 7915		.strz	"kEepSizeResetResponseFlag 0x01u"
00001a7d 5265736574526573
00001a85 706f6e7365466c61
00001a8d 6720307830317500
00001a95 01               7916		.byte	1
00001a96 5e               7917		.byte	94
00001a97 6b45657053697a65 7918		.strz	"kEepSizeApplValidity 0x01u"
00001a9f 4170706c56616c69
00001aa7 6469747920307830
00001aaf 317500          
00001ab2 01               7919		.byte	1
00001ab3 5f               7920		.byte	95
00001ab4 6b45657053697a65 7921		.strz	"kEepSizeValidityFlags 0x01u"
00001abc 56616c6964697479
00001ac4 466c616773203078
00001acc 30317500        
00001ad0 01               7922		.byte	1
00001ad1 60               7923		.byte	96
00001ad2 6b45657053697a65 7924		.strz	"kEepSizeTesterSerialNumber 0x08u"
00001ada 5465737465725365
00001ae2 7269616c4e756d62
00001aea 6572203078303875
00001af2 00              
00001af3 01               7925		.byte	1
00001af4 61               7926		.byte	97
00001af5 6b45657053697a65 7927		.strz	"kEepSizeProgrammingDate 0x03u"
00001afd 50726f6772616d6d
00001b05 696e674461746520
00001b0d 307830337500    
00001b13 01               7928		.byte	1
00001b14 62               7929		.byte	98
00001b15 6b45657053697a65 7930		.strz	"kEepSizeSymcPartNumber 0x0Au"
00001b1d 53796d6350617274
00001b25 4e756d6265722030
00001b2d 7830417500      
00001b32 01               7931		.byte	1
00001b33 63               7932		.byte	99
00001b34 6b45657053697a65 7933		.strz	"kEepSizeSymcSoftwareVersion 0x02u"
00001b3c 53796d63536f6674
00001b44 7761726556657273
00001b4c 696f6e2030783032
00001b54 7500            
00001b56 01               7934		.byte	1
00001b57 64               7935		.byte	100
00001b58 6b45657053697a65 7936		.strz	"kEepSizeSystemSupplierCode 0x05u"
00001b60 53797374656d5375
00001b68 70706c696572436f
00001b70 6465203078303575
00001b78 00              
00001b79 01               7937		.byte	1
00001b7a 6f               7938		.byte	111
00001b7b 6b45657046626c42 7939		.strz	"kEepFblBaseAddress 0x40008B00u"
00001b83 6173654164647265
00001b8b 7373203078343030
00001b93 30384230307500  

                                   Fri Apr 10 08:31:51 2020           Page 143
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00001b9a 01               7940		.byte	1
00001b9b 70               7941		.byte	112
00001b9c 6b45657053746172 7942		.strz	"kEepStartAddress kEepFblBaseAddress"
00001ba4 7441646472657373
00001bac 206b45657046626c
00001bb4 4261736541646472
00001bbc 65737300        
00001bc0 01               7943		.byte	1
00001bc1 71               7944		.byte	113
00001bc2 6b45657041646472 7945		.strz	"kEepAddressProgReqFlag kEepStartAddress"
00001bca 65737350726f6752
00001bd2 6571466c6167206b
00001bda 4565705374617274
00001be2 4164647265737300
00001bea 01               7946		.byte	1
00001beb 72               7947		.byte	114
00001bec 6b45657041646472 7948		.strz	"kEepAddressResetResponseFlag (kEepAddressProgReqFlag + kEepSizeProgReqFlag)"
00001bf4 6573735265736574
00001bfc 526573706f6e7365
00001c04 466c616720286b45
00001c0c 6570416464726573
00001c14 7350726f67526571
00001c1c 466c6167202b206b
00001c24 45657053697a6550
00001c2c 726f67526571466c
00001c34 61672900        
00001c38 01               7949		.byte	1
00001c39 73               7950		.byte	115
00001c3a 6b45657041646472 7951		.strz	"kEepAddressApplValidity (kEepAddressResetResponseFlag + kEepSizeResetResponseFlag)"
00001c42 6573734170706c56
00001c4a 616c696469747920
00001c52 286b456570416464
00001c5a 7265737352657365
00001c62 74526573706f6e73
00001c6a 65466c6167202b20
00001c72 6b45657053697a65
00001c7a 5265736574526573
00001c82 706f6e7365466c61
00001c8a 672900          
00001c8d 01               7952		.byte	1
00001c8e 74               7953		.byte	116
00001c8f 6b45657041646472 7954		.strz	"kEepAddressValidityFlags (kEepAddressApplValidity + kEepSizeApplValidity)"
00001c97 65737356616c6964
00001c9f 697479466c616773
00001ca7 20286b4565704164
00001caf 6472657373417070
00001cb7 6c56616c69646974
00001cbf 79202b206b456570
00001cc7 53697a654170706c
00001ccf 56616c6964697479
00001cd7 2900            
00001cd9 01               7955		.byte	1
00001cda 75               7956		.byte	117
00001cdb 6b45657041646472 7957		.strz	"kEepAddressProcessData (kEepAddressValidityFlags + kEepSizeValidityFlags)"
00001ce3 65737350726f6365
00001ceb 7373446174612028
00001cf3 6b45657041646472
00001cfb 65737356616c6964
00001d03 697479466c616773
00001d0b 202b206b45657053
00001d13 697a6556616c6964
00001d1b 697479466c616773
00001d23 2900            
00001d25 01               7958		.byte	1
00001d26 76               7959		.byte	118
00001d27 6b45657041646472 7960		.strz	"kEepAddressTesterSerialNumber kEepAddressProcessData"
00001d2f 6573735465737465
00001d37 7253657269616c4e
00001d3f 756d626572206b45
00001d47 6570416464726573
00001d4f 7350726f63657373
00001d57 4461746100      
00001d5c 01               7961		.byte	1
00001d5d 77               7962		.byte	119
00001d5e 6b45657041646472 7963		.strz	"kEepAddressProgrammingDate (kEepAddressTesterSerialNumber + kEepSizeTesterSerialNumber)"
00001d66 65737350726f6772
00001d6e 616d6d696e674461
00001d76 746520286b456570
00001d7e 4164647265737354
00001d86 6573746572536572
00001d8e 69616c4e756d6265
00001d96 72202b206b456570
00001d9e 53697a6554657374
00001da6 657253657269616c
00001dae 4e756d6265722900
00001db6 01               7964		.byte	1
00001db7 78               7965		.byte	120
00001db8 6b45657041646472 7966		.strz	"kEepAddressSymcPartNumber (kEepAddressProgrammingDate + kEepSizeProgrammingDate)"
00001dc0 65737353796d6350
00001dc8 6172744e756d6265
00001dd0 7220286b45657041
00001dd8 6464726573735072
00001de0 6f6772616d6d696e
00001de8 6744617465202b20
00001df0 6b45657053697a65
00001df8 50726f6772616d6d
00001e00 696e674461746529
00001e08 00              
00001e09 01               7967		.byte	1
00001e0a 79               7968		.byte	121
00001e0b 6b45657041646472 7969		.strz	"kEepAddressSymcSoftwareVersion (kEepAddressSymcPartNumber + kEepSizeSymcPartNumber)"
00001e13 65737353796d6353
00001e1b 6f66747761726556
00001e23 657273696f6e2028
00001e2b 6b45657041646472
00001e33 65737353796d6350
00001e3b 6172744e756d6265
00001e43 72202b206b456570
00001e4b 53697a6553796d63
00001e53 506172744e756d62
00001e5b 65722900        
00001e5f 01               7970		.byte	1
00001e60 7a               7971		.byte	122
00001e61 6b45657041646472 7972		.strz	"kEepAddressSystemSupplierCode (kEepAddressSymcSoftwareVersion + kEepSizeSymcSoftwareVersion)"
00001e69 6573735379737465
00001e71 6d537570706c6965
00001e79 72436f646520286b
00001e81 4565704164647265
00001e89 737353796d63536f
00001e91 6674776172655665
00001e99 7273696f6e202b20
00001ea1 6b45657053697a65
00001ea9 53796d63536f6674
00001eb1 7761726556657273
00001eb9 696f6e2900      
00001ebe 01               7973		.byte	1
00001ebf c301             7974		.byte	195,1
00001ec1 4170706c46626c4e 7975		.strz	"ApplFblNvReadValidityFlags(buf) ((EepromDriver_RReadSync(buf, kEepSizeValidityFlags, kEepAddressValidityFlags) == IO_E_OK) ? kFblOk : kFblFailed)"
00001ec9 765265616456616c
00001ed1 6964697479466c61
00001ed9 6773286275662920
00001ee1 2828456570726f6d
00001ee9 4472697665725f52
00001ef1 5265616453796e63
00001ef9 286275662c206b45
00001f01 657053697a655661
00001f09 6c6964697479466c
00001f11 6167732c206b4565
00001f19 7041646472657373
00001f21 56616c6964697479
00001f29 466c61677329203d
00001f31 3d20494f5f455f4f
00001f39 4b29203f206b4662
00001f41 6c4f6b203a206b46
00001f49 626c4661696c6564
00001f51 2900            
00001f53 01               7976		.byte	1
00001f54 dc01             7977		.byte	220,1
00001f56 4170706c46626c4e 7978		.strz	"ApplFblNvWriteSymcPartNumber(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeSymcPartNumber, kEepAddressSymcPartNumber) == IO_E_OK) ? kFblOk : kFblFailed)"
00001f5e 7657726974655379
00001f66 6d63506172744e75
00001f6e 6d62657228696478
00001f76 2c62756629202828
00001f7e 456570726f6d4472
00001f86 697665725f525772
00001f8e 69746553796e6328
00001f96 6275662c206b4565
00001f9e 7053697a6553796d
00001fa6 63506172744e756d
00001fae 6265722c206b4565
00001fb6 7041646472657373
00001fbe 53796d6350617274
00001fc6 4e756d6265722920
00001fce 3d3d20494f5f455f
00001fd6 4f4b29203f206b46
00001fde 626c4f6b203a206b
00001fe6 46626c4661696c65
00001fee 642900          
00001ff1 01               7979		.byte	1
00001ff2 e401             7980		.byte	228,1
00001ff4 4170706c46626c4e 7981		.strz	"ApplFblNvWriteSymcSoftwareVersion(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeSymcSoftwareVersion, kEepAddressSymcSoftwareVersion) == IO_E_OK) ? kFblOk : kFblFailed)"
00001ffc 7657726974655379
00002004 6d63536f66747761
0000200c 726556657273696f
00002014 6e286964782c6275
0000201c 6629202828456570
00002024 726f6d4472697665
0000202c 725f525772697465
00002034 53796e6328627566
0000203c 2c206b4565705369
00002044 7a6553796d63536f
0000204c 6674776172655665
00002054 7273696f6e2c206b
0000205c 4565704164647265
00002064 737353796d63536f
0000206c 6674776172655665
00002074 7273696f6e29203d
0000207c 3d20494f5f455f4f
00002084 4b29203f206b4662
0000208c 6c4f6b203a206b46
00002094 626c4661696c6564
0000209c 2900            
0000209e 01               7982		.byte	1
0000209f ec01             7983		.byte	236,1
000020a1 4170706c46626c4e 7984		.strz	"ApplFblNvWriteSystemSupplierCode(idx,buf) ((EepromDriver_RWriteSync(buf, kEepSizeSystemSupplierCode, kEepAddressSystemSupplierCode) == IO_E_OK) ? kFblOk : kFblFailed)"
000020a9 7657726974655379
000020b1 7374656d53757070
000020b9 6c696572436f6465
000020c1 286964782c627566
000020c9 2920282845657072
000020d1 6f6d447269766572
000020d9 5f52577269746553
000020e1 796e63286275662c
000020e9 206b45657053697a
000020f1 6553797374656d53
000020f9 7570706c69657243
00002101 6f64652c206b4565
00002109 7041646472657373
00002111 53797374656d5375
00002119 70706c696572436f
00002121 646529203d3d2049
00002129 4f5f455f4f4b2920
00002131 3f206b46626c4f6b
00002139 203a206b46626c46
00002141 61696c65642900  
00002148 04               7985		.byte	4
00002149 04               7986		.byte	4
0000214a 04               7987		.byte	4
0000214b 03               7988		.byte	3
0000214c 9501             7989		.byte	149,1
0000214e 2c               7990		.byte	44
0000214f 01               7991		.byte	1
00002150 40               7992		.byte	64
00002151 46424c5f4642545f 7993		.strz	"FBL_FBT_START_SEC_CONST "
00002159 53544152545f5345
00002161 435f434f4e535420
00002169 00              
0000216a 03               7994		.byte	3
0000216b 41               7995		.byte	65

                                   Fri Apr 10 08:31:51 2020           Page 144
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000216c 18               7996		.byte	24
0000216d 01               7997		.byte	1
0000216e 2b               7998		.byte	43
0000216f 46424c5f4d454d4d 7999		.strz	"FBL_MEMMAP_ERROR "
00002177 41505f4552524f52
0000217f 2000            
00002181 04               8000		.byte	4
00002182 01               8001		.byte	1
00002183 47               8002		.byte	71
00002184 46424c5f4642545f 8003		.strz	"FBL_FBT_STOP_SEC_CONST "
0000218c 53544f505f534543
00002194 5f434f4e53542000
0000219c 03               8004		.byte	3
0000219d 48               8005		.byte	72
0000219e 18               8006		.byte	24
0000219f 01               8007		.byte	1
000021a0 2b               8008		.byte	43
000021a1 46424c5f4d454d4d 8009		.strz	"FBL_MEMMAP_ERROR "
000021a9 41505f4552524f52
000021b1 2000            
000021b3 04               8010		.byte	4
000021b4 04               8011		.byte	4
000021b5 03               8012		.byte	3
000021b6 a101             8013		.byte	161,1
000021b8 2d               8014		.byte	45
000021b9 03               8015		.byte	3
000021ba 4b               8016		.byte	75
000021bb 2e               8017		.byte	46
000021bc 01               8018		.byte	1
000021bd 56               8019		.byte	86
000021be 46424c5f44494147 8020		.strz	"FBL_DIAG_ENABLE_CORE_SEGMENTHANDLING "
000021c6 5f454e41424c455f
000021ce 434f52455f534547
000021d6 4d454e5448414e44
000021de 4c494e472000    
000021e4 01               8021		.byte	1
000021e5 61               8022		.byte	97
000021e6 6b44696167537461 8023		.strz	"kDiagStateIdxSecurityKeyAllowed (kDiagLastCoreStateIdx + 1u)"
000021ee 7465496478536563
000021f6 75726974794b6579
000021fe 416c6c6f77656420
00002206 286b446961674c61
0000220e 7374436f72655374
00002216 617465496478202b
0000221e 2031752900      
00002223 01               8024		.byte	1
00002224 62               8025		.byte	98
00002225 6b44696167537461 8026		.strz	"kDiagStateIdxSecurityUnlock (kDiagStateIdxSecurityKeyAllowed + 1u)"
0000222d 7465496478536563
00002235 7572697479556e6c
0000223d 6f636b20286b4469
00002245 6167537461746549
0000224d 6478536563757269
00002255 74794b6579416c6c
0000225d 6f776564202b2031
00002265 752900          
00002268 01               8027		.byte	1
00002269 63               8028		.byte	99
0000226a 6b44696167537461 8029		.strz	"kDiagStateIdxFingerprintValid (kDiagStateIdxSecurityUnlock + 1u)"
00002272 746549647846696e
0000227a 6765727072696e74
00002282 56616c696420286b
0000228a 4469616753746174
00002292 6549647853656375
0000229a 72697479556e6c6f
000022a2 636b202b20317529
000022aa 00              
000022ab 01               8030		.byte	1
000022ac 64               8031		.byte	100
000022ad 6b44696167537461 8032		.strz	"kDiagStateIdxEraseSucceeded (kDiagStateIdxFingerprintValid + 1u)"
000022b5 7465496478457261
000022bd 7365537563636565
000022c5 64656420286b4469
000022cd 6167537461746549
000022d5 647846696e676572
000022dd 7072696e7456616c
000022e5 6964202b20317529
000022ed 00              
000022ee 01               8033		.byte	1
000022ef 65               8034		.byte	101
000022f0 6b44696167537461 8035		.strz	"kDiagStateIdxTransferDataAllowed (kDiagStateIdxEraseSucceeded + 1u)"
000022f8 7465496478547261
00002300 6e73666572446174
00002308 61416c6c6f776564
00002310 20286b4469616753
00002318 7461746549647845
00002320 7261736553756363
00002328 6565646564202b20
00002330 31752900        
00002334 01               8036		.byte	1
00002335 66               8037		.byte	102
00002336 6b44696167537461 8038		.strz	"kDiagStateIdxTransferDataSucceeded (kDiagStateIdxTransferDataAllowed + 1u)"
0000233e 7465496478547261
00002346 6e73666572446174
0000234e 6153756363656564
00002356 656420286b446961
0000235e 6753746174654964
00002366 785472616e736665
0000236e 7244617461416c6c
00002376 6f776564202b2031
0000237e 752900          
00002381 01               8039		.byte	1
00002382 67               8040		.byte	103
00002383 6b44696167537461 8041		.strz	"kDiagStateIdxChecksumAllowed (kDiagStateIdxTransferDataSucceeded + 1u)"
0000238b 7465496478436865
00002393 636b73756d416c6c
0000239b 6f77656420286b44
000023a3 6961675374617465
000023ab 4964785472616e73
000023b3 6665724461746153
000023bb 7563636565646564
000023c3 202b2031752900  
000023ca 01               8042		.byte	1
000023cb 69               8043		.byte	105
000023cc 6b446961674c6173 8044		.strz	"kDiagLastOemStateIdx kDiagStateIdxChecksumAllowed"
000023d4 744f656d53746174
000023dc 65496478206b4469
000023e4 6167537461746549
000023ec 6478436865636b73
000023f4 756d416c6c6f7765
000023fc 6400            
000023fe 01               8045		.byte	1
000023ff 9901             8046		.byte	153,1
00002401 6b44696167436865 8047		.strz	"kDiagCheckCompatibilityOk 0x00u"
00002409 636b436f6d706174
00002411 6962696c6974794f
00002419 6b20307830307500
00002421 01               8048		.byte	1
00002422 9a01             8049		.byte	154,1
00002424 6b44696167436865 8050		.strz	"kDiagCheckCompatibilityFailed 0x01u"
0000242c 636b436f6d706174
00002434 6962696c69747946
0000243c 61696c6564203078
00002444 30317500        
00002448 01               8051		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 145
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00002449 9b01             8052		.byte	155,1
0000244b 6b44696167436865 8053		.strz	"kDiagCheckCompatibilityBlockMissing 0x02u"
00002453 636b436f6d706174
0000245b 6962696c69747942
00002463 6c6f636b4d697373
0000246b 696e672030783032
00002473 7500            
00002475 01               8054		.byte	1
00002476 9c01             8055		.byte	156,1
00002478 6b44696167436865 8056		.strz	"kDiagCheckCompatibilitySwSw 0x03u"
00002480 636b436f6d706174
00002488 6962696c69747953
00002490 7753772030783033
00002498 7500            
0000249a 01               8057		.byte	1
0000249b 9d01             8058		.byte	157,1
0000249d 6b44696167436865 8059		.strz	"kDiagCheckCompatibilitySwHw 0x04u"
000024a5 636b436f6d706174
000024ad 6962696c69747953
000024b5 7748772030783034
000024bd 7500            
000024bf 01               8060		.byte	1
000024c0 f401             8061		.byte	244,1
000024c2 6b44696167466d74 8062		.strz	"kDiagFmtServiceId 0x00u"
000024ca 5365727669636549
000024d2 6420307830307500
000024da 01               8063		.byte	1
000024db f601             8064		.byte	246,1
000024dd 6b44696167466d74 8065		.strz	"kDiagFmtSubparam (kDiagFmtServiceId + 1u)"
000024e5 537562706172616d
000024ed 20286b4469616746
000024f5 6d74536572766963
000024fd 654964202b203175
00002505 2900            
00002507 01               8066		.byte	1
00002508 8a02             8067		.byte	138,2
0000250a 6b44696167466d74 8068		.strz	"kDiagFmtSeedKeyStart (kDiagFmtSubparam + 1u)"
00002512 536565644b657953
0000251a 7461727420286b44
00002522 696167466d745375
0000252a 62706172616d202b
00002532 2031752900      
00002537 04               8069		.byte	4
00002538 01               8070		.byte	1
00002539 5a               8071		.byte	90
0000253a 6b4469616743616c 8072		.strz	"kDiagCallCycle 1u"
00002542 6c4379636c652031
0000254a 7500            
0000254c 01               8073		.byte	1
0000254d 7d               8074		.byte	125
0000254e 6b44696167537461 8075		.strz	"kDiagStateIdxMemDriverInitialized 17u"
00002556 74654964784d656d
0000255e 447269766572496e
00002566 697469616c697a65
0000256e 642031377500    
00002574 01               8076		.byte	1
00002575 7f               8077		.byte	127
00002576 6b446961674c6173 8078		.strz	"kDiagLastCoreStateIdx kDiagStateIdxMemDriverInitialized"
0000257e 74436f7265537461
00002586 7465496478206b44
0000258e 6961675374617465
00002596 4964784d656d4472
0000259e 69766572496e6974
000025a6 69616c697a656400
000025ae 01               8079		.byte	1
000025af 8201             8080		.byte	130,1
000025b1 6b446961674e756d 8081		.strz	"kDiagNumberOfStates ( kDiagLastOemStateIdx + 1u )"
000025b9 6265724f66537461
000025c1 7465732028206b44
000025c9 6961674c6173744f
000025d1 656d537461746549
000025d9 6478202b20317520
000025e1 2900            
000025e3 01               8082		.byte	1
000025e4 8301             8083		.byte	131,1
000025e6 6b446961674e756d 8084		.strz	"kDiagNumberOfDispatchStates kDiagNumberOfStates"
000025ee 6265724f66446973
000025f6 7061746368537461
000025fe 746573206b446961
00002606 674e756d6265724f
0000260e 6653746174657300
00002616 01               8085		.byte	1
00002617 c801             8086		.byte	200,1
00002619 46424c5f44494147 8087		.strz	"FBL_DIAG_STATECHECK_ARRAYSIZE (((kDiagNumberOfDispatchStates - 1u) / FBL_STATE_BITS) + 1u)"
00002621 5f53544154454348
00002629 45434b5f41525241
00002631 5953495a45202828
00002639 286b446961674e75
00002641 6d6265724f664469
00002649 7370617463685374
00002651 61746573202d2031
00002659 7529202f2046424c
00002661 5f53544154455f42
00002669 49545329202b2031
00002671 752900          
00002674 01               8088		.byte	1
00002675 ae02             8089		.byte	174,2
00002677 6b44696167457272 8090		.strz	"kDiagErrorNone 0x00u"
0000267f 6f724e6f6e652030
00002687 7830307500      
0000268c 01               8091		.byte	1
0000268d af02             8092		.byte	175,2
0000268f 6b446961674e7263 8093		.strz	"kDiagNrcGeneralReject 0x10u"
00002697 47656e6572616c52
0000269f 656a656374203078
000026a7 31307500        
000026ab 01               8094		.byte	1
000026ac b502             8095		.byte	181,2
000026ae 6b446961674e7263 8096		.strz	"kDiagNrcConditionsNotCorrect 0x22u"
000026b6 436f6e646974696f
000026be 6e734e6f74436f72
000026c6 7265637420307832
000026ce 327500          
000026d1 01               8097		.byte	1
000026d2 b602             8098		.byte	182,2
000026d4 6b446961674e7263 8099		.strz	"kDiagNrcRequestSequenceError 0x24u"
000026dc 5265717565737453
000026e4 657175656e636545
000026ec 72726f7220307832
000026f4 347500          
000026f7 01               8100		.byte	1
000026f8 b702             8101		.byte	183,2
000026fa 6b446961674e7263 8102		.strz	"kDiagNrcRequestOutOfRange 0x31u"
00002702 526571756573744f
0000270a 75744f6652616e67
00002712 6520307833317500
0000271a 01               8103		.byte	1
0000271b bc02             8104		.byte	188,2
0000271d 6b446961674e7263 8105		.strz	"kDiagNrcUploadDownloadNotAccepted 0x70u"
00002725 55706c6f6164446f
0000272d 776e6c6f61644e6f
00002735 7441636365707465
0000273d 6420307837307500
00002745 01               8106		.byte	1
00002746 bd02             8107		.byte	189,2

                                   Fri Apr 10 08:31:51 2020           Page 146
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00002748 6b446961674e7263 8108		.strz	"kDiagNrcTransferDataSuspended 0x71u"
00002750 5472616e73666572
00002758 4461746153757370
00002760 656e646564203078
00002768 37317500        
0000276c 01               8109		.byte	1
0000276d be02             8110		.byte	190,2
0000276f 6b446961674e7263 8111		.strz	"kDiagNrcGeneralProgrammingFailure 0x72u"
00002777 47656e6572616c50
0000277f 726f6772616d6d69
00002787 6e674661696c7572
0000278f 6520307837327500
00002797 01               8112		.byte	1
00002798 cf03             8113		.byte	207,3
0000279a 46424c444941475f 8114		.strz	"FBLDIAG_RAMCODE_START_SEC_CODE "
000027a2 52414d434f44455f
000027aa 53544152545f5345
000027b2 435f434f44452000
000027ba 03               8115		.byte	3
000027bb d003             8116		.byte	208,3
000027bd 18               8117		.byte	24
000027be 01               8118		.byte	1
000027bf 2b               8119		.byte	43
000027c0 46424c5f4d454d4d 8120		.strz	"FBL_MEMMAP_ERROR "
000027c8 41505f4552524f52
000027d0 2000            
000027d2 04               8121		.byte	4
000027d3 01               8122		.byte	1
000027d4 dc03             8123		.byte	220,3
000027d6 46424c444941475f 8124		.strz	"FBLDIAG_RAMCODE_STOP_SEC_CODE "
000027de 52414d434f44455f
000027e6 53544f505f534543
000027ee 5f434f44452000  
000027f5 03               8125		.byte	3
000027f6 dd03             8126		.byte	221,3
000027f8 18               8127		.byte	24
000027f9 01               8128		.byte	1
000027fa 2b               8129		.byte	43
000027fb 46424c5f4d454d4d 8130		.strz	"FBL_MEMMAP_ERROR "
00002803 41505f4552524f52
0000280b 2000            
0000280d 04               8131		.byte	4
0000280e 04               8132		.byte	4
0000280f 03               8133		.byte	3
00002810 a301             8134		.byte	163,1
00002812 2f               8135		.byte	47
00002813 03               8136		.byte	3
00002814 b201             8137		.byte	178,1
00002816 30               8138		.byte	48
00002817 01               8139		.byte	1
00002818 79               8140		.byte	121
00002819 46424c5f4d454d5f 8141		.strz	"FBL_MEM_BUFFER_SIZE FBL_DIAG_BUFFER_LENGTH"
00002821 4255464645525f53
00002829 495a452046424c5f
00002831 444941475f425546
00002839 4645525f4c454e47
00002841 544800          
00002844 01               8142		.byte	1
00002845 7b               8143		.byte	123
00002846 46424c5f4d454d5f 8144		.strz	"FBL_MEM_DEFAULT_PREAMBLE_LENGTH 2u"
0000284e 44454641554c545f
00002856 505245414d424c45
0000285e 5f4c454e47544820
00002866 327500          
00002869 01               8145		.byte	1
0000286a 7d               8146		.byte	125
0000286b 46424c5f4d454d5f 8147		.strz	"FBL_MEM_MAX_PREAMBLE_LENGTH 2u"
00002873 4d41585f50524541
0000287b 4d424c455f4c454e
00002883 47544820327500  
0000288a 01               8148		.byte	1
0000288b ad01             8149		.byte	173,1
0000288d 5f5f4170706c4662 8150		.strz	"__ApplFblMemPreWrite() FblDiagMemPreWrite()"
00002895 6c4d656d50726557
0000289d 7269746528292046
000028a5 626c446961674d65
000028ad 6d50726557726974
000028b5 65282900        
000028b9 01               8151		.byte	1
000028ba ae01             8152		.byte	174,1
000028bc 5f5f4170706c4662 8153		.strz	"__ApplFblMemPostWrite() FblDiagMemPostWrite()"
000028c4 6c4d656d506f7374
000028cc 5772697465282920
000028d4 46626c446961674d
000028dc 656d506f73745772
000028e4 697465282900    
000028ea 01               8154		.byte	1
000028eb b301             8155		.byte	179,1
000028ed 5f5f4170706c4662 8156		.strz	"__ApplFblMemPreErase() FblDiagMemPreWrite()"
000028f5 6c4d656d50726545
000028fd 7261736528292046
00002905 626c446961674d65
0000290d 6d50726557726974
00002915 65282900        
00002919 01               8157		.byte	1
0000291a b401             8158		.byte	180,1
0000291c 5f5f4170706c4662 8159		.strz	"__ApplFblMemPostErase() FblDiagMemPostWrite()"
00002924 6c4d656d506f7374
0000292c 4572617365282920
00002934 46626c446961674d
0000293c 656d506f73745772
00002944 697465282900    
0000294a 01               8160		.byte	1
0000294b bd01             8161		.byte	189,1
0000294d 46424c5f4d454d5f 8162		.strz	"FBL_MEM_WD_TRIGGER_DEFAULT (FBL_NO_TRIGGER)"
00002955 57445f5452494747
0000295d 45525f4445464155
00002965 4c54202846424c5f
0000296d 4e4f5f5452494747
00002975 45522900        
00002979 01               8163		.byte	1

                                   Fri Apr 10 08:31:51 2020           Page 147
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
0000297a c201             8164		.byte	194,1
0000297c 46424c5f4d454d5f 8165		.strz	"FBL_MEM_TRIGGER_STATUS_OVERWRITE vuint8"
00002984 545249474745525f
0000298c 5354415455535f4f
00002994 5645525752495445
0000299c 207675696e743800
000029a4 01               8166		.byte	1
000029a5 e601             8167		.byte	230,1
000029a7 46424c5f4d454d5f 8168		.strz	"FBL_MEM_ENABLE_STATUS_OVERWRITE "
000029af 454e41424c455f53
000029b7 54415455535f4f56
000029bf 4552575249544520
000029c7 00              
000029c8 01               8169		.byte	1
000029c9 ef01             8170		.byte	239,1
000029cb 46424c5f4d454d5f 8171		.strz	"FBL_MEM_STATUS_Ok kDiagErrorNone"
000029d3 5354415455535f4f
000029db 6b206b4469616745
000029e3 72726f724e6f6e65
000029eb 00              
000029ec 01               8172		.byte	1
000029ed f001             8173		.byte	240,1
000029ef 46424c5f4d454d5f 8174		.strz	"FBL_MEM_STATUS_Failed kDiagNrcConditionsNotCorrect"
000029f7 5354415455535f46
000029ff 61696c6564206b44
00002a07 6961674e7263436f
00002a0f 6e646974696f6e73
00002a17 4e6f74436f727265
00002a1f 637400          
00002a22 01               8175		.byte	1
00002a23 f201             8176		.byte	242,1
00002a25 46424c5f4d454d5f 8177		.strz	"FBL_MEM_STATUS_BlockEraseSequence kDiagNrcRequestSequenceError"
00002a2d 5354415455535f42
00002a35 6c6f636b45726173
00002a3d 6553657175656e63
00002a45 65206b446961674e
00002a4d 7263526571756573
00002a55 7453657175656e63
00002a5d 654572726f7200  
00002a64 01               8178		.byte	1
00002a65 f401             8179		.byte	244,1
00002a67 46424c5f4d454d5f 8180		.strz	"FBL_MEM_STATUS_BlockStartSequence kDiagNrcRequestSequenceError"
00002a6f 5354415455535f42
00002a77 6c6f636b53746172
00002a7f 7453657175656e63
00002a87 65206b446961674e
00002a8f 7263526571756573
00002a97 7453657175656e63
00002a9f 654572726f7200  
00002aa6 01               8181		.byte	1
00002aa7 f501             8182		.byte	245,1
00002aa9 46424c5f4d454d5f 8183		.strz	"FBL_MEM_STATUS_BlockStartParam kDiagNrcConditionsNotCorrect"
00002ab1 5354415455535f42
00002ab9 6c6f636b53746172
00002ac1 74506172616d206b
00002ac9 446961674e726343
00002ad1 6f6e646974696f6e
00002ad9 734e6f74436f7272
00002ae1 65637400        
00002ae5 01               8184		.byte	1
00002ae6 f701             8185		.byte	247,1
00002ae8 46424c5f4d454d5f 8186		.strz	"FBL_MEM_STATUS_BlockEndSequence kDiagNrcRequestSequenceError"
00002af0 5354415455535f42
00002af8 6c6f636b456e6453
00002b00 657175656e636520
00002b08 6b446961674e7263
00002b10 5265717565737453
00002b18 657175656e636545
00002b20 72726f7200      
00002b25 01               8187		.byte	1
00002b26 f801             8188		.byte	248,1
00002b28 46424c5f4d454d5f 8189		.strz	"FBL_MEM_STATUS_BlockEndVerifyFinalize kDiagNrcGeneralProgrammingFailure"
00002b30 5354415455535f42
00002b38 6c6f636b456e6456
00002b40 657269667946696e
00002b48 616c697a65206b44
00002b50 6961674e72634765
00002b58 6e6572616c50726f
00002b60 6772616d6d696e67
00002b68 4661696c75726500
00002b70 01               8190		.byte	1
00002b71 fa01             8191		.byte	250,1
00002b73 46424c5f4d454d5f 8192		.strz	"FBL_MEM_STATUS_BlockVerifySequence kDiagNrcRequestSequenceError"
00002b7b 5354415455535f42
00002b83 6c6f636b56657269
00002b8b 667953657175656e
00002b93 6365206b44696167
00002b9b 4e72635265717565
00002ba3 737453657175656e
00002bab 63654572726f7200
00002bb3 01               8193		.byte	1
00002bb4 fb01             8194		.byte	251,1
00002bb6 46424c5f4d454d5f 8195		.strz	"FBL_MEM_STATUS_BlockVerifyInputVerify kDiagNrcGeneralReject"
00002bbe 5354415455535f42
00002bc6 6c6f636b56657269
00002bce 6679496e70757456
00002bd6 6572696679206b44
00002bde 6961674e72634765
00002be6 6e6572616c52656a
00002bee 65637400        
00002bf2 01               8196		.byte	1
00002bf3 fc01             8197		.byte	252,1
00002bf5 46424c5f4d454d5f 8198		.strz	"FBL_MEM_STATUS_BlockVerifyProcessedVerify kDiagNrcGeneralReject"
00002bfd 5354415455535f42
00002c05 6c6f636b56657269
00002c0d 667950726f636573
00002c15 7365645665726966
00002c1d 79206b446961674e
00002c25 726347656e657261
00002c2d 6c52656a65637400
00002c35 01               8199		.byte	1
00002c36 fd01             8200		.byte	253,1
00002c38 46424c5f4d454d5f 8201		.strz	"FBL_MEM_STATUS_BlockVerifyPipeVerify kDiagNrcGeneralReject"
00002c40 5354415455535f42
00002c48 6c6f636b56657269
00002c50 6679506970655665
00002c58 72696679206b4469
00002c60 61674e726347656e
00002c68 6572616c52656a65
00002c70 637400          
00002c73 01               8202		.byte	1
00002c74 fe01             8203		.byte	254,1
00002c76 46424c5f4d454d5f 8204		.strz	"FBL_MEM_STATUS_BlockVerifyOutputVerify kDiagNrcGeneralReject"
00002c7e 5354415455535f42
00002c86 6c6f636b56657269
00002c8e 66794f7574707574
00002c96 566572696679206b
00002c9e 446961674e726347
00002ca6 656e6572616c5265
00002cae 6a65637400      
00002cb3 01               8205		.byte	1
00002cb4 8002             8206		.byte	128,2
00002cb6 46424c5f4d454d5f 8207		.strz	"FBL_MEM_STATUS_SegmentStartSequence kDiagNrcRequestSequenceError"
00002cbe 5354415455535f53
00002cc6 65676d656e745374
00002cce 6172745365717565
00002cd6 6e6365206b446961
00002cde 674e726352657175
00002ce6 6573745365717565
00002cee 6e63654572726f72
00002cf6 00              
00002cf7 01               8208		.byte	1
00002cf8 8102             8209		.byte	129,2
00002cfa 46424c5f4d454d5f 8210		.strz	"FBL_MEM_STATUS_SegmentStartDataProcInit kDiagNrcUploadDownloadNotAccepted"
00002d02 5354415455535f53
00002d0a 65676d656e745374
00002d12 6172744461746150
00002d1a 726f63496e697420
00002d22 6b446961674e7263
00002d2a 55706c6f6164446f
00002d32 776e6c6f61644e6f
00002d3a 7441636365707465
00002d42 6400            
00002d44 01               8211		.byte	1
00002d45 8202             8212		.byte	130,2
00002d47 46424c5f4d454d5f 8213		.strz	"FBL_MEM_STATUS_SegmentStartStreamOutInit kDiagNrcUploadDownloadNotAccepted"
00002d4f 5354415455535f53
00002d57 65676d656e745374
00002d5f 6172745374726561
00002d67 6d4f7574496e6974
00002d6f 206b446961674e72
00002d77 6355706c6f616444
00002d7f 6f776e6c6f61644e
00002d87 6f74416363657074
00002d8f 656400          
00002d92 01               8214		.byte	1
00002d93 8302             8215		.byte	131,2
00002d95 46424c5f4d454d5f 8216		.strz	"FBL_MEM_STATUS_SegmentStartVerifyInit kDiagNrcConditionsNotCorrect"
00002d9d 5354415455535f53
00002da5 65676d656e745374
00002dad 6172745665726966
00002db5 79496e6974206b44
00002dbd 6961674e7263436f
00002dc5 6e646974696f6e73
00002dcd 4e6f74436f727265
00002dd5 637400          
00002dd8 01               8217		.byte	1
00002dd9 8402             8218		.byte	132,2
00002ddb 46424c5f4d454d5f 8219		.strz	"FBL_MEM_STATUS_SegmentStartVerifyCompute kDiagNrcGeneralProgrammingFailure"
00002de3 5354415455535f53
00002deb 65676d656e745374
00002df3 6172745665726966
00002dfb 79436f6d70757465
00002e03 206b446961674e72
00002e0b 6347656e6572616c
00002e13 50726f6772616d6d
00002e1b 696e674661696c75
00002e23 726500          

                                   Fri Apr 10 08:31:51 2020           Page 148
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00002e26 01               8220		.byte	1
00002e27 8502             8221		.byte	133,2
00002e29 46424c5f4d454d5f 8222		.strz	"FBL_MEM_STATUS_SegmentStartSegmentCount kDiagNrcRequestOutOfRange"
00002e31 5354415455535f53
00002e39 65676d656e745374
00002e41 6172745365676d65
00002e49 6e74436f756e7420
00002e51 6b446961674e7263
00002e59 526571756573744f
00002e61 75744f6652616e67
00002e69 6500            
00002e6b 01               8223		.byte	1
00002e6c 8702             8224		.byte	135,2
00002e6e 46424c5f4d454d5f 8225		.strz	"FBL_MEM_STATUS_SegmentEndSequence kDiagNrcRequestSequenceError"
00002e76 5354415455535f53
00002e7e 65676d656e74456e
00002e86 6453657175656e63
00002e8e 65206b446961674e
00002e96 7263526571756573
00002e9e 7453657175656e63
00002ea6 654572726f7200  
00002ead 01               8226		.byte	1
00002eae 8802             8227		.byte	136,2
00002eb0 46424c5f4d454d5f 8228		.strz	"FBL_MEM_STATUS_SegmentEndInsufficientData kDiagNrcRequestSequenceError"
00002eb8 5354415455535f53
00002ec0 65676d656e74456e
00002ec8 64496e7375666669
00002ed0 6369656e74446174
00002ed8 61206b446961674e
00002ee0 7263526571756573
00002ee8 7453657175656e63
00002ef0 654572726f7200  
00002ef7 01               8229		.byte	1
00002ef8 8902             8230		.byte	137,2
00002efa 46424c5f4d454d5f 8231		.strz	"FBL_MEM_STATUS_SegmentEndPost kDiagNrcConditionsNotCorrect"
00002f02 5354415455535f53
00002f0a 65676d656e74456e
00002f12 64506f7374206b44
00002f1a 6961674e7263436f
00002f22 6e646974696f6e73
00002f2a 4e6f74436f727265
00002f32 637400          
00002f35 01               8232		.byte	1
00002f36 8b02             8233		.byte	139,2
00002f38 46424c5f4d454d5f 8234		.strz	"FBL_MEM_STATUS_DataIndSequence kDiagNrcRequestSequenceError"
00002f40 5354415455535f44
00002f48 617461496e645365
00002f50 7175656e6365206b
00002f58 446961674e726352
00002f60 6571756573745365
00002f68 7175656e63654572
00002f70 726f7200        
00002f74 01               8235		.byte	1
00002f75 8c02             8236		.byte	140,2
00002f77 46424c5f4d454d5f 8237		.strz	"FBL_MEM_STATUS_DataIndParam kDiagNrcGeneralProgrammingFailure"
00002f7f 5354415455535f44
00002f87 617461496e645061
00002f8f 72616d206b446961
00002f97 674e726347656e65
00002f9f 72616c50726f6772
00002fa7 616d6d696e674661
00002faf 696c75726500    
00002fb5 01               8238		.byte	1
00002fb6 8d02             8239		.byte	141,2
00002fb8 46424c5f4d454d5f 8240		.strz	"FBL_MEM_STATUS_DataIndOverflow kDiagNrcTransferDataSuspended"
00002fc0 5354415455535f44
00002fc8 617461496e644f76
00002fd0 6572666c6f77206b
00002fd8 446961674e726354
00002fe0 72616e7366657244
00002fe8 6174615375737065
00002ff0 6e64656400      
00002ff5 01               8241		.byte	1
00002ff6 8f02             8242		.byte	143,2
00002ff8 46424c5f4d454d5f 8243		.strz	"FBL_MEM_STATUS_DataProc kDiagNrcGeneralProgrammingFailure"
00003000 5354415455535f44
00003008 61746150726f6320
00003010 6b446961674e7263
00003018 47656e6572616c50
00003020 726f6772616d6d69
00003028 6e674661696c7572
00003030 6500            
00003032 01               8244		.byte	1
00003033 9002             8245		.byte	144,2
00003035 46424c5f4d454d5f 8246		.strz	"FBL_MEM_STATUS_DataProcConsume kDiagNrcGeneralProgrammingFailure"
0000303d 5354415455535f44
00003045 61746150726f6343
0000304d 6f6e73756d65206b
00003055 446961674e726347
0000305d 656e6572616c5072
00003065 6f6772616d6d696e
0000306d 674661696c757265
00003075 00              
00003076 01               8247		.byte	1
00003077 9102             8248		.byte	145,2
00003079 46424c5f4d454d5f 8249		.strz	"FBL_MEM_STATUS_DataProcDeinit kDiagNrcConditionsNotCorrect"
00003081 5354415455535f44
00003089 61746150726f6344
00003091 65696e6974206b44
00003099 6961674e7263436f
000030a1 6e646974696f6e73
000030a9 4e6f74436f727265
000030b1 637400          
000030b4 01               8250		.byte	1
000030b5 9302             8251		.byte	147,2
000030b7 46424c5f4d454d5f 8252		.strz	"FBL_MEM_STATUS_StreamOutput kDiagNrcGeneralProgrammingFailure"
000030bf 5354415455535f53
000030c7 747265616d4f7574
000030cf 707574206b446961
000030d7 674e726347656e65
000030df 72616c50726f6772
000030e7 616d6d696e674661
000030ef 696c75726500    
000030f5 01               8253		.byte	1
000030f6 9402             8254		.byte	148,2
000030f8 46424c5f4d454d5f 8255		.strz	"FBL_MEM_STATUS_StreamOutputConsume kDiagNrcGeneralProgrammingFailure"
00003100 5354415455535f53
00003108 747265616d4f7574
00003110 707574436f6e7375
00003118 6d65206b44696167
00003120 4e726347656e6572
00003128 616c50726f677261
00003130 6d6d696e67466169
00003138 6c75726500      
0000313d 01               8256		.byte	1
0000313e 9502             8257		.byte	149,2
00003140 46424c5f4d454d5f 8258		.strz	"FBL_MEM_STATUS_StreamOutputOverflow kDiagNrcTransferDataSuspended"
00003148 5354415455535f53
00003150 747265616d4f7574
00003158 7075744f76657266
00003160 6c6f77206b446961
00003168 674e72635472616e
00003170 7366657244617461
00003178 53757370656e6465
00003180 6400            
00003182 01               8259		.byte	1
00003183 9602             8260		.byte	150,2
00003185 46424c5f4d454d5f 8261		.strz	"FBL_MEM_STATUS_StreamOutputDeinit kDiagNrcConditionsNotCorrect"
0000318d 5354415455535f53
00003195 747265616d4f7574
0000319d 7075744465696e69
000031a5 74206b446961674e
000031ad 7263436f6e646974
000031b5 696f6e734e6f7443
000031bd 6f727265637400  
000031c4 01               8262		.byte	1
000031c5 9802             8263		.byte	152,2
000031c7 46424c5f4d454d5f 8264		.strz	"FBL_MEM_STATUS_DriverResumeWrite kDiagNrcGeneralProgrammingFailure"
000031cf 5354415455535f44
000031d7 7269766572526573
000031df 756d655772697465
000031e7 206b446961674e72
000031ef 6347656e6572616c
000031f7 50726f6772616d6d
000031ff 696e674661696c75
00003207 726500          
0000320a 01               8265		.byte	1
0000320b 9902             8266		.byte	153,2
0000320d 46424c5f4d454d5f 8267		.strz	"FBL_MEM_STATUS_DriverWrite kDiagNrcGeneralProgrammingFailure"
00003215 5354415455535f44
0000321d 7269766572577269
00003225 7465206b44696167
0000322d 4e726347656e6572
00003235 616c50726f677261
0000323d 6d6d696e67466169
00003245 6c75726500      
0000324a 01               8268		.byte	1
0000324b 9a02             8269		.byte	154,2
0000324d 46424c5f4d454d5f 8270		.strz	"FBL_MEM_STATUS_DriverErase kDiagNrcGeneralProgrammingFailure"
00003255 5354415455535f44
0000325d 7269766572457261
00003265 7365206b44696167
0000326d 4e726347656e6572
00003275 616c50726f677261
0000327d 6d6d696e67466169
00003285 6c75726500      
0000328a 01               8271		.byte	1
0000328b 9b02             8272		.byte	155,2
0000328d 46424c5f4d454d5f 8273		.strz	"FBL_MEM_STATUS_DriverRemainder kDiagNrcGeneralProgrammingFailure"
00003295 5354415455535f44
0000329d 726976657252656d
000032a5 61696e646572206b
000032ad 446961674e726347
000032b5 656e6572616c5072
000032bd 6f6772616d6d696e
000032c5 674661696c757265
000032cd 00              
000032ce 01               8274		.byte	1
000032cf 9c02             8275		.byte	156,2

                                   Fri Apr 10 08:31:51 2020           Page 149
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000032d1 46424c5f4d454d5f 8276		.strz	"FBL_MEM_STATUS_DriverSuspendWrite kDiagNrcGeneralProgrammingFailure"
000032d9 5354415455535f44
000032e1 7269766572537573
000032e9 70656e6457726974
000032f1 65206b446961674e
000032f9 726347656e657261
00003301 6c50726f6772616d
00003309 6d696e674661696c
00003311 75726500        
00003315 01               8277		.byte	1
00003316 9e02             8278		.byte	158,2
00003318 46424c5f4d454d5f 8279		.strz	"FBL_MEM_STATUS_ProgramOverflow kDiagNrcTransferDataSuspended"
00003320 5354415455535f50
00003328 726f6772616d4f76
00003330 6572666c6f77206b
00003338 446961674e726354
00003340 72616e7366657244
00003348 6174615375737065
00003350 6e64656400      
00003355 01               8280		.byte	1
00003356 9f02             8281		.byte	159,2
00003358 46424c5f4d454d5f 8282		.strz	"FBL_MEM_STATUS_ProgramOutsideFbt kDiagNrcTransferDataSuspended"
00003360 5354415455535f50
00003368 726f6772616d4f75
00003370 7473696465466274
00003378 206b446961674e72
00003380 635472616e736665
00003388 7244617461537573
00003390 70656e64656400  
00003397 01               8283		.byte	1
00003398 a002             8284		.byte	160,2
0000339a 46424c5f4d454d5f 8285		.strz	"FBL_MEM_STATUS_ProgramUnalignedAddress kDiagNrcGeneralProgrammingFailure"
000033a2 5354415455535f50
000033aa 726f6772616d556e
000033b2 616c69676e656441
000033ba 646472657373206b
000033c2 446961674e726347
000033ca 656e6572616c5072
000033d2 6f6772616d6d696e
000033da 674661696c757265
000033e2 00              
000033e3 01               8286		.byte	1
000033e4 a102             8287		.byte	161,2
000033e6 46424c5f4d454d5f 8288		.strz	"FBL_MEM_STATUS_ProgramDriverNotReady kDiagNrcRequestSequenceError"
000033ee 5354415455535f50
000033f6 726f6772616d4472
000033fe 697665724e6f7452
00003406 65616479206b4469
0000340e 61674e7263526571
00003416 7565737453657175
0000341e 656e63654572726f
00003426 7200            
00003428 01               8289		.byte	1
00003429 a202             8290		.byte	162,2
0000342b 46424c5f4d454d5f 8291		.strz	"FBL_MEM_STATUS_ProgramPreWrite kDiagNrcGeneralProgrammingFailure"
00003433 5354415455535f50
0000343b 726f6772616d5072
00003443 655772697465206b
0000344b 446961674e726347
00003453 656e6572616c5072
0000345b 6f6772616d6d696e
00003463 674661696c757265
0000346b 00              
0000346c 01               8292		.byte	1
0000346d a302             8293		.byte	163,2
0000346f 46424c5f4d454d5f 8294		.strz	"FBL_MEM_STATUS_ProgramPostWrite kDiagNrcGeneralProgrammingFailure"
00003477 5354415455535f50
0000347f 726f6772616d506f
00003487 7374577269746520
0000348f 6b446961674e7263
00003497 47656e6572616c50
0000349f 726f6772616d6d69
000034a7 6e674661696c7572
000034af 6500            
000034b1 01               8295		.byte	1
000034b2 a502             8296		.byte	165,2
000034b4 46424c5f4d454d5f 8297		.strz	"FBL_MEM_STATUS_EraseOutsideFbt kDiagNrcRequestOutOfRange"
000034bc 5354415455535f45
000034c4 726173654f757473
000034cc 696465466274206b
000034d4 446961674e726352
000034dc 6571756573744f75
000034e4 744f6652616e6765
000034ec 00              
000034ed 01               8298		.byte	1
000034ee a602             8299		.byte	166,2
000034f0 46424c5f4d454d5f 8300		.strz	"FBL_MEM_STATUS_EraseDriverNotReady kDiagNrcConditionsNotCorrect"
000034f8 5354415455535f45
00003500 7261736544726976
00003508 65724e6f74526561
00003510 6479206b44696167
00003518 4e7263436f6e6469
00003520 74696f6e734e6f74
00003528 436f727265637400
00003530 01               8301		.byte	1
00003531 a702             8302		.byte	167,2
00003533 46424c5f4d454d5f 8303		.strz	"FBL_MEM_STATUS_ErasePreErase kDiagNrcConditionsNotCorrect"
0000353b 5354415455535f45
00003543 7261736550726545
0000354b 72617365206b4469
00003553 61674e7263436f6e
0000355b 646974696f6e734e
00003563 6f74436f72726563
0000356b 7400            
0000356d 01               8304		.byte	1
0000356e a802             8305		.byte	168,2
00003570 46424c5f4d454d5f 8306		.strz	"FBL_MEM_STATUS_ErasePostErase kDiagNrcConditionsNotCorrect"
00003578 5354415455535f45
00003580 72617365506f7374
00003588 4572617365206b44
00003590 6961674e7263436f
00003598 6e646974696f6e73
000035a0 4e6f74436f727265
000035a8 637400          
000035ab 01               8307		.byte	1
000035ac aa02             8308		.byte	170,2
000035ae 46424c5f4d454d5f 8309		.strz	"FBL_MEM_STATUS_VerifyCompute kDiagNrcGeneralProgrammingFailure"
000035b6 5354415455535f56
000035be 6572696679436f6d
000035c6 70757465206b4469
000035ce 61674e726347656e
000035d6 6572616c50726f67
000035de 72616d6d696e6746
000035e6 61696c75726500  
000035ed 01               8310		.byte	1
000035ee ab02             8311		.byte	171,2
000035f0 46424c5f4d454d5f 8312		.strz	"FBL_MEM_STATUS_VerifyFinalize kDiagNrcGeneralProgrammingFailure"
000035f8 5354415455535f56
00003600 657269667946696e
00003608 616c697a65206b44
00003610 6961674e72634765
00003618 6e6572616c50726f
00003620 6772616d6d696e67
00003628 4661696c75726500
00003630 01               8313		.byte	1
00003631 ad02             8314		.byte	173,2
00003633 46424c5f4d454d5f 8315		.strz	"FBL_MEM_STATUS_PassThroughLocal kDiagNrcConditionsNotCorrect"
0000363b 5354415455535f50
00003643 6173735468726f75
0000364b 67684c6f63616c20
00003653 6b446961674e7263
0000365b 436f6e646974696f
00003663 6e734e6f74436f72
0000366b 7265637400      
00003670 01               8316		.byte	1
00003671 ae02             8317		.byte	174,2
00003673 46424c5f4d454d5f 8318		.strz	"FBL_MEM_STATUS_PassThroughRemote kDiagNrcConditionsNotCorrect"
0000367b 5354415455535f50
00003683 6173735468726f75
0000368b 676852656d6f7465
00003693 206b446961674e72
0000369b 63436f6e64697469
000036a3 6f6e734e6f74436f
000036ab 727265637400    
000036b1 01               8319		.byte	1
000036b2 b302             8320		.byte	179,2
000036b4 46424c5f4d454d5f 8321		.strz	"FBL_MEM_ENABLE_EXT_STATUS "
000036bc 454e41424c455f45
000036c4 58545f5354415455
000036cc 532000          
000036cf 01               8322		.byte	1
000036d0 b602             8323		.byte	182,2
000036d2 46424c5f4d454d5f 8324		.strz	"FBL_MEM_EXT_STATUS_Ok(status) "
000036da 4558545f53544154
000036e2 55535f4f6b287374
000036ea 61747573292000  
000036f1 01               8325		.byte	1
000036f2 b702             8326		.byte	183,2
000036f4 46424c5f4d454d5f 8327		.strz	"FBL_MEM_EXT_STATUS_Failed(status) "
000036fc 4558545f53544154
00003704 55535f4661696c65
0000370c 6428737461747573
00003714 292000          
00003717 04               8328		.byte	4
00003718 01               8329		.byte	1
00003719 e901             8330		.byte	233,1
0000371b 46424c5f4d454d5f 8331		.strz	"FBL_MEM_ENABLE_GAP_FILL "
00003723 454e41424c455f47
0000372b 41505f46494c4c20
00003733 00              

                                   Fri Apr 10 08:31:51 2020           Page 150
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00003734 01               8332		.byte	1
00003735 f901             8333		.byte	249,1
00003737 46424c5f4d454d5f 8334		.strz	"FBL_MEM_ENABLE_SEGMENT_HANDLING "
0000373f 454e41424c455f53
00003747 45474d454e545f48
0000374f 414e444c494e4720
00003757 00              
00003758 01               8335		.byte	1
00003759 a902             8336		.byte	169,2
0000375b 46424c5f4d454d5f 8337		.strz	"FBL_MEM_STATUS_NAME(name) kFblMemStatus_ ## name"
00003763 5354415455535f4e
0000376b 414d45286e616d65
00003773 29206b46626c4d65
0000377b 6d5374617475735f
00003783 202323206e616d65
0000378b 00              
0000378c 01               8338		.byte	1
0000378d aa02             8339		.byte	170,2
0000378f 46424c5f4d454d5f 8340		.strz	"FBL_MEM_STATUS_DEFINE(name) FBL_MEM_STATUS_ ## name"
00003797 5354415455535f44
0000379f 4546494e45286e61
000037a7 6d65292046424c5f
000037af 4d454d5f53544154
000037b7 55535f202323206e
000037bf 616d6500        
000037c3 01               8341		.byte	1
000037c4 ae02             8342		.byte	174,2
000037c6 46424c5f4d454d5f 8343		.strz	"FBL_MEM_STATUS_DEFINITION(name) FBL_MEM_STATUS_NAME(name) = FBL_MEM_STATUS_DEFINE(name)"
000037ce 5354415455535f44
000037d6 4546494e4954494f
000037de 4e286e616d652920
000037e6 46424c5f4d454d5f
000037ee 5354415455535f4e
000037f6 414d45286e616d65
000037fe 29203d2046424c5f
00003806 4d454d5f53544154
0000380e 55535f444546494e
00003816 45286e616d652900
0000381e 01               8344		.byte	1
0000381f e006             8345		.byte	224,6
00003821 46424c4c49425f4d 8346		.strz	"FBLLIB_MEM_RAMCODE_START_SEC_CODE_EXPORT "
00003829 454d5f52414d434f
00003831 44455f5354415254
00003839 5f5345435f434f44
00003841 455f4558504f5254
00003849 2000            
0000384b 03               8347		.byte	3
0000384c e106             8348		.byte	225,6
0000384e 18               8349		.byte	24
0000384f 01               8350		.byte	1
00003850 2b               8351		.byte	43
00003851 46424c5f4d454d4d 8352		.strz	"FBL_MEMMAP_ERROR "
00003859 41505f4552524f52
00003861 2000            
00003863 04               8353		.byte	4
00003864 01               8354		.byte	1
00003865 e506             8355		.byte	229,6
00003867 46424c4c49425f4d 8356		.strz	"FBLLIB_MEM_RAMCODE_STOP_SEC_CODE_EXPORT "
0000386f 454d5f52414d434f
00003877 44455f53544f505f
0000387f 5345435f434f4445
00003887 5f4558504f525420
0000388f 00              
00003890 03               8357		.byte	3
00003891 e606             8358		.byte	230,6
00003893 18               8359		.byte	24
00003894 01               8360		.byte	1
00003895 2b               8361		.byte	43
00003896 46424c5f4d454d4d 8362		.strz	"FBL_MEMMAP_ERROR "
0000389e 41505f4552524f52
000038a6 2000            
000038a8 04               8363		.byte	4
000038a9 01               8364		.byte	1
000038aa f106             8365		.byte	241,6
000038ac 46424c4c49425f4d 8366		.strz	"FBLLIB_MEM_START_SEC_VAR_EXPORT "
000038b4 454d5f5354415254
000038bc 5f5345435f564152
000038c4 5f4558504f525420
000038cc 00              
000038cd 03               8367		.byte	3
000038ce f206             8368		.byte	242,6
000038d0 18               8369		.byte	24
000038d1 01               8370		.byte	1
000038d2 2b               8371		.byte	43
000038d3 46424c5f4d454d4d 8372		.strz	"FBL_MEMMAP_ERROR "
000038db 41505f4552524f52
000038e3 2000            
000038e5 04               8373		.byte	4
000038e6 01               8374		.byte	1
000038e7 f606             8375		.byte	246,6
000038e9 46424c4c49425f4d 8376		.strz	"FBLLIB_MEM_STOP_SEC_VAR_EXPORT "
000038f1 454d5f53544f505f
000038f9 5345435f5641525f
00003901 4558504f52542000
00003909 03               8377		.byte	3
0000390a f706             8378		.byte	247,6
0000390c 18               8379		.byte	24
0000390d 01               8380		.byte	1
0000390e 2b               8381		.byte	43
0000390f 46424c5f4d454d4d 8382		.strz	"FBL_MEMMAP_ERROR "
00003917 41505f4552524f52
0000391f 2000            
00003921 04               8383		.byte	4
00003922 04               8384		.byte	4
00003923 03               8385		.byte	3
00003924 a901             8386		.byte	169,1
00003926 31               8387		.byte	49

                                   Fri Apr 10 08:31:51 2020           Page 151
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00003927 01               8388		.byte	1
00003928 ef01             8389		.byte	239,1
0000392a 46424c4b42415049 8390		.strz	"FBLKBAPI_VERSION 0x0183u"
00003932 5f56455253494f4e
0000393a 2030783031383375
00003942 00              
00003943 01               8391		.byte	1
00003944 f001             8392		.byte	240,1
00003946 46424c4b42415049 8393		.strz	"FBLKBAPI_RELEASE_VERSION 0x00u"
0000394e 5f52454c45415345
00003956 5f56455253494f4e
0000395e 20307830307500  
00003965 01               8394		.byte	1
00003966 f301             8395		.byte	243,1
00003968 46424c4b42415049 8396		.strz	"FBLKBAPI_BRS_VERSION 0x0100u"
00003970 5f4252535f564552
00003978 53494f4e20307830
00003980 3130307500      
00003985 01               8397		.byte	1
00003986 f401             8398		.byte	244,1
00003988 46424c4b42415049 8399		.strz	"FBLKBAPI_BRS_RELEASE_VERSION 0x01u"
00003990 5f4252535f52454c
00003998 454153455f564552
000039a0 53494f4e20307830
000039a8 317500          
000039ab 01               8400		.byte	1
000039ac f701             8401		.byte	247,1
000039ae 46424c4b42415049 8402		.strz	"FBLKBAPI_SYMC_VERSION 0x0201u"
000039b6 5f53594d435f5645
000039be 5253494f4e203078
000039c6 303230317500    
000039cc 01               8403		.byte	1
000039cd f801             8404		.byte	248,1
000039cf 46424c4b42415049 8405		.strz	"FBLKBAPI_SYMC_RELEASE_VERSION 0x00u"
000039d7 5f53594d435f5245
000039df 4c454153455f5645
000039e7 5253494f4e203078
000039ef 30307500        
000039f3 01               8406		.byte	1
000039f4 fb01             8407		.byte	251,1
000039f6 46424c4b42415049 8408		.strz	"FBLKBAPI_FRAME_SYMC_VERSION 0x0200u"
000039fe 5f4652414d455f53
00003a06 594d435f56455253
00003a0e 494f4e2030783032
00003a16 30307500        
00003a1a 01               8409		.byte	1
00003a1b fc01             8410		.byte	252,1
00003a1d 46424c4b42415049 8411		.strz	"FBLKBAPI_FRAME_SYMC_RELEASE_VERSION 0x00u"
00003a25 5f4652414d455f53
00003a2d 594d435f52454c45
00003a35 4153455f56455253
00003a3d 494f4e2030783030
00003a45 7500            
00003a47 01               8412		.byte	1
00003a48 ac02             8413		.byte	172,2
00003a4a 46424c41505f5241 8414		.strz	"FBLAP_RAMCODE_START_SEC_CODE_EXPORT "
00003a52 4d434f44455f5354
00003a5a 4152545f5345435f
00003a62 434f44455f455850
00003a6a 4f52542000      
00003a6f 03               8415		.byte	3
00003a70 ad02             8416		.byte	173,2
00003a72 18               8417		.byte	24
00003a73 01               8418		.byte	1
00003a74 2b               8419		.byte	43
00003a75 46424c5f4d454d4d 8420		.strz	"FBL_MEMMAP_ERROR "
00003a7d 41505f4552524f52
00003a85 2000            
00003a87 04               8421		.byte	4
00003a88 01               8422		.byte	1
00003a89 af02             8423		.byte	175,2
00003a8b 46424c41505f5241 8424		.strz	"FBLAP_RAMCODE_STOP_SEC_CODE_EXPORT "
00003a93 4d434f44455f5354
00003a9b 4f505f5345435f43
00003aa3 4f44455f4558504f
00003aab 52542000        
00003aaf 03               8425		.byte	3
00003ab0 b002             8426		.byte	176,2
00003ab2 18               8427		.byte	24
00003ab3 01               8428		.byte	1
00003ab4 2b               8429		.byte	43
00003ab5 46424c5f4d454d4d 8430		.strz	"FBL_MEMMAP_ERROR "
00003abd 41505f4552524f52
00003ac5 2000            
00003ac7 04               8431		.byte	4
00003ac8 04               8432		.byte	4
00003ac9 03               8433		.byte	3
00003aca aa01             8434		.byte	170,1
00003acc 32               8435		.byte	50
00003acd 01               8436		.byte	1
00003ace 9402             8437		.byte	148,2
00003ad0 5744545249474745 8438		.strz	"WDTRIGGER_START_SEC_CODE_EXPORT "
00003ad8 525f53544152545f
00003ae0 5345435f434f4445
00003ae8 5f4558504f525420
00003af0 00              
00003af1 03               8439		.byte	3
00003af2 9502             8440		.byte	149,2
00003af4 18               8441		.byte	24
00003af5 01               8442		.byte	1
00003af6 2b               8443		.byte	43

                                   Fri Apr 10 08:31:51 2020           Page 152
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00003af7 46424c5f4d454d4d 8444		.strz	"FBL_MEMMAP_ERROR "
00003aff 41505f4552524f52
00003b07 2000            
00003b09 04               8445		.byte	4
00003b0a 01               8446		.byte	1
00003b0b 9702             8447		.byte	151,2
00003b0d 5744545249474745 8448		.strz	"WDTRIGGER_STOP_SEC_CODE_EXPORT "
00003b15 525f53544f505f53
00003b1d 45435f434f44455f
00003b25 4558504f52542000
00003b2d 03               8449		.byte	3
00003b2e 9802             8450		.byte	152,2
00003b30 18               8451		.byte	24
00003b31 01               8452		.byte	1
00003b32 2b               8453		.byte	43
00003b33 46424c5f4d454d4d 8454		.strz	"FBL_MEMMAP_ERROR "
00003b3b 41505f4552524f52
00003b43 2000            
00003b45 04               8455		.byte	4
00003b46 04               8456		.byte	4
00003b47 03               8457		.byte	3
00003b48 ab01             8458		.byte	171,1
00003b4a 33               8459		.byte	51
00003b4b 01               8460		.byte	1
00003b4c ee01             8461		.byte	238,1
00003b4e 6b46626c44696167 8462		.strz	"kFblDiagSizeSymcPartNumber 10u"
00003b56 53697a6553796d63
00003b5e 506172744e756d62
00003b66 65722031307500  
00003b6d 01               8463		.byte	1
00003b6e f101             8464		.byte	241,1
00003b70 6b46626c44696167 8465		.strz	"kFblDiagSizeSymcSoftwareVersion 2u"
00003b78 53697a6553796d63
00003b80 536f667477617265
00003b88 56657273696f6e20
00003b90 327500          
00003b93 01               8466		.byte	1
00003b94 f401             8467		.byte	244,1
00003b96 6b46626c44696167 8468		.strz	"kFblDiagSizeSystemSupplierCode 5u"
00003b9e 53697a6553797374
00003ba6 656d537570706c69
00003bae 6572436f64652035
00003bb6 7500            
00003bb8 01               8469		.byte	1
00003bb9 8102             8470		.byte	129,2
00003bbb 6b4170706c53697a 8471		.strz	"kApplSizeSwInfo (kFblDiagSizeSymcPartNumber+ kFblDiagSizeSymcSoftwareVersion+ kFblDiagSizeSystemSupplierCode)"
00003bc3 655377496e666f20
00003bcb 286b46626c446961
00003bd3 6753697a6553796d
00003bdb 63506172744e756d
00003be3 6265722b206b4662
00003beb 6c4469616753697a
00003bf3 6553796d63536f66
00003bfb 7477617265566572
00003c03 73696f6e2b206b46
00003c0b 626c446961675369
00003c13 7a6553797374656d
00003c1b 537570706c696572
00003c23 436f64652900    
00003c29 01               8472		.byte	1
00003c2a 8502             8473		.byte	133,2
00003c2c 6b4170706c53697a 8474		.strz	"kApplSizeSupplierSwVersion 3u"
00003c34 65537570706c6965
00003c3c 7253775665727369
00003c44 6f6e20337500    
00003c4a 01               8475		.byte	1
00003c4b 8602             8476		.byte	134,2
00003c4d 6b4170706c53697a 8477		.strz	"kApplSizeNumberHwCompatibilityEntries 1u"
00003c55 654e756d62657248
00003c5d 77436f6d70617469
00003c65 62696c697479456e
00003c6d 7472696573203175
00003c75 00              
00003c76 01               8478		.byte	1
00003c77 8702             8479		.byte	135,2
00003c79 6b4170706c53697a 8480		.strz	"kApplSizeSupplierHwVersion 2u"
00003c81 65537570706c6965
00003c89 7248775665727369
00003c91 6f6e20327500    
00003c97 01               8481		.byte	1
00003c98 8a02             8482		.byte	138,2
00003c9a 6b4170706c486472 8483		.strz	"kApplHdrOffsetSymcPartNumber 0x00u"
00003ca2 4f66667365745379
00003caa 6d63506172744e75
00003cb2 6d62657220307830
00003cba 307500          
00003cbd 01               8484		.byte	1
00003cbe 8b02             8485		.byte	139,2
00003cc0 6b4170706c486472 8486		.strz	"kApplHdrOffsetSymcSoftwareVersion kApplHdrOffsetSymcPartNumber + kFblDiagSizeSymcPartNumber"
00003cc8 4f66667365745379
00003cd0 6d63536f66747761
00003cd8 726556657273696f
00003ce0 6e206b4170706c48
00003ce8 64724f6666736574
00003cf0 53796d6350617274
00003cf8 4e756d626572202b
00003d00 206b46626c446961
00003d08 6753697a6553796d
00003d10 63506172744e756d
00003d18 62657200        
00003d1c 01               8487		.byte	1
00003d1d 8c02             8488		.byte	140,2
00003d1f 6b4170706c486472 8489		.strz	"kApplHdrOffsetSystemSupplierCode kApplHdrOffsetSymcSoftwareVersion + kFblDiagSizeSymcSoftwareVersion"
00003d27 4f66667365745379
00003d2f 7374656d53757070
00003d37 6c696572436f6465
00003d3f 206b4170706c4864
00003d47 724f666673657453
00003d4f 796d63536f667477
00003d57 6172655665727369
00003d5f 6f6e202b206b4662
00003d67 6c4469616753697a
00003d6f 6553796d63536f66
00003d77 7477617265566572
00003d7f 73696f6e00      
00003d84 01               8490		.byte	1
00003d85 8d02             8491		.byte	141,2
00003d87 6b4170706c486472 8492		.strz	"kApplHdrOffsetSupplierSwVersion kApplHdrOffsetSystemSupplierCode + kFblDiagSizeSystemSupplierCode"
00003d8f 4f66667365745375
00003d97 70706c6965725377
00003d9f 56657273696f6e20
00003da7 6b4170706c486472
00003daf 4f66667365745379
00003db7 7374656d53757070
00003dbf 6c696572436f6465
00003dc7 202b206b46626c44
00003dcf 69616753697a6553
00003dd7 797374656d537570
00003ddf 706c696572436f64
00003de7 6500            
00003de9 01               8493		.byte	1
00003dea 8e02             8494		.byte	142,2
00003dec 6b4170706c486472 8495		.strz	"kApplHdrOffsetNumberHwCompatibilityEntries kApplHdrOffsetSupplierSwVersion + kApplSizeSupplierSwVersion"
00003df4 4f66667365744e75
00003dfc 6d6265724877436f
00003e04 6d7061746962696c
00003e0c 697479456e747269
00003e14 6573206b4170706c
00003e1c 4864724f66667365
00003e24 74537570706c6965
00003e2c 7253775665727369
00003e34 6f6e202b206b4170
00003e3c 706c53697a655375
00003e44 70706c6965725377
00003e4c 56657273696f6e00
00003e54 04               8496		.byte	4
00003e55 03               8497		.byte	3
00003e56 ac01             8498		.byte	172,1
00003e58 34               8499		.byte	52

                                   Fri Apr 10 08:31:51 2020           Page 153
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00003e59 01               8500		.byte	1
00003e5a f501             8501		.byte	245,1
00003e5c 6b46626c50726573 8502		.strz	"kFblPresencePatternSize 4u"
00003e64 656e636550617474
00003e6c 65726e53697a6520
00003e74 347500          
00003e77 04               8503		.byte	4
00003e78 03               8504		.byte	3
00003e79 b201             8505		.byte	178,1
00003e7b 35               8506		.byte	53
00003e7c 01               8507		.byte	1
00003e7d 47               8508		.byte	71
00003e7e 6b46626c4d61696e 8509		.strz	"kFblMainNumberOfStates 7u"
00003e86 4e756d6265724f66
00003e8e 5374617465732037
00003e96 7500            
00003e98 01               8510		.byte	1
00003e99 61               8511		.byte	97
00003e9a 6b46626c496e6974 8512		.strz	"kFblInitBaseInitialization 0x01u"
00003ea2 42617365496e6974
00003eaa 69616c697a617469
00003eb2 6f6e203078303175
00003eba 00              
00003ebb 01               8513		.byte	1
00003ebc 62               8514		.byte	98
00003ebd 6b46626c496e6974 8515		.strz	"kFblInitFblCommunication 0x02u"
00003ec5 46626c436f6d6d75
00003ecd 6e69636174696f6e
00003ed5 20307830327500  
00003edc 01               8516		.byte	1
00003edd 63               8517		.byte	99
00003ede 6b46626c496e6974 8518		.strz	"kFblInitFblFinalize 0x03u"
00003ee6 46626c46696e616c
00003eee 697a652030783033
00003ef6 7500            
00003ef8 01               8519		.byte	1
00003ef9 65               8520		.byte	101
00003efa 6b46626c496e6974 8521		.strz	"kFblInitPreCallback 0x00u"
00003f02 50726543616c6c62
00003f0a 61636b2030783030
00003f12 7500            
00003f14 01               8522		.byte	1
00003f15 66               8523		.byte	102
00003f16 6b46626c496e6974 8524		.strz	"kFblInitPostCallback 0x80u"
00003f1e 506f737443616c6c
00003f26 6261636b20307838
00003f2e 307500          
00003f31 01               8525		.byte	1
00003f32 8701             8526		.byte	135,1
00003f34 6b46626c4e6f4f66 8527		.strz	"kFblNoOfMagicBytes 8u"
00003f3c 4d61676963427974
00003f44 657320387500    
00003f4a 01               8528		.byte	1
00003f4b e501             8529		.byte	229,1
00003f4d 46424c4845414445 8530		.strz	"FBLHEADER_START_SEC_CONST "
00003f55 525f53544152545f
00003f5d 5345435f434f4e53
00003f65 542000          
00003f68 03               8531		.byte	3
00003f69 e601             8532		.byte	230,1
00003f6b 18               8533		.byte	24
00003f6c 01               8534		.byte	1
00003f6d 2b               8535		.byte	43
00003f6e 46424c5f4d454d4d 8536		.strz	"FBL_MEMMAP_ERROR "
00003f76 41505f4552524f52
00003f7e 2000            
00003f80 04               8537		.byte	4
00003f81 01               8538		.byte	1
00003f82 e801             8539		.byte	232,1
00003f84 46424c4845414445 8540		.strz	"FBLHEADER_STOP_SEC_CONST "
00003f8c 525f53544f505f53
00003f94 45435f434f4e5354
00003f9c 2000            
00003f9e 03               8541		.byte	3
00003f9f e901             8542		.byte	233,1
00003fa1 18               8543		.byte	24
00003fa2 01               8544		.byte	1
00003fa3 2b               8545		.byte	43
00003fa4 46424c5f4d454d4d 8546		.strz	"FBL_MEMMAP_ERROR "
00003fac 41505f4552524f52
00003fb4 2000            
00003fb6 04               8547		.byte	4
00003fb7 01               8548		.byte	1
00003fb8 ec01             8549		.byte	236,1
00003fba 46424c5f4d41494e 8550		.strz	"FBL_MAIN_MAGICFLAG_START_SEC_VAR "
00003fc2 5f4d41474943464c
00003fca 41475f5354415254
00003fd2 5f5345435f564152
00003fda 2000            
00003fdc 03               8551		.byte	3
00003fdd ed01             8552		.byte	237,1
00003fdf 18               8553		.byte	24
00003fe0 01               8554		.byte	1
00003fe1 2b               8555		.byte	43

                                   Fri Apr 10 08:31:51 2020           Page 154
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00003fe2 46424c5f4d454d4d 8556		.strz	"FBL_MEMMAP_ERROR "
00003fea 41505f4552524f52
00003ff2 2000            
00003ff4 04               8557		.byte	4
00003ff5 01               8558		.byte	1
00003ff6 f301             8559		.byte	243,1
00003ff8 46424c5f4d41494e 8560		.strz	"FBL_MAIN_MAGICFLAG_STOP_SEC_VAR "
00004000 5f4d41474943464c
00004008 41475f53544f505f
00004010 5345435f56415220
00004018 00              
00004019 03               8561		.byte	3
0000401a f401             8562		.byte	244,1
0000401c 18               8563		.byte	24
0000401d 01               8564		.byte	1
0000401e 2b               8565		.byte	43
0000401f 46424c5f4d454d4d 8566		.strz	"FBL_MEMMAP_ERROR "
00004027 41505f4552524f52
0000402f 2000            
00004031 04               8567		.byte	4
00004032 01               8568		.byte	1
00004033 fc01             8569		.byte	252,1
00004035 46424c5f4d41494e 8570		.strz	"FBL_MAIN_FBLSTART_START_SEC_CODE "
0000403d 5f46424c53544152
00004045 545f53544152545f
0000404d 5345435f434f4445
00004055 2000            
00004057 03               8571		.byte	3
00004058 fd01             8572		.byte	253,1
0000405a 18               8573		.byte	24
0000405b 01               8574		.byte	1
0000405c 2b               8575		.byte	43
0000405d 46424c5f4d454d4d 8576		.strz	"FBL_MEMMAP_ERROR "
00004065 41505f4552524f52
0000406d 2000            
0000406f 04               8577		.byte	4
00004070 01               8578		.byte	1
00004071 8302             8579		.byte	131,2
00004073 46424c5f4d41494e 8580		.strz	"FBL_MAIN_FBLSTART_STOP_SEC_CODE "
0000407b 5f46424c53544152
00004083 545f53544f505f53
0000408b 45435f434f444520
00004093 00              
00004094 03               8581		.byte	3
00004095 8402             8582		.byte	132,2
00004097 18               8583		.byte	24
00004098 01               8584		.byte	1
00004099 2b               8585		.byte	43
0000409a 46424c5f4d454d4d 8586		.strz	"FBL_MEMMAP_ERROR "
000040a2 41505f4552524f52
000040aa 2000            
000040ac 04               8587		.byte	4
000040ad 04               8588		.byte	4
000040ae 04               8589		.byte	4
000040af 03               8590		.byte	3
000040b0 f601             8591		.byte	246,1
000040b2 36               8592		.byte	54
000040b3 03               8593		.byte	3
000040b4 27               8594		.byte	39
000040b5 37               8595		.byte	55
000040b6 01               8596		.byte	1
000040b7 ec02             8597		.byte	236,2
000040b9 42525348575f454e 8598		.strz	"BRSHW_ENABLE_ISR_SW_DISPATCHING "
000040c1 41424c455f495352
000040c9 5f53575f44495350
000040d1 41544348494e4720
000040d9 00              
000040da 04               8599		.byte	4
000040db 03               8600		.byte	3
000040dc 2f               8601		.byte	47
000040dd 38               8602		.byte	56
000040de 03               8603		.byte	3
000040df 34               8604		.byte	52
000040e0 39               8605		.byte	57
000040e1 04               8606		.byte	4
000040e2 01               8607		.byte	1
000040e3 55               8608		.byte	85
000040e4 4252535f454e4142 8609		.strz	"BRS_ENABLE_SUPPORT_LEDS "
000040ec 4c455f535550504f
000040f4 52545f4c45445320
000040fc 00              
000040fd 01               8610		.byte	1
000040fe 67               8611		.byte	103

                                   Fri Apr 10 08:31:51 2020           Page 155
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
000040ff 4252535f454e4142 8612		.strz	"BRS_ENABLE_FBL_SUPPORT "
00004107 4c455f46424c5f53
0000410f 5550504f52542000
00004117 04               8613		.byte	4
00004118 01               8614		.byte	1
00004119 fd01             8615		.byte	253,1
0000411b 4272734877457661 8616		.strz	"BrsHwEvaBoardInitPowerOn() "
00004123 426f617264496e69
0000412b 74506f7765724f6e
00004133 28292000        
00004137 01               8617		.byte	1
00004138 8403             8618		.byte	132,3
0000413a 4252535f53544152 8619		.strz	"BRS_START_SEC_RAM_CODE "
00004142 545f5345435f5241
0000414a 4d5f434f44452000
00004152 03               8620		.byte	3
00004153 8503             8621		.byte	133,3
00004155 3a               8622		.byte	58
00004156 01               8623		.byte	1
00004157 2c               8624		.byte	44
00004158 4252535f4d454d4d 8625		.strz	"BRS_MEMMAP_ERROR "
00004160 41505f4552524f52
00004168 2000            
0000416a 04               8626		.byte	4
0000416b 01               8627		.byte	1
0000416c 9903             8628		.byte	153,3
0000416e 4252535f53544f50 8629		.strz	"BRS_STOP_SEC_RAM_CODE "
00004176 5f5345435f52414d
0000417e 5f434f44452000  
00004185 03               8630		.byte	3
00004186 9a03             8631		.byte	154,3
00004188 3a               8632		.byte	58
00004189 01               8633		.byte	1
0000418a 2c               8634		.byte	44
0000418b 4252535f4d454d4d 8635		.strz	"BRS_MEMMAP_ERROR "
00004193 41505f4552524f52
0000419b 2000            
0000419d 04               8636		.byte	4
0000419e 04               8637		.byte	4
0000419f 01               8638		.byte	1
000041a0 a502             8639		.byte	165,2
000041a2 6b53656564416c72 8640		.strz	"kSeedAlreadyRequested 0x00u"
000041aa 6561647952657175
000041b2 6573746564203078
000041ba 30307500        
000041be 01               8641		.byte	1
000041bf a602             8642		.byte	166,2
000041c1 6b4e657753656564 8643		.strz	"kNewSeedRequest 0x01u"
000041c9 5265717565737420
000041d1 307830317500    
000041d7 01               8644		.byte	1
000041d8 c802             8645		.byte	200,2
000041da 46424c5f4d494e5f 8646		.strz	"FBL_MIN_BLOCKS_FOR_DEPENDENCY 2u"
000041e2 424c4f434b535f46
000041ea 4f525f444550454e
000041f2 44454e4359203275
000041fa 00              
000041fb 01               8647		.byte	1
000041fc ca02             8648		.byte	202,2
000041fe 46424c5f53544152 8649		.strz	"FBL_START_LBT_APP 0u"
00004206 545f4c42545f4150
0000420e 5020307500      
00004213 01               8650		.byte	1
00004214 c006             8651		.byte	192,6
00004216 46424c41505f5241 8652		.strz	"FBLAP_RAMCODE_START_SEC_CODE "
0000421e 4d434f44455f5354
00004226 4152545f5345435f
0000422e 434f44452000    
00004234 03               8653		.byte	3
00004235 c106             8654		.byte	193,6
00004237 18               8655		.byte	24
00004238 01               8656		.byte	1
00004239 2b               8657		.byte	43
0000423a 46424c5f4d454d4d 8658		.strz	"FBL_MEMMAP_ERROR "
00004242 41505f4552524f52
0000424a 2000            
0000424c 04               8659		.byte	4
0000424d 01               8660		.byte	1
0000424e d006             8661		.byte	208,6
00004250 46424c41505f5241 8662		.strz	"FBLAP_RAMCODE_STOP_SEC_CODE "
00004258 4d434f44455f5354
00004260 4f505f5345435f43
00004268 4f44452000      
0000426d 03               8663		.byte	3
0000426e d106             8664		.byte	209,6
00004270 18               8665		.byte	24
00004271 01               8666		.byte	1
00004272 2b               8667		.byte	43

                                   Fri Apr 10 08:31:51 2020           Page 156
                                   Fri Apr 10 08:31:51 2020   gh_0000cu01.si
00004273 46424c5f4d454d4d 8668		.strz	"FBL_MEMMAP_ERROR "
0000427b 41505f4552524f52
00004283 2000            
00004285 04               8669		.byte	4
00004286 04               8670		.byte	4
00004287 00               8671		.byte	0
                          8672		.section	.debug_abbrev
0000017e 00               8673		.byte	0
                          8674		.section	.debug_info
                          8675	.Ldw_end:
