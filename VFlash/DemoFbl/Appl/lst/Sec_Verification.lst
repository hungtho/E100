
                                   Fri Apr 10 08:31:50 2020           Page 1
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
Command Line:   C:\ghs\comp_201754\asppc.exe -noundefined
                -stderr=err/Sec_Verification.err -elf -b1 -I../../../bsw/_common
                -I../../../bsw/eep -I../../../bsw/fbl -I../../../bsw/flash
                -I../../../bsw/flash_xd1 -I../../../bsw/secmod
                -I../../../bsw/wrapnv -Ic:/ghs/comp_201754/ansi
                -Ic:/ghs/comp_201754/include/ppc -Ic:/ghs/comp_201754/src/libsys
                -Igendata -Iinclude -IC:\ghs\comp_201754\lib\ppc5514
                -cpu=ppc560xp
                -patch_dbo=C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl\obj\Sec_Verification.dbo
                -source=Sec_Verification.c -o obj\gh_000022k1.o
                -list=lst/Sec_Verification.lst
                C:\Users\owner\AppData\Local\Temp\gh_000022k1.si
Source File:    C:\Users\owner\AppData\Local\Temp\gh_000022k1.si
Directory:      C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
Host OS:        Windows
AS: Copyright (C) 1983-2017 Green Hills Software.  All Rights Reserved.
Release: Compiler v2017.5.4
Build Directory: [Directory] COMP-VAL-WIN50:c:/autoval2/v2017.5-2017-10-03/win32-comp-ecom
Revision: [VCInfo] http://toolsvc/branches/release-branch-2017-5-comp/src@603870 (built by auto-compiler)
Revision Date: Wed Oct 04 11:30:08 2017

Release Date: Wed Oct 04 09:00:05 2017

                             1	#Driver Command: ccppc -DBRS_DERIVATIVE_SPC570S50 -DBRS_OSC_CLK=40
                             2	#		-DBRS_TIMEBASE_CLOCK=80 -DBRS_OS_USECASE_BRS
                             3	#		-DBRS_EVA_BOARD_DEFAULT -DBRS_PLATFORM_MPC57XX -DBRS_COMP_GHS
                             4	#		-DBRSHW_INSTRUCTION_SET_VLE -DBRS_CPU_STARTUP_ID=0
                             5	#		-object_dir=obj -list=lst/Sec_Verification.lst
                             6	#		-stderr=err/Sec_Verification.err -c -vle
                             7	#		-DC_ENABLE_INSTRUCTION_SET_VLE -D__vle --prototype_warnings
                             8	#		-Odebug -Osize -Ospace -G -dual_debug -nofloatio -cpu=ppc560xp
                             9	#		-noobj -DRAM_48K -inline_prologue -pragma_asm_inline -noSPE
                            10	#		--no_exceptions --no_commons -nokeeptempfiles -pnone
                            11	#		--incorrect_pragma_warnings --slash_comment --long_long
                            12	#		-preprocess_assembly_files -passsource -I../../../bsw/_common
                            13	#		-I../../../bsw/eep -I../../../bsw/fbl -I../../../bsw/flash
                            14	#		-I../../../bsw/flash_xd1 -I../../../bsw/secmod
                            15	#		-I../../../bsw/wrapnv -Ic:/ghs/comp_201754/ansi
                            16	#		-Ic:/ghs/comp_201754/include/ppc -Ic:/ghs/comp_201754/src/libsys
                            17	#		-Igendata -Iinclude ../../../BSW/SecMod/Sec_Verification.c
                            18	#Source File:   ../../../BSW/SecMod/Sec_Verification.c
                            19	#Directory:     C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
                            20	#Compile Date:  Fri Apr 10 08:31:49 2020
                            21	#Host OS:       Win32
                            22	#Version:       C-POWERPC 2017.5.4 RELEASE VERSION
                            23	#Release:       Compiler v2017.5.4
                            24	#Revision Date: Wed Oct 04 11:39:37 2017
                            25	#Release Date:  Wed Oct 04 09:00:05 2017
                            26	# ecom  -g -w -OMS
                            27	
                            28	#1: /***********************************************************************************************************************
                            29	#2:  *  FILE DESCRIPTION
                            30	#3:  *  ------------------------------------------------------------------------------------------------------------------*/
                            31	#4: /** \file
                            32	#5:  *  \brief        Implementation of the verification component of the HIS security module - Signature verification
                            33	#6:  *
                            34	#7:  *  \description  Offers signature/checksum verification interface
                            35	#8:  *  --------------------------------------------------------------------------------------------------------------------
                            36	#9:  *  COPYRIGHT
                            37	#10:  *  --------------------------------------------------------------------------------------------------------------------
                            38	#11:  *  \par Copyright
                            39	#12:  *  \verbatim
                            40	#13:  *  Copyright (c) 2018 by Vector Informatik GmbH.                                                  All rights reserved.
                            41	#14:  *

                                   Fri Apr 10 08:31:50 2020           Page 2
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                            42	#15:  *                This software is copyright protected and proprietary to Vector Informatik GmbH.
                            43	#16:  *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
                            44	#17:  *                All other rights remain with Vector Informatik GmbH.
                            45	#18:  *  \endverbatim
                            46	#19:  */
                            47	#20: /**********************************************************************************************************************/
                            48	#22: /***********************************************************************************************************************
                            49	#23:  *  AUTHOR IDENTITY
                            50	#24:  *  --------------------------------------------------------------------------------------------------------------------
                            51	#25:  *  Name                          Initials      Company
                            52	#26:  *  --------------------------------------------------------------------------------------------------------------------
                            53	#27:  *  Joern Herwig                  JHg           Vector Informatik GmbH
                            54	#28:  *  Alexander Starke              ASe           Vector Informatik GmbH
                            55	#29:  *  Christian Baeuerle            CB            Vector Informatik GmbH
                            56	#30:  *  Andreas Wenckebach            AWh           Vector Informatik GmbH
                            57	#31:  *  Thomas Mueller                ThM           Vector Informatik GmbH
                            58	#32:  *  Achim Strobelt                Ach           Vector Informatik GmbH
                            59	#33:  *  --------------------------------------------------------------------------------------------------------------------
                            60	#34:  *  REVISION HISTORY
                            61	#35:  *  --------------------------------------------------------------------------------------------------------------------
                            62	#36:  *  Version    Date        Author  Change Id        Description
                            63	#37:  *  --------------------------------------------------------------------------------------------------------------------
                            64	#38:  *  01.00.00   2013-06-20  JHg     ESCAN00068213    Initial release based on FblSecMod_Vector 02.02.00
                            65	#39:  *  02.00.00   2013-11-08  JHg     ESCAN00071179    Major refactoring
                            66	#40:  *                                                   Moved to separate sub-package
                            67	#41:  *                                                   Renamed file name (was SecMVer.c)
                            68	#42:  *                                                   Merged with SecM_VerSig.c
                            69	#43:  *                                                   Split into source and library parts
                            70	#44:  *                                                   Added extended verification API (externally provided key and workspace)
                            71	#45:  *                                                   Unified handling of Verification and VerifySignature API
                            72	#46:  *  02.00.01   2013-12-19  JHg     ESCAN00072260    Encapsulate prototype of SecM_UpdateSegmentAddress
                            73	#47:  *                         JHg     ESCAN00072561    Corrected parameter used in computation only use-case
                            74	#48:  *  02.00.02   2014-01-20  JHg     ESCAN00073088    Resolved compiler warnings
                            75	#49:  *  02.01.00   2014-01-28  ASe     ESCAN00073047    Added support for word-addressed platforms
                            76	#50:  *  02.02.00   2014-02-10  JHg     ESCAN00073560    No changes
                            77	#51:  *                         JHg     ESCAN00073355    Resolved compiler warnings
                            78	#52:  *  02.02.01   2014-05-28  JHg     ESCAN00074792    Corrected memory qualifiers for configuration list parameters
                            79	#53:  *                         JHg     ESCAN00073918    No changes
                            80	#54:  *  02.02.02   2015-02-09  CB      ESCAN00078641    No changes
                            81	#55:  *  02.02.03   2015-07-29  AWh     ESCAN00084130    Beautification
                            82	#56:  *  02.03.00   2015-10-12  JHg     ESCAN00085807    Added support for RSASSA-PSS signatures
                            83	#57:  *                         JHg     ESCAN00085808    No changes
                            84	#58:  *  02.04.00   2015-11-03  JHg     ESCAN00086240    Moved SecM_GetInteger and SecM_SetInteger to main component
                            85	#59:  *                         JHg     ESCAN00086241    Support "CRC written" for Class DDD using hashes
                            86	#60:  *  02.04.01   2015-12-18  JHg     ESCAN00087162    Use constant length for (de)-serialization of CRC value
                            87	#61:  *  02.04.02   2016-04-25  ThM     ESCAN00083969    No changes
                            88	#62:  *  02.05.00   2016-06-29  JHg     ESCAN00089793    Added support for CMAC (AES-128)
                            89	#63:  *                         JHg     ESCAN00090735    "CRC written" and inclusion of address and length configurable
                            90	#64:  *                                                   per security class
                            91	#65:  *  02.05.01   2016-07-08  JHg     ESCAN00090837    No changes
                            92	#66:  *  02.06.00   2017-01-18  JHg     ESCAN00093624    Added support for CRC-64
                            93	#67:  *  02.07.00   2017-07-25  JHg     ESCAN00096043    Added support for Ed25519 signatures
                            94	#68:  *                         JHg     ESCAN00096047    Added support for SHA-512 hashes
                            95	#69:  *  02.07.01   2017-09-05  Ach     ESCAN00096544    Signature check for RSA PKCS#1 v1.5 fails
                            96	#70:  *  02.08.00   2017-11-21  JHg     ESCAN00097509    No changes
                            97	#71:  *  02.08.01   2018-01-23  JHg     ESCAN00097060    Moved CRC zero value from Sec_Crc

                                   Fri Apr 10 08:31:50 2020           Page 3
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                            98	#72:  *                         JHg     ESCAN00098081    No changes
                            99	#73:  **********************************************************************************************************************/
                           100	#75: /**********************************************************************************************************************
                           101	#76:  *  INCLUDES
                           102	#77:  *********************************************************************************************************************/
                           103	#79: /* Security module interface */
                           104	#80: #include "Sec.h"  /* PRQA S 0883 */ /* MD_SecInc_0883 */
                           105	#82: /* Verification interface */
                           106	#83: #include "Sec_Verification.h"
                           107	#86: /**********************************************************************************************************************
                           108	#87:  *  VERSION
                           109	#88:  *********************************************************************************************************************/
                           110	#90: #if ( SYSSERVICE_SECMODHIS_VERIFICATION_VERSION != 0x0208u ) || \
                           111	#91:     ( SYSSERVICE_SECMODHIS_VERIFICATION_RELEASE_VERSION != 0x01u )
                           112	#92: # error "Error in SEC_VERIFICATION.C: Source and header file are inconsistent!"
                           113	#93: #endif
                           114	#95: /**********************************************************************************************************************
                           115	#96:  *  DEFINES
                           116	#97:  *********************************************************************************************************************/
                           117	#99: /* PRQA S 3453 TAG_SecVerification_3453_1 */ /* MD_CBD_19.7 */
                           118	#101: /** Byte length of address and length information included in checksum calculation */
                           119	#102: #define SEC_ADDRESS_LENGTH_INPUT_SIZE    4u
                           120	#104: /* Configuration of security classes */
                           121	#105: /* Security class DDD (checksum) */
                           122	#106: # if ( SEC_CHECKSUM_TYPE == SEC_CHECKSUM_TYPE_HASH )
                           123	#107: #  if ( SEC_HASH_ALGORITHM == SEC_SHA1 )
                           124	#108: /** Verify signature compatible function (class DDD) */
                           125	#109: #   define SEC_VERIFY_CLASS_DDD_FUNCTION           SecM_VerifyHashSha1
                           126	#110: /** Workspace pointer (class DDD)*/
                           127	#111: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE          secWorkSpacePtrHashSha1
                           128	#112: /** Workspace size (class DDD)*/
                           129	#113: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE_SIZE     secWorkSpaceSizeHashSha1
                           130	#114: #  elif ( SEC_HASH_ALGORITHM == SEC_RIPEMD160 )
                           131	#115: #   define SEC_VERIFY_CLASS_DDD_FUNCTION           SecM_VerifyHashRmd160
                           132	#116: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE          secWorkSpacePtrHashRmd160
                           133	#117: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE_SIZE     secWorkSpaceSizeHashRmd160
                           134	#118: #  elif ( SEC_HASH_ALGORITHM == SEC_SHA256 )
                           135	#119: #   define SEC_VERIFY_CLASS_DDD_FUNCTION           SecM_VerifyHashSha256
                           136	#120: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE          secWorkSpacePtrHashSha256
                           137	#121: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE_SIZE     secWorkSpaceSizeHashSha256
                           138	#122: #  elif ( SEC_HASH_ALGORITHM == SEC_SHA512 )
                           139	#123: #   define SEC_VERIFY_CLASS_DDD_FUNCTION           SecM_VerifyHashSha512
                           140	#124: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE          secWorkSpacePtrHashSha512
                           141	#125: #   define SEC_VERIFY_CLASS_DDD_WORKSPACE_SIZE     secWorkSpaceSizeHashSha512
                           142	#126: #  endif /* SEC_HASH_ALGORITHM */
                           143	#127: # else /* SEC_CHECKSUM_TYPE == SEC_CHECKSUM_TYPE_CRC */
                           144	#128: #  define SEC_VERIFY_CLASS_DDD_FUNCTION            SecM_VerifyChecksumCrc
                           145	#129: #  define SEC_VERIFY_CLASS_DDD_WORKSPACE           &crcParam
                           146	#130: #  define SEC_VERIFY_CLASS_DDD_WORKSPACE_SIZE      sizeof(crcParam)
                           147	#131: # endif /* SEC_CHECKSUM_TYPE */
                           148	#135: /** Security class used for SecM_VerifySignature interface */
                           149	#136: #if   ( SEC_SECURITY_CLASS_VERIFY == SEC_CLASS_DDD )
                           150	#137: # define SEC_VERIFY_FUNCTION                    SecM_VerifyClassDDD
                           151	#138: #elif ( SEC_SECURITY_CLASS_VERIFY == SEC_CLASS_C )
                           152	#139: # define SEC_VERIFY_FUNCTION                    SecM_VerifyClassC
                           153	#140: #elif ( SEC_SECURITY_CLASS_VERIFY == SEC_CLASS_CCC )

                                   Fri Apr 10 08:31:50 2020           Page 4
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           154	#141: # define SEC_VERIFY_FUNCTION                    SecM_VerifyClassCCC
                           155	#142: #elif ( SEC_SECURITY_CLASS_VERIFY == SEC_CLASS_VENDOR )
                           156	#143: # define SEC_VERIFY_FUNCTION                    SecM_VerifyClassVendor
                           157	#144: #endif /* SEC_SECURITY_CLASS_VERIFY */
                           158	#146: /** Security class used for SecM_Verification interface */
                           159	#147: #if   ( SEC_SECURITY_CLASS_VERIFICATION == SEC_CLASS_DDD )
                           160	#148: # define SEC_VERIFICATION_FUNCTION              SecM_VerificationClassDDD
                           161	#149: #elif ( SEC_SECURITY_CLASS_VERIFICATION == SEC_CLASS_C )
                           162	#150: # define SEC_VERIFICATION_FUNCTION              SecM_VerificationClassC
                           163	#151: #elif ( SEC_SECURITY_CLASS_VERIFICATION == SEC_CLASS_CCC )
                           164	#152: # define SEC_VERIFICATION_FUNCTION              SecM_VerificationClassCCC
                           165	#153: #elif ( SEC_SECURITY_CLASS_VERIFICATION == SEC_CLASS_VENDOR )
                           166	#154: # define SEC_VERIFICATION_FUNCTION              SecM_VerificationClassVendor
                           167	#155: #endif /* SEC_SECURITY_CLASS_VERIFY */
                           168	#157: /* Configuration of addons of verification API */
                           169	#158: #if defined( SEC_ENABLE_CRC_TOTAL )
                           170	#159: # define SEC_OPERATION_SIZE_CRC_TOTAL           1u
                           171	#160: #else
                           172	#161: # define SEC_OPERATION_SIZE_CRC_TOTAL           0u
                           173	#162: #endif /* SEC_ENABLE_CRC_TOTAL */
                           174	#163: # define SEC_OPERATION_SIZE_CRC_WRITTEN         0u
                           175	#164: # define SEC_OPERATION_SIZE_VENDOR_CHECKSUM     0u
                           176	#165: /** Total size of operation table */
                           177	#166: #define SEC_OPERATION_SIZE                      (SEC_OPERATION_SIZE_CRC_TOTAL + SEC_OPERATION_SIZE_CRC_WRITTEN + SEC_OPERATION_SIZE_VENDOR_CHECKSUM + 1u)
                           178	#168: /** Maximum number of operation primitives which can be passed to SecM_VerificationWrapper */
                           179	#169: #if defined( SEC_VER_MAX_CONFIG_COUNT )
                           180	#170: #else
                           181	#171: # define SEC_VER_MAX_CONFIG_COUNT               SEC_OPERATION_SIZE
                           182	#172: #endif /* SEC_VER_MAX_CONFIG_COUNT */
                           183	#174: /** Number of elements in array */
                           184	#175: #define SEC_VER_ARRAY_SIZE(arr)                 (sizeof(arr) / sizeof((arr)[0]))
                           185	#177: /* Handling of resulting length for memory reads */
                           186	#179: /** Report no error in case no data was read at all */
                           187	#180: #define SEC_READ_COUNT_RESULT_IGNORE            SECM_VER_OK
                           188	#181: /** Report error in case of mismatch between read count and requested length */
                           189	#182: #define SEC_READ_COUNT_RESULT_ASSERT            SECM_VER_ERROR
                           190	#184: /** Read count can differ from requested length */
                           191	#185: #define SEC_READ_COUNT_MASK_IGNORE              0x00u
                           192	#186: /** Read count has to match requested length */
                           193	#187: /* Remark: Conversion of negative one to unsigned type with all bits set is guaranteed by C standard (6.3.1.3/2) */
                           194	#188: #define SEC_READ_COUNT_MASK_ASSERT              (SecM_SizeType)(-1)
                           195	#190: /** Depending on the underlying memory (byte-/word-addressed) the behavior of the readMemory() function deviates:
                           196	#191:  *  - On byte-addressed platforms the function usually reads exactly the requested number of bytes
                           197	#192:  *  - On word-addressed platforms twice the number of requested bytes is read */
                           198	#193: # define SEC_MEMORY_READ_ACCESS_WIDTH           1u
                           199	#195: /* PRQA L:TAG_SecVerification_3453_1 */
                           200	#197: /**********************************************************************************************************************
                           201	#198:  *  LOCAL DATA TYPES AND STRUCTURES
                           202	#199:  *********************************************************************************************************************/
                           203	#201: /** Context of SecM_Verification operation */
                           204	#202: typedef struct
                           205	#203: {
                           206	#204:    FL_ReadMemoryFctType       readMemory;       /**< Pointer to memory read function */
                           207	#205:    SecM_AddrType              verifyAddress;    /**< Current verification address */
                           208	#206:    SecM_SizeType              remainingBytes;   /**< Number of remaining bytes in segment */
                           209	#207:    SecM_SignatureParamType    sigParam;         /**< Pointer to global signature parameter */

                                   Fri Apr 10 08:31:50 2020           Page 5
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           210	#208: #if defined( SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT ) && \
                           211	#209:     defined( SEC_ENABLE_CRC_TOTAL )
                           212	#210:    SecM_SizeType              readCountMask;    /**< Mask applied when comparing read count against requested length */
                           213	#211:    SecM_StatusType            readCountResult;  /**< Result returned when comparison of read count and requested length fails */
                           214	#212: #endif /* SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT && SEC_ENABLE_CRC_TOTAL */
                           215	#213: } SecM_VerifyContextType;
                           216	#215: /** List of verification primitive configurations */
                           217	#216: typedef struct
                           218	#217: {
                           219	#218:    SecM_VerifyConfigType   pPrimitives[SEC_VER_MAX_CONFIG_COUNT]; /**< List of primitive operation and context pairs */
                           220	#219:    SecM_ByteFastType       count;                                 /**< Number of list entries */
                           221	#220: } SecM_VerifyConfigPairType;
                           222	#222: /**********************************************************************************************************************
                           223	#223:  *  LOCAL FUNCTION PROTOTYPES
                           224	#224:  *********************************************************************************************************************/
                           225	#226: #if defined( SEC_ENABLE_VERIFICATION_RANGE_CHECK )
                           226	#227: static SecM_StatusType SecM_CheckRangeOverflow( SecM_AddrType address, SecM_SizeType length );
                           227	#228: #endif /* SEC_ENABLE_VERIFICATION_RANGE_CHECK */
                           228	#230: static SecM_StatusType SecM_VerifyWrapper( V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam,
                           229	#231:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pCfgList );
                           230	#232: static SecM_StatusType SecM_UpdateSegment( V_MEMRAM1 SecM_VerifyContextType V_MEMRAM2 V_MEMRAM3 * pContext,
                           231	#233:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pCfgList );
                           232	#235: #if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH )
                           233	#236: static SecM_StatusType SecM_UpdateSegmentAddress( V_MEMRAM1 SecM_VerifyContextType V_MEMRAM2 V_MEMRAM3 * pContext,
                           234	#237:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pCfgList,
                           235	#238:    const V_MEMRAM1 FL_SegmentInfoType V_MEMRAM2 V_MEMRAM3 * pSegmentInfo );
                           236	#239: #endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH */
                           237	#241: static void SecM_PopulateCfgList( const V_MEMRAM1 SecM_VerifyConfigListType V_MEMRAM2 V_MEMRAM3 * pSourceList,
                           238	#242:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pTargetList, SecM_ByteType mask );
                           239	#244: #if defined( SEC_ENABLE_VERIFICATION_WRAPPER )
                           240	#245: #else
                           241	#246: static SecM_StatusType SecM_VerificationWrapper ( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam,
                           242	#247:    V_MEMRAM1 SecM_VerifyConfigListType V_MEMRAM2 V_MEMRAM3 * pCfgList );
                           243	#248: #endif /* SEC_ENABLE_VERIFICATION_WRAPPER */
                           244	#250: static SecM_StatusType SecM_VerificationBase ( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam,
                           245	#251:    V_MEMRAM1 SecM_VerifyConfigListType V_MEMRAM2 V_MEMRAM3 * pCfgList );
                           246	#253: /**********************************************************************************************************************
                           247	#254:  *  LOCAL DATA
                           248	#255:  *********************************************************************************************************************/
                           249	#257: #if defined( SEC_ENABLE_SECURITY_CLASS_DDD )
                           250	#258: # if defined( SEC_ENABLE_CHECKSUM_TYPE_CRC ) && \
                           251	#259:      defined( SEC_ENABLE_WORKSPACE_INTERNAL )
                           252	#260: /** CRC parameter structure used as internal workspace for CRC checksum (class DDD) */
                           253	#261: static SecM_CRCParamType crcParam;  /* PRQA S 3218 */ /* MD_SecVerification_3218 */
                           254	#262: # endif /* SEC_ENABLE_CHECKSUM_TYPE_CRC && SEC_ENABLE_WORKSPACE_INTERNAL */
                           255	#264: /** Verification primitive configuration for security class DDD */
                           256	#265: V_MEMROM0 static V_MEMROM1 SecM_VerifyOperationType V_MEMROM2 verifyConfigClassDDD[] = /* PRQA S 3218 */ /* MD_SecVerification_3218 */
                           257	#266: {
                           258	#267:    {
                           259	#268:       /* Use configured primitive */
                           260	#269:       SecM_VerifyClassDDD,
                           261	#270:       /* Size and offset of checksum/signature */
                           262	#271:       SEC_VERIFY_CLASS_DDD_VERIFY_SIZE,
                           263	#272:       SEC_VERIFY_CLASS_DDD_VERIFY_OFFSET,
                           264	#273: # if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH_CLASS_DDD )
                           265	#274:       /* Include address and length of segment, contributes to verification result */

                                   Fri Apr 10 08:31:50 2020           Page 6
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           266	#275:       SEC_UPDATE_OPERATION_ADDRESS_LENGTH | SEC_UPDATE_OPERATION_VERIFICATION
                           267	#276: # else
                           268	#277:       /* Contributes to verification result */
                           269	#278:       SEC_UPDATE_OPERATION_VERIFICATION
                           270	#279: # endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH_CLASS_DDD */
                           271	#280:    }
                           272	#281: # if defined( SEC_ENABLE_CRC_TOTAL )
                           273	#282:   ,{
                           274	#283:       /* Use CRC primitive */
                           275	#284:       SecM_VerifyChecksumCrc,
                           276	#285:       SEC_SIZE_CHECKSUM_CRC,
                           277	#286:       /* Offset is zero, as not used for verification */
                           278	#287:       0u,
                           279	#288:       /* Additionally update with inter-segment data, doesn't contribute to verification result */
                           280	#289:       SEC_UPDATE_OPERATION_INTER_SEGMENT
                           281	#290:    }
                           282	#291: # endif /* SEC_ENABLE_CRC_TOTAL */
                           283	#292: };
                           284	#293: #endif /* SEC_ENABLE_SECURITY_CLASS_DDD */
                           285	#297: #if defined( SEC_ENABLE_SECURITY_CLASS_VENDOR )
                           286	#298: /** Verification primitive configuration for security class vendor */
                           287	#299: V_MEMROM0 static V_MEMROM1 SecM_VerifyOperationType V_MEMROM2 verifyConfigClassVendor[] = /* PRQA S 3218 */ /* MD_SecVerification_3218 */
                           288	#300: {
                           289	#301:    {
                           290	#302:       /* Use vendor specific primitive (callback) */
                           291	#303:       SecM_VerifyClassVendor,
                           292	#304:       /* Size and offset of checksum/signature */
                           293	#305:       SEC_SIZE_CHECKSUM_VENDOR,
                           294	#306:       SEC_VERIFY_CLASS_VENDOR_CHECKSUM_OFFSET,
                           295	#307: # if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH_CLASS_VENDOR )
                           296	#308:       /* Include address and length of segment, contributes to verification result */
                           297	#309:       SEC_UPDATE_OPERATION_ADDRESS_LENGTH | SEC_UPDATE_OPERATION_VERIFICATION
                           298	#310: # else
                           299	#311:       /* Contributes to verification result */
                           300	#312:       SEC_UPDATE_OPERATION_VERIFICATION
                           301	#313: # endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH_CLASS_VENDOR */
                           302	#314:    }
                           303	#315: # if defined( SEC_ENABLE_CRC_TOTAL )
                           304	#316:   ,{
                           305	#317:       /* Use CRC primitive */
                           306	#318:       SecM_VerifyChecksumCrc,
                           307	#319:       SEC_SIZE_CHECKSUM_CRC,
                           308	#320:       /* Offset is zero, as not used for verification */
                           309	#321:       0u,
                           310	#322:       /* Additionally update with inter-segment data, doesn't contribute to verification result */
                           311	#323:       SEC_UPDATE_OPERATION_INTER_SEGMENT
                           312	#324:    }
                           313	#325: # endif /* SEC_ENABLE_CRC_TOTAL */
                           314	#326: };
                           315	#327: #endif /* SEC_ENABLE_SECURITY_CLASS_VENDOR */
                           316	#329: /** Zero CRC value */
                           317	#330: V_MEMROM0 static V_MEMROM1 SecM_CRCType V_MEMROM2 crcZeroValue = SEC_ZERO_VALUE;    /* PRQA S 3218 */ /* MD_SecVerification_3218 */
                           318	#332: /**********************************************************************************************************************
                           319	#333:  *  LOCAL FUNCTIONS
                           320	#334:  *********************************************************************************************************************/
                           321	#336: #if defined( SEC_ENABLE_VERIFICATION_RANGE_CHECK )

                                   Fri Apr 10 08:31:50 2020           Page 7
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           322	#337: /***********************************************************************************************************************
                           323	#338:  *  SecM_CheckRangeOverflow
                           324	#339:  **********************************************************************************************************************/
                           325	#340: /*! \brief      Check whether memory range defined by address and length create an address range overflow
                           326	#341:  *  \param[in]  address Start address of memory range
                           327	#342:  *  \param[in]  length Length of memory range
                           328	#343:  *  \return     SECM_OK if no range overflow detected
                           329	#344:  *              SECM_NOT_OK otherwise
                           330	#345:  **********************************************************************************************************************/
                           331	#346: static SecM_StatusType SecM_CheckRangeOverflow( SecM_AddrType address, SecM_SizeType length )
                           332	#347: {
                           333	#348:    SecM_StatusType result;
                           334	#350:    result = SECM_OK;
                           335	#352:    /* No range overflow possible with zero length */
                           336	#353:    if (length > 0u)
                           337	#354:    {
                           338	#355:       /* Last address of memory range is not allowed to be greater than the maximum representable value
                           339	#356:          Following expression mathematically equals: (address + (length - 1u)) > 0xFF...FFu
                           340	#357:          Conversion of negative one to unsigned type with all bits set is guaranteed by C standard (6.3.1.3/2) */
                           341	#358:       if (address > (((SecM_AddrType)(-1)) - (length - 1u))) /* PRQA S 0277 */ /* MD_SecVerification_0277 */
                           342	#359:       {
                           343	#360:          result = SECM_NOT_OK;
                           344	#361:       }
                           345	#362:    }
                           346	#364:    return result;
                           347	#365: }
                           348	#366: #endif /* SEC_ENABLE_VERIFICATION_RANGE_CHECK */
                           349	#368: /**********************************************************************************************************************
                           350	#369:  *  SecM_VerifyWrapper
                           351	#370:  *********************************************************************************************************************/
                           352	#371: /*! \brief         Performs a verify operation for a given set of verification primitives
                           353	#372:  *  \details       Interates over all primitives given in list, passing them the information from the verification
                           354	#373:  *                 parameter.
                           355	#374:  *                 During initialization operation (SEC_HASH_INIT) the following additional information is assigned
                           356	#375:  *                 to the primary verification primitive:
                           357	#376:  *                 - External key data (SEC_ENABLE_VERIFICATION_KEY_EXTERNAL)
                           358	#377:  *                 - External workspace (SEC_ENABLE_WORKSPACE_EXTERNAL)
                           359	#378:  *                 During verification operation (SEC_SIG_VERIFY) the following additional information is passed
                           360	#379:  *                 to all verification primitives:
                           361	#380:  *                 - Length of signature/checksum taken from primitive configuration instead of verification parameter
                           362	#381:  *                 - Pointer to verification data moved by offset taken from primitive configuration
                           363	#382:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                           364	#383:  *                   When SEC_ENABLE_WORKSPACE_INTERNAL is set member currentHash may contain reference to buffer
                           365	#384:  *                   used as workspace for primary verification primitive
                           366	#385:  *  \param[in]     pCfgList Pointer to list of verification primitives including contexts
                           367	#386:  *  \return        SECM_VER_OK if verification operation successful
                           368	#387:  *                 SECM_VER_ERROR if error occured during verification
                           369	#388:  *                 SECM_VER_CRC if CRC verification failed
                           370	#389:  *                 SECM_VER_SIG if MAC/Signature verification failed
                           371	#390:  *********************************************************************************************************************/
                           372		.section ".vletext", "vax"
                           373		.vle
                           374		.vle
                           375	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB065..0::
                           376		.align	1
                           377	..gh.f.p.4.a.1.r.0.e.0:

                                   Fri Apr 10 08:31:50 2020           Page 8
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           378		.type	..gh.f.p.4.a.1.r.0.e.0,@object
                           379		.size	..gh.f.p.4.a.1.r.0.e.0,0
                           380		.global	SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                           381	SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
                           382	SecM_VerifyWrapper:
00000000 182106d8          383		e_stwu	sp, -40(sp)
00000004 0080              384		se_mflr	r0
00000006 1b21090c          385		e_stmw	r25, 12(sp)
0000000a db01              386		se_stw	r0, 44(sp)
0000000c 013f              387		se_mr	r31, r3
0000000e 014d              388		se_mr	r29, r4
                           389	#	    .bf
                           390	.LDW01:
                           391	#391: static SecM_StatusType SecM_VerifyWrapper( V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam,  /* PRQA S 3673 */ /* MD_SecVerification_3673_1 */
                           392	#392:                                            V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pCfgList )   /* PRQA S 3673 */ /* MD_SecVerification_3673_1 */
                           393	#393: {
                           394	#394:    SecM_StatusType            result;
                           395	#395:    SecM_ByteFastType          index;
                           396	#396:    SecM_ByteFastType          cfgCount;
                           397	#397:    SecM_ByteType              action;
                           398	#398:    SecM_LengthType            byteCount;
                           399	#399:    SecM_LengthFastType        sourceOffset;
                           400	#400:    V_MEMRAM1 SecM_VerifyConfigType V_MEMRAM2 V_MEMRAM3 *    pConfig;
                           401	#401:    V_MEMROM1 SecM_VerifyOperationType V_MEMROM2 V_MEMROM3 * pPrimitive;
                           402	#402:    V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 *  pParam;
                           403	#404:    result = SECM_VER_OK;
                           404	#406:    /* Action and byte count taken from verification parameter per default */
                           405	#407:    action         = pVerifyParam->sigState;
00000010 4803              406		se_li	r3, 0
                           407	#408:    byteCount      = pVerifyParam->sigByteCount;
00000012 013b              408		se_mr	r27, r3
00000014 aaaf              409		se_lhz	r26, 20(r31)
                           410	#409:    /* Offset into source buffer defaults to zero: all primitives process the full input data */
                           411	#410:    sourceOffset   = 0u;
00000016 8ccf              412		se_lbz	r28, 12(r31)
                           413	#412: #if defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH )
                           414	#413:    /* Update member currentDataLength of global verification parameter */
                           415	#414:    SecM_UpdateDataLength(pVerifyParam);
                           416	#415: #endif /* SEC_ENABLE_VERIFICATION_DATA_LENGTH */
                           417	#417: #if defined( SEC_ENABLE_WORKSPACE_EXTERNAL )
                           418	#418:    /* Perform some special actions during intialization */
                           419	#419:    if (SEC_HASH_INIT == action)
                           420	#420:    {
                           421	#421:       /* Get pointer to primary verification primitive
                           422	#422:          Located in first entry of */
                           423	#423:       pConfig  = &pCfgList->pPrimitives[0];
                           424	#424:       pParam   = pConfig->pContext;
                           425	#427: # if defined( SEC_ENABLE_WORKSPACE_EXTERNAL )
                           426	#428:       /* External workspace given? */
                           427	#429:       if (SEC_DEFAULT_WORKSPACE_SIZE != pVerifyParam->currentHash.length)
                           428	#430:       {
                           429	#431:          /* Pass external workspace to primary verification primitive */
                           430	#432:          pParam->currentHash = pVerifyParam->currentHash;
                           431	#433:       }
                           432	#434: # endif /* SEC_ENABLE_WORKSPACE_EXTERNAL */
                           433	#435:    }

                                   Fri Apr 10 08:31:50 2020           Page 9
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           434	#436: #endif /* SEC_ENABLE_VERIFICATION_KEY_EXTERNAL || SEC_ENABLE_WORKSPACE_EXTERNAL */
                           435	#438:    /* Loop all verification primitives */
                           436	#439:    cfgCount = pCfgList->count;
00000018 c494              437		se_lwz	r25, 16(r4)
                           438	#441:    for (index = 0u; index < cfgCount; index++)
0000001a 01be              439		se_mr	r30, r27
0000001c e800              440		se_b	.L7
                           441	.L6:
                           442	#442:    {
                           443	#443:       /* Get pointer to verification primitive for easier access */
                           444	#444:       pConfig     = &pCfgList->pPrimitives[index];
                           445	#line444
                           446	..lin.c0a49fba..a5fce082.0_1::
                           447	.LDWlin1:
0000001e 7fc71870          448		e_slwi	r7, r30, 3
                           449	#445:       pPrimitive  = pConfig->pOperation;
00000022 7cc7e86e          450		lwzux	r6, r7, r29
                           451	#446:       pParam      = pConfig->pContext;
00000026 c137              452		se_lwz	r3, 4(r7)
                           453	#448:       /* Special handling for finalization operation */
                           454	#449:       if (SEC_SIG_VERIFY == action)
00000028 2a4c              455		se_cmpi	r28, 4
0000002a e200              456		se_bne	.L8
                           457	#450:       {
                           458	#451:          /* Length of signature/checksum and offset into verification data taken from primitve configuration */
                           459	#452:          sourceOffset   = pPrimitive->offset;
                           460	#line452
                           461	..lin.c0a49fba..a5fce082.0_2::
                           462	.LDWlin2:
0000002c a2a6              463		se_lhz	r26, 4(r6)
                           464	#453:          byteCount      = pPrimitive->length;
0000002e c2b6              465		se_lwz	r27, 8(r6)
                           466	.L8:
                           467	#454:       }
                           468	#456:       /* Pass settings to dedicated parameters */
                           469	#457:       pParam->sigState        = action;
00000030 c40f              470		se_lwz	r0, 16(r31)
                           471	#458:       pParam->sigSourceBuffer = &pVerifyParam->sigSourceBuffer[sourceOffset];
00000032 04b0              472		se_add	r0, r27
00000034 d403              473		se_stw	r0, 16(r3)
00000036 c60f              474		se_lwz	r0, 24(r31)
                           475	#459:       pParam->sigByteCount    = byteCount;
00000038 d603              476		se_stw	r0, 24(r3)
                           477	#460:       pParam->wdTriggerFct    = pVerifyParam->wdTriggerFct;
0000003a c006              478		se_lwz	r0, 0(r6)
0000003c baa3              479		se_sth	r26, 20(r3)
                           480	#462:       /* Perform operation for current primitive */
                           481	#463:       result = pPrimitive->pFunction(pParam);
0000003e 9cc3              482		se_stb	r28, 12(r3)
00000040 00b0              483		se_mtctr	r0
00000042 0007              484		se_bctrl
                           485	#465:       if (SECM_VER_OK != result)
00000044 2a03              486		se_cmpi	r3, 0
00000046 e200              487		se_bne	.L12
                           488	#466:       {
                           489	#467:          /* Operation failed, abort further processing */

                                   Fri Apr 10 08:31:50 2020           Page 10
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           490	#468:          break;
                           491	#line441
                           492	..lin.c0a49fba..a5fce082.0_3::
                           493	.LDWlin3:
00000048 200e              494		se_addi	r30, 1
                           495	.L7:
0000004a 0d9e              496		se_cmpl	r30, r25
0000004c e400              497		se_blt	.L6
                           498	.L12:
                           499	#469:       }
                           500	#470:    }
                           501	#472:    return result;
                           502	#	    .ef
                           503	.LDW11:
                           504	#line472
                           505	..lin.c0a49fba..a5fce082.0_4::
                           506	.LDWlin4:
0000004e cb01              507		se_lwz	r0, 44(sp)
00000050 1b21080c          508		e_lmw	r25, 12(sp)
00000054 18218028          509		e_addi	sp, sp, 40
00000058 0090              510		se_mtlr	r0
0000005a 0004              511		se_blr
                           512	__ghs_eofn_SecM_VerifyWrapper:
                           513		.type	SecM_VerifyWrapper,@function
                           514		.size	SecM_VerifyWrapper,$-SecM_VerifyWrapper
                           515		.type	SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@function
                           516		.size	SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,$-SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                           517		.align	1
                           518	
                           519	#function:			SecM_VerifyWrapper
                           520	#stack frame size:		40
                           521	#link area offset:		0
                           522	#local storage area offset:	12
                           523	#gpr save area offset:		12
                           524	#
                           525	#result	r3	local
                           526	#index	r30	local
                           527	#cfgCount	r25	local
                           528	#action	r28	local
                           529	#byteCount	r26	local
                           530	#sourceOffset	r27	local
                           531	#pConfig	r7	local
                           532	#pPrimitive	r6	local
                           533	#pParam	r3	local
                           534	
                           535	#pVerifyParam	r31	param
                           536	#pCfgList	r29	param
                           537	
                           538		.data
                           539		.section ".vletext", "vax"
                           540		.vle
                           541		.vle
                           542	
                           543	#473: }
                           544	
                           545	#475: /**********************************************************************************************************************

                                   Fri Apr 10 08:31:50 2020           Page 11
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           546	#476:  *  SecM_UpdateSegment
                           547	#477:  *********************************************************************************************************************/
                           548	#478: /*! \brief         Read memory contents of one segment and pass to update operation of given primitives
                           549	#479:  *  \param[in,out] pContext Pointer to verification context containing segment information
                           550	#480:  *  \param[in]     pCfgList Pointer to list of verification primitives
                           551	#481:  *  \return        SECM_VER_OK if update operation successful
                           552	#482:  *                 SECM_VER_ERROR if error occured during update
                           553	#483:  *********************************************************************************************************************/
                           554		.align	1
                           555		.align	1
                           556	..gh.f.p.4.a.1.r.0.e.1:
                           557		.type	..gh.f.p.4.a.1.r.0.e.1,@object
                           558		.size	..gh.f.p.4.a.1.r.0.e.1,0
                           559		.global	SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                           560	SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
                           561	SecM_UpdateSegment:
0000005c 18210698          562		e_stwu	sp, -104(sp)
00000060 1b010948          563		e_stmw	r24, 72(sp)
00000064 0080              564		se_mflr	r0
00000066 5401006c          565		e_stw	r0, 108(sp)
0000006a 013f              566		se_mr	r31, r3
0000006c 014b              567		se_mr	r27, r4
                           568	#	    .bf
                           569	.LDW21:
                           570	#484: static SecM_StatusType SecM_UpdateSegment( V_MEMRAM1 SecM_VerifyContextType V_MEMRAM2 V_MEMRAM3 * pContext,
                           571	#485:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pCfgList )
                           572	#486: {
                           573	#487:    SecM_StatusType   result;
                           574	#488:    SecM_AddrType     currentAddress;
                           575	#489:    SecM_SizeType     remainder;
                           576	#490:    SecM_SizeType     verifyCount;
                           577	#491:    SecM_SizeType     readCount;
                           578	#492: #if defined( SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT ) && \
                           579	#493:     defined( SEC_ENABLE_CRC_TOTAL )
                           580	#494:    SecM_SizeType     countMask;
                           581	#495:    SecM_StatusType   countResult;
                           582	#496: #endif /* SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT && SEC_ENABLE_CRC_TOTAL */
                           583	#497:    SecM_ByteType     verifyBuffer[SEC_VERIFY_BYTES];
                           584	#498:    V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam;
                           585	#500:    result = SECM_VER_OK;
0000006e c404              586		se_lwz	r0, 16(r4)
                           587	#502:    if (pCfgList->count > 0u)
00000070 4803              588		se_li	r3, 0
00000072 2a00              589		se_cmpi	r0, 0
00000074 e600              590		se_beq	.L143
                           591	#503:    {
                           592	#504:       /* Move context parameters to local variables for easier access */
                           593	#505:       currentAddress = pContext->verifyAddress;
                           594	#line505
                           595	..lin.c0a49fba..9d84b122.0_5::
                           596	.LDWlin5:
00000076 18018008          597		e_addi	r0, sp, 8
                           598	#506:       remainder      = pContext->remainingBytes;
0000007a c1af              599		se_lwz	r26, 4(r31)
                           600	#508: #if defined( SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT ) && \
                           601	#509:     defined( SEC_ENABLE_CRC_TOTAL )

                                   Fri Apr 10 08:31:50 2020           Page 12
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           602	#510:       countMask      = pContext->readCountMask;
0000007c d70f              603		se_stw	r0, 28(r31)
                           604	#511:       countResult    = pContext->readCountResult;
0000007e c2df              605		se_lwz	r29, 8(r31)
                           606	#512: #endif /* SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT && SEC_ENABLE_CRC_TOTAL */
                           607	#514: #if defined( SEC_ENABLE_VERIFICATION_RANGE_CHECK )
                           608	#515:       /* Check for range overflow */
                           609	#516:       if (SECM_OK != SecM_CheckRangeOverflow(currentAddress, remainder))
                           610	#517:       {
                           611	#518:          /* Invalid memory range */
                           612	#519:          result = SECM_VER_ERROR;
                           613	#520:       }
                           614	#521:       else
                           615	#522: #endif /* SEC_ENABLE_VERIFICATION_RANGE_CHECK */
                           616	#523:       {
                           617	#524:          pVerifyParam = &pContext->sigParam;
00000080 4820              618		se_li	r0, 2
                           619	#526:          pVerifyParam->sigSourceBuffer  = verifyBuffer;      /* PRQA S 3225 */ /* MD_SecVerification_3225 */
00000082 331f0030          620		e_lbz	r24, 48(r31)
00000086 1b9f800c          621		e_addi	r28, r31, 12
                           622	#527:          pVerifyParam->sigState         = SEC_HASH_COMPUTE;
0000008a cb9f              623		se_lwz	r25, 44(r31)
0000008c 9c0c              624		se_stb	r0, 12(r28)
                           625	#529:          while (remainder > 0u)
                           626	.L128:
                           627	#589:             {
                           628	#590:                /* Operation failed, abort further processing */
                           629	#591:                break;
0000008e 2a0d              630		se_cmpi	r29, 0
00000090 e600              631		se_beq	.L143
                           632	#530:          {
                           633	#531:             /* Serve watchdog every loop cycle */
                           634	#532:             SEC_WATCHDOG_TRIGGER(pVerifyParam->wdTriggerFct); /* PRQA S 3109 */ /* MD_MSR_14.3 */
                           635	#line532
                           636	..lin.c0a49fba..9d84b122.0_6::
                           637	.LDWlin6:
00000092 c60c              638		se_lwz	r0, 24(r28)
00000094 2a00              639		se_cmpi	r0, 0
00000096 e600              640		se_beq	.L131
                           641	#line532
                           642	..lin.c0a49fba..9d84b122.0_7::
                           643	.LDWlin7:
00000098 00b0              644		se_mtctr	r0
0000009a 0007              645		se_bctrl
                           646	.L131:
                           647	#534:             /* Number of bytes to handle in this loop */
                           648	#535:             verifyCount = SEC_VERIFY_BYTES / SEC_MEMORY_READ_ACCESS_WIDTH;
0000009c 4c0e              649		se_li	r30, 64
                           650	#536:             if (remainder < (SEC_VERIFY_BYTES / SEC_MEMORY_READ_ACCESS_WIDTH))
0000009e 189da840          651		e_cmpli	r29, 64
000000a2 c00f              652		se_lwz	r0, 0(r31)
                           653	#537:             {
                           654	#538:                /* Limit to remainder */
                           655	#539:                verifyCount = remainder;
                           656	#540:             }
                           657	#542:             /* Copy data from memory to RAM buffer */

                                   Fri Apr 10 08:31:50 2020           Page 13
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           658	#543:             readCount = pContext->readMemory(currentAddress, verifyBuffer, verifyCount);
000000a4 7fddf01e          659		isellt	r30, r29, r30
000000a8 01a3              660		se_mr	r3, r26
000000aa 01e5              661		se_mr	r5, r30
000000ac 18818008          662		e_addi	r4, sp, 8
000000b0 00b0              663		se_mtctr	r0
000000b2 0007              664		se_bctrl
                           665	#545: #if defined( SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT )
                           666	#546: # if defined( SEC_ENABLE_CRC_TOTAL )
                           667	#547:             /* Update operation only necessary in case any data was read */
                           668	#548:             if ( (readCount > 0u)
000000b4 2a03              669		se_cmpi	r3, 0
000000b6 e600              670		se_beq	.L135
000000b8 7c60f278          671		xor	r0, r3, r30
000000bc 4790              672		se_and.	r0, r25
000000be e200              673		se_bne	.L135
                           674	#549:             /* Compare read count and requested length
                           675	#550:                Have to match exactly if mask is completely set (intra-segment)
                           676	#551:                Can have arbitrary values if mask is zero (inter-segment) */
                           677	#552:               && ((readCount & countMask) == ((SEC_MEMORY_READ_ACCESS_WIDTH * verifyCount) & countMask)))
                           678	#553: # else
                           679	#554:             /* Verification only operates on inter-segment data
                           680	#555:                So read count has to match the requested length, otherwise something went wrong */
                           681	#556:             if (readCount == (SEC_MEMORY_READ_ACCESS_WIDTH * verifyCount))
                           682	#557: # endif /* SEC_ENABLE_CRC_TOTAL */
                           683	#558: #else
                           684	#559:             /* Update operation only necessary in case any data was read */
                           685	#560:             if (readCount > 0u)
                           686	#561: #endif /* SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT */
                           687	#562:             {
                           688	#563:                /* Pass read data to all verification primitives */
                           689	#564:                pVerifyParam->sigByteCount = (SecM_LengthType)readCount;
                           690	#line564
                           691	..lin.c0a49fba..9d84b122.0_8::
                           692	.LDWlin8:
000000c0 ba3c              693		se_sth	r3, 20(r28)
                           694	#565:                result = SecM_VerifyWrapper(pVerifyParam, pCfgList);
000000c2 01c3              695		se_mr	r3, r28
000000c4 01b4              696		se_mr	r4, r27
000000c6 e900              697		se_bl	SecM_VerifyWrapper
000000c8 e800              698		se_b	.L138
                           699	.L135:
                           700	#566:             }
                           701	#567:             else
                           702	#568:             {
                           703	#569: #if defined( SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT )
                           704	#570: # if defined( SEC_ENABLE_CRC_TOTAL )
                           705	#571:                /* Report error in case of intra-segment data as either no data at all or not the expected length was read
                           706	#572:                   Report no error in case of inter-segment data as there may be no actual memory at the requested address,
                           707	#573:                   resulting in a read count of zero */
                           708	#574:                result = countResult;
                           709	#line574
                           710	..lin.c0a49fba..9d84b122.0_9::
                           711	.LDWlin9:
000000ca 0183              712		se_mr	r3, r24
                           713	.L138:

                                   Fri Apr 10 08:31:50 2020           Page 14
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           714	#575: # else
                           715	#576:                /* Read operation did not return expeced length, report error */
                           716	#577:                result = SECM_VER_ERROR;
                           717	#578: # endif /* SEC_ENABLE_CRC_TOTAL */
                           718	#579: #else
                           719	#580:                /* Continue operation */
                           720	#581: #endif /* SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT */
                           721	#582:             }
                           722	#584:             /* Update address information */
                           723	#585:             currentAddress += verifyCount;
000000cc 04ea              724		se_add	r26, r30
                           725	#586:             remainder      -= verifyCount;   /* PRQA S 3382 */ /* MD_SecVerification_3382 */
000000ce 06ed              726		se_sub	r29, r30
                           727	#588:             if (SECM_VER_OK != result)
000000d0 2a03              728		se_cmpi	r3, 0
000000d2 e600              729		se_beq	.L128
                           730	.L143:
                           731	#592:             }
                           732	#593:          }
                           733	#594:       }
                           734	#595:    }
                           735	#596:    else
                           736	#597:    {
                           737	#598:       /* No matching configurations given (e.g. CRC total calculation disabled at run-time)
                           738	#599:          Continue without performing any actual operation */
                           739	#600:    }
                           740	#602:    return result;
                           741	#	    .ef
                           742	.LDW31:
                           743	#line602
                           744	..lin.c0a49fba..9d84b122.0_10::
                           745	.LDWlin10:
000000d4 5001006c          746		e_lwz	r0, 108(sp)
000000d8 1b010848          747		e_lmw	r24, 72(sp)
000000dc 18218068          748		e_addi	sp, sp, 104
000000e0 0090              749		se_mtlr	r0
000000e2 0004              750		se_blr
                           751	__ghs_eofn_SecM_UpdateSegment:
                           752		.type	SecM_UpdateSegment,@function
                           753		.size	SecM_UpdateSegment,$-SecM_UpdateSegment
                           754		.type	SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@function
                           755		.size	SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,$-SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                           756		.align	1
                           757	
                           758	#function:			SecM_UpdateSegment
                           759	#stack frame size:		104
                           760	#link area offset:		0
                           761	#local storage area offset:	8
                           762	#gpr save area offset:		72
                           763	#
                           764	#result	r3	local
                           765	#currentAddress	r26	local
                           766	#remainder	r29	local
                           767	#verifyCount	r30	local
                           768	#readCount	r3	local
                           769	#countMask	r25	local

                                   Fri Apr 10 08:31:50 2020           Page 15
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           770	#countResult	r24	local
                           771	#verifyBuffer	8(sp)	local
                           772	#pVerifyParam	r28	local
                           773	
                           774	#pContext	r31	param
                           775	#pCfgList	r27	param
                           776	
                           777		.data
                           778		.section ".vletext", "vax"
                           779		.vle
                           780		.vle
                           781	
                           782	#603: }
                           783	
                           784	#605: #if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH )
                           785	#606: /**********************************************************************************************************************
                           786	#607:  *  SecM_UpdateSegmentAddress
                           787	#608:  *********************************************************************************************************************/
                           788	#609: /*! \brief         Pass serialized address and length information of one segment to update operation of given primitives
                           789	#610:  *  \param[in,out] pContext Pointer to verification context containing segment information
                           790	#611:  *  \param[in]     pCfgList Pointer to list of verification primitives
                           791	#612:  *  \param[in]     pSegmentInfo Pointer to segment information (address and length)
                           792	#613:  *  \return        SECM_VER_OK if update operation successful
                           793	#614:  *                 SECM_VER_ERROR if error occured during update
                           794	#615:  *********************************************************************************************************************/
                           795		.align	1
                           796		.align	1
                           797	..gh.f.p.5.a.1.r.0.e.2:
                           798		.type	..gh.f.p.5.a.1.r.0.e.2,@object
                           799		.size	..gh.f.p.5.a.1.r.0.e.2,0
                           800		.global	SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                           801	SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
                           802	SecM_UpdateSegmentAddress:
000000e4 182106e0          803		e_stwu	sp, -32(sp)
000000e8 1ba10914          804		e_stmw	r29, 20(sp)
000000ec 0080              805		se_mflr	r0
000000ee d901              806		se_stw	r0, 36(sp)
000000f0 013e              807		se_mr	r30, r3
000000f2 014f              808		se_mr	r31, r4
000000f4 015d              809		se_mr	r29, r5
                           810	#	    .bf
                           811	.LDW41:
                           812	#616: static SecM_StatusType SecM_UpdateSegmentAddress( V_MEMRAM1 SecM_VerifyContextType V_MEMRAM2 V_MEMRAM3 * pContext,
                           813	#617:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pCfgList,
                           814	#618:    const V_MEMRAM1 FL_SegmentInfoType V_MEMRAM2 V_MEMRAM3 * pSegmentInfo )
                           815	#619: {
                           816	#620:    SecM_StatusType   result;
                           817	#621:    SecM_ByteType     addressBuffer[2 * SEC_ADDRESS_LENGTH_INPUT_SIZE];
                           818	#622:    V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam;
                           819	#624:    result = SECM_VER_OK;
000000f6 c404              820		se_lwz	r0, 16(r4)
                           821	#626:    if (pCfgList->count > 0u)
000000f8 4803              822		se_li	r3, 0
000000fa 2a00              823		se_cmpi	r0, 0
000000fc e600              824		se_beq	.L374
                           825	#627:    {

                                   Fri Apr 10 08:31:50 2020           Page 16
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           826	#628:       /* Convert address and length of current segment to big-endian byte array */
                           827	#629:       SecM_SetInteger(SEC_ADDRESS_LENGTH_INPUT_SIZE, pSegmentInfo->transferredAddress, &addressBuffer[0]);
                           828	#line629
                           829	..lin.c0a49fba..2210f548.0_11::
                           830	.LDWlin11:
000000fe c045              831		se_lwz	r4, 0(r5)
00000100 18a18008          832		e_addi	r5, sp, 8
00000104 4843              833		se_li	r3, 4
00000106 78000001          834		e_bl	SecM_SetInteger
                           835	#630:       SecM_SetInteger(SEC_ADDRESS_LENGTH_INPUT_SIZE, pSegmentInfo->length, &addressBuffer[SEC_ADDRESS_LENGTH_INPUT_SIZE]);
0000010a c24d              836		se_lwz	r4, 8(r29)
0000010c 4843              837		se_li	r3, 4
0000010e 18a1800c          838		e_addi	r5, sp, 12
00000112 78000001          839		e_bl	SecM_SetInteger
                           840	#632:       pVerifyParam = &pContext->sigParam;
00000116 18018008          841		e_addi	r0, sp, 8
                           842	#634:       pVerifyParam->sigSourceBuffer = addressBuffer;                     /* PRQA S 3225 */ /* MD_SecVerification_3225 */
0000011a d70e              843		se_stw	r0, 28(r30)
0000011c 187e800c          844		e_addi	r3, r30, 12
                           845	#635:       pVerifyParam->sigByteCount    = 2 * SEC_ADDRESS_LENGTH_INPUT_SIZE;
00000120 4880              846		se_li	r0, 8
00000122 ba03              847		se_sth	r0, 20(r3)
                           848	#636:       pVerifyParam->sigState        = SEC_HASH_COMPUTE;
00000124 4820              849		se_li	r0, 2
00000126 9c03              850		se_stb	r0, 12(r3)
                           851	#638:       /* Update verification using address and length information */
                           852	#639:       result = SecM_VerifyWrapper(pVerifyParam, pCfgList);
00000128 01f4              853		se_mr	r4, r31
0000012a 78000001          854		se_bl	SecM_VerifyWrapper
                           855	.L374:
                           856	#640:    }
                           857	#641:    else
                           858	#642:    {
                           859	#643:       /* No matching configurations given, continue without performing any actual operation */
                           860	#644:    }
                           861	#646:    return result;
                           862	#	    .ef
                           863	.LDW51:
                           864	#line646
                           865	..lin.c0a49fba..2210f548.0_12::
                           866	.LDWlin12:
0000012e c901              867		se_lwz	r0, 36(sp)
00000130 1ba10814          868		e_lmw	r29, 20(sp)
00000134 21f1              869		se_addi	sp, 32
00000136 0090              870		se_mtlr	r0
00000138 0004              871		se_blr
                           872	__ghs_eofn_SecM_UpdateSegmentAddress:
                           873		.type	SecM_UpdateSegmentAddress,@function
                           874		.size	SecM_UpdateSegmentAddress,$-SecM_UpdateSegmentAddress
                           875		.type	SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@function
                           876		.size	SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,$-SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                           877		.align	1
                           878	
                           879	#function:			SecM_UpdateSegmentAddress
                           880	#stack frame size:		32
                           881	#link area offset:		0

                                   Fri Apr 10 08:31:50 2020           Page 17
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           882	#local storage area offset:	12
                           883	#gpr save area offset:		20
                           884	#
                           885	#result	r3	local
                           886	#addressBuffer	8(sp)	local
                           887	
                           888	#pContext	r30	param
                           889	#pCfgList	r31	param
                           890	#pSegmentInfo	r29	param
                           891	
                           892		.data
                           893		.section ".vletext", "vax"
                           894		.vle
                           895		.vle
                           896	
                           897	#647: }
                           898	
                           899	#648: #endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH */
                           900	#650: /**********************************************************************************************************************
                           901	#651:  *  SecM_PopulateCfgList
                           902	#652:  *********************************************************************************************************************/
                           903	#653: /*! \brief         Populate configuration list with all verification primitives matching given criteria
                           904	#654:  *  \param[in]     pSourceList Pointer to list containing all verification primitives
                           905	#655:  *  \param[out]    pTargetList Pointer to list filled with verification primitive pairs matching criteria
                           906	#656:  *  \param[in]     mask Criteria mask (0x00u if all primitives shall be included)
                           907	#657:  *********************************************************************************************************************/
                           908		.align	1
                           909		.align	1
                           910	..gh.f.p.5.a.1.r.0.e.3:
                           911		.type	..gh.f.p.5.a.1.r.0.e.3,@object
                           912		.size	..gh.f.p.5.a.1.r.0.e.3,0
                           913		.global	SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                           914	SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
                           915	SecM_PopulateCfgList:
0000013a 182106e8          916		e_stwu	sp, -24(sp)
0000013e 1ba1090c          917		e_stmw	r29, 12(sp)
                           918	#	    .bf
                           919	.LDW61:
                           920	#658: static void SecM_PopulateCfgList( const V_MEMRAM1 SecM_VerifyConfigListType V_MEMRAM2 V_MEMRAM3 * pSourceList,
                           921	#659:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pTargetList, SecM_ByteType mask )
                           922	#660: {
                           923	#661:    SecM_ByteFastType inIndex;
                           924	#662:    SecM_ByteFastType outIndex;
                           925	#663:    V_MEMROM1 SecM_VerifyOperationType V_MEMROM2 V_MEMROM3 * pSourceOperation;
                           926	#664:    V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 *  pSourceParam;
                           927	#665:    V_MEMRAM1 SecM_VerifyConfigType V_MEMRAM2 V_MEMRAM3 *    pTarget;
                           928	#667:    /* Index for output list */
                           929	#668:    outIndex = 0u;
00000142 480d              930		se_li	r29, 0
                           931	#669:    /* Loop all input primitives */
                           932	#670:    for (inIndex = 0u; inIndex < pSourceList->count; inIndex++)
00000144 01de              933		se_mr	r30, r29
00000146 e800              934		se_b	.L444
                           935	.L443:
                           936	#671:    {
                           937	#672:       /* Take matching operation and context from the individual lists */

                                   Fri Apr 10 08:31:50 2020           Page 18
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           938	#673:       pSourceOperation  = &pSourceList->pPrimitives.pOperation[inIndex];
                           939	#line673
                           940	..lin.c0a49fba..16cf4882.0_13::
                           941	.LDWlin13:
00000148 c003              942		se_lwz	r0, 0(r3)
0000014a 7fc72070          943		e_slwi	r7, r30, 4
0000014e 0407              944		se_add	r7, r0
                           945	#674:       pSourceParam      = &pSourceList->pPrimitives.pContext[inIndex];
00000150 c103              946		se_lwz	r0, 4(r3)
00000152 7fdf2870          947		e_slwi	r31, r30, 5
00000156 040f              948		se_add	r31, r0
                           949	#676:       /* Check whether primitive matches criteria
                           950	#677:          In case mask == 0x00u all primitives will be included */
                           951	#678:       if (mask == (pSourceOperation->mask & mask))
00000158 8c07              952		se_lbz	r0, 12(r7)
0000015a 4650              953		se_and	r0, r5
0000015c 0d05              954		se_cmpl	r5, r0
0000015e e200              955		se_bne	.L442
                           956	#679:       {
                           957	#680:          /* Pair associated operation and context pointers to configuration */
                           958	#681:          pTarget = &pTargetList->pPrimitives[outIndex];
                           959	#line681
                           960	..lin.c0a49fba..16cf4882.0_14::
                           961	.LDWlin14:
00000160 7fa61870          962		e_slwi	r6, r29, 3
                           963	#683:          pTarget->pOperation  = pSourceOperation;
00000164 7ce6216e          964		stwux	r7, r6, r4
                           965	#684:          pTarget->pContext    = pSourceParam;
00000168 200d              966		se_addi	r29, 1
                           967	#686:          outIndex++;
0000016a d1f6              968		se_stw	r31, 4(r6)
                           969	.L442:
0000016c 200e              970		se_addi	r30, 1
                           971	.L444:
0000016e c203              972		se_lwz	r0, 8(r3)
00000170 0d0e              973		se_cmpl	r30, r0
00000172 e400              974		se_blt	.L443
                           975	#687:       }
                           976	#688:    }
                           977	#690:    /* Number of verification primitives matching criteria */
                           978	#691:    pTargetList->count = outIndex;
                           979	#line691
                           980	..lin.c0a49fba..16cf4882.0_15::
                           981	.LDWlin15:
00000174 d4d4              982		se_stw	r29, 16(r4)
                           983	#692: }
                           984	#	    .ef
                           985	.LDW71:
00000176 1ba1080c          986		e_lmw	r29, 12(sp)
0000017a 2171              987		se_addi	sp, 24
0000017c 0004              988		se_blr
                           989	__ghs_eofn_SecM_PopulateCfgList:
                           990		.type	SecM_PopulateCfgList,@function
                           991		.size	SecM_PopulateCfgList,$-SecM_PopulateCfgList
                           992		.type	SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@function
                           993		.size	SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,$-SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.

                                   Fri Apr 10 08:31:50 2020           Page 19
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                           994		.align	1
                           995	
                           996	#function:			SecM_PopulateCfgList
                           997	#stack frame size:		24
                           998	#link area offset:		0
                           999	#local storage area offset:	12
                          1000	#gpr save area offset:		12
                          1001	#
                          1002	#inIndex	r30	local
                          1003	#outIndex	r29	local
                          1004	#pSourceOperation	r7	local
                          1005	#pSourceParam	r31	local
                          1006	#pTarget	r6	local
                          1007	
                          1008	#pSourceList	r3	param
                          1009	#pTargetList	r4	param
                          1010	#mask	r5	param
                          1011	
                          1012		.data
                          1013		.section ".vletext", "vax"
                          1014		.vle
                          1015		.vle
                          1016	
                          1017	
                          1018	#694: /**********************************************************************************************************************
                          1019	#695:  *  SecM_VerificationWrapper
                          1020	#696:  *********************************************************************************************************************/
                          1021	#697: /*! \brief         Performs a verification operation for a given set of verification primitives
                          1022	#698:  *  \details       Loops all segments present in the verification parameter and passes the information and data to the
                          1023	#699:  *                 verification primitives given in list.
                          1024	#700:  *                 Depending on the criteria given in the mask member of the primitive the following operations are
                          1025	#701:  *                 carried out:
                          1026	#702:  *                 - Initialization and update with intra-segment data (SEC_UPDATE_OPERATION_DEFAULT - all primitives)
                          1027	#703:  *                 - Update with inter-segment data (SEC_UPDATE_OPERATION_INTER_SEGMENT)
                          1028	#704:  *                 - Update with address and length of segments (SEC_UPDATE_OPERATION_ADDRESS_LENGTH)
                          1029	#705:  *                 - Verification against given signature/checksum (SEC_UPDATE_OPERATION_VERIFICATION)
                          1030	#706:  *  \pre           Segments in member segmentList of pVerifyParam have to be sorted in ascending order
                          1031	#707:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                          1032	#708:  *  \param[in]     pCfgList Pointer to list of verification primitives
                          1033	#709:  *  \return        SECM_VER_OK if signature verification successful
                          1034	#710:  *                 SECM_VER_ERROR if error occured during verification
                          1035	#711:  *                 SECM_VER_CRC if CRC verification failed
                          1036	#712:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          1037	#713:  *********************************************************************************************************************/
                          1038	#714: #if defined( SEC_ENABLE_VERIFICATION_WRAPPER )
                          1039	#715: SecM_StatusType SecM_VerificationWrapper( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam,
                          1040	#716:    V_MEMRAM1 SecM_VerifyConfigListType V_MEMRAM2 V_MEMRAM3 * pCfgList )
                          1041	#717: #else
                          1042		.align	1
                          1043		.align	1
                          1044	..gh.f.p.4.a.1.r.0.e.4:
                          1045		.type	..gh.f.p.4.a.1.r.0.e.4,@object
                          1046		.size	..gh.f.p.4.a.1.r.0.e.4,0
                          1047		.global	SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          1048	SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
                          1049	SecM_VerificationWrapper:

                                   Fri Apr 10 08:31:50 2020           Page 20
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000017e 719f7f58         1050		e_li	r12, -168
00000182 7c21616e         1051		stwux	sp, sp, r12
00000186 1981808c         1052		e_addi	r12, sp, 140
0000018a 1b2c0900         1053		e_stmw	r25, 0(r12)
0000018e 013f             1054		se_mr	r31, r3
00000190 0080             1055		se_mflr	r0
00000192 540100ac         1056		e_stw	r0, 172(sp)
                          1057	#	    .bf
                          1058	.LDW81:
                          1059	#718: static SecM_StatusType SecM_VerificationWrapper( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam,
                          1060	#719:    V_MEMRAM1 SecM_VerifyConfigListType V_MEMRAM2 V_MEMRAM3 * pCfgList ) /* PRQA S 3673 */ /* MD_SecVerification_3673_2 */
                          1061	#720: #endif /* SEC_ENABLE_VERIFICATION_WRAPPER */
                          1062	#721: {
                          1063	#722:    SecM_StatusType            result;
                          1064	#723:    /* Context of verification passed to helper function */
                          1065	#724:    SecM_VerifyContextType     context;    /* PRQA S 0781 */ /* MD_SecVerification_0781 */
                          1066	#725:    SecM_ByteFastType          index;
                          1067	#726:    /* Local pointer to segments */
                          1068	#727:    V_MEMRAM1 FL_SegmentListType V_MEMRAM2 V_MEMRAM3 * pSegmentList;
                          1069	#728:    /* Pointer to current segment */
                          1070	#729:    V_MEMRAM1 FL_SegmentInfoType V_MEMRAM2 V_MEMRAM3 * pSegmentInfo;
                          1071	#730:    /* Pointers to all primitives */
                          1072	#731:    SecM_VerifyConfigPairType  cfgListAll;
                          1073	#732:    /* Pointers to primitives executing final verification */
                          1074	#733:    SecM_VerifyConfigPairType  cfgListVerify;
                          1075	#734: #if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH )
                          1076	#735:    /* Pointers to primitives updated with address and length information */
                          1077	#736:    SecM_VerifyConfigPairType   cfgListAddr;
                          1078	#737: #endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH */
                          1079	#738: #if defined( SEC_ENABLE_CRC_TOTAL )
                          1080	#739:    /* Pointers to primitives additionally updated with inter-segment data */
                          1081	#740:    SecM_VerifyConfigPairType  cfgListInter;
                          1082	#741:    /* Pointer to primitive list involved in update operation */
                          1083	#742:    V_MEMRAM1 SecM_VerifyConfigPairType V_MEMRAM2 V_MEMRAM3 * pCfgListUpdate;
                          1084	#743:    SecM_AddrType              currentAddress;
                          1085	#744:    SecM_SizeType              remainder;
                          1086	#745:    SecM_SizeType              currentLength;
                          1087	#746: #endif /* SEC_ENABLE_CRC_TOTAL */
                          1088	#748: #if defined( SEC_ENABLE_VERIFICATION_WRAPPER )
                          1089	#749:    result = SECM_VER_ERROR;
                          1090	#751:    /* Verify list contains any primitives and does not exceed maximum configured count */
                          1091	#752:    if ((pCfgList->count > 0u) && (pCfgList->count <= SEC_VER_MAX_CONFIG_COUNT))
                          1092	#753: #endif /* SEC_ENABLE_VERIFICATION_WRAPPER */
                          1093	#754:    {
                          1094	#755:       /* Convert list of all primitives into matching format (structure of arrays -> array of structures) */
                          1095	#756:       SecM_PopulateCfgList(pCfgList, &cfgListAll,     SEC_UPDATE_OPERATION_DEFAULT);
00000196 4805             1096		se_li	r5, 0
00000198 0143             1097		se_mr	r3, r4
0000019a 1881803c         1098		e_addi	r4, sp, 60
0000019e e900             1099		se_bl	SecM_PopulateCfgList
                          1100	#758:       /* Get all primitives contributing to final verification */
                          1101	#759:       SecM_PopulateCfgList(pCfgList, &cfgListVerify,  SEC_UPDATE_OPERATION_VERIFICATION);
                          1102	#line759
                          1103	..lin.c0a49fba..998d31f0.0_16::
                          1104	.LDWlin16:
000001a0 4845             1105		se_li	r5, 4

                                   Fri Apr 10 08:31:50 2020           Page 21
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000001a2 18818050         1106		e_addi	r4, sp, 80
000001a6 e900             1107		se_bl	SecM_PopulateCfgList
                          1108	#760: #if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH )
                          1109	#761:       /* Get all primitives updated with address and lenght information of segment */
                          1110	#762:       SecM_PopulateCfgList(pCfgList, &cfgListAddr,    SEC_UPDATE_OPERATION_ADDRESS_LENGTH);
                          1111	#line762
                          1112	..lin.c0a49fba..998d31f0.0_17::
                          1113	.LDWlin17:
000001a8 18818064         1114		e_addi	r4, sp, 100
000001ac 4815             1115		se_li	r5, 1
000001ae e900             1116		se_bl	SecM_PopulateCfgList
                          1117	#763: #endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH */
                          1118	#764: #if defined( SEC_ENABLE_CRC_TOTAL )
                          1119	#765:       /* Get all primitives additionally updated with inter-segment data */
                          1120	#766:       SecM_PopulateCfgList(pCfgList, &cfgListInter,   SEC_UPDATE_OPERATION_INTER_SEGMENT);
                          1121	#line766
                          1122	..lin.c0a49fba..998d31f0.0_18::
                          1123	.LDWlin18:
000001b0 18818078         1124		e_addi	r4, sp, 120
000001b4 4825             1125		se_li	r5, 2
000001b6 e900             1126		se_bl	SecM_PopulateCfgList
                          1127	#767: #endif /* SEC_ENABLE_CRC_TOTAL */
                          1128	#769:       /* Ease the access of segment data by local variable */
                          1129	#770:       /* According to HIS specification */
                          1130	#771:       pSegmentList = &pVerifyParam->segmentList;
                          1131	#773:       /* Setup verification parameter in context
                          1132	#774:          Uninitialized/unchanged values not relevant for initialization */
                          1133	#775:       context.sigParam.sigState           = SEC_HASH_INIT;
                          1134	#line775
                          1135	..lin.c0a49fba..998d31f0.0_19::
                          1136	.LDWlin19:
000001b8 4810             1137		se_li	r0, 1
000001ba 1bc18014         1138		e_addi	r30, sp, 20
000001be 9c0e             1139		se_stb	r0, 12(r30)
                          1140	#776:       context.sigParam.wdTriggerFct       = pVerifyParam->wdTriggerFct;
000001c0 c60f             1141		se_lwz	r0, 24(r31)
000001c2 db01             1142		se_stw	r0, 44(sp)
                          1143	#777:       context.readMemory                  = pVerifyParam->readMemory;
000001c4 c70f             1144		se_lwz	r0, 28(r31)
000001c6 1881803c         1145		e_addi	r4, sp, 60
                          1146	#778: #if defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH )
                          1147	#779:       context.sigParam.currentDataLength  = SEC_DATA_LENGTH_NULL;
                          1148	#780: #endif /* SEC_ENABLE_VERIFICATION_DATA_LENGTH */
                          1149	#781: #if defined( SEC_ENABLE_WORKSPACE_EXTERNAL )
                          1150	#782:       /* Pass external workspace to verify wrapper */
                          1151	#783:       context.sigParam.currentHash.sigResultBuffer  = (SecM_ResultBufferType)pVerifyParam->workspace.data; /* PRQA S 0306 */ /* MD_SecVerification_0306 */
                          1152	#784:       context.sigParam.currentHash.length           = pVerifyParam->workspace.size;
                          1153	#785: #endif /* SEC_ENABLE_WORKSPACE_EXTERNAL */
                          1154	#787:       /* Initialize all verification primitives */
                          1155	#788:       result = SecM_VerifyWrapper(&context.sigParam, &cfgListAll);
000001ca d201             1156		se_stw	r0, 8(sp)
000001cc 01e3             1157		se_mr	r3, r30
000001ce 78000001         1158		se_bl	SecM_VerifyWrapper
                          1159	#790:       if (SECM_VER_OK == result)
                          1160	#line790
                          1161	..lin.c0a49fba..998d31f0.0_20::

                                   Fri Apr 10 08:31:50 2020           Page 22
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1162	.LDWlin20:
000001d2 2a03             1163		se_cmpi	r3, 0
000001d4 e200             1164		se_bne	.L558
                          1165	#791:       {
                          1166	#792: #if defined( SEC_ENABLE_CRC_TOTAL )
                          1167	#793:          /* CRC total option enabled
                          1168	#794:             Process full block including inter-segment data */
                          1169	#795:          currentAddress = pVerifyParam->blockStartAddress;
                          1170	#line795
                          1171	..lin.c0a49fba..998d31f0.0_21::
                          1172	.LDWlin21:
000001d6 c2bf             1173		se_lwz	r27, 8(r31)
                          1174	#796:          remainder      = pVerifyParam->blockLength;
000001d8 c3cf             1175		se_lwz	r28, 12(r31)
                          1176	#798:          /* Check for range overflow */
                          1177	#799: # if defined( SEC_ENABLE_VERIFICATION_RANGE_CHECK )
                          1178	#800:          if (SECM_OK == SecM_CheckRangeOverflow(currentAddress, remainder))
                          1179	#801:          {
                          1180	#802:             /* Invalid memory range */
                          1181	#803:             result = SECM_VER_ERROR;
                          1182	#804:          }
                          1183	#805:          else
                          1184	#806: # endif /* SEC_ENABLE_VERIFICATION_RANGE_CHECK */
                          1185	#807:          {
                          1186	#808:             /* Initialize segment index */
                          1187	#809:             index = 0u;
000001da 480a             1188		se_li	r26, 0
                          1189	#811:             /* Process all bytes of block */
                          1190	#812:             while (remainder > 0u)
000001dc e800             1191		se_b	.L540
                          1192	.L542:
                          1193	#813:             {
                          1194	#814:                /* Default to inter-segment handling */
                          1195	#815:                pCfgListUpdate = &cfgListInter;
                          1196	#line815
                          1197	..lin.c0a49fba..998d31f0.0_22::
                          1198	.LDWlin22:
000001de 4800             1199		se_li	r0, 0
                          1200	#816: # if defined( SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT )
                          1201	#817:                /* Ignore mismatch of read count and requested length */
                          1202	#818:                context.readCountMask   = SEC_READ_COUNT_MASK_IGNORE;
000001e0 dd01             1203		se_stw	r0, 52(sp)
000001e2 34010038         1204		e_stb	r0, 56(sp)
                          1205	#819:                /* Continue operation in case no data was read at all (memory gap) */
                          1206	#820:                context.readCountResult = SEC_READ_COUNT_RESULT_IGNORE;
000001e6 800f             1207		se_lbz	r0, 0(r31)
                          1208	#821: # endif /* SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT */
                          1209	#823:                /* Still segments left? */
                          1210	#824:                if (index < pSegmentList->nrOfSegments)
000001e8 1b218078         1211		e_addi	r25, sp, 120
000001ec 0d0a             1212		se_cmpl	r26, r0
000001ee e000             1213		se_bge	.L543
                          1214	#825:                {
                          1215	#826:                   /* Get current segment information */
                          1216	#827:                   pSegmentInfo = &pSegmentList->segmentInfo[index];
                          1217	#line827

                                   Fri Apr 10 08:31:50 2020           Page 23
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1218	..lin.c0a49fba..998d31f0.0_23::
                          1219	.LDWlin23:
000001f0 c10f             1220		se_lwz	r0, 4(r31)
000001f2 18baa00c         1221		e_mulli	r5, r26, 12
000001f6 0405             1222		se_add	r5, r0
                          1223	#829:                   /* Check whether address lays in front of segment */
                          1224	#830:                   if (currentAddress < pSegmentInfo->targetAddress)
000001f8 c105             1225		se_lwz	r0, 4(r5)
000001fa 0d0b             1226		se_cmpl	r27, r0
000001fc e000             1227		se_bge	.L545
                          1228	#831:                   {
                          1229	#832:                      /* Inter-segment area (gap) or beginning of block
                          1230	#833:                         Bytes till beginning of next segment */
                          1231	#834:                      currentLength = pSegmentInfo->targetAddress - currentAddress;
                          1232	#line834
                          1233	..lin.c0a49fba..998d31f0.0_24::
                          1234	.LDWlin24:
000001fe 7fbb0050         1235		subf	r29, r27, r0
                          1236	.L548:
                          1237	#864:                }
                          1238	#866:                if (SECM_VER_OK == result)
00000202 2a03             1239		se_cmpi	r3, 0
00000204 e600             1240		se_beq	.L550
00000206 e800             1241		se_b	.L558
                          1242	.L545:
                          1243	#835:                   }
                          1244	#836:                   else
                          1245	#837:                   {
                          1246	#838:                      /* Intra-segment area
                          1247	#839:                         Bytes till end of segment */
                          1248	#840:                      currentLength = pSegmentInfo->length;
                          1249	#line840
                          1250	..lin.c0a49fba..998d31f0.0_25::
                          1251	.LDWlin25:
00000208 c2d5             1252		se_lwz	r29, 8(r5)
                          1253	#842:                      /* Apply to all verification primitives */
                          1254	#843:                      pCfgListUpdate = &cfgListAll;
0000020a 2c00             1255		se_bmaski	r0, 0
                          1256	#844: # if defined( SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT )
                          1257	#845:                      /* Assert equality of read count and requested length */
                          1258	#846:                      context.readCountMask   = SEC_READ_COUNT_MASK_ASSERT;    /* PRQA S 0277 */ /* MD_SecVerification_0277 */
0000020c dd01             1259		se_stw	r0, 52(sp)
0000020e 4810             1260		se_li	r0, 1
                          1261	#847:                      /* Abort operation in case read count differs from requested length */
                          1262	#848:                      context.readCountResult = SEC_READ_COUNT_RESULT_ASSERT;
00000210 1b21803c         1263		e_addi	r25, sp, 60
00000214 34010038         1264		e_stb	r0, 56(sp)
                          1265	#849: # endif /* SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT */
                          1266	#851: # if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH )
                          1267	#852:                      /* Update verification with address and length of segment */
                          1268	#853:                      result = SecM_UpdateSegmentAddress(&context, &cfgListAddr, pSegmentInfo);
00000218 18618008         1269		e_addi	r3, sp, 8
0000021c 18818064         1270		e_addi	r4, sp, 100
00000220 78000001         1271		se_bl	SecM_UpdateSegmentAddress
                          1272	#854: # endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH */
                          1273	#856:                      /* Switch to next segment in following iteration */

                                   Fri Apr 10 08:31:50 2020           Page 24
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1274	#857:                      index++;
                          1275	#line857
                          1276	..lin.c0a49fba..998d31f0.0_26::
                          1277	.LDWlin26:
00000224 200a             1278		se_addi	r26, 1
00000226 e800             1279		se_b	.L548
                          1280	.L543:
                          1281	#858:                   }
                          1282	#859:                }
                          1283	#860:                else
                          1284	#861:                {
                          1285	#862:                   /* End of block reached */
                          1286	#863:                   currentLength = remainder;
                          1287	#line863
                          1288	..lin.c0a49fba..998d31f0.0_27::
                          1289	.LDWlin27:
00000228 01cd             1290		se_mr	r29, r28
                          1291	.L550:
                          1292	#867:                {
                          1293	#868:                   /* Address and length passed in context */
                          1294	#869:                   context.verifyAddress   = currentAddress;
0000022a d3b1             1295		se_stw	r27, 12(sp)
                          1296	#870:                   context.remainingBytes  = currentLength;
0000022c d4d1             1297		se_stw	r29, 16(sp)
                          1298	#872:                   /* Update verification with intra- or inter-segment data */
                          1299	#873:                   result = SecM_UpdateSegment(&context, pCfgListUpdate);
0000022e 0194             1300		se_mr	r4, r25
00000230 18618008         1301		e_addi	r3, sp, 8
00000234 78000001         1302		se_bl	SecM_UpdateSegment
                          1303	#875:                   /* Update local address and remainder  */
                          1304	#876:                   if (currentLength < remainder)
                          1305	#line876
                          1306	..lin.c0a49fba..998d31f0.0_28::
                          1307	.LDWlin28:
00000238 0dcd             1308		se_cmpl	r29, r28
0000023a e000             1309		se_bge	.L551
                          1310	#877:                   {
                          1311	#878:                      remainder      -= currentLength;
                          1312	#line878
                          1313	..lin.c0a49fba..998d31f0.0_29::
                          1314	.LDWlin29:
0000023c 06dc             1315		se_sub	r28, r29
                          1316	#879:                      currentAddress += currentLength;
0000023e 04db             1317		se_add	r27, r29
00000240 e800             1318		se_b	.L549
                          1319	.L551:
                          1320	#880:                   }
                          1321	#881:                   else
                          1322	#882:                   {
                          1323	#883:                      /* Segment lies exactly at end or outside of block
                          1324	#884:                         Prevent integer overflow
                          1325	#885:                         Address not relevant any more */
                          1326	#886:                      remainder = 0u;
                          1327	#line886
                          1328	..lin.c0a49fba..998d31f0.0_30::
                          1329	.LDWlin30:

                                   Fri Apr 10 08:31:50 2020           Page 25
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000242 480c             1330		se_li	r28, 0
                          1331	.L549:
                          1332	#887:                   }
                          1333	#888:                }
                          1334	#890:                /* This is not the else of the if above */
                          1335	#891:                if (SECM_VER_OK != result)
00000244 2a03             1336		se_cmpi	r3, 0
00000246 e200             1337		se_bne	.L558
                          1338	.L540:
                          1339	#892:                {
                          1340	#893:                   /* Operation failed, abort processing */
                          1341	#894:                   break;
                          1342	#line812
                          1343	..lin.c0a49fba..998d31f0.0_31::
                          1344	.LDWlin31:
00000248 2a0c             1345		se_cmpi	r28, 0
0000024a e200             1346		se_bne	.L542
                          1347	#895:                }
                          1348	#896:             }
                          1349	#897:          }
                          1350	#898: #else
                          1351	#899:          /* CRC total option disabled
                          1352	#900:             Use optimized implementation which only handles inter-segment data
                          1353	#901:             Loop all segments */
                          1354	#902:          for (index = 0u; index < pSegmentList->nrOfSegments; index++)
                          1355	#903:          {
                          1356	#904:             /* Get current segment information */
                          1357	#905:             pSegmentInfo = &pSegmentList->segmentInfo[index];
                          1358	#907:             /* Pass segment information in context */
                          1359	#908:             context.verifyAddress  = pSegmentInfo->targetAddress;
                          1360	#909:             context.remainingBytes = pSegmentInfo->length;
                          1361	#911: # if defined( SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH )
                          1362	#912:             /* Update verification with address and length of segment */
                          1363	#913:             result = SecM_UpdateSegmentAddress(&context, &cfgListAddr, pSegmentInfo);
                          1364	#915:             if (SECM_VER_OK == result)
                          1365	#916: # endif /* SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH */
                          1366	#917:             {
                          1367	#918:                /* Update verification with inter-segment data */
                          1368	#919:                result = SecM_UpdateSegment(&context, &cfgListAll);
                          1369	#920:             }
                          1370	#922:             /* This is not the else of the if above */
                          1371	#923:             if (SECM_VER_OK != result)
                          1372	#924:             {
                          1373	#925:                /* Operation failed, abort processing */
                          1374	#926:                break;
                          1375	#927:             }
                          1376	#928:          }
                          1377	#929: #endif /* SEC_ENABLE_CRC_TOTAL */
                          1378	#930:       }
                          1379	#932:       if (SECM_VER_OK == result)
                          1380	#933:       {
                          1381	#934:          /* Finalize calculation */
                          1382	#935:          context.sigParam.sigState        = SEC_HASH_FINALIZE;
                          1383	#line935
                          1384	..lin.c0a49fba..998d31f0.0_32::
                          1385	.LDWlin32:

                                   Fri Apr 10 08:31:50 2020           Page 26
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000024c 4830             1386		se_li	r0, 3
0000024e 9c0e             1387		se_stb	r0, 12(r30)
                          1388	#937:          result = SecM_VerifyWrapper(&context.sigParam, &cfgListAll);
00000250 01e3             1389		se_mr	r3, r30
00000252 1881803c         1390		e_addi	r4, sp, 60
00000256 78000001         1391		se_bl	SecM_VerifyWrapper
                          1392	#939:          if (SECM_VER_OK == result)
                          1393	#line939
                          1394	..lin.c0a49fba..998d31f0.0_33::
                          1395	.LDWlin33:
0000025a 2a03             1396		se_cmpi	r3, 0
0000025c e200             1397		se_bne	.L558
                          1398	#940:          {
                          1399	#941:             /* Finalize verification */
                          1400	#942:             context.sigParam.sigSourceBuffer = pVerifyParam->verificationData;
                          1401	#line942
                          1402	..lin.c0a49fba..998d31f0.0_34::
                          1403	.LDWlin34:
0000025e c40f             1404		se_lwz	r0, 16(r31)
00000260 01e3             1405		se_mr	r3, r30
                          1406	#943:             context.sigParam.sigState        = SEC_SIG_VERIFY;
00000262 d40e             1407		se_stw	r0, 16(r30)
00000264 4840             1408		se_li	r0, 4
                          1409	#945:             result = SecM_VerifyWrapper(&context.sigParam, &cfgListVerify);
00000266 9c0e             1410		se_stb	r0, 12(r30)
00000268 18818050         1411		e_addi	r4, sp, 80
0000026c 78000001         1412		se_bl	SecM_VerifyWrapper
                          1413	.L558:
                          1414	#946:          }
                          1415	#947:       }
                          1416	#948:    }
                          1417	#950:    return result;
                          1418	#	    .ef
                          1419	.LDW91:
                          1420	#line950
                          1421	..lin.c0a49fba..998d31f0.0_35::
                          1422	.LDWlin35:
00000270 1981808c         1423		e_addi	r12, sp, 140
00000274 500100ac         1424		e_lwz	r0, 172(sp)
00000278 1b2c0800         1425		e_lmw	r25, 0(r12)
0000027c 182180a8         1426		e_addi	sp, sp, 168
00000280 0090             1427		se_mtlr	r0
00000282 0004             1428		se_blr
                          1429	__ghs_eofn_SecM_VerificationWrapper:
                          1430		.type	SecM_VerificationWrapper,@function
                          1431		.size	SecM_VerificationWrapper,$-SecM_VerificationWrapper
                          1432		.type	SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@function
                          1433		.size	SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,$-SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          1434		.align	1
                          1435	
                          1436	#function:			SecM_VerificationWrapper
                          1437	#stack frame size:		168
                          1438	#link area offset:		0
                          1439	#local storage area offset:	8
                          1440	#gpr save area offset:		140
                          1441	#

                                   Fri Apr 10 08:31:50 2020           Page 27
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1442	#result	r3	local
                          1443	#context	8(sp)	local
                          1444	#index	r26	local
                          1445	#pSegmentList	r31	local
                          1446	#pSegmentInfo	r5	local
                          1447	#cfgListAll	60(sp)	local
                          1448	#cfgListVerify	80(sp)	local
                          1449	#cfgListAddr	100(sp)	local
                          1450	#cfgListInter	120(sp)	local
                          1451	#pCfgListUpdate	r25	local
                          1452	#currentAddress	r27	local
                          1453	#remainder	r28	local
                          1454	#currentLength	r29	local
                          1455	
                          1456	#pVerifyParam	r31	param
                          1457	#pCfgList	r4	param
                          1458	
                          1459		.data
                          1460		.section ".vletext", "vax"
                          1461		.vle
                          1462		.vle
                          1463	
                          1464	#951: }
                          1465	
                          1466	#953: /**********************************************************************************************************************
                          1467	#954:  *  SecM_VerificationBase
                          1468	#955:  *********************************************************************************************************************/
                          1469	#956: /*! \brief         Calculate and verify checksum or signature using passed primitive
                          1470	#957:  *  \details       Beside the passed base operation, auxiliary operations are included (if configured) in the
                          1471	#958:  *                 following order:
                          1472	#959:  *                 - CRC total
                          1473	#960:  *                 - Vendor specific checksum
                          1474	#961:  *                 - CRC written
                          1475	#962:  *                 - ...
                          1476	#963:  *                 Additional details see SecM_Verification
                          1477	#964:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                          1478	#965:  *  \param[in]     pCfgList Pointer to list of verification primitives
                          1479	#966:  *  \return        SECM_VER_OK if signature verification successful
                          1480	#967:  *                 SECM_VER_ERROR if error occured during verification
                          1481	#968:  *                 SECM_VER_CRC if CRC verification failed
                          1482	#969:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          1483	#970:  *********************************************************************************************************************/
                          1484		.align	1
                          1485		.align	1
                          1486	..gh.f.p.4.a.1.r.0.e.5:
                          1487		.type	..gh.f.p.4.a.1.r.0.e.5,@object
                          1488		.size	..gh.f.p.4.a.1.r.0.e.5,0
                          1489		.global	SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          1490	SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
                          1491	SecM_VerificationBase:
00000284 182106e0         1492		e_stwu	sp, -32(sp)
00000288 0080             1493		se_mflr	r0
0000028a d7f1             1494		se_stw	r31, 28(sp)
0000028c d901             1495		se_stw	r0, 36(sp)
0000028e 013f             1496		se_mr	r31, r3
                          1497	#	    .bf

                                   Fri Apr 10 08:31:50 2020           Page 28
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1498	.LDW02:
                          1499	#971: static SecM_StatusType SecM_VerificationBase( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam,
                          1500	#972:    V_MEMRAM1 SecM_VerifyConfigListType V_MEMRAM2 V_MEMRAM3 * pCfgList )
                          1501	#973: {
                          1502	#974:    SecM_StatusType   result;
                          1503	#975: #if (defined( SEC_ENABLE_WORKSPACE_INTERNAL ) && defined( SEC_ENABLE_WORKSPACE_EXTERNAL )) || \
                          1504	#976:     defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH ) || \
                          1505	#977:     defined( SEC_ENABLE_CRC_TOTAL ) 
                          1506	#978:    V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyContext;
                          1507	#979: #endif /* (SEC_ENABLE_WORKSPACE_INTERNAL && SEC_ENABLE_WORKSPACE_EXTERNAL) || SEC_ENABLE_VERIFICATION_DATA_LENGTH || SEC_ENABLE_CRC_TOTAL || SEC_ENABLE_CRC_WRITTEN */
                          1508	#980: #if defined( SEC_ENABLE_CRC_TOTAL ) 
                          1509	#981:    SecM_ByteFastType index;
                          1510	#982:    SecM_ByteFastType cfgCount;
                          1511	#983: #endif /* SEC_ENABLE_CRC_TOTAL || SEC_ENABLE_CRC_WRITTEN */
                          1512	#984: #if defined( SEC_ENABLE_CRC_TOTAL )
                          1513	#985:    SecM_CRCParamType crcTotalParam;
                          1514	#986: #endif /* SEC_ENABLE_CRC_TOTAL */
                          1515	#988: #if (defined( SEC_ENABLE_WORKSPACE_INTERNAL ) && defined( SEC_ENABLE_WORKSPACE_EXTERNAL )) || \
                          1516	#989:     defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH ) || \
                          1517	#990:     defined( SEC_ENABLE_CRC_TOTAL ) 
                          1518	#991:    pVerifyContext = pCfgList->pPrimitives.pContext;
00000290 4800             1519		se_li	r0, 0
                          1520	#992: #endif /* (SEC_ENABLE_WORKSPACE_INTERNAL && SEC_ENABLE_WORKSPACE_EXTERNAL) || SEC_ENABLE_VERIFICATION_DATA_LENGTH || SEC_ENABLE_CRC_TOTAL || SEC_ENABLE_CRC_WRITTEN */
                          1521	#994: #if defined( SEC_ENABLE_WORKSPACE_INTERNAL ) && \
                          1522	#995:     defined( SEC_ENABLE_WORKSPACE_EXTERNAL )
                          1523	#996:    /* Use default workspace, data length not relevant */
                          1524	#997:    pVerifyContext[0].currentHash.sigResultBuffer   = (SecM_ResultBufferType)SEC_DEFAULT_WORKSPACE; /* PRQA S 0306 */ /* MD_SecVerification_0306 */
                          1525	#998:    pVerifyContext[0].currentHash.length            = SEC_DEFAULT_WORKSPACE_SIZE;
                          1526	#999: #endif /* SEC_ENABLE_WORKSPACE_INTERNAL && SEC_ENABLE_WORKSPACE_EXTERNAL */
                          1527	#1000: #if defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH )
                          1528	#1001:    pVerifyContext[0].currentDataLength             = SEC_DATA_LENGTH_NULL;
                          1529	#1002: #endif /* SEC_ENABLE_VERIFICATION_DATA_LENGTH */
                          1530	#1004: #if defined( SEC_ENABLE_CRC_TOTAL ) 
                          1531	#1005:    cfgCount       = pCfgList->count;
                          1532	#1007:    /* Start with entry after primary primitive */
                          1533	#1008:    index          = 1u;
                          1534	#1009: #endif /* SEC_ENABLE_CRC_TOTAL || SEC_ENABLE_CRC_WRITTEN */
                          1535	#1011: #if defined( SEC_ENABLE_CRC_TOTAL )
                          1536	#1012:    /* Initialize CRC total value to prevent compiler confusion */
                          1537	#1013:    crcTotalParam.currentCRC = crcZeroValue;
00000292 d201             1538		se_stw	r0, 8(sp)
00000294 c204             1539		se_lwz	r0, 8(r4)
                          1540	#1015:    /* Entry for CRC total included in configuration list? */
                          1541	#1016:    if (index < cfgCount)
00000296 c174             1542		se_lwz	r7, 4(r4)
00000298 2200             1543		se_cmpli	r0, 1
0000029a e100             1544		se_ble	.L904
                          1545	#1017:    {
                          1546	#1018:       /* Use local variable as workspace */
                          1547	#1019:       pVerifyContext[index].currentHash.sigResultBuffer  = (SecM_ResultBufferType)&crcTotalParam;  /* PRQA S 0306 */ /* MD_SecVerification_0306 */
                          1548	#line1019
                          1549	..lin.c0a49fba..ba4852aa.0_36::
                          1550	.LDWlin36:
0000029c 18018008         1551		e_addi	r0, sp, 8
000002a0 d807             1552		se_stw	r0, 32(r7)
                          1553	#1020:       pVerifyContext[index].currentHash.length           = sizeof(SecM_CRCParamType);

                                   Fri Apr 10 08:31:50 2020           Page 29
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000002a2 4940             1554		se_li	r0, 20
000002a4 d907             1555		se_stw	r0, 36(r7)
                          1556	.L904:
                          1557	#1021: # if defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH )
                          1558	#1022:       pVerifyContext[index].currentDataLength            = SEC_DATA_LENGTH_NULL;
                          1559	#1023: # endif /* SEC_ENABLE_VERIFICATION_DATA_LENGTH */
                          1560	#1025:    }
                          1561	#1026: #endif /* SEC_ENABLE_CRC_TOTAL */
                          1562	#1029:    /* Perform verification with configuration list */
                          1563	#1030:    result = SecM_VerificationWrapper(pVerifyParam, pCfgList);
000002a6 78000001         1564		se_bl	SecM_VerificationWrapper
                          1565	#1032: #if defined( SEC_ENABLE_CRC_TOTAL )
                          1566	#1033:    /* Store calculated CRC total */
                          1567	#1034:    pVerifyParam->crcTotal = crcTotalParam.currentCRC;
                          1568	#line1034
                          1569	..lin.c0a49fba..ba4852aa.0_37::
                          1570	.LDWlin37:
000002aa c201             1571		se_lwz	r0, 8(sp)
000002ac d50f             1572		se_stw	r0, 20(r31)
                          1573	#1035: #else
                          1574	#1036:    pVerifyParam->crcTotal = crcZeroValue;
                          1575	#1037: #endif /* SEC_ENABLE_CRC_TOTAL */
                          1576	#1039:    return result;
                          1577	#	    .ef
                          1578	.LDW12:
000002ae c901             1579		se_lwz	r0, 36(sp)
000002b0 c7f1             1580		se_lwz	r31, 28(sp)
000002b2 21f1             1581		se_addi	sp, 32
000002b4 0090             1582		se_mtlr	r0
000002b6 0004             1583		se_blr
                          1584	__ghs_eofn_SecM_VerificationBase:
                          1585		.type	SecM_VerificationBase,@function
                          1586		.size	SecM_VerificationBase,$-SecM_VerificationBase
                          1587		.type	SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@function
                          1588		.size	SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,$-SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          1589		.align	1
                          1590	
                          1591	#function:			SecM_VerificationBase
                          1592	#stack frame size:		32
                          1593	#link area offset:		0
                          1594	#local storage area offset:	8
                          1595	#gpr save area offset:		28
                          1596	#
                          1597	#pVerifyContext	r7	local
                          1598	#crcTotalParam	8(sp)	local
                          1599	
                          1600	#pVerifyParam	r31	param
                          1601	#pCfgList	r4	param
                          1602	
                          1603		.data
                          1604		.section ".vletext", "vax"
                          1605		.vle
                          1606		.vle
                          1607	
                          1608	#1040: }
                          1609	

                                   Fri Apr 10 08:31:50 2020           Page 30
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1610	#1042: /**********************************************************************************************************************
                          1611	#1043:  *  GLOBAL FUNCTIONS
                          1612	#1044:  *********************************************************************************************************************/
                          1613	#1046: #if defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH )
                          1614	#1047: /**********************************************************************************************************************
                          1615	#1048:  *  SecM_UpdateDataLength
                          1616	#1049:  *********************************************************************************************************************/
                          1617	#1050: /*! \brief         Update data length of signature parameter
                          1618	#1051:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                          1619	#1052:  *********************************************************************************************************************/
                          1620	#1053: void SecM_UpdateDataLength( V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam )
                          1621	#1054: {
                          1622	#1055:    SecM_SizeType dataLength;
                          1623	#1057:    /* Disable update if not available (NULL pointer) */
                          1624	#1058:    if (SEC_DATA_LENGTH_NULL != pVerifyParam->currentDataLength)
                          1625	#1059:    {
                          1626	#1060:       /* Load current value into local variable */
                          1627	#1061:       dataLength = *(pVerifyParam->currentDataLength);
                          1628	#1063:       switch (pVerifyParam->sigState)
                          1629	#1064:       {
                          1630	#1065:          case SEC_HASH_INIT:
                          1631	#1066:          {
                          1632	#1067:             /* Reset processed data length */
                          1633	#1068:             dataLength = 0u;
                          1634	#1070:             break;
                          1635	#1071:          }
                          1636	#1072:          case SEC_HASH_COMPUTE:
                          1637	#1073:          {
                          1638	#1074:             /* Update processed data length (temporarily holding byte count) */
                          1639	#1075:             dataLength += pVerifyParam->sigByteCount;
                          1640	#1077:             break;
                          1641	#1078:          }
                          1642	#1079:          case SEC_HASH_FINALIZE:
                          1643	#1080:          {
                          1644	#1081:             /* Data length expected in multiples of 64 byte */
                          1645	#1082:             dataLength >>= 6u;
                          1646	#1084:             break;
                          1647	#1085:          }
                          1648	#1086:          case SEC_SIG_VERIFY:
                          1649	#1087:          default:
                          1650	#1088:          {
                          1651	#1089:             break;
                          1652	#1090:          }
                          1653	#1091:       }
                          1654	#1093:       /* Store possibly modified value */
                          1655	#1094:       *(pVerifyParam->currentDataLength) = dataLength;
                          1656	#1095:    }
                          1657	#1096: }
                          1658	#1097: #endif /* SEC_ENABLE_VERIFICATION_DATA_LENGTH */
                          1659	#1099: #if defined( SEC_ENABLE_VERIFY_CHECKSUM_CRC )
                          1660	#1100: /**********************************************************************************************************************
                          1661	#1101:  *  SecM_VerifyChecksumCrc
                          1662	#1102:  *********************************************************************************************************************/
                          1663	#1103: /*! \brief         Calculate and verify CRC checksum
                          1664	#1104:  *  \details       See SecM_VerifySignature for details
                          1665	#1105:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification

                                   Fri Apr 10 08:31:50 2020           Page 31
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1666	#1106:  *                   Member currentHash must contain reference to SecM_CRCParamType or aligned buffer of equal size
                          1667	#1107:  *                   used as workspace
                          1668	#1108:  *  \return        SECM_VER_OK if verification operation successful
                          1669	#1109:  *                 SECM_VER_ERROR if error occured during verification
                          1670	#1110:  *                 SECM_VER_CRC if CRC verification failed
                          1671	#1111:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          1672	#1112:  *********************************************************************************************************************/
                          1673		.align	1
                          1674		.align	1
                          1675	..gh.f.p.3.a.1.r.0.e.6:
                          1676		.type	..gh.f.p.3.a.1.r.0.e.6,@object
                          1677		.size	..gh.f.p.3.a.1.r.0.e.6,0
                          1678		.global	SecM_VerifyChecksumCrc
                          1679	SecM_VerifyChecksumCrc:
000002b8 0080             1680		se_mflr	r0
000002ba d101             1681		se_stw	r0, 4(sp)
000002bc 182106f8         1682		e_stwu	sp, -8(sp)
000002c0 0137             1683		se_mr	r7, r3
                          1684	#	    .bf
                          1685	.LDW22:
                          1686	#1113: SecM_StatusType SecM_VerifyChecksumCrc( V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam ) /* PRQA S 3673 */ /* MD_SecVerification_3673_1 */
                          1687	#1114: {
                          1688	#1115:    SecM_StatusType result;
                          1689	#1116:    V_MEMRAM1 SecM_CRCParamType V_MEMRAM2 V_MEMRAM3 * pCrcParam;
                          1690	#1117:    SecM_ByteType  crcAction;
                          1691	#1119:    result      = SECM_VER_ERROR;
                          1692	#1120:    crcAction   = SEC_CRC_NONE;
                          1693	#1122:    /* Member currentHash must contain reference to SecM_CRCParamType used as workspace
                          1694	#1123:       Check length requirements */
                          1695	#1124: # if defined( SEC_ENABLE_WORKSPACE_EXTERNAL )
                          1696	#1125:    if (pVerifyParam->currentHash.length >= sizeof(SecM_CRCParamType))
                          1697	#1126: # endif /* SEC_ENABLE_WORKSPACE_EXTERNAL */
                          1698	#1127:    {
                          1699	#1128:       /* Store workspace pointer for easier access */
                          1700	#1129:       pCrcParam = (V_MEMRAM1 SecM_CRCParamType V_MEMRAM2 V_MEMRAM3 *)(pVerifyParam->currentHash.sigResultBuffer); /* PRQA S 0306 */ /* MD_SecVerification_0306 */
000002c2 8c07             1701		se_lbz	r0, 12(r7)
                          1702	#1131: # if defined( SEC_ENABLE_VERIFICATION_DATA_LENGTH )
                          1703	#1132:       /* Update member currentDataLength of verification parameter */
                          1704	#1133:       SecM_UpdateDataLength(pVerifyParam);
                          1705	#1134: # endif /* SEC_ENABLE_VERIFICATION_DATA_LENGTH */
                          1706	#1136:       /* Map signature operation to matching CRC counterpart */
                          1707	#1137:       switch (pVerifyParam->sigState)
000002c4 4813             1708		se_li	r3, 1
000002c6 c067             1709		se_lwz	r6, 0(r7)
000002c8 2200             1710		se_cmpli	r0, 1
000002ca e400             1711		se_blt	.L974
000002cc 2230             1712		se_cmpli	r0, 4
000002ce e400             1713		se_blt	.L977
000002d0 e600             1714		se_beq	.L980
                          1715	.L974:
                          1716	#	    .ef
                          1717	.LDW32:
                          1718	#line1114
                          1719	..lin.c0a49fba..1c7b5ac.0_38::
                          1720	.LDWlin38:
000002d2 c301             1721		se_lwz	r0, 12(sp)

                                   Fri Apr 10 08:31:50 2020           Page 32
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000002d4 2071             1722		se_addi	sp, 8
000002d6 0090             1723		se_mtlr	r0
000002d8 0004             1724		se_blr
                          1725	.L977:
                          1726	#1138:       {
                          1727	#1139:          case SEC_HASH_INIT:
                          1728	#1140:          {
                          1729	#1141:             /* Initialize CRC */
                          1730	#1142:             crcAction = SEC_CRC_INIT;
000002da 1ca0ffff         1731		e_add16i	r5, r0, %lo(.L1111-1)
000002de 70059000         1732		e_add2is	r5, %hiadj(.L1111-1)
000002e2 8005             1733		se_lbz	r0, 0(r5)
000002e4 e800             1734		se_b	.L992
                          1735	.L980:
                          1736	#1145:          }
                          1737	#1146:          case SEC_HASH_COMPUTE:
                          1738	#1147:          {
                          1739	#1148:             /* Update CRC using data passed in source buffer */
                          1740	#1149:             crcAction = SEC_CRC_COMPUTE;
                          1741	#1151:             break;
                          1742	#1152:          }
                          1743	#1153:          case SEC_HASH_FINALIZE:
                          1744	#1154:          {
                          1745	#1155:             /* Finalize CRC */
                          1746	#1156:             crcAction = SEC_CRC_FINALIZE;
                          1747	#1158:             break;
                          1748	#1159:          }
                          1749	#1160:          case SEC_SIG_VERIFY:
                          1750	#1161:          {
                          1751	#1162:             /* Passed data has to be large enough to hold CRC value */
                          1752	#1163:             if (pVerifyParam->sigByteCount >= SEC_SIZE_CHECKSUM_CRC)
                          1753	#line1163
                          1754	..lin.c0a49fba..1c7b5ac.0_39::
                          1755	.LDWlin39:
000002e6 aa07             1756		se_lhz	r0, 20(r7)
000002e8 2230             1757		se_cmpli	r0, 4
000002ea e400             1758		se_blt	.L974
                          1759	#1164:             {
                          1760	#1165:                /* Compare given CRC against calculated one */
                          1761	#1166:                crcAction = SEC_CRC_VERIFY;
                          1762	#line1166
                          1763	..lin.c0a49fba..1c7b5ac.0_40::
                          1764	.LDWlin40:
000002ec 4840             1765		se_li	r0, 4
                          1766	.L992:
                          1767	#1167:             }
                          1768	#1169:             break;
                          1769	#1170:          }
                          1770	#1171:          default:
                          1771	#1172:          {
                          1772	#1173:             break;
                          1773	#1174:          }
                          1774	#1175:       }
                          1775	#1177:       if (SEC_CRC_NONE != crcAction)
                          1776	#1178:       {
                          1777	#1179:          /* Copy given parameters to CRC parameter */

                                   Fri Apr 10 08:31:50 2020           Page 33
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1778	#1180:          pCrcParam->crcByteCount    = pVerifyParam->sigByteCount;
000002ee aa57             1779		se_lhz	r5, 20(r7)
000002f0 b656             1780		se_sth	r5, 12(r6)
                          1781	#1181:          pCrcParam->crcSourceBuffer = pVerifyParam->sigSourceBuffer;
000002f2 c457             1782		se_lwz	r5, 16(r7)
000002f4 c677             1783		se_lwz	r7, 24(r7)
                          1784	#1182:          pCrcParam->wdTriggerFct    = pVerifyParam->wdTriggerFct;
000002f6 9406             1785		se_stb	r0, 4(r6)
000002f8 d256             1786		se_stw	r5, 8(r6)
                          1787	#1183:          pCrcParam->crcState        = crcAction;
000002fa d476             1788		se_stw	r7, 16(r6)
                          1789	#1185:          result = SecM_ComputeCRC(pCrcParam);
000002fc 0163             1790		se_mr	r3, r6
000002fe 78000001         1791		e_bl	SecM_ComputeCRC
                          1792	#1186:       }
                          1793	#1187:    }
                          1794	#1189:    return result;
00000302 e800             1795		se_b	.L974
                          1796	..lin.c0a49fba..1c7b5ac.0_41::
                          1797	.LDWlin41:
                          1798		.global	__ghs_eofn_SecM_VerifyChecksumCrc
                          1799	__ghs_eofn_SecM_VerifyChecksumCrc:
                          1800		.type	SecM_VerifyChecksumCrc,@function
                          1801		.size	SecM_VerifyChecksumCrc,$-SecM_VerifyChecksumCrc
                          1802		.align	1
                          1803	
                          1804	#function:			SecM_VerifyChecksumCrc
                          1805	#stack frame size:		8
                          1806	#link area offset:		0
                          1807	#local storage area offset:	8
                          1808	#
                          1809	#result	r3	local
                          1810	#pCrcParam	r6	local
                          1811	#crcAction	r0	local
                          1812	
                          1813	#pVerifyParam	r7	param
                          1814	
                          1815		.section ".rodata","a"
00000000 0102             1816	.L1111:	.byte	1,2
00000002 03               1817		.byte	3
                          1818		.type	.L1111,@object
                          1819		.size	.L1111,3
                          1820		.data
                          1821		.section ".vletext", "vax"
                          1822		.vle
                          1823		.vle
                          1824	
                          1825	#1190: }
                          1826	
                          1827	#1191: #endif /* SEC_ENABLE_VERIFY_CHECKSUM_CRC */
                          1828	#1193: #if defined( SEC_ENABLE_SECURITY_CLASS_DDD )
                          1829	#1194: /**********************************************************************************************************************
                          1830	#1195:  *  SecM_VerifyClassDDD
                          1831	#1196:  *********************************************************************************************************************/
                          1832	#1197: /*! \brief         Calculate and verify checksum or hash using primitive configured for security class DDD
                          1833	#1198:  *  \details       See SecM_VerifySignature for details

                                   Fri Apr 10 08:31:50 2020           Page 34
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1834	#1199:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                          1835	#1200:  *                   Member currentHash must (SEC_DISABLE_DEFAULT_WORKSPACE) or may (SEC_ENABLE_WORKSPACE_INTERNAL)
                          1836	#1201:  *                   contain reference to buffer used as workspace
                          1837	#1202:  *  \return        SECM_VER_OK if verification operation successful
                          1838	#1203:  *                 SECM_VER_ERROR if error occured during verification
                          1839	#1204:  *                 SECM_VER_CRC if CRC verification failed
                          1840	#1205:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          1841	#1206:  *********************************************************************************************************************/
                          1842		.align	1
                          1843		.align	1
                          1844		.align	1
                          1845	..gh.f.p.3.a.1.r.0.e.7:
                          1846		.type	..gh.f.p.3.a.1.r.0.e.7,@object
                          1847		.size	..gh.f.p.3.a.1.r.0.e.7,0
                          1848		.global	SecM_VerifyClassDDD
                          1849	SecM_VerifyClassDDD:
                          1850	#	    .bf
                          1851	.LDW42:
                          1852	#1207: SecM_StatusType SecM_VerifyClassDDD( V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam )
                          1853	#1208: {
                          1854	#1209: # if defined( SEC_ENABLE_WORKSPACE_INTERNAL )
                          1855	#1210:    /* Perform initializations */
                          1856	#1211:    if (SEC_HASH_INIT == pVerifyParam->sigState)
00000304 8c03             1857		se_lbz	r0, 12(r3)
00000306 2a10             1858		se_cmpi	r0, 1
00000308 e200             1859		se_bne	.L1150
                          1860	#1212:    {
                          1861	#1213: #  if defined( SEC_ENABLE_WORKSPACE_EXTERNAL )
                          1862	#1214:       /* External workspace given? */
                          1863	#1215:       if (SEC_DEFAULT_WORKSPACE_SIZE == pVerifyParam->currentHash.length)
                          1864	#1216: #  endif /* SEC_ENABLE_WORKSPACE_EXTERNAL */
                          1865	#1217:       {
                          1866	#1218:          /* Set internal default workspace */
                          1867	#1219:          pVerifyParam->currentHash.sigResultBuffer = (SecM_ResultBufferType)SEC_VERIFY_CLASS_DDD_WORKSPACE; /* PRQA S 0306 */ /* MD_SecVerification_0306 */
                          1868	#line1219
                          1869	..lin.c0a49fba..22ce3f43.0_42::
                          1870	.LDWlin42:
0000030a 7000e000         1871		e_lis	r0, %hiadj(crcParam)
0000030e 1c000000         1872		e_add16i	r0, r0, %lo(crcParam)
00000312 d003             1873		se_stw	r0, 0(r3)
                          1874	#1220:          pVerifyParam->currentHash.length          = SEC_VERIFY_CLASS_DDD_WORKSPACE_SIZE;
00000314 4940             1875		se_li	r0, 20
00000316 d103             1876		se_stw	r0, 4(r3)
                          1877	.L1150:
                          1878	#1221:       }
                          1879	#1222:    }
                          1880	#1223: # endif /* SEC_ENABLE_WORKSPACE_INTERNAL */
                          1881	#1225:    return SEC_VERIFY_CLASS_DDD_FUNCTION(pVerifyParam);
00000318 e800             1882		se_b	SecM_VerifyChecksumCrc
                          1883	#	    .ef
                          1884	.LDW52:
                          1885	..lin.c0a49fba..22ce3f43.0_43::
                          1886	.LDWlin43:
                          1887		.global	__ghs_eofn_SecM_VerifyClassDDD
                          1888	__ghs_eofn_SecM_VerifyClassDDD:
                          1889		.type	SecM_VerifyClassDDD,@function

                                   Fri Apr 10 08:31:50 2020           Page 35
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          1890		.size	SecM_VerifyClassDDD,$-SecM_VerifyClassDDD
                          1891		.align	1
                          1892	
                          1893	#function:			SecM_VerifyClassDDD
                          1894	#stack frame size:		0
                          1895	#
                          1896	
                          1897	#pVerifyParam	r3	param
                          1898	
                          1899		.section ".bss","awb"
                          1900		.align	2
                          1901		.global	crcParam..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          1902	crcParam..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
00000000                  1903	crcParam:	.space	20
                          1904		.type	crcParam..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@object
                          1905		.size	crcParam..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,20
                          1906		.type	crcParam,@object
                          1907		.size	crcParam,20
                          1908		.data
                          1909		.section ".vletext", "vax"
                          1910		.vle
                          1911		.vle
                          1912	
                          1913	#1226: }
                          1914	
                          1915	#1227: #endif /* SEC_ENABLE_SECURITY_CLASS_DDD */
                          1916	#1231: /**********************************************************************************************************************
                          1917	#1232:  *  SecM_VerifySignature
                          1918	#1233:  *********************************************************************************************************************/
                          1919	#1234: /*! \brief         Calculate and verify checksum or signature using primitive of configured security class
                          1920	#1235:  *  \details       Perform one of the following operations, defined by pVerifyParam->sigState:
                          1921	#1236:  *                 - Initialization (kHashInit)
                          1922	#1237:  *                 - Update checksum (kHashCompute)
                          1923	#1238:  *                 - Finalize checksum (kHashFinalize)
                          1924	#1239:  *                 - Verify signature/checksum (kSigVerify)
                          1925	#1240:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                          1926	#1241:  *                   Member currentHash must (SEC_DISABLE_DEFAULT_WORKSPACE) or may (SEC_ENABLE_WORKSPACE_INTERNAL)
                          1927	#1242:  *                   contain reference to buffer used as workspace
                          1928	#1243:  *  \return        SECM_VER_OK if verification operation successful
                          1929	#1244:  *                 SECM_VER_ERROR if error occured during verification
                          1930	#1245:  *                 SECM_VER_CRC if CRC verification failed
                          1931	#1246:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          1932	#1247:  *********************************************************************************************************************/
                          1933		.align	1
                          1934		.align	1
                          1935	..gh.f.p.3.a.1.r.0.e.8:
                          1936		.type	..gh.f.p.3.a.1.r.0.e.8,@object
                          1937		.size	..gh.f.p.3.a.1.r.0.e.8,0
                          1938		.global	SecM_VerifySignature
                          1939	SecM_VerifySignature:
                          1940	#	    .bf
                          1941	.LDW62:
                          1942	#1248: SecM_StatusType SecM_VerifySignature( V_MEMRAM1 SecM_SignatureParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam )
                          1943	#1249: {
                          1944	#1250:    /* Perform verification operation */
                          1945	#1251:    return SEC_VERIFY_FUNCTION(pVerifyParam);

                                   Fri Apr 10 08:31:50 2020           Page 36
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000031a e800             1946		se_b	SecM_VerifyClassDDD
                          1947	#	    .ef
                          1948	.LDW72:
                          1949	..lin.c0a49fba..c0a0ca53.0_44::
                          1950	.LDWlin44:
                          1951		.global	__ghs_eofn_SecM_VerifySignature
                          1952	__ghs_eofn_SecM_VerifySignature:
                          1953		.type	SecM_VerifySignature,@function
                          1954		.size	SecM_VerifySignature,$-SecM_VerifySignature
                          1955		.align	1
                          1956	
                          1957	#function:			SecM_VerifySignature
                          1958	#stack frame size:		0
                          1959	#
                          1960	
                          1961	#pVerifyParam	none	param
                          1962	
                          1963		.data
                          1964		.section ".vletext", "vax"
                          1965		.vle
                          1966		.vle
                          1967	
                          1968	#1252: }
                          1969	
                          1970	#1254: /**********************************************************************************************************************
                          1971	#1255:  *  SecM_InitVerification
                          1972	#1256:  *********************************************************************************************************************/
                          1973	#1257: /*! \brief         Intializes the verification
                          1974	#1258:  *  \param[in]     init Dummy pointer (currently not used)
                          1975	#1259:  *  \return        SECM_OK if initalization successful
                          1976	#1260:  *                 SECM_NOT_OK if error occured during initalization
                          1977	#1261:  *********************************************************************************************************************/
                          1978		.align	1
                          1979		.align	1
                          1980	..gh.f.p.3.a.1.r.0.e.9:
                          1981		.type	..gh.f.p.3.a.1.r.0.e.9,@object
                          1982		.size	..gh.f.p.3.a.1.r.0.e.9,0
                          1983		.global	SecM_InitVerification
                          1984	SecM_InitVerification:
                          1985	#	    .bf
                          1986	.LDW82:
                          1987	#1262: SecM_StatusType SecM_InitVerification( SecM_VerifyInitType init )
                          1988	#1263: {
                          1989	#1264: # if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          1990	#1265:    /* Avoid compiler warnings */
                          1991	#1266:    (void)init; /* PRQA S 3112 */ /* MD_SecVerification_3112 */
                          1992	#1267: # endif /* V_ENABLE_USE_DUMMY_STATEMENT */
                          1993	#1269:    return SECM_OK;
0000031c 4803             1994		se_li	r3, 0
                          1995	#	    .ef
                          1996	.LDW92:
0000031e 0004             1997		se_blr
                          1998		.global	__ghs_eofn_SecM_InitVerification
                          1999	__ghs_eofn_SecM_InitVerification:
                          2000		.type	SecM_InitVerification,@function
                          2001		.size	SecM_InitVerification,$-SecM_InitVerification

                                   Fri Apr 10 08:31:50 2020           Page 37
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2002		.align	1
                          2003	
                          2004	#function:			SecM_InitVerification
                          2005	#stack frame size:		0
                          2006	#
                          2007	
                          2008	#init	none	param
                          2009	
                          2010		.data
                          2011		.section ".vletext", "vax"
                          2012		.vle
                          2013		.vle
                          2014	
                          2015	#1270: }
                          2016	
                          2017	#1272: /**********************************************************************************************************************
                          2018	#1273:  *  SecM_DeinitVerification
                          2019	#1274:  *********************************************************************************************************************/
                          2020	#1275: /*! \brief         Deintializes the verification
                          2021	#1276:  *  \param[in]     deinit Dummy pointer (currently not used)
                          2022	#1277:  *  \return        SECM_OK if deinitalization successful
                          2023	#1278:  *                 SECM_NOT_OK if error occured during deinitalization
                          2024	#1279:  *********************************************************************************************************************/
                          2025		.align	1
                          2026		.align	1
                          2027	..gh.f.p.3.a.1.r.0.e.10:
                          2028		.type	..gh.f.p.3.a.1.r.0.e.10,@object
                          2029		.size	..gh.f.p.3.a.1.r.0.e.10,0
                          2030		.global	SecM_DeinitVerification
                          2031	SecM_DeinitVerification:
                          2032	#	    .bf
                          2033	.LDW03:
                          2034	#1280: SecM_StatusType SecM_DeinitVerification( SecM_VerifyDeinitType deinit )
                          2035	#1281: {
                          2036	#1282: # if defined( V_ENABLE_USE_DUMMY_STATEMENT )
                          2037	#1283:    /* Avoid compiler warnings */
                          2038	#1284:    (void)deinit; /* PRQA S 3112 */ /* MD_SecVerification_3112 */
                          2039	#1285: # endif /* V_ENABLE_USE_DUMMY_STATEMENT */
                          2040	#1287:    return SECM_OK;
00000320 4803             2041		se_li	r3, 0
                          2042	#	    .ef
                          2043	.LDW13:
00000322 0004             2044		se_blr
                          2045		.global	__ghs_eofn_SecM_DeinitVerification
                          2046	__ghs_eofn_SecM_DeinitVerification:
                          2047		.type	SecM_DeinitVerification,@function
                          2048		.size	SecM_DeinitVerification,$-SecM_DeinitVerification
                          2049		.align	1
                          2050	
                          2051	#function:			SecM_DeinitVerification
                          2052	#stack frame size:		0
                          2053	#
                          2054	
                          2055	#deinit	none	param
                          2056	
                          2057		.data

                                   Fri Apr 10 08:31:50 2020           Page 38
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2058		.section ".vletext", "vax"
                          2059		.vle
                          2060		.vle
                          2061	
                          2062	#1288: }
                          2063	
                          2064	#1291: #if defined( SEC_ENABLE_SECURITY_CLASS_DDD )
                          2065	#1292: /**********************************************************************************************************************
                          2066	#1293:  *  SecM_VerificationClassDDD
                          2067	#1294:  *********************************************************************************************************************/
                          2068	#1295: /*! \brief         Calculate and verify checksum or signature using primitive configured for security class DDD
                          2069	#1296:  *  \details       See SecM_Verification
                          2070	#1297:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                          2071	#1298:  *  \return        SECM_VER_OK if signature verification successful
                          2072	#1299:  *                 SECM_VER_ERROR if error occured during verification
                          2073	#1300:  *                 SECM_VER_CRC if CRC verification failed
                          2074	#1301:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          2075	#1302:  *********************************************************************************************************************/
                          2076		.align	1
                          2077		.align	1
                          2078		.align	1
                          2079	..gh.f.p.3.a.1.r.0.e.11:
                          2080		.type	..gh.f.p.3.a.1.r.0.e.11,@object
                          2081		.size	..gh.f.p.3.a.1.r.0.e.11,0
                          2082		.global	SecM_VerificationClassDDD
                          2083	SecM_VerificationClassDDD:
00000324 0080             2084		se_mflr	r0
00000326 d101             2085		se_stw	r0, 4(sp)
00000328 182106a8         2086		e_stwu	sp, -88(sp)
                          2087	#	    .bf
                          2088	.LDW23:
                          2089	#1303: SecM_StatusType SecM_VerificationClassDDD( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam )
                          2090	#1304: {
                          2091	#1305:    SecM_SignatureParamType    verifyContext[SEC_VER_ARRAY_SIZE(verifyConfigClassDDD)];
                          2092	#1306:    SecM_VerifyConfigListType  config;
                          2093	#1308:    config.pPrimitives.pOperation = verifyConfigClassDDD;
0000032c 7000e000         2094		e_lis	r0, %hiadj(verifyConfigClassDDD)
00000330 1c000000         2095		e_add16i	r0, r0, %lo(verifyConfigClassDDD)
00000334 d201             2096		se_stw	r0, 8(sp)
                          2097	#1309:    config.pPrimitives.pContext   = verifyContext;
00000336 18018014         2098		e_addi	r0, sp, 20
0000033a d301             2099		se_stw	r0, 12(sp)
                          2100	#1310:    config.count                  = SEC_VER_ARRAY_SIZE(verifyConfigClassDDD);
0000033c 4820             2101		se_li	r0, 2
0000033e d401             2102		se_stw	r0, 16(sp)
                          2103	#1312:    /* Include CRC total and additional vendor checksum, leave out CRC written (already covered by base) */
                          2104	#1313:    return SecM_VerificationBase(pVerifyParam, &config);
00000340 18818008         2105		e_addi	r4, sp, 8
00000344 e900             2106		se_bl	SecM_VerificationBase
                          2107	#	    .ef
                          2108	.LDW33:
                          2109	#line1304
                          2110	..lin.c0a49fba..8868be71.0_45::
                          2111	.LDWlin45:
00000346 5001005c         2112		e_lwz	r0, 92(sp)
0000034a 18218058         2113		e_addi	sp, sp, 88

                                   Fri Apr 10 08:31:50 2020           Page 39
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000034e 0090             2114		se_mtlr	r0
00000350 0004             2115		se_blr
                          2116		.global	__ghs_eofn_SecM_VerificationClassDDD
                          2117	__ghs_eofn_SecM_VerificationClassDDD:
                          2118		.type	SecM_VerificationClassDDD,@function
                          2119		.size	SecM_VerificationClassDDD,$-SecM_VerificationClassDDD
                          2120		.align	1
                          2121	
                          2122	#function:			SecM_VerificationClassDDD
                          2123	#stack frame size:		88
                          2124	#link area offset:		0
                          2125	#local storage area offset:	12
                          2126	#
                          2127	#verifyContext	20(sp)	local
                          2128	#config	8(sp)	local
                          2129	
                          2130	#pVerifyParam	none	param
                          2131	
                          2132		.section ".rodata","a"
00000003 00               2133		.space	1
                          2134		.align	2
                          2135		.global	verifyConfigClassDDD..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          2136	verifyConfigClassDDD..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.:
00000004 00000000         2137	verifyConfigClassDDD:	.long	SecM_VerifyClassDDD
00000008 0004             2138		.byte	0,4
0000000a 0000             2139		.space	2
0000000c 00000000         2140		.space	4
00000010 04               2141		.byte	4
00000011 000000           2142		.space	3
00000014 00000000         2143		.long	SecM_VerifyChecksumCrc
00000018 0004             2144		.byte	0,4
0000001a 0000             2145		.space	2
0000001c 00000000         2146		.space	4
00000020 02               2147		.byte	2
00000021 000000           2148		.space	3
                          2149		.type	verifyConfigClassDDD..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,@object
                          2150		.size	verifyConfigClassDDD..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.,32
                          2151		.type	verifyConfigClassDDD,@object
                          2152		.size	verifyConfigClassDDD,32
                          2153		.data
                          2154		.section ".vletext", "vax"
                          2155		.vle
                          2156		.vle
                          2157	
                          2158	#1314: }
                          2159	
                          2160	#1315: #endif /* SEC_ENABLE_SECURITY_CLASS_DDD */
                          2161	#1319: #if defined( SEC_ENABLE_SECURITY_CLASS_VENDOR )
                          2162	#1320: /**********************************************************************************************************************
                          2163	#1321:  *  SecM_VerificationClassVendor
                          2164	#1322:  *********************************************************************************************************************/
                          2165	#1323: /*! \brief         Calculate and verify checksum or signature using primitive configured for security class Vendor
                          2166	#1324:  *  \details       See SecM_Verification
                          2167	#1325:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification
                          2168	#1326:  *  \return        SECM_VER_OK if signature verification successful
                          2169	#1327:  *                 SECM_VER_ERROR if error occured during verification

                                   Fri Apr 10 08:31:50 2020           Page 40
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2170	#1328:  *                 SECM_VER_CRC if CRC verification failed
                          2171	#1329:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          2172	#1330:  *********************************************************************************************************************/
                          2173	#1331: SecM_StatusType SecM_VerificationClassVendor( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam )
                          2174	#1332: {
                          2175	#1333:    SecM_SignatureParamType    verifyContext[SEC_VER_ARRAY_SIZE(verifyConfigClassVendor)];
                          2176	#1334:    SecM_VerifyConfigListType  config;
                          2177	#1336:    config.pPrimitives.pOperation = verifyConfigClassVendor;
                          2178	#1337:    config.pPrimitives.pContext   = verifyContext;
                          2179	#1338:    config.count                  = SEC_VER_ARRAY_SIZE(verifyConfigClassVendor);
                          2180	#1340:    /* Include CRC total, leave out CRC written and additional vendor checksum (already covered by base) */
                          2181	#1341:    return SecM_VerificationBase(pVerifyParam, &config);
                          2182	#1342: }
                          2183	#1343: #endif /* SEC_ENABLE_SECURITY_CLASS_VENDOR */
                          2184	#1345: /**********************************************************************************************************************
                          2185	#1346:  *  SecM_Verification
                          2186	#1347:  *********************************************************************************************************************/
                          2187	#1348: /*! \brief         Calculate and verify checksum or signature using primitive of configured security class
                          2188	#1349:  *  \details       Calculates the checksum or signature ov all segments present in the verification parameter
                          2189	#1350:  *                 Function passed in readMemory is used to access memory.
                          2190	#1351:  *                 Afterwards the calculated value is used to verify the checksum/signature provided in verificationData
                          2191	#1352:  *                 If configured a CRC over the complete block, defined by blockStartAddress and blockLength, including
                          2192	#1353:  *                 all readable gaps between the actual segments is calculated too and returned in parameter
                          2193	#1354:  *  \param[in]     pVerifyParam Pointer to parameter structure for signature verification crcTotal.
                          2194	#1355:  *  \return        SECM_VER_OK if signature verification successful
                          2195	#1356:  *                 SECM_VER_ERROR if error occured during verification
                          2196	#1357:  *                 SECM_VER_CRC if CRC verification failed
                          2197	#1358:  *                 SECM_VER_SIG if MAC/Signature verification failed
                          2198	#1359:  *********************************************************************************************************************/
                          2199		.align	1
                          2200		.align	1
                          2201	..gh.f.p.3.a.1.r.0.e.12:
                          2202		.type	..gh.f.p.3.a.1.r.0.e.12,@object
                          2203		.size	..gh.f.p.3.a.1.r.0.e.12,0
                          2204		.global	SecM_Verification
                          2205	SecM_Verification:
                          2206	#	    .bf
                          2207	.LDW43:
                          2208	#1360: SecM_StatusType SecM_Verification( V_MEMRAM1 SecM_VerifyParamType V_MEMRAM2 V_MEMRAM3 * pVerifyParam )
                          2209	#1361: {
                          2210	#1362:    /* Perform verification using configured security class */
                          2211	#1363:    return SEC_VERIFICATION_FUNCTION(pVerifyParam);
00000352 e800             2212		se_b	SecM_VerificationClassDDD
                          2213	#	    .ef
                          2214	.LDW53:
                          2215	..lin.c0a49fba..9609e64f.0_46::
                          2216	.LDWlin46:
                          2217		.global	__ghs_eofn_SecM_Verification
                          2218	__ghs_eofn_SecM_Verification:
                          2219		.type	SecM_Verification,@function
                          2220		.size	SecM_Verification,$-SecM_Verification
                          2221		.align	1
                          2222	
                          2223	#function:			SecM_Verification
                          2224	#stack frame size:		0
                          2225	#

                                   Fri Apr 10 08:31:50 2020           Page 41
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2226	
                          2227	#pVerifyParam	none	param
                          2228	
                          2229		.data
                          2230		.section ".vletext", "vax"
                          2231		.vle
                          2232		.vle
                          2233	
                          2234	#1364: }
                          2235		.align	1
                          2236	#crcParam	crcParam	static
                          2237	#verifyConfigClassDDD	verifyConfigClassDDD	static
                          2238	
                          2239		.data
                          2240		.note ".PPC.EMB.apuinfo",""
00000000 00000008         2241		.long	0x00000008
00000004 00000004         2242		.long	4
00000008 00000002         2243		.long	0x00000002
                          2244		# "APUinfo\000"
0000000c 41505569         2245		.byte	65,80,85,105
00000010 6e666f00         2246		.byte	110,102,111,0
00000014 01040001         2247		.long	0x01040001
                          2248		.ghsnote version,20
                          2249		.ghsnote tools,3
                          2250		.ghsnote options,644
                          2251		.section ".vletext", "vax"
                          2252		.vle
                          2253		.vle
                          2254		.align	1
                          2255	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB065..0::
                          2256		.section	.debug_info
                          2257	.Ldw_begin:
00000000 00001660         2258		.long	.Ldw_end-.Ldw_begin-4
00000004 0002             2259		.byte	0,2
00000006 00000000         2260		.long	.Ldw_abbr_begin
0000000a 04               2261		.byte	4
                          2262		.section	.debug_abbrev
                          2263	.Ldw_abbr_begin:
                          2264		.section	.debug_info
0000000b 01               2265		.byte	1
0000000c 00000000         2266		.long	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB065..0
00000010 00000000         2267		.long	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB065..0
00000014 2e2e2f2e2e2f2e2e 2268		.strz	"../../../BSW/SecMod/Sec_Verification.c"
0000001c 2f4253572f536563
00000024 4d6f642f5365635f
0000002c 5665726966696361
00000034 74696f6e2e6300  
0000003b 433a5c566563746f 2269		.strz	"C:\\Vector\\CBD1800772_D00_Mpc57xx\\Demo\\DemoFbl\\Appl"
00000043 725c434244313830
0000004b 303737325f443030
00000053 5f4d706335377878
0000005b 5c44656d6f5c4465
00000063 6d6f46626c5c4170
0000006b 706c00          
0000006e 4748532043203230 2270		.strz	"GHS C 2017.5.4 [dual]"
00000076 31372e352e34205b
0000007e 6475616c5d00    
00000084 0001             2271		.byte	0,1
00000086 00000000         2272		.long	.Ldw_line_begin
0000008a 00000000         2273		.long	.Ldw_macinfo_begin
0000008e 00               2274		.byte	0
                          2275	
                          2276		.section	.debug_abbrev
00000000 01               2277		.byte	1
00000001 11               2278		.byte	17
00000002 01               2279		.byte	1
00000003 1101             2280		.byte	17,1
00000005 1201             2281		.byte	18,1

                                   Fri Apr 10 08:31:50 2020           Page 42
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000007 0308             2282		.byte	3,8
00000009 1b08             2283		.byte	27,8
0000000b 2508             2284		.byte	37,8
0000000d 1305             2285		.byte	19,5
0000000f 1006             2286		.byte	16,6
00000011 4306             2287		.byte	67,6
00000013 420b             2288		.byte	66,11
00000015 0000             2289		.byte	0,0
                          2290	
                          2291		.section	.debug_line
                          2292	.Ldw_line_begin:
00000000 000005c1         2293		.long	.Ldw_line_end-.Ldw_line_begin-4
00000004 0002             2294		.byte	0,2
00000006 000001a8         2295		.long	.Ldw_lpro_end-.Ldw_lpro_begin
                          2296	.Ldw_lpro_begin:
0000000a 01               2297		.byte	1
0000000b 00               2298		.byte	0
0000000c 00               2299		.byte	0
0000000d 04               2300		.byte	4
0000000e 0a               2301		.byte	10
0000000f 000101           2302		.byte	0,1,1
00000012 010100           2303		.byte	1,1,0
00000015 000001           2304		.byte	0,0,1
00000018 00               2305		.byte	0
00000019 2e2e2f2e2e2f2e2e 2306		.strz	"../../../BSW/SecMod/Sec_Verification.c"
00000021 2f4253572f536563
00000029 4d6f642f5365635f
00000031 5665726966696361
00000039 74696f6e2e6300  
00000040 000000           2307		.byte	0,0,0
00000043 2e2e2f2e2e2f2e2e 2308		.strz	"../../../BSW/SecMod/Sec.h"
0000004b 2f4253572f536563
00000053 4d6f642f5365632e
0000005b 6800            
0000005d 000000           2309		.byte	0,0,0
00000060 2e2e2f2e2e2f2e2e 2310		.strz	"../../../BSW/SecMod/Sec_Inc.h"
00000068 2f4253572f536563
00000070 4d6f642f5365635f
00000078 496e632e6800    
0000007e 000000           2311		.byte	0,0,0
00000081 67656e646174615c 2312		.strz	"gendata\\v_cfg.h"
00000089 765f6366672e6800
00000091 000000           2313		.byte	0,0,0
00000094 2e2e2f2e2e2f2e2e 2314		.strz	"../../../bsw/_common/v_def.h"
0000009c 2f6273772f5f636f
000000a4 6d6d6f6e2f765f64
000000ac 65662e6800      
000000b1 000000           2315		.byte	0,0,0
000000b4 67656e646174615c 2316		.strz	"gendata\\SecM_cfg.h"
000000bc 5365634d5f636667
000000c4 2e6800          
000000c7 000000           2317		.byte	0,0,0
000000ca 2e2e2f2e2e2f2e2e 2318		.strz	"../../../BSW/SecMod/Sec_Types.h"
000000d2 2f4253572f536563
000000da 4d6f642f5365635f
000000e2 54797065732e6800
000000ea 000000           2319		.byte	0,0,0
000000ed 67656e646174615c 2320		.strz	"gendata\\SecMPar.h"
000000f5 5365634d5061722e
000000fd 6800            
000000ff 000000           2321		.byte	0,0,0
00000102 2e2e2f2e2e2f2e2e 2322		.strz	"../../../bsw/secmod/SecM_inc.h"
0000010a 2f6273772f736563
00000112 6d6f642f5365634d
0000011a 5f696e632e6800  
00000121 000000           2323		.byte	0,0,0
00000124 2e2e2f2e2e2f2e2e 2324		.strz	"../../../BSW/SecMod/Sec_Crc.h"
0000012c 2f4253572f536563
00000134 4d6f642f5365635f
0000013c 4372632e6800    
00000142 000000           2325		.byte	0,0,0
00000145 2e2e2f2e2e2f2e2e 2326		.strz	"../../../BSW/SecMod/Sec_SeedKey.h"
0000014d 2f4253572f536563
00000155 4d6f642f5365635f
0000015d 536565644b65792e
00000165 6800            
00000167 000000           2327		.byte	0,0,0
0000016a 696e636c7564655c 2328		.strz	"include\\Sec_SeedKey_Cfg.h"
00000172 5365635f53656564
0000017a 4b65795f4366672e
00000182 6800            
00000184 000000           2329		.byte	0,0,0
00000187 2e2e2f2e2e2f2e2e 2330		.strz	"../../../BSW/SecMod/Sec_Verification.h"
0000018f 2f4253572f536563
00000197 4d6f642f5365635f
0000019f 5665726966696361
000001a7 74696f6e2e6800  
000001ae 000000           2331		.byte	0,0,0
000001b1 00               2332		.byte	0
                          2333	.Ldw_lpro_end:
                          2334		.section	.debug_macinfo
                          2335	.Ldw_macinfo_begin:
                          2336		.section	.debug_frame
                          2337	.LDW_5c4a068:

                                   Fri Apr 10 08:31:50 2020           Page 43
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000000 0000008c         2338		.long	.LDW_unq_2-.LDW_unq_1
                          2339	.LDW_unq_1:
00000004 ffffffff         2340		.byte	255,255,255,255
00000008 01               2341		.byte	1
00000009 00               2342		.byte	0
0000000a 01               2343		.byte	1
0000000b 01               2344		.byte	1
0000000c 6c               2345		.byte	108
0000000d 0c               2346		.byte	12
0000000e 01               2347		.byte	1
0000000f 00               2348		.byte	0
00000010 07               2349		.byte	7
00000011 00               2350		.byte	0
00000012 07               2351		.byte	7
00000013 01               2352		.byte	1
00000014 07               2353		.byte	7
00000015 02               2354		.byte	2
00000016 07               2355		.byte	7
00000017 03               2356		.byte	3
00000018 07               2357		.byte	7
00000019 04               2358		.byte	4
0000001a 07               2359		.byte	7
0000001b 05               2360		.byte	5
0000001c 07               2361		.byte	7
0000001d 06               2362		.byte	6
0000001e 07               2363		.byte	7
0000001f 07               2364		.byte	7
00000020 07               2365		.byte	7
00000021 08               2366		.byte	8
00000022 07               2367		.byte	7
00000023 09               2368		.byte	9
00000024 07               2369		.byte	7
00000025 0a               2370		.byte	10
00000026 07               2371		.byte	7
00000027 0b               2372		.byte	11
00000028 07               2373		.byte	7
00000029 0c               2374		.byte	12
0000002a 07               2375		.byte	7
0000002b 0d               2376		.byte	13
0000002c 07               2377		.byte	7
0000002d 0e               2378		.byte	14
0000002e 07               2379		.byte	7
0000002f 0f               2380		.byte	15
00000030 07               2381		.byte	7
00000031 10               2382		.byte	16
00000032 07               2383		.byte	7
00000033 11               2384		.byte	17
00000034 07               2385		.byte	7
00000035 12               2386		.byte	18
00000036 07               2387		.byte	7
00000037 13               2388		.byte	19
00000038 07               2389		.byte	7
00000039 14               2390		.byte	20
0000003a 07               2391		.byte	7
0000003b 15               2392		.byte	21
0000003c 07               2393		.byte	7

                                   Fri Apr 10 08:31:50 2020           Page 44
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000003d 16               2394		.byte	22
0000003e 07               2395		.byte	7
0000003f 17               2396		.byte	23
00000040 07               2397		.byte	7
00000041 18               2398		.byte	24
00000042 07               2399		.byte	7
00000043 19               2400		.byte	25
00000044 07               2401		.byte	7
00000045 1a               2402		.byte	26
00000046 07               2403		.byte	7
00000047 1b               2404		.byte	27
00000048 07               2405		.byte	7
00000049 1c               2406		.byte	28
0000004a 07               2407		.byte	7
0000004b 1d               2408		.byte	29
0000004c 07               2409		.byte	7
0000004d 1e               2410		.byte	30
0000004e 07               2411		.byte	7
0000004f 1f               2412		.byte	31
00000050 07               2413		.byte	7
00000051 20               2414		.byte	32
00000052 07               2415		.byte	7
00000053 21               2416		.byte	33
00000054 07               2417		.byte	7
00000055 22               2418		.byte	34
00000056 07               2419		.byte	7
00000057 23               2420		.byte	35
00000058 07               2421		.byte	7
00000059 24               2422		.byte	36
0000005a 07               2423		.byte	7
0000005b 25               2424		.byte	37
0000005c 07               2425		.byte	7
0000005d 26               2426		.byte	38
0000005e 07               2427		.byte	7
0000005f 27               2428		.byte	39
00000060 07               2429		.byte	7
00000061 28               2430		.byte	40
00000062 07               2431		.byte	7
00000063 29               2432		.byte	41
00000064 07               2433		.byte	7
00000065 2a               2434		.byte	42
00000066 07               2435		.byte	7
00000067 2b               2436		.byte	43
00000068 07               2437		.byte	7
00000069 2c               2438		.byte	44
0000006a 07               2439		.byte	7
0000006b 2d               2440		.byte	45
0000006c 07               2441		.byte	7
0000006d 2e               2442		.byte	46
0000006e 07               2443		.byte	7
0000006f 2f               2444		.byte	47
00000070 07               2445		.byte	7
00000071 30               2446		.byte	48
00000072 07               2447		.byte	7
00000073 31               2448		.byte	49
00000074 07               2449		.byte	7

                                   Fri Apr 10 08:31:50 2020           Page 45
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000075 32               2450		.byte	50
00000076 07               2451		.byte	7
00000077 33               2452		.byte	51
00000078 07               2453		.byte	7
00000079 34               2454		.byte	52
0000007a 07               2455		.byte	7
0000007b 35               2456		.byte	53
0000007c 07               2457		.byte	7
0000007d 36               2458		.byte	54
0000007e 07               2459		.byte	7
0000007f 37               2460		.byte	55
00000080 07               2461		.byte	7
00000081 38               2462		.byte	56
00000082 07               2463		.byte	7
00000083 39               2464		.byte	57
00000084 07               2465		.byte	7
00000085 3a               2466		.byte	58
00000086 07               2467		.byte	7
00000087 3b               2468		.byte	59
00000088 07               2469		.byte	7
00000089 3c               2470		.byte	60
0000008a 07               2471		.byte	7
0000008b 3d               2472		.byte	61
0000008c 07               2473		.byte	7
0000008d 3e               2474		.byte	62
0000008e 07               2475		.byte	7
0000008f 3f               2476		.byte	63
                          2477	.LDW_unq_2:
                          2478		.section	.debug_info
                          2479	.LDW_498c610:
0000008f 27               2480		.byte	39
00000090 756e7369676e6564 2481		.strz	"unsigned char"
00000098 206368617200    
0000009e 08               2482		.byte	8
0000009f 01               2483		.byte	1
                          2484	
                          2485		.section	.debug_abbrev
00000017 27               2486		.byte	39
00000018 24               2487		.byte	36
00000019 00               2488		.byte	0
0000001a 0308             2489		.byte	3,8
0000001c 3e0b             2490		.byte	62,11
0000001e 0b0b             2491		.byte	11,11
00000020 0000             2492		.byte	0,0
                          2493	
                          2494		.section	.debug_info
                          2495	.LDW_498c878:
000000a0 31               2496		.byte	49
000000a1 00000000         2497		.long	.LDW_49cb760
                          2498	
                          2499		.section	.debug_abbrev
00000022 31               2500		.byte	49
00000023 0f               2501		.byte	15
00000024 00               2502		.byte	0
00000025 4910             2503		.byte	73,16
00000027 0000             2504		.byte	0,0
                          2505	

                                   Fri Apr 10 08:31:50 2020           Page 46
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2506		.section	.debug_info
                          2507	.LDW_498c6f0:
000000a5 31               2508		.byte	49
000000a6 00000000         2509		.long	.LDW_49cb810
                          2510	
                          2511	.LDW_498c798:
000000aa 46               2512		.byte	70
000000ab 00000000         2513		.long	.LDW_49cb6b0
000000af 01               2514		.byte	1
                          2515	
                          2516		.section	.debug_abbrev
00000029 46               2517		.byte	70
0000002a 15               2518		.byte	21
0000002b 01               2519		.byte	1
0000002c 4910             2520		.byte	73,16
0000002e 270c             2521		.byte	39,12
00000030 0000             2522		.byte	0,0
                          2523	
                          2524		.section	.debug_info
                          2525	.LDW_4983260:
000000b0 14               2526		.byte	20
000000b1 00000000         2527		.long	.LDW_498c878
000000b5 00               2528		.byte	0
                          2529	
                          2530		.section	.debug_abbrev
00000032 14               2531		.byte	20
00000033 05               2532		.byte	5
00000034 00               2533		.byte	0
00000035 4910             2534		.byte	73,16
00000037 4b0c             2535		.byte	75,12
00000039 0000             2536		.byte	0,0
                          2537	
                          2538		.section	.debug_info
                          2539	.LDW_49836b0:
000000b6 14               2540		.byte	20
000000b7 00000000         2541		.long	.LDW_498c6f0
000000bb 00               2542		.byte	0
                          2543	
000000bc 00               2544		.byte	0
                          2545	
                          2546	.LDW_498ca38:
000000bd 27               2547		.byte	39
000000be 756e7369676e6564 2548		.strz	"unsigned long"
000000c6 206c6f6e6700    
000000cc 07               2549		.byte	7
000000cd 04               2550		.byte	4
                          2551	
                          2552	.LDW_498c648:
000000ce 27               2553		.byte	39
000000cf 756e7369676e6564 2554		.strz	"unsigned short"
000000d7 2073686f727400  
000000de 07               2555		.byte	7
000000df 02               2556		.byte	2
                          2557	
                          2558	.LDW_498c760:
000000e0 31               2559		.byte	49
000000e1 00000000         2560		.long	.LDW_5c73448
                          2561	

                                   Fri Apr 10 08:31:50 2020           Page 47
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2562	.LDW_5c73028:
000000e5 2b               2563		.byte	43
000000e6 00000000         2564		.long	.LDW_5c736b0
                          2565	
                          2566		.section	.debug_abbrev
0000003b 2b               2567		.byte	43
0000003c 26               2568		.byte	38
0000003d 00               2569		.byte	0
0000003e 4910             2570		.byte	73,16
00000040 0000             2571		.byte	0,0
                          2572	
                          2573		.section	.debug_info
                          2574	.LDW_498ca00:
000000ea 31               2575		.byte	49
000000eb 00000000         2576		.long	.LDW_5c73028
                          2577	
                          2578	.LDW_498c7d0:
000000ef 31               2579		.byte	49
000000f0 00000000         2580		.long	.LDW_5c73080
                          2581	
                          2582	.LDW_498c840:
000000f4 46               2583		.byte	70
000000f5 00000000         2584		.long	.LDW_49cb6b0
000000f9 01               2585		.byte	1
                          2586	
                          2587	.LDW_4983230:
000000fa 14               2588		.byte	20
000000fb 00000000         2589		.long	.LDW_498c7d0
000000ff 00               2590		.byte	0
                          2591	
                          2592	.LDW_4983680:
00000100 14               2593		.byte	20
00000101 00000000         2594		.long	.LDW_498c6f0
00000105 00               2595		.byte	0
                          2596	
00000106 00               2597		.byte	0
                          2598	
                          2599	.LDW_498c808:
00000107 27               2600		.byte	39
00000108 696e7400         2601		.strz	"int"
0000010c 05               2602		.byte	5
0000010d 04               2603		.byte	4
                          2604	
                          2605	.LDW_49cecf0:
0000010e 3c               2606		.byte	60
0000010f 00               2607		.byte	0
00000110 40               2608		.byte	64
00000111 00000000         2609		.long	.LDW_49cb658
                          2610	
                          2611		.section	.debug_abbrev
00000042 3c               2612		.byte	60
00000043 01               2613		.byte	1
00000044 01               2614		.byte	1
00000045 090b             2615		.byte	9,11
00000047 0b0f             2616		.byte	11,15
00000049 4910             2617		.byte	73,16

                                   Fri Apr 10 08:31:50 2020           Page 48
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000004b 0000             2618		.byte	0,0
                          2619	
                          2620		.section	.debug_info
00000115 34               2621		.byte	52
00000116 00000000         2622		.long	.LDW_498c808
0000011a 04               2623		.byte	4
0000011b 00               2624		.byte	0
0000011c 3f               2625		.byte	63
                          2626	
                          2627		.section	.debug_abbrev
0000004d 34               2628		.byte	52
0000004e 21               2629		.byte	33
0000004f 00               2630		.byte	0
00000050 4910             2631		.byte	73,16
00000052 0b0f             2632		.byte	11,15
00000054 220d             2633		.byte	34,13
00000056 2f0d             2634		.byte	47,13
00000058 0000             2635		.byte	0,0
                          2636	
                          2637		.section	.debug_info
0000011d 00               2638		.byte	0
                          2639	
                          2640	.LDW_5c74700:
0000011e 2b               2641		.byte	43
0000011f 00000000         2642		.long	.LDW_5c74338
                          2643	
                          2644	.LDW_498c920:
00000123 31               2645		.byte	49
00000124 00000000         2646		.long	.LDW_5c74700
                          2647	
                          2648	.LDW_498c5a0:
00000128 46               2649		.byte	70
00000129 00000000         2650		.long	.LDW_49cb6b0
0000012d 01               2651		.byte	1
                          2652	
                          2653	.LDW_4983290:
0000012e 14               2654		.byte	20
0000012f 00000000         2655		.long	.LDW_498c7d0
00000133 00               2656		.byte	0
                          2657	
                          2658	.LDW_49836e0:
00000134 14               2659		.byte	20
00000135 00000000         2660		.long	.LDW_498c6f0
00000139 00               2661		.byte	0
                          2662	
                          2663	.LDW_49832c0:
0000013a 14               2664		.byte	20
0000013b 00000000         2665		.long	.LDW_498c920
0000013f 00               2666		.byte	0
                          2667	
00000140 00               2668		.byte	0
                          2669	
                          2670	.LDW_49cee10:
00000141 3c               2671		.byte	60
00000142 00               2672		.byte	0
00000143 08               2673		.byte	8

                                   Fri Apr 10 08:31:50 2020           Page 49
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000144 00000000         2674		.long	.LDW_49cb658
                          2675	
00000148 34               2676		.byte	52
00000149 00000000         2677		.long	.LDW_498c808
0000014d 04               2678		.byte	4
0000014e 00               2679		.byte	0
0000014f 07               2680		.byte	7
                          2681	
00000150 00               2682		.byte	0
                          2683	
                          2684	.LDW_5c73890:
00000151 2b               2685		.byte	43
00000152 00000000         2686		.long	.LDW_5c74078
                          2687	
                          2688	.LDW_498c728:
00000156 31               2689		.byte	49
00000157 00000000         2690		.long	.LDW_5c73890
                          2691	
                          2692	.LDW_498c5d8:
0000015b 47               2693		.byte	71
0000015c 01               2694		.byte	1
                          2695	
                          2696		.section	.debug_abbrev
0000005a 47               2697		.byte	71
0000005b 15               2698		.byte	21
0000005c 01               2699		.byte	1
0000005d 270c             2700		.byte	39,12
0000005f 0000             2701		.byte	0,0
                          2702	
                          2703		.section	.debug_info
                          2704	.LDW_4983110:
0000015d 14               2705		.byte	20
0000015e 00000000         2706		.long	.LDW_498c728
00000162 00               2707		.byte	0
                          2708	
                          2709	.LDW_4983440:
00000163 14               2710		.byte	20
00000164 00000000         2711		.long	.LDW_498c6f0
00000168 00               2712		.byte	0
                          2713	
                          2714	.LDW_49832f0:
00000169 14               2715		.byte	20
0000016a 00000000         2716		.long	.LDW_49cb658
0000016e 00               2717		.byte	0
                          2718	
0000016f 00               2719		.byte	0
                          2720	
                          2721	.LDW_498c450:
00000170 31               2722		.byte	49
00000171 00000000         2723		.long	.LDW_5c73940
                          2724	
                          2725	.LDW_498c4f8:
00000175 31               2726		.byte	49
00000176 00000000         2727		.long	.LDW_5c74078
                          2728	
                          2729	.LDW_498caa8:

                                   Fri Apr 10 08:31:50 2020           Page 50
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000017a 46               2730		.byte	70
0000017b 00000000         2731		.long	.LDW_49cb6b0
0000017f 01               2732		.byte	1
                          2733	
                          2734	.LDW_49834d0:
00000180 14               2735		.byte	20
00000181 00000000         2736		.long	.LDW_498c450
00000185 00               2737		.byte	0
                          2738	
                          2739	.LDW_49835f0:
00000186 14               2740		.byte	20
00000187 00000000         2741		.long	.LDW_498c4f8
0000018b 00               2742		.byte	0
                          2743	
0000018c 00               2744		.byte	0
                          2745	
                          2746	.LDW_498c8b0:
0000018d 31               2747		.byte	49
0000018e 00000000         2748		.long	.LDW_5c74128
                          2749	
                          2750	.LDW_498c990:
00000192 31               2751		.byte	49
00000193 00000000         2752		.long	.LDW_5c74338
                          2753	
                          2754	.LDW_498c568:
00000197 46               2755		.byte	70
00000198 00000000         2756		.long	.LDW_49cb6b0
0000019c 01               2757		.byte	1
                          2758	
                          2759	.LDW_49834a0:
0000019d 14               2760		.byte	20
0000019e 00000000         2761		.long	.LDW_498c450
000001a2 00               2762		.byte	0
                          2763	
                          2764	.LDW_4983170:
000001a3 14               2765		.byte	20
000001a4 00000000         2766		.long	.LDW_498c4f8
000001a8 00               2767		.byte	0
                          2768	
000001a9 00               2769		.byte	0
                          2770	
                          2771	.LDW_498c680:
000001aa 46               2772		.byte	70
000001ab 00000000         2773		.long	.LDW_49cb6b0
000001af 01               2774		.byte	1
                          2775	
                          2776	.LDW_4983530:
000001b0 14               2777		.byte	20
000001b1 00000000         2778		.long	.LDW_498c878
000001b5 00               2779		.byte	0
                          2780	
000001b6 00               2781		.byte	0
                          2782	
                          2783	.LDW_498c6b8:
000001b7 31               2784		.byte	49
000001b8 00000000         2785		.long	.LDW_5c98800

                                   Fri Apr 10 08:31:50 2020           Page 51
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2786	
                          2787	.LDW_498c530:
000001bc 46               2788		.byte	70
000001bd 00000000         2789		.long	.LDW_49cb6b0
000001c1 01               2790		.byte	1
                          2791	
                          2792	.LDW_49831a0:
000001c2 14               2793		.byte	20
000001c3 00000000         2794		.long	.LDW_498c878
000001c7 00               2795		.byte	0
                          2796	
000001c8 00               2797		.byte	0
                          2798	
                          2799	.LDW_498c8e8:
000001c9 46               2800		.byte	70
000001ca 00000000         2801		.long	.LDW_49cb6b0
000001ce 01               2802		.byte	1
                          2803	
                          2804	.LDW_49835c0:
000001cf 14               2805		.byte	20
000001d0 00000000         2806		.long	.LDW_498c878
000001d4 00               2807		.byte	0
                          2808	
000001d5 00               2809		.byte	0
                          2810	
                          2811	.LDW_5c98858:
000001d6 2c               2812		.byte	44
                          2813	
                          2814		.section	.debug_abbrev
00000061 2c               2815		.byte	44
00000062 26               2816		.byte	38
00000063 00               2817		.byte	0
00000064 0000             2818		.byte	0,0
                          2819	
                          2820		.section	.debug_info
                          2821	.LDW_498c9c8:
000001d7 31               2822		.byte	49
000001d8 00000000         2823		.long	.LDW_5c98858
                          2824	
                          2825	.LDW_498c958:
000001dc 46               2826		.byte	70
000001dd 00000000         2827		.long	.LDW_49cb6b0
000001e1 01               2828		.byte	1
                          2829	
                          2830	.LDW_4983200:
000001e2 14               2831		.byte	20
000001e3 00000000         2832		.long	.LDW_5c98bc8
000001e7 00               2833		.byte	0
                          2834	
000001e8 00               2835		.byte	0
                          2836	
                          2837	.LDW_498ca70:
000001e9 46               2838		.byte	70
000001ea 00000000         2839		.long	.LDW_49cb6b0
000001ee 01               2840		.byte	1
                          2841	

                                   Fri Apr 10 08:31:50 2020           Page 52
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2842	.LDW_4983740:
000001ef 14               2843		.byte	20
000001f0 00000000         2844		.long	.LDW_5c99250
000001f4 00               2845		.byte	0
                          2846	
000001f5 00               2847		.byte	0
                          2848	
                          2849	.LDW_498c3e0:
000001f6 46               2850		.byte	70
000001f7 00000000         2851		.long	.LDW_49cb6b0
000001fb 01               2852		.byte	1
                          2853	
                          2854	.LDW_49837a0:
000001fc 14               2855		.byte	20
000001fd 00000000         2856		.long	.LDW_498c450
00000201 00               2857		.byte	0
                          2858	
00000202 00               2859		.byte	0
                          2860	
                          2861	.LDW_5ca9c08:
00000203 3c               2862		.byte	60
00000204 00               2863		.byte	0
00000205 40               2864		.byte	64
00000206 00000000         2865		.long	.LDW_49cb760
                          2866	
0000020a 34               2867		.byte	52
0000020b 00000000         2868		.long	.LDW_498c808
0000020f 04               2869		.byte	4
00000210 00               2870		.byte	0
00000211 01               2871		.byte	1
                          2872	
00000212 00               2873		.byte	0
                          2874	
                          2875	.LDW_498cb50:
00000213 46               2876		.byte	70
00000214 00000000         2877		.long	.LDW_49cb6b0
00000218 01               2878		.byte	1
                          2879	
                          2880	.LDW_49837d0:
00000219 14               2881		.byte	20
0000021a 00000000         2882		.long	.LDW_498c450
0000021e 00               2883		.byte	0
                          2884	
0000021f 00               2885		.byte	0
                          2886	
                          2887	.LDW_5bf31e8:
00000220 31               2888		.byte	49
00000221 00000000         2889		.long	.LDW_49cb658
                          2890	
                          2891	.LDW_5c99778:
00000225 2b               2892		.byte	43
00000226 00000000         2893		.long	.LDW_49cb658
                          2894	
                          2895	.LDW_5bf3530:
0000022a 31               2896		.byte	49
0000022b 00000000         2897		.long	.LDW_5c99778

                                   Fri Apr 10 08:31:50 2020           Page 53
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2898	
                          2899	.LDW_5bf3568:
0000022f 27               2900		.byte	39
00000230 766f69642a00     2901		.strz	"void*"
00000236 01               2902		.byte	1
00000237 04               2903		.byte	4
                          2904	
                          2905	.LDW_5bf35a0:
00000238 47               2906		.byte	71
00000239 01               2907		.byte	1
                          2908	
0000023a 00               2909		.byte	0
                          2910	
                          2911	.LDW_5bf3258:
0000023b 31               2912		.byte	49
0000023c 00000000         2913		.long	.LDW_5bf35a0
                          2914	
                          2915	.LDW_5bf3290:
00000240 46               2916		.byte	70
00000241 00000000         2917		.long	.LDW_5c746a8
00000245 01               2918		.byte	1
                          2919	
                          2920	.LDW_4983800:
00000246 14               2921		.byte	20
00000247 00000000         2922		.long	.LDW_5c743e8
0000024b 00               2923		.byte	0
                          2924	
                          2925	.LDW_4983830:
0000024c 14               2926		.byte	20
0000024d 00000000         2927		.long	.LDW_5c99510
00000251 00               2928		.byte	0
                          2929	
                          2930	.LDW_5cab2a0:
00000252 14               2931		.byte	20
00000253 00000000         2932		.long	.LDW_5c746a8
00000257 00               2933		.byte	0
                          2934	
00000258 00               2935		.byte	0
                          2936	
                          2937	.LDW_5bf3338:
00000259 31               2938		.byte	49
0000025a 00000000         2939		.long	.LDW_5bf3290
                          2940	
                          2941	.LDW_5bf37c8:
0000025e 3c               2942		.byte	60
0000025f 00               2943		.byte	0
00000260 01               2944		.byte	1
00000261 00000000         2945		.long	.LDW_49cb658
                          2946	
00000265 34               2947		.byte	52
00000266 00000000         2948		.long	.LDW_498c808
0000026a 04               2949		.byte	4
0000026b 00               2950		.byte	0
0000026c 00               2951		.byte	0
                          2952	
0000026d 00               2953		.byte	0

                                   Fri Apr 10 08:31:50 2020           Page 54
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          2954	
                          2955	.LDW_5bf35d8:
0000026e 31               2956		.byte	49
0000026f 00000000         2957		.long	.LDW_5cabb40
                          2958	
                          2959	.LDW_5bf3060:
00000273 31               2960		.byte	49
00000274 00000000         2961		.long	.LDW_5c746a8
                          2962	
                          2963	.LDW_5bf3178:
00000278 46               2964		.byte	70
00000279 00000000         2965		.long	.LDW_49cb6b0
0000027d 01               2966		.byte	1
                          2967	
                          2968	.LDW_5cab270:
0000027e 14               2969		.byte	20
0000027f 00000000         2970		.long	.LDW_498c878
00000283 00               2971		.byte	0
                          2972	
00000284 00               2973		.byte	0
                          2974	
                          2975	.LDW_5bf31b0:
00000285 31               2976		.byte	49
00000286 00000000         2977		.long	.LDW_5bf3178
                          2978	
                          2979	.LDW_5bf3850:
0000028a 3c               2980		.byte	60
0000028b 00               2981		.byte	0
0000028c 10               2982		.byte	16
0000028d 00000000         2983		.long	.LDW_5c73448
                          2984	
00000291 34               2985		.byte	52
00000292 00000000         2986		.long	.LDW_498c808
00000296 04               2987		.byte	4
00000297 00               2988		.byte	0
00000298 01               2989		.byte	1
                          2990	
00000299 00               2991		.byte	0
                          2992	
                          2993	.LDW_5cac220:
0000029a 2b               2994		.byte	43
0000029b 00000000         2995		.long	.LDW_5cab8d8
                          2996	
                          2997	.LDW_5bf38d8:
0000029f 3c               2998		.byte	60
000002a0 00               2999		.byte	0
000002a1 20               3000		.byte	32
000002a2 00000000         3001		.long	.LDW_5c73028
                          3002	
000002a6 34               3003		.byte	52
000002a7 00000000         3004		.long	.LDW_498c808
000002ab 04               3005		.byte	4
000002ac 00               3006		.byte	0
000002ad 01               3007		.byte	1
                          3008	
000002ae 00               3009		.byte	0

                                   Fri Apr 10 08:31:50 2020           Page 55
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          3010	
                          3011	.LDW_5bf36f0:
000002af 46               3012		.byte	70
000002b0 00000000         3013		.long	.LDW_49cb6b0
000002b4 01               3014		.byte	1
                          3015	
                          3016	.LDW_5caaf70:
000002b5 14               3017		.byte	20
000002b6 00000000         3018		.long	.LDW_498c6b8
000002ba 00               3019		.byte	0
                          3020	
000002bb 00               3021		.byte	0
                          3022	
                          3023	.LDW_5cad818:
000002bc 47               3024		.byte	71
000002bd 01               3025		.byte	1
                          3026	
                          3027	.LDW_5caae80:
000002be 14               3028		.byte	20
000002bf 00000000         3029		.long	.LDW_49ceba8
000002c3 00               3030		.byte	0
                          3031	
                          3032	.LDW_5caaee0:
000002c4 14               3033		.byte	20
000002c5 00000000         3034		.long	.LDW_49ceb50
000002c9 00               3035		.byte	0
                          3036	
                          3037	.LDW_5cab150:
000002ca 14               3038		.byte	20
000002cb 00000000         3039		.long	.LDW_5c99510
000002cf 00               3040		.byte	0
                          3041	
000002d0 00               3042		.byte	0
                          3043	
                          3044	.LDW_49cb600:
000002d1 2a               3045		.byte	42
000002d2 7675696e743800   3046		.strz	"vuint8"
000002d9 9b04             3047		.byte	155,4
000002db 18               3048		.byte	24
000002dc 05               3049		.byte	5
000002dd 00000000         3050		.long	.LDW_498c610
                          3051	
                          3052		.section	.debug_abbrev
00000066 2a               3053		.byte	42
00000067 16               3054		.byte	22
00000068 00               3055		.byte	0
00000069 0308             3056		.byte	3,8
0000006b 3b0f             3057		.byte	59,15
0000006d 390f             3058		.byte	57,15
0000006f 3a0f             3059		.byte	58,15
00000071 4910             3060		.byte	73,16
00000073 0000             3061		.byte	0,0
                          3062	
                          3063		.section	.debug_info
                          3064	.LDW_5c734f8:
000002e1 2a               3065		.byte	42

                                   Fri Apr 10 08:31:50 2020           Page 56
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000002e2 7675696e74313600 3066		.strz	"vuint16"
000002ea a604             3067		.byte	166,4
000002ec 18               3068		.byte	24
000002ed 05               3069		.byte	5
000002ee 00000000         3070		.long	.LDW_498c648
                          3071	
                          3072	.LDW_49ceaf8:
000002f2 2a               3073		.byte	42
000002f3 7675696e74333200 3074		.strz	"vuint32"
000002fb b204             3075		.byte	178,4
000002fd 18               3076		.byte	24
000002fe 05               3077		.byte	5
000002ff 00000000         3078		.long	.LDW_498ca38
                          3079	
                          3080	.LDW_49cb658:
00000303 2a               3081		.byte	42
00000304 5365634d5f427974 3082		.strz	"SecM_ByteType"
0000030c 655479706500    
00000312 9802             3083		.byte	152,2
00000314 11               3084		.byte	17
00000315 07               3085		.byte	7
00000316 00000000         3086		.long	.LDW_49cb600
                          3087	
                          3088	.LDW_5c73550:
0000031a 2a               3089		.byte	42
0000031b 5365634d5f53686f 3090		.strz	"SecM_ShortType"
00000323 72745479706500  
0000032a 9a02             3091		.byte	154,2
0000032c 11               3092		.byte	17
0000032d 07               3093		.byte	7
0000032e 00000000         3094		.long	.LDW_5c734f8
                          3095	
                          3096	.LDW_5c99510:
00000332 2a               3097		.byte	42
00000333 5365634d5f52616d 3098		.strz	"SecM_RamDataType"
0000033b 4461746154797065
00000343 00              
00000344 9d02             3099		.byte	157,2
00000346 3d               3100		.byte	61
00000347 07               3101		.byte	7
00000348 00000000         3102		.long	.LDW_5bf31e8
                          3103	
                          3104	.LDW_5c99460:
0000034c 2a               3105		.byte	42
0000034d 5365634d5f436f6e 3106		.strz	"SecM_ConstRamDataType"
00000355 737452616d446174
0000035d 615479706500    
00000363 9f02             3107		.byte	159,2
00000365 3d               3108		.byte	61
00000366 07               3109		.byte	7
00000367 00000000         3110		.long	.LDW_5bf3530
                          3111	
                          3112	.LDW_5c99358:
0000036b 2a               3113		.byte	42
0000036c 5365634d5f566f69 3114		.strz	"SecM_VoidPtrType"
00000374 6450747254797065
0000037c 00              
0000037d a302             3115		.byte	163,2
0000037f 3d               3116		.byte	61
00000380 07               3117		.byte	7
00000381 00000000         3118		.long	.LDW_5bf3568
                          3119	
                          3120	.LDW_5c98d80:
00000385 2a               3121		.byte	42

                                   Fri Apr 10 08:31:50 2020           Page 57
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000386 5365634d5f436f6e 3122		.strz	"SecM_ConstVoidPtrType"
0000038e 7374566f69645074
00000396 725479706500    
0000039c a502             3123		.byte	165,2
0000039e 3d               3124		.byte	61
0000039f 07               3125		.byte	7
000003a0 00000000         3126		.long	.LDW_498c9c8
                          3127	
                          3128	.LDW_49cb6b0:
000003a4 2a               3129		.byte	42
000003a5 5365634d5f537461 3130		.strz	"SecM_StatusType"
000003ad 7475735479706500
000003b5 ac02             3131		.byte	172,2
000003b7 17               3132		.byte	23
000003b8 07               3133		.byte	7
000003b9 00000000         3134		.long	.LDW_49cb658
                          3135	
                          3136	.LDW_49ceb50:
000003bd 2a               3137		.byte	42
000003be 5365634d5f576f72 3138		.strz	"SecM_WordType"
000003c6 645479706500    
000003cc ae02             3139		.byte	174,2
000003ce 11               3140		.byte	17
000003cf 07               3141		.byte	7
000003d0 00000000         3142		.long	.LDW_49ceaf8
                          3143	
                          3144	.LDW_5c72fd0:
000003d4 2a               3145		.byte	42
000003d5 5365634d5f4c656e 3146		.strz	"SecM_LengthType"
000003dd 6774685479706500
000003e5 b002             3147		.byte	176,2
000003e7 18               3148		.byte	24
000003e8 07               3149		.byte	7
000003e9 00000000         3150		.long	.LDW_5c73550
                          3151	
                          3152	.LDW_5c743e8:
000003ed 2a               3153		.byte	42
000003ee 5365634d5f416464 3154		.strz	"SecM_AddrType"
000003f6 725479706500    
000003fc b302             3155		.byte	179,2
000003fe 17               3156		.byte	23
000003ff 07               3157		.byte	7
00000400 00000000         3158		.long	.LDW_49ceb50
                          3159	
                          3160	.LDW_5c746a8:
00000404 2a               3161		.byte	42
00000405 5365634d5f53697a 3162		.strz	"SecM_SizeType"
0000040d 655479706500    
00000413 b502             3163		.byte	181,2
00000415 17               3164		.byte	23
00000416 07               3165		.byte	7
00000417 00000000         3166		.long	.LDW_49ceb50
                          3167	
                          3168	.LDW_5c745f8:
0000041b 43               3169		.byte	67
0000041c b902             3170		.byte	185,2
0000041e 01               3171		.byte	1
0000041f 07               3172		.byte	7
00000420 0c               3173		.byte	12
00000421 01               3174		.byte	1
                          3175	
                          3176		.section	.debug_abbrev
00000075 43               3177		.byte	67

                                   Fri Apr 10 08:31:50 2020           Page 58
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000076 13               3178		.byte	19
00000077 01               3179		.byte	1
00000078 3b0f             3180		.byte	59,15
0000007a 390f             3181		.byte	57,15
0000007c 3a0f             3182		.byte	58,15
0000007e 0b0f             3183		.byte	11,15
00000080 320b             3184		.byte	50,11
00000082 0000             3185		.byte	0,0
                          3186	
                          3187		.section	.debug_info
                          3188	.LDW_5ca9f50:
00000422 25               3189		.byte	37
00000423 7472616e73666572 3190		.strz	"transferredAddress"
0000042b 7265644164647265
00000433 737300          
00000436 ba02             3191		.byte	186,2
00000438 12               3192		.byte	18
00000439 07               3193		.byte	7
0000043a 00000000         3194		.long	.LDW_5c743e8
0000043e 0223             3195		.byte	2,35
00000440 00               3196		.byte	0
00000441 01               3197		.byte	1
                          3198	
                          3199		.section	.debug_abbrev
00000084 25               3200		.byte	37
00000085 0d               3201		.byte	13
00000086 00               3202		.byte	0
00000087 0308             3203		.byte	3,8
00000089 3b0f             3204		.byte	59,15
0000008b 390f             3205		.byte	57,15
0000008d 3a0f             3206		.byte	58,15
0000008f 4910             3207		.byte	73,16
00000091 380a             3208		.byte	56,10
00000093 320b             3209		.byte	50,11
00000095 0000             3210		.byte	0,0
                          3211	
                          3212		.section	.debug_info
                          3213	.LDW_5caa220:
00000442 25               3214		.byte	37
00000443 7461726765744164 3215		.strz	"targetAddress"
0000044b 647265737300    
00000451 bb02             3216		.byte	187,2
00000453 12               3217		.byte	18
00000454 07               3218		.byte	7
00000455 00000000         3219		.long	.LDW_5c743e8
00000459 0223             3220		.byte	2,35
0000045b 04               3221		.byte	4
0000045c 01               3222		.byte	1
                          3223	
                          3224	.LDW_5caa268:
0000045d 25               3225		.byte	37
0000045e 6c656e67746800   3226		.strz	"length"
00000465 bc02             3227		.byte	188,2
00000467 12               3228		.byte	18
00000468 07               3229		.byte	7
00000469 00000000         3230		.long	.LDW_5c746a8
0000046d 0223             3231		.byte	2,35
0000046f 08               3232		.byte	8
00000470 01               3233		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 59
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          3234	
00000471 00               3235		.byte	0
                          3236	
                          3237	.LDW_5c74338:
00000472 2a               3238		.byte	42
00000473 464c5f5365676d65 3239		.strz	"FL_SegmentInfoType"
0000047b 6e74496e666f5479
00000483 706500          
00000486 bd02             3240		.byte	189,2
00000488 03               3241		.byte	3
00000489 07               3242		.byte	7
0000048a 00000000         3243		.long	.LDW_5c745f8
                          3244	
                          3245	.LDW_5c740d0:
0000048e 43               3246		.byte	67
0000048f c102             3247		.byte	193,2
00000491 01               3248		.byte	1
00000492 07               3249		.byte	7
00000493 08               3250		.byte	8
00000494 01               3251		.byte	1
                          3252	
                          3253	.LDW_5caa340:
00000495 25               3254		.byte	37
00000496 6e724f665365676d 3255		.strz	"nrOfSegments"
0000049e 656e747300      
000004a3 c302             3256		.byte	195,2
000004a5 19               3257		.byte	25
000004a6 07               3258		.byte	7
000004a7 00000000         3259		.long	.LDW_49cb658
000004ab 0223             3260		.byte	2,35
000004ad 00               3261		.byte	0
000004ae 01               3262		.byte	1
                          3263	
                          3264	.LDW_5caa388:
000004af 25               3265		.byte	37
000004b0 7365676d656e7449 3266		.strz	"segmentInfo"
000004b8 6e666f00        
000004bc c602             3267		.byte	198,2
000004be 37               3268		.byte	55
000004bf 07               3269		.byte	7
000004c0 00000000         3270		.long	.LDW_498c990
000004c4 0223             3271		.byte	2,35
000004c6 04               3272		.byte	4
000004c7 01               3273		.byte	1
                          3274	
000004c8 00               3275		.byte	0
                          3276	
                          3277	.LDW_5c74128:
000004c9 2a               3278		.byte	42
000004ca 464c5f5365676d65 3279		.strz	"FL_SegmentListType"
000004d2 6e744c6973745479
000004da 706500          
000004dd c702             3280		.byte	199,2
000004df 03               3281		.byte	3
000004e0 07               3282		.byte	7
000004e1 00000000         3283		.long	.LDW_5c740d0
                          3284	
                          3285	.LDW_5c993b0:
000004e5 2a               3286		.byte	42
000004e6 464c5f5744547269 3287		.strz	"FL_WDTriggerFctType"
000004ee 6767657246637454
000004f6 79706500        
000004fa ca02             3288		.byte	202,2
000004fc 11               3289		.byte	17

                                   Fri Apr 10 08:31:50 2020           Page 60
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000004fd 07               3290		.byte	7
000004fe 00000000         3291		.long	.LDW_5bf3258
                          3292	
                          3293	.LDW_5c996c8:
00000502 2a               3294		.byte	42
00000503 464c5f526561644d 3295		.strz	"FL_ReadMemoryFctType"
0000050b 656d6f7279466374
00000513 5479706500      
00000518 cc02             3296		.byte	204,2
0000051a 1a               3297		.byte	26
0000051b 07               3298		.byte	7
0000051c 00000000         3299		.long	.LDW_5bf3338
                          3300	
                          3301	.LDW_49ceba8:
00000520 2a               3302		.byte	42
00000521 5365634d5f427974 3303		.strz	"SecM_ByteFastType"
00000529 6546617374547970
00000531 6500            
00000533 db02             3304		.byte	219,2
00000535 19               3305		.byte	25
00000536 07               3306		.byte	7
00000537 00000000         3307		.long	.LDW_49ceb50
                          3308	
                          3309	.LDW_5c73658:
0000053b 2a               3310		.byte	42
0000053c 5365634d5f53686f 3311		.strz	"SecM_ShortFastType"
00000544 7274466173745479
0000054c 706500          
0000054f dc02             3312		.byte	220,2
00000551 19               3313		.byte	25
00000552 07               3314		.byte	7
00000553 00000000         3315		.long	.LDW_49ceb50
                          3316	
                          3317	.LDW_5c730d8:
00000557 2a               3318		.byte	42
00000558 5365634d5f4c656e 3319		.strz	"SecM_LengthFastType"
00000560 6774684661737454
00000568 79706500        
0000056c e002             3320		.byte	224,2
0000056e 1c               3321		.byte	28
0000056f 07               3322		.byte	7
00000570 00000000         3323		.long	.LDW_5c73658
                          3324	
                          3325	.LDW_5cab778:
00000574 43               3326		.byte	67
00000575 9103             3327		.byte	145,3
00000577 01               3328		.byte	1
00000578 07               3329		.byte	7
00000579 08               3330		.byte	8
0000057a 01               3331		.byte	1
                          3332	
                          3333	.LDW_5cacac8:
0000057b 25               3334		.byte	37
0000057c 64696765737400   3335		.strz	"digest"
00000583 9203             3336		.byte	146,3
00000585 13               3337		.byte	19
00000586 07               3338		.byte	7
00000587 00000000         3339		.long	.LDW_5bf37c8
0000058b 0223             3340		.byte	2,35
0000058d 00               3341		.byte	0
0000058e 01               3342		.byte	1
                          3343	
                          3344	.LDW_5cac690:
0000058f 25               3345		.byte	37

                                   Fri Apr 10 08:31:50 2020           Page 61
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000590 64756d6d7900     3346		.strz	"dummy"
00000596 9303             3347		.byte	147,3
00000598 13               3348		.byte	19
00000599 07               3349		.byte	7
0000059a 00000000         3350		.long	.LDW_49ceb50
0000059e 0223             3351		.byte	2,35
000005a0 04               3352		.byte	4
000005a1 01               3353		.byte	1
                          3354	
000005a2 00               3355		.byte	0
                          3356	
                          3357	.LDW_5cabb40:
000005a3 2a               3358		.byte	42
000005a4 5365634d5f426173 3359		.strz	"SecM_BasicWkspType"
000005ac 6963576b73705479
000005b4 706500          
000005b7 9403             3360		.byte	148,3
000005b9 03               3361		.byte	3
000005ba 07               3362		.byte	7
000005bb 00000000         3363		.long	.LDW_5cab778
                          3364	
                          3365	.LDW_5cabd50:
000005bf 2a               3366		.byte	42
000005c0 5365634d5f576f72 3367		.strz	"SecM_WorkspacePtrType"
000005c8 6b73706163655074
000005d0 725479706500    
000005d6 9703             3368		.byte	151,3
000005d8 3c               3369		.byte	60
000005d9 07               3370		.byte	7
000005da 00000000         3371		.long	.LDW_5bf35d8
                          3372	
                          3373	.LDW_5cabca0:
000005de 43               3374		.byte	67
000005df 9b03             3375		.byte	155,3
000005e1 01               3376		.byte	1
000005e2 07               3377		.byte	7
000005e3 08               3378		.byte	8
000005e4 01               3379		.byte	1
                          3380	
                          3381	.LDW_5cacd08:
000005e5 25               3382		.byte	37
000005e6 6461746100       3383		.strz	"data"
000005eb 9d03             3384		.byte	157,3
000005ed 1c               3385		.byte	28
000005ee 07               3386		.byte	7
000005ef 00000000         3387		.long	.LDW_5cabd50
000005f3 0223             3388		.byte	2,35
000005f5 00               3389		.byte	0
000005f6 01               3390		.byte	1
                          3391	
                          3392	.LDW_5cacc78:
000005f7 25               3393		.byte	37
000005f8 73697a6500       3394		.strz	"size"
000005fd 9f03             3395		.byte	159,3
000005ff 1c               3396		.byte	28
00000600 07               3397		.byte	7
00000601 00000000         3398		.long	.LDW_5c72fd0
00000605 0223             3399		.byte	2,35
00000607 04               3400		.byte	4
00000608 01               3401		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 62
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          3402	
00000609 00               3403		.byte	0
                          3404	
                          3405	.LDW_5cabb98:
0000060a 2a               3406		.byte	42
0000060b 5365634d5f576f72 3407		.strz	"SecM_WorkspaceType"
00000613 6b73706163655479
0000061b 706500          
0000061e a003             3408		.byte	160,3
00000620 03               3409		.byte	3
00000621 07               3410		.byte	7
00000622 00000000         3411		.long	.LDW_5cabca0
                          3412	
                          3413	.LDW_5cab828:
00000626 2a               3414		.byte	42
00000627 5365634d5f437263 3415		.strz	"SecM_Crc32Type"
0000062f 33325479706500  
00000636 9201             3416		.byte	146,1
00000638 19               3417		.byte	25
00000639 0a               3418		.byte	10
0000063a 00000000         3419		.long	.LDW_49ceb50
                          3420	
                          3421	.LDW_5cab8d8:
0000063e 2a               3422		.byte	42
0000063f 5365634d5f435243 3423		.strz	"SecM_CRCType"
00000647 5479706500      
0000064c 9801             3424		.byte	152,1
0000064e 19               3425		.byte	25
0000064f 0a               3426		.byte	10
00000650 00000000         3427		.long	.LDW_5cab828
                          3428	
                          3429	.LDW_5c98fe8:
00000654 43               3430		.byte	67
00000655 9f01             3431		.byte	159,1
00000657 01               3432		.byte	1
00000658 0a               3433		.byte	10
00000659 14               3434		.byte	20
0000065a 01               3435		.byte	1
                          3436	
                          3437	.LDW_5cac840:
0000065b 25               3438		.byte	37
0000065c 63757272656e7443 3439		.strz	"currentCRC"
00000664 524300          
00000667 a001             3440		.byte	160,1
00000669 1c               3441		.byte	28
0000066a 0a               3442		.byte	10
0000066b 00000000         3443		.long	.LDW_5cab8d8
0000066f 0223             3444		.byte	2,35
00000671 00               3445		.byte	0
00000672 01               3446		.byte	1
                          3447	
                          3448	.LDW_5cacba0:
00000673 25               3449		.byte	37
00000674 6372635374617465 3450		.strz	"crcState"
0000067c 00              
0000067d a101             3451		.byte	161,1
0000067f 1c               3452		.byte	28
00000680 0a               3453		.byte	10
00000681 00000000         3454		.long	.LDW_49cb658
00000685 0223             3455		.byte	2,35
00000687 04               3456		.byte	4
00000688 01               3457		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 63
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          3458	
                          3459	.LDW_5cac6d8:
00000689 25               3460		.byte	37
0000068a 637263536f757263 3461		.strz	"crcSourceBuffer"
00000692 6542756666657200
0000069a a201             3462		.byte	162,1
0000069c 1c               3463		.byte	28
0000069d 0a               3464		.byte	10
0000069e 00000000         3465		.long	.LDW_5c99460
000006a2 0223             3466		.byte	2,35
000006a4 08               3467		.byte	8
000006a5 01               3468		.byte	1
                          3469	
                          3470	.LDW_5caca80:
000006a6 25               3471		.byte	37
000006a7 6372634279746543 3472		.strz	"crcByteCount"
000006af 6f756e7400      
000006b4 a601             3473		.byte	166,1
000006b6 1c               3474		.byte	28
000006b7 0a               3475		.byte	10
000006b8 00000000         3476		.long	.LDW_5c72fd0
000006bc 0223             3477		.byte	2,35
000006be 0c               3478		.byte	12
000006bf 01               3479		.byte	1
                          3480	
                          3481	.LDW_5cac960:
000006c0 25               3482		.byte	37
000006c1 7764547269676765 3483		.strz	"wdTriggerFct"
000006c9 7246637400      
000006ce a701             3484		.byte	167,1
000006d0 1c               3485		.byte	28
000006d1 0a               3486		.byte	10
000006d2 00000000         3487		.long	.LDW_5c993b0
000006d6 0223             3488		.byte	2,35
000006d8 10               3489		.byte	16
000006d9 01               3490		.byte	1
                          3491	
000006da 00               3492		.byte	0
                          3493	
                          3494	.LDW_5c98800:
000006db 2a               3495		.byte	42
000006dc 5365634d5f435243 3496		.strz	"SecM_CRCParamType"
000006e4 506172616d547970
000006ec 6500            
000006ee a801             3497		.byte	168,1
000006f0 03               3498		.byte	3
000006f1 0a               3499		.byte	10
000006f2 00000000         3500		.long	.LDW_5c98fe8
                          3501	
                          3502	.LDW_5cab930:
000006f6 2a               3503		.byte	42
000006f7 5365634d5f566572 3504		.strz	"SecM_VerifyDataType"
000006ff 6966794461746154
00000707 79706500        
0000070b d803             3505		.byte	216,3
0000070d 1f               3506		.byte	31
0000070e 0d               3507		.byte	13
0000070f 00000000         3508		.long	.LDW_5c99460
                          3509	
                          3510	.LDW_5cabbf0:
00000713 2a               3511		.byte	42
00000714 5365634d5f526573 3512		.strz	"SecM_ResultBufferType"
0000071c 756c744275666665
00000724 725479706500    
0000072a dc03             3513		.byte	220,3

                                   Fri Apr 10 08:31:50 2020           Page 64
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000072c 1f               3514		.byte	31
0000072d 0d               3515		.byte	13
0000072e 00000000         3516		.long	.LDW_5c746a8
                          3517	
                          3518	.LDW_5cabe00:
00000732 2a               3519		.byte	42
00000733 5365634d5f566572 3520		.strz	"SecM_VerifyKeyType"
0000073b 6966794b65795479
00000743 706500          
00000746 df03             3521		.byte	223,3
00000748 1f               3522		.byte	31
00000749 0d               3523		.byte	13
0000074a 00000000         3524		.long	.LDW_5c99358
                          3525	
                          3526	.LDW_5c98bc8:
0000074e 2a               3527		.byte	42
0000074f 5365634d5f566572 3528		.strz	"SecM_VerifyInitType"
00000757 696679496e697454
0000075f 79706500        
00000763 e603             3529		.byte	230,3
00000765 21               3530		.byte	33
00000766 0d               3531		.byte	13
00000767 00000000         3532		.long	.LDW_5c98d80
                          3533	
                          3534	.LDW_5c99250:
0000076b 2a               3535		.byte	42
0000076c 5365634d5f566572 3536		.strz	"SecM_VerifyDeinitType"
00000774 6966794465696e69
0000077c 745479706500    
00000782 e803             3537		.byte	232,3
00000784 21               3538		.byte	33
00000785 0d               3539		.byte	13
00000786 00000000         3540		.long	.LDW_5c98d80
                          3541	
                          3542	.LDW_5c73fc8:
0000078a 43               3543		.byte	67
0000078b ec03             3544		.byte	236,3
0000078d 01               3545		.byte	1
0000078e 0d               3546		.byte	13
0000078f 2c               3547		.byte	44
00000790 01               3548		.byte	1
                          3549	
                          3550	.LDW_5cacbe8:
00000791 25               3551		.byte	37
00000792 7365676d656e744c 3552		.strz	"segmentList"
0000079a 69737400        
0000079e ef03             3553		.byte	239,3
000007a0 19               3554		.byte	25
000007a1 0d               3555		.byte	13
000007a2 00000000         3556		.long	.LDW_5c74128
000007a6 0223             3557		.byte	2,35
000007a8 00               3558		.byte	0
000007a9 01               3559		.byte	1
                          3560	
                          3561	.LDW_5cac768:
000007aa 25               3562		.byte	37
000007ab 626c6f636b537461 3563		.strz	"blockStartAddress"
000007b3 7274416464726573
000007bb 7300            
000007bd f103             3564		.byte	241,3
000007bf 19               3565		.byte	25
000007c0 0d               3566		.byte	13
000007c1 00000000         3567		.long	.LDW_5c743e8
000007c5 0223             3568		.byte	2,35
000007c7 08               3569		.byte	8

                                   Fri Apr 10 08:31:50 2020           Page 65
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000007c8 01               3570		.byte	1
                          3571	
                          3572	.LDW_5cac9a8:
000007c9 25               3573		.byte	37
000007ca 626c6f636b4c656e 3574		.strz	"blockLength"
000007d2 67746800        
000007d6 f303             3575		.byte	243,3
000007d8 19               3576		.byte	25
000007d9 0d               3577		.byte	13
000007da 00000000         3578		.long	.LDW_5c746a8
000007de 0223             3579		.byte	2,35
000007e0 0c               3580		.byte	12
000007e1 01               3581		.byte	1
                          3582	
                          3583	.LDW_5cacde0:
000007e2 25               3584		.byte	37
000007e3 7665726966696361 3585		.strz	"verificationData"
000007eb 74696f6e44617461
000007f3 00              
000007f4 f503             3586		.byte	245,3
000007f6 19               3587		.byte	25
000007f7 0d               3588		.byte	13
000007f8 00000000         3589		.long	.LDW_5cab930
000007fc 0223             3590		.byte	2,35
000007fe 10               3591		.byte	16
000007ff 01               3592		.byte	1
                          3593	
                          3594	.LDW_5cac9f0:
00000800 25               3595		.byte	37
00000801 637263546f74616c 3596		.strz	"crcTotal"
00000809 00              
0000080a f703             3597		.byte	247,3
0000080c 19               3598		.byte	25
0000080d 0d               3599		.byte	13
0000080e 00000000         3600		.long	.LDW_5cab8d8
00000812 0223             3601		.byte	2,35
00000814 14               3602		.byte	20
00000815 01               3603		.byte	1
                          3604	
                          3605	.LDW_5cacd98:
00000816 25               3606		.byte	37
00000817 7764547269676765 3607		.strz	"wdTriggerFct"
0000081f 7246637400      
00000824 f903             3608		.byte	249,3
00000826 19               3609		.byte	25
00000827 0d               3610		.byte	13
00000828 00000000         3611		.long	.LDW_5c993b0
0000082c 0223             3612		.byte	2,35
0000082e 18               3613		.byte	24
0000082f 01               3614		.byte	1
                          3615	
                          3616	.LDW_5cac7b0:
00000830 25               3617		.byte	37
00000831 726561644d656d6f 3618		.strz	"readMemory"
00000839 727900          
0000083c fb03             3619		.byte	251,3
0000083e 19               3620		.byte	25
0000083f 0d               3621		.byte	13
00000840 00000000         3622		.long	.LDW_5c996c8
00000844 0223             3623		.byte	2,35
00000846 1c               3624		.byte	28
00000847 01               3625		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 66
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          3626	
                          3627	.LDW_5cace28:
00000848 25               3628		.byte	37
00000849 776f726b73706163 3629		.strz	"workspace"
00000851 6500            
00000853 fe03             3630		.byte	254,3
00000855 19               3631		.byte	25
00000856 0d               3632		.byte	13
00000857 00000000         3633		.long	.LDW_5cabb98
0000085b 0223             3634		.byte	2,35
0000085d 20               3635		.byte	32
0000085e 01               3636		.byte	1
                          3637	
                          3638	.LDW_5cacd50:
0000085f 25               3639		.byte	37
00000860 6b657900         3640		.strz	"key"
00000864 8004             3641		.byte	128,4
00000866 19               3642		.byte	25
00000867 0d               3643		.byte	13
00000868 00000000         3644		.long	.LDW_5cabe00
0000086c 0223             3645		.byte	2,35
0000086e 28               3646		.byte	40
0000086f 01               3647		.byte	1
                          3648	
00000870 00               3649		.byte	0
                          3650	
                          3651	.LDW_5c73940:
00000871 2a               3652		.byte	42
00000872 5365634d5f566572 3653		.strz	"SecM_VerifyParamType"
0000087a 696679506172616d
00000882 5479706500      
00000887 8104             3654		.byte	129,4
00000889 03               3655		.byte	3
0000088a 0d               3656		.byte	13
0000088b 00000000         3657		.long	.LDW_5c73fc8
                          3658	
                          3659	.LDW_5cabeb0:
0000088f 43               3660		.byte	67
00000890 8504             3661		.byte	133,4
00000892 01               3662		.byte	1
00000893 0d               3663		.byte	13
00000894 08               3664		.byte	8
00000895 01               3665		.byte	1
                          3666	
                          3667	.LDW_5cacc30:
00000896 25               3668		.byte	37
00000897 736967526573756c 3669		.strz	"sigResultBuffer"
0000089f 7442756666657200
000008a7 8604             3670		.byte	134,4
000008a9 1a               3671		.byte	26
000008aa 0d               3672		.byte	13
000008ab 00000000         3673		.long	.LDW_5cabbf0
000008af 0223             3674		.byte	2,35
000008b1 00               3675		.byte	0
000008b2 01               3676		.byte	1
                          3677	
                          3678	.LDW_5cac570:
000008b3 25               3679		.byte	37
000008b4 6c656e67746800   3680		.strz	"length"
000008bb 8704             3681		.byte	135,4

                                   Fri Apr 10 08:31:50 2020           Page 67
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000008bd 1a               3682		.byte	26
000008be 0d               3683		.byte	13
000008bf 00000000         3684		.long	.LDW_5c746a8
000008c3 0223             3685		.byte	2,35
000008c5 04               3686		.byte	4
000008c6 01               3687		.byte	1
                          3688	
000008c7 00               3689		.byte	0
                          3690	
                          3691	.LDW_5cabf08:
000008c8 2a               3692		.byte	42
000008c9 5365634d5f536967 3693		.strz	"SecM_SignatureType"
000008d1 6e61747572655479
000008d9 706500          
000008dc 8804             3694		.byte	136,4
000008de 03               3695		.byte	3
000008df 0d               3696		.byte	13
000008e0 00000000         3697		.long	.LDW_5cabeb0
                          3698	
                          3699	.LDW_49cb708:
000008e4 43               3700		.byte	67
000008e5 8c04             3701		.byte	140,4
000008e7 01               3702		.byte	1
000008e8 0d               3703		.byte	13
000008e9 20               3704		.byte	32
000008ea 01               3705		.byte	1
                          3706	
                          3707	.LDW_5cacb10:
000008eb 25               3708		.byte	37
000008ec 63757272656e7448 3709		.strz	"currentHash"
000008f4 61736800        
000008f8 8e04             3710		.byte	142,4
000008fa 19               3711		.byte	25
000008fb 0d               3712		.byte	13
000008fc 00000000         3713		.long	.LDW_5cabf08
00000900 0223             3714		.byte	2,35
00000902 00               3715		.byte	0
00000903 01               3716		.byte	1
                          3717	
                          3718	.LDW_5cac648:
00000904 25               3719		.byte	37
00000905 63757272656e7444 3720		.strz	"currentDataLength"
0000090d 6174614c656e6774
00000915 6800            
00000917 9004             3721		.byte	144,4
00000919 32               3722		.byte	50
0000091a 0d               3723		.byte	13
0000091b 00000000         3724		.long	.LDW_5bf3060
0000091f 0223             3725		.byte	2,35
00000921 08               3726		.byte	8
00000922 01               3727		.byte	1
                          3728	
                          3729	.LDW_5cac720:
00000923 25               3730		.byte	37
00000924 7369675374617465 3731		.strz	"sigState"
0000092c 00              
0000092d 9204             3732		.byte	146,4
0000092f 19               3733		.byte	25
00000930 0d               3734		.byte	13
00000931 00000000         3735		.long	.LDW_49cb6b0
00000935 0223             3736		.byte	2,35
00000937 0c               3737		.byte	12

                                   Fri Apr 10 08:31:50 2020           Page 68
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000938 01               3738		.byte	1
                          3739	
                          3740	.LDW_5cac7f8:
00000939 25               3741		.byte	37
0000093a 736967536f757263 3742		.strz	"sigSourceBuffer"
00000942 6542756666657200
0000094a 9404             3743		.byte	148,4
0000094c 19               3744		.byte	25
0000094d 0d               3745		.byte	13
0000094e 00000000         3746		.long	.LDW_5cab930
00000952 0223             3747		.byte	2,35
00000954 10               3748		.byte	16
00000955 01               3749		.byte	1
                          3750	
                          3751	.LDW_5cac888:
00000956 25               3752		.byte	37
00000957 7369674279746543 3753		.strz	"sigByteCount"
0000095f 6f756e7400      
00000964 9604             3754		.byte	150,4
00000966 19               3755		.byte	25
00000967 0d               3756		.byte	13
00000968 00000000         3757		.long	.LDW_5c72fd0
0000096c 0223             3758		.byte	2,35
0000096e 14               3759		.byte	20
0000096f 01               3760		.byte	1
                          3761	
                          3762	.LDW_5cac8d0:
00000970 25               3763		.byte	37
00000971 7764547269676765 3764		.strz	"wdTriggerFct"
00000979 7246637400      
0000097e 9804             3765		.byte	152,4
00000980 19               3766		.byte	25
00000981 0d               3767		.byte	13
00000982 00000000         3768		.long	.LDW_5c993b0
00000986 0223             3769		.byte	2,35
00000988 18               3770		.byte	24
00000989 01               3771		.byte	1
                          3772	
                          3773	.LDW_5cac918:
0000098a 25               3774		.byte	37
0000098b 6b657900         3775		.strz	"key"
0000098f 9b04             3776		.byte	155,4
00000991 19               3777		.byte	25
00000992 0d               3778		.byte	13
00000993 00000000         3779		.long	.LDW_5cabe00
00000997 0223             3780		.byte	2,35
00000999 1c               3781		.byte	28
0000099a 01               3782		.byte	1
                          3783	
0000099b 00               3784		.byte	0
                          3785	
                          3786	.LDW_49cb760:
0000099c 2a               3787		.byte	42
0000099d 5365634d5f536967 3788		.strz	"SecM_SignatureParamType"
000009a5 6e61747572655061
000009ad 72616d5479706500
000009b5 9c04             3789		.byte	156,4
000009b7 03               3790		.byte	3
000009b8 0d               3791		.byte	13
000009b9 00000000         3792		.long	.LDW_49cb708
                          3793	

                                   Fri Apr 10 08:31:50 2020           Page 69
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          3794	.LDW_5cac170:
000009bd 2a               3795		.byte	42
000009be 7053656356657269 3796		.strz	"pSecVerifySignatureFct"
000009c6 66795369676e6174
000009ce 75726546637400  
000009d5 a204             3797		.byte	162,4
000009d7 29               3798		.byte	41
000009d8 0d               3799		.byte	13
000009d9 00000000         3800		.long	.LDW_5bf31b0
                          3801	
                          3802	.LDW_5c735a8:
000009dd 43               3803		.byte	67
000009de aa04             3804		.byte	170,4
000009e0 01               3805		.byte	1
000009e1 0d               3806		.byte	13
000009e2 10               3807		.byte	16
000009e3 01               3808		.byte	1
                          3809	
                          3810	.LDW_5cad068:
000009e4 25               3811		.byte	37
000009e5 7046756e6374696f 3812		.strz	"pFunction"
000009ed 6e00            
000009ef ab04             3813		.byte	171,4
000009f1 1c               3814		.byte	28
000009f2 0d               3815		.byte	13
000009f3 00000000         3816		.long	.LDW_5cac170
000009f7 0223             3817		.byte	2,35
000009f9 00               3818		.byte	0
000009fa 01               3819		.byte	1
                          3820	
                          3821	.LDW_5cad338:
000009fb 25               3822		.byte	37
000009fc 6c656e67746800   3823		.strz	"length"
00000a03 ac04             3824		.byte	172,4
00000a05 1c               3825		.byte	28
00000a06 0d               3826		.byte	13
00000a07 00000000         3827		.long	.LDW_5c72fd0
00000a0b 0223             3828		.byte	2,35
00000a0d 04               3829		.byte	4
00000a0e 01               3830		.byte	1
                          3831	
                          3832	.LDW_5cad410:
00000a0f 25               3833		.byte	37
00000a10 6f666673657400   3834		.strz	"offset"
00000a17 ad04             3835		.byte	173,4
00000a19 1c               3836		.byte	28
00000a1a 0d               3837		.byte	13
00000a1b 00000000         3838		.long	.LDW_5c730d8
00000a1f 0223             3839		.byte	2,35
00000a21 08               3840		.byte	8
00000a22 01               3841		.byte	1
                          3842	
                          3843	.LDW_5cacf00:
00000a23 25               3844		.byte	37
00000a24 6d61736b00       3845		.strz	"mask"
00000a29 ae04             3846		.byte	174,4
00000a2b 1c               3847		.byte	28
00000a2c 0d               3848		.byte	13
00000a2d 00000000         3849		.long	.LDW_49cb658

                                   Fri Apr 10 08:31:50 2020           Page 70
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000a31 0223             3850		.byte	2,35
00000a33 0c               3851		.byte	12
00000a34 01               3852		.byte	1
                          3853	
00000a35 00               3854		.byte	0
                          3855	
                          3856	.LDW_5c736b0:
00000a36 2a               3857		.byte	42
00000a37 5365634d5f566572 3858		.strz	"SecM_VerifyOperationType"
00000a3f 6966794f70657261
00000a47 74696f6e54797065
00000a4f 00              
00000a50 af04             3859		.byte	175,4
00000a52 03               3860		.byte	3
00000a53 0d               3861		.byte	13
00000a54 00000000         3862		.long	.LDW_5c735a8
                          3863	
                          3864	.LDW_5c73188:
00000a58 43               3865		.byte	67
00000a59 b304             3866		.byte	179,4
00000a5b 01               3867		.byte	1
00000a5c 0d               3868		.byte	13
00000a5d 08               3869		.byte	8
00000a5e 01               3870		.byte	1
                          3871	
                          3872	.LDW_5cad2f0:
00000a5f 25               3873		.byte	37
00000a60 704f706572617469 3874		.strz	"pOperation"
00000a68 6f6e00          
00000a6b b404             3875		.byte	180,4
00000a6d 3d               3876		.byte	61
00000a6e 0d               3877		.byte	13
00000a6f 00000000         3878		.long	.LDW_498ca00
00000a73 0223             3879		.byte	2,35
00000a75 00               3880		.byte	0
00000a76 01               3881		.byte	1
                          3882	
                          3883	.LDW_5cad0b0:
00000a77 25               3884		.byte	37
00000a78 70436f6e74657874 3885		.strz	"pContext"
00000a80 00              
00000a81 b504             3886		.byte	181,4
00000a83 3d               3887		.byte	61
00000a84 0d               3888		.byte	13
00000a85 00000000         3889		.long	.LDW_498c878
00000a89 0223             3890		.byte	2,35
00000a8b 04               3891		.byte	4
00000a8c 01               3892		.byte	1
                          3893	
00000a8d 00               3894		.byte	0
                          3895	
                          3896	.LDW_5c73448:
00000a8e 2a               3897		.byte	42
00000a8f 5365634d5f566572 3898		.strz	"SecM_VerifyConfigType"
00000a97 696679436f6e6669
00000a9f 675479706500    
00000aa5 ba04             3899		.byte	186,4
00000aa7 03               3900		.byte	3
00000aa8 0d               3901		.byte	13
00000aa9 00000000         3902		.long	.LDW_5c73188
                          3903	
                          3904	.LDW_5c74020:
00000aad 43               3905		.byte	67

                                   Fri Apr 10 08:31:50 2020           Page 71
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000aae be04             3906		.byte	190,4
00000ab0 01               3907		.byte	1
00000ab1 0d               3908		.byte	13
00000ab2 0c               3909		.byte	12
00000ab3 01               3910		.byte	1
                          3911	
                          3912	.LDW_5cad020:
00000ab4 25               3913		.byte	37
00000ab5 705072696d697469 3914		.strz	"pPrimitives"
00000abd 76657300        
00000ac1 bf04             3915		.byte	191,4
00000ac3 1c               3916		.byte	28
00000ac4 0d               3917		.byte	13
00000ac5 00000000         3918		.long	.LDW_5c73448
00000ac9 0223             3919		.byte	2,35
00000acb 00               3920		.byte	0
00000acc 01               3921		.byte	1
                          3922	
                          3923	.LDW_5cad4a0:
00000acd 25               3924		.byte	37
00000ace 636f756e7400     3925		.strz	"count"
00000ad4 c004             3926		.byte	192,4
00000ad6 1c               3927		.byte	28
00000ad7 0d               3928		.byte	13
00000ad8 00000000         3929		.long	.LDW_49ceba8
00000adc 0223             3930		.byte	2,35
00000ade 08               3931		.byte	8
00000adf 01               3932		.byte	1
                          3933	
00000ae0 00               3934		.byte	0
                          3935	
                          3936	.LDW_5c74078:
00000ae1 2a               3937		.byte	42
00000ae2 5365634d5f566572 3938		.strz	"SecM_VerifyConfigListType"
00000aea 696679436f6e6669
00000af2 674c697374547970
00000afa 6500            
00000afc c104             3939		.byte	193,4
00000afe 03               3940		.byte	3
00000aff 0d               3941		.byte	13
00000b00 00000000         3942		.long	.LDW_5c74020
                          3943	
                          3944	.LDW_5c73340:
00000b04 43               3945		.byte	67
00000b05 cb01             3946		.byte	203,1
00000b07 01               3947		.byte	1
00000b08 01               3948		.byte	1
00000b09 34               3949		.byte	52
00000b0a 01               3950		.byte	1
                          3951	
                          3952	.LDW_5cad140:
00000b0b 25               3953		.byte	37
00000b0c 726561644d656d6f 3954		.strz	"readMemory"
00000b14 727900          
00000b17 cc01             3955		.byte	204,1
00000b19 1f               3956		.byte	31
00000b1a 01               3957		.byte	1
00000b1b 00000000         3958		.long	.LDW_5c996c8
00000b1f 0223             3959		.byte	2,35
00000b21 00               3960		.byte	0
00000b22 01               3961		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 72
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          3962	
                          3963	.LDW_5cad380:
00000b23 25               3964		.byte	37
00000b24 7665726966794164 3965		.strz	"verifyAddress"
00000b2c 647265737300    
00000b32 cd01             3966		.byte	205,1
00000b34 1f               3967		.byte	31
00000b35 01               3968		.byte	1
00000b36 00000000         3969		.long	.LDW_5c743e8
00000b3a 0223             3970		.byte	2,35
00000b3c 04               3971		.byte	4
00000b3d 01               3972		.byte	1
                          3973	
                          3974	.LDW_5cace70:
00000b3e 25               3975		.byte	37
00000b3f 72656d61696e696e 3976		.strz	"remainingBytes"
00000b47 67427974657300  
00000b4e ce01             3977		.byte	206,1
00000b50 1f               3978		.byte	31
00000b51 01               3979		.byte	1
00000b52 00000000         3980		.long	.LDW_5c746a8
00000b56 0223             3981		.byte	2,35
00000b58 08               3982		.byte	8
00000b59 01               3983		.byte	1
                          3984	
                          3985	.LDW_5cad2a8:
00000b5a 25               3986		.byte	37
00000b5b 736967506172616d 3987		.strz	"sigParam"
00000b63 00              
00000b64 cf01             3988		.byte	207,1
00000b66 1f               3989		.byte	31
00000b67 01               3990		.byte	1
00000b68 00000000         3991		.long	.LDW_49cb760
00000b6c 0223             3992		.byte	2,35
00000b6e 0c               3993		.byte	12
00000b6f 01               3994		.byte	1
                          3995	
                          3996	.LDW_5cacf90:
00000b70 25               3997		.byte	37
00000b71 72656164436f756e 3998		.strz	"readCountMask"
00000b79 744d61736b00    
00000b7f d201             3999		.byte	210,1
00000b81 1f               4000		.byte	31
00000b82 01               4001		.byte	1
00000b83 00000000         4002		.long	.LDW_5c746a8
00000b87 0223             4003		.byte	2,35
00000b89 2c               4004		.byte	44
00000b8a 01               4005		.byte	1
                          4006	
                          4007	.LDW_5cad4e8:
00000b8b 25               4008		.byte	37
00000b8c 72656164436f756e 4009		.strz	"readCountResult"
00000b94 74526573756c7400
00000b9c d301             4010		.byte	211,1
00000b9e 1f               4011		.byte	31
00000b9f 01               4012		.byte	1
00000ba0 00000000         4013		.long	.LDW_49cb6b0
00000ba4 0223             4014		.byte	2,35
00000ba6 30               4015		.byte	48
00000ba7 01               4016		.byte	1
                          4017	

                                   Fri Apr 10 08:31:50 2020           Page 73
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000ba8 00               4018		.byte	0
                          4019	
                          4020	.LDW_5c73080:
00000ba9 2a               4021		.byte	42
00000baa 5365634d5f566572 4022		.strz	"SecM_VerifyContextType"
00000bb2 696679436f6e7465
00000bba 78745479706500  
00000bc1 d501             4023		.byte	213,1
00000bc3 03               4024		.byte	3
00000bc4 01               4025		.byte	1
00000bc5 00000000         4026		.long	.LDW_5c73340
                          4027	
                          4028	.LDW_49cb7b8:
00000bc9 43               4029		.byte	67
00000bca d901             4030		.byte	217,1
00000bcc 01               4031		.byte	1
00000bcd 01               4032		.byte	1
00000bce 14               4033		.byte	20
00000bcf 01               4034		.byte	1
                          4035	
                          4036	.LDW_5caceb8:
00000bd0 25               4037		.byte	37
00000bd1 705072696d697469 4038		.strz	"pPrimitives"
00000bd9 76657300        
00000bdd da01             4039		.byte	218,1
00000bdf 1c               4040		.byte	28
00000be0 01               4041		.byte	1
00000be1 00000000         4042		.long	.LDW_5bf3850
00000be5 0223             4043		.byte	2,35
00000be7 00               4044		.byte	0
00000be8 01               4045		.byte	1
                          4046	
                          4047	.LDW_5cad218:
00000be9 25               4048		.byte	37
00000bea 636f756e7400     4049		.strz	"count"
00000bf0 db01             4050		.byte	219,1
00000bf2 1c               4051		.byte	28
00000bf3 01               4052		.byte	1
00000bf4 00000000         4053		.long	.LDW_49ceba8
00000bf8 0223             4054		.byte	2,35
00000bfa 10               4055		.byte	16
00000bfb 01               4056		.byte	1
                          4057	
00000bfc 00               4058		.byte	0
                          4059	
                          4060	.LDW_49cb810:
00000bfd 2a               4061		.byte	42
00000bfe 5365634d5f566572 4062		.strz	"SecM_VerifyConfigPairType"
00000c06 696679436f6e6669
00000c0e 6750616972547970
00000c16 6500            
00000c18 dc01             4063		.byte	220,1
00000c1a 03               4064		.byte	3
00000c1b 01               4065		.byte	1
00000c1c 00000000         4066		.long	.LDW_49cb7b8
                          4067	
                          4068	.LDW_5cac068:
00000c20 06               4069		.byte	6
00000c21 637263506172616d 4070		.strz	"crcParam"
00000c29 00              
00000c2a 8502             4071		.byte	133,2
00000c2c 1a               4072		.byte	26
00000c2d 01               4073		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 74
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000c2e 00000000         4074		.long	.LDW_5c98800
00000c32 00               4075		.byte	0
00000c33 00               4076		.byte	0
00000c34 0503             4077		.byte	5,3
00000c36 00000000         4078		.long	crcParam..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          4079	
                          4080		.section	.debug_abbrev
00000097 06               4081		.byte	6
00000098 34               4082		.byte	52
00000099 00               4083		.byte	0
0000009a 0308             4084		.byte	3,8
0000009c 3b0f             4085		.byte	59,15
0000009e 390f             4086		.byte	57,15
000000a0 3a0f             4087		.byte	58,15
000000a2 4910             4088		.byte	73,16
000000a4 3f0c             4089		.byte	63,12
000000a6 3c0c             4090		.byte	60,12
000000a8 020a             4091		.byte	2,10
000000aa 0000             4092		.byte	0,0
                          4093	
                          4094		.section	.debug_info
                          4095	.LDW_5cac278:
00000c3a 06               4096		.byte	6
00000c3b 766572696679436f 4097		.strz	"verifyConfigClassDDD"
00000c43 6e666967436c6173
00000c4b 7344444400      
00000c50 8902             4098		.byte	137,2
00000c52 3f               4099		.byte	63
00000c53 01               4100		.byte	1
00000c54 00000000         4101		.long	.LDW_5bf38d8
00000c58 00               4102		.byte	0
00000c59 00               4103		.byte	0
00000c5a 0503             4104		.byte	5,3
00000c5c 00000000         4105		.long	verifyConfigClassDDD..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
                          4106	
                          4107	.LDW_5cac328:
00000c60 07               4108		.byte	7
00000c61 6372635a65726f56 4109		.strz	"crcZeroValue"
00000c69 616c756500      
00000c6e ca02             4110		.byte	202,2
00000c70 33               4111		.byte	51
00000c71 01               4112		.byte	1
00000c72 00000000         4113		.long	.LDW_5cac220
00000c76 00               4114		.byte	0
00000c77 00               4115		.byte	0
                          4116	
                          4117		.section	.debug_abbrev
000000ac 07               4118		.byte	7
000000ad 34               4119		.byte	52
000000ae 00               4120		.byte	0
000000af 0308             4121		.byte	3,8
000000b1 3b0f             4122		.byte	59,15
000000b3 390f             4123		.byte	57,15
000000b5 3a0f             4124		.byte	58,15
000000b7 4910             4125		.byte	73,16
000000b9 3f0c             4126		.byte	63,12
000000bb 3c0c             4127		.byte	60,12
000000bd 0000             4128		.byte	0,0
                          4129	

                                   Fri Apr 10 08:31:50 2020           Page 75
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          4130		.section	.debug_info
                          4131	.LDW_5bf39f8:
00000c78 18               4132		.byte	24
00000c79 5365634d5f436f6d 4133		.strz	"SecM_ComputeCRC"
00000c81 7075746543524300
00000c89 bd01             4134		.byte	189,1
00000c8b 11               4135		.byte	17
00000c8c 0a               4136		.byte	10
00000c8d 00000000         4137		.long	.LDW_49cb6b0
00000c91 01               4138		.byte	1
00000c92 00               4139		.byte	0
00000c93 01               4140		.byte	1
00000c94 01               4141		.byte	1
00000c95 00               4142		.byte	0
00000c96 01               4143		.byte	1
                          4144	
                          4145		.section	.debug_abbrev
000000bf 18               4146		.byte	24
000000c0 2e               4147		.byte	46
000000c1 01               4148		.byte	1
000000c2 0308             4149		.byte	3,8
000000c4 3b0f             4150		.byte	59,15
000000c6 390f             4151		.byte	57,15
000000c8 3a0f             4152		.byte	58,15
000000ca 4910             4153		.byte	73,16
000000cc 3c0c             4154		.byte	60,12
000000ce 200b             4155		.byte	32,11
000000d0 3f0c             4156		.byte	63,12
000000d2 320b             4157		.byte	50,11
000000d4 4c0b             4158		.byte	76,11
000000d6 270c             4159		.byte	39,12
000000d8 0000             4160		.byte	0,0
                          4161	
                          4162		.section	.debug_info
00000c97 00               4163		.byte	0
                          4164	
                          4165	.LDW_5cae368:
00000c98 17               4166		.byte	23
00000c99 5365634d5f536574 4167		.strz	"SecM_SetInteger"
00000ca1 496e746567657200
00000ca9 9501             4168		.byte	149,1
00000cab 0d               4169		.byte	13
00000cac 02               4170		.byte	2
00000cad 01               4171		.byte	1
00000cae 00               4172		.byte	0
00000caf 01               4173		.byte	1
00000cb0 01               4174		.byte	1
00000cb1 00               4175		.byte	0
00000cb2 01               4176		.byte	1
                          4177	
                          4178		.section	.debug_abbrev
000000da 17               4179		.byte	23
000000db 2e               4180		.byte	46
000000dc 01               4181		.byte	1
000000dd 0308             4182		.byte	3,8
000000df 3b0f             4183		.byte	59,15
000000e1 390f             4184		.byte	57,15
000000e3 3a0f             4185		.byte	58,15

                                   Fri Apr 10 08:31:50 2020           Page 76
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000000e5 3c0c             4186		.byte	60,12
000000e7 200b             4187		.byte	32,11
000000e9 3f0c             4188		.byte	63,12
000000eb 320b             4189		.byte	50,11
000000ed 4c0b             4190		.byte	76,11
000000ef 270c             4191		.byte	39,12
000000f1 0000             4192		.byte	0,0
                          4193	
                          4194		.section	.debug_info
00000cb3 00               4195		.byte	0
                          4196	
                          4197	.LDW_49cb868:
00000cb4 16               4198		.byte	22
00000cb5 5365634d5f566572 4199		.strz	"SecM_VerifyWrapper"
00000cbd 6966795772617070
00000cc5 657200          
00000cc8 8703             4200		.byte	135,3
00000cca 18               4201		.byte	24
00000ccb 01               4202		.byte	1
00000ccc 00000000         4203		.long	.LDW_49cb6b0
00000cd0 00000000         4204		.long	SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000cd4 00000000         4205		.long	__ghs_eofn_SecM_VerifyWrapper
00000cd8 0151             4206		.byte	1,81
00000cda 808080f00f       4207		.byte	128,128,128,240,15
00000cdf 0c               4208		.byte	12
00000ce0 00               4209		.byte	0
00000ce1 28               4210		.byte	40
00000ce2 00               4211		.byte	0
00000ce3 00               4212		.byte	0
00000ce4 00               4213		.byte	0
00000ce5 00               4214		.byte	0
00000ce6 01               4215		.byte	1
00000ce7 00               4216		.byte	0
00000ce8 01               4217		.byte	1
                          4218	
                          4219		.section	.debug_abbrev
000000f3 16               4220		.byte	22
000000f4 2e               4221		.byte	46
000000f5 01               4222		.byte	1
000000f6 0308             4223		.byte	3,8
000000f8 3b0f             4224		.byte	59,15
000000fa 390f             4225		.byte	57,15
000000fc 3a0f             4226		.byte	58,15
000000fe 4910             4227		.byte	73,16
00000100 1101             4228		.byte	17,1
00000102 1201             4229		.byte	18,1
00000104 400a             4230		.byte	64,10
00000106 8341             4231		.byte	131,65
00000108 0f               4232		.byte	15
00000109 8741             4233		.byte	135,65
0000010b 0d               4234		.byte	13
0000010c 8541             4235		.byte	133,65
0000010e 0f               4236		.byte	15
0000010f 8641             4237		.byte	134,65
00000111 0d               4238		.byte	13
00000112 9241             4239		.byte	146,65
00000114 0f               4240		.byte	15
00000115 3c0c             4241		.byte	60,12

                                   Fri Apr 10 08:31:50 2020           Page 77
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000117 200b             4242		.byte	32,11
00000119 3f0c             4243		.byte	63,12
0000011b 320b             4244		.byte	50,11
0000011d 4c0b             4245		.byte	76,11
0000011f 270c             4246		.byte	39,12
00000121 0000             4247		.byte	0,0
                          4248	
                          4249		.section	.debug_frame
                          4250	.LDW_49cba08:
00000090 00000014         4251		.long	.LDW_unq_4-.LDW_unq_3
                          4252	.LDW_unq_3:
00000094 00000000         4253		.long	.LDW_5c4a068
00000098 00000000         4254		.long	SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
0000009c 0000005c         4255		.long	__ghs_eofn_SecM_VerifyWrapper-SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000a0 01               4256		.byte	1
000000a1 00000000         4257		.long	.LDW11
000000a5 00               4258		.byte	0
000000a6 00               4259		.byte	0
000000a7 00               4260		.byte	0
                          4261	.LDW_unq_4:
                          4262		.section	.debug_line
000001b2 000502           4263		.byte	0,5,2
000001b5 00000000         4264		.long	SecM_VerifyWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000001b9 06               4265		.byte	6
000001ba 03               4266		.byte	3
000001bb 8803             4267		.byte	136,3
000001bd 02               4268		.byte	2
000001be 00               4269		.byte	0
000001bf 01               4270		.byte	1
000001c0 03               4271		.byte	3
000001c1 0e               4272		.byte	14
000001c2 02               4273		.byte	2
000001c3 10               4274		.byte	16
000001c4 01               4275		.byte	1
000001c5 13               4276		.byte	19
000001c6 1c               4277		.byte	28
000001c7 03               4278		.byte	3
000001c8 1d               4279		.byte	29
000001c9 02               4280		.byte	2
000001ca 02               4281		.byte	2
000001cb 01               4282		.byte	1
000001cc 14               4283		.byte	20
000001cd 02               4284		.byte	2
000001ce 02               4285		.byte	2
000001cf 000502           4286		.byte	0,5,2
000001d2 00000000         4287		.long	.LDWlin1
000001d6 0d               4288		.byte	13
000001d7 1b               4289		.byte	27
000001d8 1b               4290		.byte	27
000001d9 15               4291		.byte	21
000001da 000502           4292		.byte	0,5,2
000001dd 00000000         4293		.long	.LDWlin2
000001e1 0b               4294		.byte	11
000001e2 0c               4295		.byte	12
000001e3 13               4296		.byte	19
000001e4 13               4297		.byte	19

                                   Fri Apr 10 08:31:50 2020           Page 78
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000001e5 02               4298		.byte	2
000001e6 00               4299		.byte	0
000001e7 0d               4300		.byte	13
000001e8 13               4301		.byte	19
000001e9 23               4302		.byte	35
000001ea 13               4303		.byte	19
000001eb 1d               4304		.byte	29
000001ec 24               4305		.byte	36
000001ed 000502           4306		.byte	0,5,2
000001f0 00000000         4307		.long	.LDWlin3
000001f4 0b               4308		.byte	11
000001f5 0d               4309		.byte	13
000001f6 02               4310		.byte	2
000001f7 00               4311		.byte	0
000001f8 03               4312		.byte	3
000001f9 64               4313		.byte	100
000001fa 02               4314		.byte	2
000001fb 00               4315		.byte	0
000001fc 01               4316		.byte	1
000001fd 000502           4317		.byte	0,5,2
00000200 00000000         4318		.long	.LDWlin4
00000204 03               4319		.byte	3
00000205 1d               4320		.byte	29
00000206 02               4321		.byte	2
00000207 00               4322		.byte	0
00000208 01               4323		.byte	1
00000209 0c               4324		.byte	12
0000020a 02               4325		.byte	2
0000020b 0e               4326		.byte	14
0000020c 000101           4327		.byte	0,1,1
                          4328		.section	.debug_info
                          4329	.LDW_49cb900:
00000ce9 11               4330		.byte	17
00000cea 7056657269667950 4331		.strz	"pVerifyParam"
00000cf2 6172616d00      
00000cf7 8703             4332		.byte	135,3
00000cf9 64               4333		.byte	100
00000cfa 01               4334		.byte	1
00000cfb 00000000         4335		.long	.LDW_498c878
00000cff 00               4336		.byte	0
00000d00 016f             4337		.byte	1,111
                          4338	
                          4339		.section	.debug_abbrev
00000123 11               4340		.byte	17
00000124 05               4341		.byte	5
00000125 00               4342		.byte	0
00000126 0308             4343		.byte	3,8
00000128 3b0f             4344		.byte	59,15
0000012a 390f             4345		.byte	57,15
0000012c 3a0f             4346		.byte	58,15
0000012e 4910             4347		.byte	73,16
00000130 4b0c             4348		.byte	75,12
00000132 020a             4349		.byte	2,10
00000134 0000             4350		.byte	0,0
                          4351	
                          4352		.section	.debug_info
                          4353	.LDW_49cb958:

                                   Fri Apr 10 08:31:50 2020           Page 79
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000d02 11               4354		.byte	17
00000d03 704366674c697374 4355		.strz	"pCfgList"
00000d0b 00              
00000d0c 8803             4356		.byte	136,3
00000d0e 66               4357		.byte	102
00000d0f 01               4358		.byte	1
00000d10 00000000         4359		.long	.LDW_498c6f0
00000d14 00               4360		.byte	0
00000d15 016d             4361		.byte	1,109
                          4362	
                          4363	.LDW_49833e0:
00000d17 1f               4364		.byte	31
00000d18 00000000         4365		.long	.LDW01
00000d1c 00000000         4366		.long	.LDW11
                          4367	
                          4368		.section	.debug_abbrev
00000136 1f               4369		.byte	31
00000137 0b               4370		.byte	11
00000138 01               4371		.byte	1
00000139 1101             4372		.byte	17,1
0000013b 1201             4373		.byte	18,1
0000013d 0000             4374		.byte	0,0
                          4375	
                          4376		.section	.debug_info
                          4377	.LDW_49cb9b0:
00000d20 06               4378		.byte	6
00000d21 726573756c7400   4379		.strz	"result"
00000d28 8a03             4380		.byte	138,3
00000d2a 1f               4381		.byte	31
00000d2b 01               4382		.byte	1
00000d2c 00000000         4383		.long	.LDW_49cb6b0
00000d30 00               4384		.byte	0
00000d31 00               4385		.byte	0
00000d32 0153             4386		.byte	1,83
                          4387	
                          4388	.LDW_49cec00:
00000d34 06               4389		.byte	6
00000d35 696e64657800     4390		.strz	"index"
00000d3b 8b03             4391		.byte	139,3
00000d3d 1f               4392		.byte	31
00000d3e 01               4393		.byte	1
00000d3f 00000000         4394		.long	.LDW_49ceba8
00000d43 00               4395		.byte	0
00000d44 00               4396		.byte	0
00000d45 016e             4397		.byte	1,110
                          4398	
                          4399	.LDW_5c73708:
00000d47 06               4400		.byte	6
00000d48 636667436f756e74 4401		.strz	"cfgCount"
00000d50 00              
00000d51 8c03             4402		.byte	140,3
00000d53 1f               4403		.byte	31
00000d54 01               4404		.byte	1
00000d55 00000000         4405		.long	.LDW_49ceba8
00000d59 00               4406		.byte	0
00000d5a 00               4407		.byte	0
00000d5b 0169             4408		.byte	1,105
                          4409	

                                   Fri Apr 10 08:31:50 2020           Page 80
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          4410	.LDW_5c73600:
00000d5d 06               4411		.byte	6
00000d5e 616374696f6e00   4412		.strz	"action"
00000d65 8d03             4413		.byte	141,3
00000d67 1f               4414		.byte	31
00000d68 01               4415		.byte	1
00000d69 00000000         4416		.long	.LDW_49cb658
00000d6d 00               4417		.byte	0
00000d6e 00               4418		.byte	0
00000d6f 016c             4419		.byte	1,108
                          4420	
                          4421	.LDW_5c734a0:
00000d71 06               4422		.byte	6
00000d72 62797465436f756e 4423		.strz	"byteCount"
00000d7a 7400            
00000d7c 8e03             4424		.byte	142,3
00000d7e 1f               4425		.byte	31
00000d7f 01               4426		.byte	1
00000d80 00000000         4427		.long	.LDW_5c72fd0
00000d84 00               4428		.byte	0
00000d85 00               4429		.byte	0
00000d86 016a             4430		.byte	1,106
                          4431	
                          4432	.LDW_5c73130:
00000d88 06               4433		.byte	6
00000d89 736f757263654f66 4434		.strz	"sourceOffset"
00000d91 6673657400      
00000d96 8f03             4435		.byte	143,3
00000d98 1f               4436		.byte	31
00000d99 01               4437		.byte	1
00000d9a 00000000         4438		.long	.LDW_5c730d8
00000d9e 00               4439		.byte	0
00000d9f 00               4440		.byte	0
00000da0 016b             4441		.byte	1,107
                          4442	
                          4443	.LDW_5c731e0:
00000da2 06               4444		.byte	6
00000da3 70436f6e66696700 4445		.strz	"pConfig"
00000dab 9003             4446		.byte	144,3
00000dad 3d               4447		.byte	61
00000dae 01               4448		.byte	1
00000daf 00000000         4449		.long	.LDW_498c760
00000db3 00               4450		.byte	0
00000db4 00               4451		.byte	0
00000db5 0157             4452		.byte	1,87
                          4453	
                          4454	.LDW_5c73238:
00000db7 06               4455		.byte	6
00000db8 705072696d697469 4456		.strz	"pPrimitive"
00000dc0 766500          
00000dc3 9103             4457		.byte	145,3
00000dc5 3d               4458		.byte	61
00000dc6 01               4459		.byte	1
00000dc7 00000000         4460		.long	.LDW_498ca00
00000dcb 00               4461		.byte	0
00000dcc 00               4462		.byte	0
00000dcd 0156             4463		.byte	1,86
                          4464	
                          4465	.LDW_5c73290:

                                   Fri Apr 10 08:31:50 2020           Page 81
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000dcf 06               4466		.byte	6
00000dd0 70506172616d00   4467		.strz	"pParam"
00000dd7 9203             4468		.byte	146,3
00000dd9 3d               4469		.byte	61
00000dda 01               4470		.byte	1
00000ddb 00000000         4471		.long	.LDW_498c878
00000ddf 00               4472		.byte	0
00000de0 00               4473		.byte	0
00000de1 0153             4474		.byte	1,83
                          4475	
00000de3 00               4476		.byte	0
                          4477	
00000de4 00               4478		.byte	0
                          4479	
                          4480	.LDW_49cec58:
00000de5 16               4481		.byte	22
00000de6 5365634d5f557064 4482		.strz	"SecM_UpdateSegment"
00000dee 6174655365676d65
00000df6 6e7400          
00000df9 e403             4483		.byte	228,3
00000dfb 18               4484		.byte	24
00000dfc 01               4485		.byte	1
00000dfd 00000000         4486		.long	.LDW_49cb6b0
00000e01 00000000         4487		.long	SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000e05 00000000         4488		.long	__ghs_eofn_SecM_UpdateSegment
00000e09 0151             4489		.byte	1,81
00000e0b 808080f80f       4490		.byte	128,128,128,248,15
00000e10 c800             4491		.byte	200,0
00000e12 00               4492		.byte	0
00000e13 e800             4493		.byte	232,0
00000e15 00               4494		.byte	0
00000e16 00               4495		.byte	0
00000e17 00               4496		.byte	0
00000e18 00               4497		.byte	0
00000e19 01               4498		.byte	1
00000e1a 00               4499		.byte	0
00000e1b 01               4500		.byte	1
                          4501	
                          4502		.section	.debug_frame
                          4503	.LDW_5c88770:
000000a8 00000014         4504		.long	.LDW_unq_6-.LDW_unq_5
                          4505	.LDW_unq_5:
000000ac 00000000         4506		.long	.LDW_5c4a068
000000b0 00000000         4507		.long	SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000b4 00000088         4508		.long	__ghs_eofn_SecM_UpdateSegment-SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000b8 01               4509		.byte	1
000000b9 00000000         4510		.long	.LDW31
000000bd 00               4511		.byte	0
000000be 00               4512		.byte	0
000000bf 00               4513		.byte	0
                          4514	.LDW_unq_6:
                          4515		.section	.debug_line
0000020f 000502           4516		.byte	0,5,2
00000212 00000000         4517		.long	SecM_UpdateSegment..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000216 06               4518		.byte	6
00000217 03               4519		.byte	3
00000218 e503             4520		.byte	229,3
0000021a 02               4521		.byte	2

                                   Fri Apr 10 08:31:50 2020           Page 82
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000021b 00               4522		.byte	0
0000021c 01               4523		.byte	1
0000021d 03               4524		.byte	3
0000021e 0e               4525		.byte	14
0000021f 02               4526		.byte	2
00000220 12               4527		.byte	18
00000221 01               4528		.byte	1
00000222 14               4529		.byte	20
00000223 000502           4530		.byte	0,5,2
00000226 00000000         4531		.long	.LDWlin5
0000022a 0b               4532		.byte	11
0000022b 0c               4533		.byte	12
0000022c 1b               4534		.byte	27
0000022d 03               4535		.byte	3
0000022e 04               4536		.byte	4
0000022f 02               4537		.byte	2
00000230 02               4538		.byte	2
00000231 01               4539		.byte	1
00000232 13               4540		.byte	19
00000233 03               4541		.byte	3
00000234 0d               4542		.byte	13
00000235 02               4543		.byte	2
00000236 02               4544		.byte	2
00000237 01               4545		.byte	1
00000238 14               4546		.byte	20
00000239 2b               4547		.byte	43
0000023a 1c               4548		.byte	28
0000023b 03               4549		.byte	3
0000023c 3c               4550		.byte	60
0000023d 02               4551		.byte	2
0000023e 00               4552		.byte	0
0000023f 01               4553		.byte	1
00000240 0d               4554		.byte	13
00000241 02               4555		.byte	2
00000242 00               4556		.byte	0
00000243 03               4557		.byte	3
00000244 41               4558		.byte	65
00000245 02               4559		.byte	2
00000246 00               4560		.byte	0
00000247 01               4561		.byte	1
00000248 000502           4562		.byte	0,5,2
0000024b 00000000         4563		.long	.LDWlin6
0000024f 0d               4564		.byte	13
00000250 000502           4565		.byte	0,5,2
00000253 00000000         4566		.long	.LDWlin7
00000257 02               4567		.byte	2
00000258 00               4568		.byte	0
00000259 02               4569		.byte	2
0000025a 04               4570		.byte	4
0000025b 02               4571		.byte	2
0000025c 00               4572		.byte	0
0000025d 0d               4573		.byte	13
0000025e 13               4574		.byte	19
0000025f 23               4575		.byte	35
00000260 0d               4576		.byte	13
00000261 02               4577		.byte	2

                                   Fri Apr 10 08:31:50 2020           Page 83
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000262 00               4578		.byte	0
00000263 0d               4579		.byte	13
00000264 03               4580		.byte	3
00000265 05               4581		.byte	5
00000266 02               4582		.byte	2
00000267 10               4583		.byte	16
00000268 01               4584		.byte	1
00000269 000502           4585		.byte	0,5,2
0000026c 00000000         4586		.long	.LDWlin8
00000270 03               4587		.byte	3
00000271 0e               4588		.byte	14
00000272 02               4589		.byte	2
00000273 00               4590		.byte	0
00000274 01               4591		.byte	1
00000275 0c               4592		.byte	12
00000276 13               4593		.byte	19
00000277 000502           4594		.byte	0,5,2
0000027a 00000000         4595		.long	.LDWlin9
0000027e 0b               4596		.byte	11
0000027f 0c               4597		.byte	12
00000280 03               4598		.byte	3
00000281 06               4599		.byte	6
00000282 02               4600		.byte	2
00000283 00               4601		.byte	0
00000284 01               4602		.byte	1
00000285 03               4603		.byte	3
00000286 08               4604		.byte	8
00000287 02               4605		.byte	2
00000288 02               4606		.byte	2
00000289 01               4607		.byte	1
0000028a 02               4608		.byte	2
0000028b 00               4609		.byte	0
0000028c 0d               4610		.byte	13
0000028d 13               4611		.byte	19
0000028e 14               4612		.byte	20
0000028f 000502           4613		.byte	0,5,2
00000292 00000000         4614		.long	.LDWlin10
00000296 03               4615		.byte	3
00000297 05               4616		.byte	5
00000298 02               4617		.byte	2
00000299 00               4618		.byte	0
0000029a 01               4619		.byte	1
0000029b 0c               4620		.byte	12
0000029c 0c               4621		.byte	12
0000029d 0d               4622		.byte	13
0000029e 02               4623		.byte	2
0000029f 00               4624		.byte	0
000002a0 0c               4625		.byte	12
000002a1 02               4626		.byte	2
000002a2 10               4627		.byte	16
000002a3 000101           4628		.byte	0,1,1
                          4629		.section	.debug_info
                          4630	.LDW_5c732e8:
00000e1c 11               4631		.byte	17
00000e1d 70436f6e74657874 4632		.strz	"pContext"
00000e25 00              
00000e26 e403             4633		.byte	228,3

                                   Fri Apr 10 08:31:50 2020           Page 84
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000e28 63               4634		.byte	99
00000e29 01               4635		.byte	1
00000e2a 00000000         4636		.long	.LDW_498c7d0
00000e2e 00               4637		.byte	0
00000e2f 016f             4638		.byte	1,111
                          4639	
                          4640	.LDW_5c733f0:
00000e31 11               4641		.byte	17
00000e32 704366674c697374 4642		.strz	"pCfgList"
00000e3a 00              
00000e3b e503             4643		.byte	229,3
00000e3d 3e               4644		.byte	62
00000e3e 01               4645		.byte	1
00000e3f 00000000         4646		.long	.LDW_498c6f0
00000e43 00               4647		.byte	0
00000e44 016b             4648		.byte	1,107
                          4649	
                          4650	.LDW_4983560:
00000e46 1f               4651		.byte	31
00000e47 00000000         4652		.long	.LDW21
00000e4b 00000000         4653		.long	.LDW31
                          4654	
                          4655	.LDW_5c73398:
00000e4f 06               4656		.byte	6
00000e50 726573756c7400   4657		.strz	"result"
00000e57 e703             4658		.byte	231,3
00000e59 16               4659		.byte	22
00000e5a 01               4660		.byte	1
00000e5b 00000000         4661		.long	.LDW_49cb6b0
00000e5f 00               4662		.byte	0
00000e60 00               4663		.byte	0
00000e61 0153             4664		.byte	1,83
                          4665	
                          4666	.LDW_5c74650:
00000e63 06               4667		.byte	6
00000e64 63757272656e7441 4668		.strz	"currentAddress"
00000e6c 64647265737300  
00000e73 e803             4669		.byte	232,3
00000e75 16               4670		.byte	22
00000e76 01               4671		.byte	1
00000e77 00000000         4672		.long	.LDW_5c743e8
00000e7b 00               4673		.byte	0
00000e7c 00               4674		.byte	0
00000e7d 016a             4675		.byte	1,106
                          4676	
                          4677	.LDW_5c742e0:
00000e7f 06               4678		.byte	6
00000e80 72656d61696e6465 4679		.strz	"remainder"
00000e88 7200            
00000e8a e903             4680		.byte	233,3
00000e8c 16               4681		.byte	22
00000e8d 01               4682		.byte	1
00000e8e 00000000         4683		.long	.LDW_5c746a8
00000e92 00               4684		.byte	0
00000e93 00               4685		.byte	0
00000e94 016d             4686		.byte	1,109
                          4687	
                          4688	.LDW_5c74548:
00000e96 06               4689		.byte	6

                                   Fri Apr 10 08:31:50 2020           Page 85
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000e97 766572696679436f 4690		.strz	"verifyCount"
00000e9f 756e7400        
00000ea3 ea03             4691		.byte	234,3
00000ea5 16               4692		.byte	22
00000ea6 01               4693		.byte	1
00000ea7 00000000         4694		.long	.LDW_5c746a8
00000eab 00               4695		.byte	0
00000eac 00               4696		.byte	0
00000ead 016e             4697		.byte	1,110
                          4698	
                          4699	.LDW_5c74758:
00000eaf 06               4700		.byte	6
00000eb0 72656164436f756e 4701		.strz	"readCount"
00000eb8 7400            
00000eba eb03             4702		.byte	235,3
00000ebc 16               4703		.byte	22
00000ebd 01               4704		.byte	1
00000ebe 00000000         4705		.long	.LDW_5c746a8
00000ec2 00               4706		.byte	0
00000ec3 00               4707		.byte	0
00000ec4 0153             4708		.byte	1,83
                          4709	
                          4710	.LDW_5c745a0:
00000ec6 06               4711		.byte	6
00000ec7 636f756e744d6173 4712		.strz	"countMask"
00000ecf 6b00            
00000ed1 ee03             4713		.byte	238,3
00000ed3 16               4714		.byte	22
00000ed4 01               4715		.byte	1
00000ed5 00000000         4716		.long	.LDW_5c746a8
00000ed9 00               4717		.byte	0
00000eda 00               4718		.byte	0
00000edb 0169             4719		.byte	1,105
                          4720	
                          4721	.LDW_5c74440:
00000edd 06               4722		.byte	6
00000ede 636f756e74526573 4723		.strz	"countResult"
00000ee6 756c7400        
00000eea ef03             4724		.byte	239,3
00000eec 16               4725		.byte	22
00000eed 01               4726		.byte	1
00000eee 00000000         4727		.long	.LDW_49cb6b0
00000ef2 00               4728		.byte	0
00000ef3 00               4729		.byte	0
00000ef4 0168             4730		.byte	1,104
                          4731	
                          4732	.LDW_5c744f0:
00000ef6 06               4733		.byte	6
00000ef7 7665726966794275 4734		.strz	"verifyBuffer"
00000eff 6666657200      
00000f04 f103             4735		.byte	241,3
00000f06 16               4736		.byte	22
00000f07 01               4737		.byte	1
00000f08 00000000         4738		.long	.LDW_49cecf0
00000f0c 00               4739		.byte	0
00000f0d 00               4740		.byte	0
00000f0e 0271             4741		.byte	2,113
00000f10 08               4742		.byte	8
                          4743	
                          4744	.LDW_5c74498:
00000f11 06               4745		.byte	6

                                   Fri Apr 10 08:31:50 2020           Page 86
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000f12 7056657269667950 4746		.strz	"pVerifyParam"
00000f1a 6172616d00      
00000f1f f203             4747		.byte	242,3
00000f21 3c               4748		.byte	60
00000f22 01               4749		.byte	1
00000f23 00000000         4750		.long	.LDW_498c878
00000f27 00               4751		.byte	0
00000f28 00               4752		.byte	0
00000f29 016c             4753		.byte	1,108
                          4754	
00000f2b 00               4755		.byte	0
                          4756	
00000f2c 00               4757		.byte	0
                          4758	
                          4759	.LDW_49ced78:
00000f2d 16               4760		.byte	22
00000f2e 5365634d5f557064 4761		.strz	"SecM_UpdateSegmentAddress"
00000f36 6174655365676d65
00000f3e 6e74416464726573
00000f46 7300            
00000f48 e804             4762		.byte	232,4
00000f4a 18               4763		.byte	24
00000f4b 01               4764		.byte	1
00000f4c 00000000         4765		.long	.LDW_49cb6b0
00000f50 00000000         4766		.long	SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000f54 00000000         4767		.long	__ghs_eofn_SecM_UpdateSegmentAddress
00000f58 0151             4768		.byte	1,81
00000f5a 808080800e       4769		.byte	128,128,128,128,14
00000f5f 14               4770		.byte	20
00000f60 00               4771		.byte	0
00000f61 20               4772		.byte	32
00000f62 00               4773		.byte	0
00000f63 00               4774		.byte	0
00000f64 00               4775		.byte	0
00000f65 00               4776		.byte	0
00000f66 01               4777		.byte	1
00000f67 00               4778		.byte	0
00000f68 01               4779		.byte	1
                          4780	
                          4781		.section	.debug_frame
                          4782	.LDW_5c82b98:
000000c0 00000014         4783		.long	.LDW_unq_8-.LDW_unq_7
                          4784	.LDW_unq_7:
000000c4 00000000         4785		.long	.LDW_5c4a068
000000c8 00000000         4786		.long	SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000cc 00000056         4787		.long	__ghs_eofn_SecM_UpdateSegmentAddress-SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000d0 01               4788		.byte	1
000000d1 00000000         4789		.long	.LDW51
000000d5 00               4790		.byte	0
000000d6 00               4791		.byte	0
000000d7 00               4792		.byte	0
                          4793	.LDW_unq_8:
                          4794		.section	.debug_line
000002a6 000502           4795		.byte	0,5,2
000002a9 00000000         4796		.long	SecM_UpdateSegmentAddress..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000002ad 06               4797		.byte	6
000002ae 03               4798		.byte	3
000002af ea04             4799		.byte	234,4
000002b1 02               4800		.byte	2
000002b2 00               4801		.byte	0

                                   Fri Apr 10 08:31:50 2020           Page 87
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000002b3 01               4802		.byte	1
000002b4 03               4803		.byte	3
000002b5 05               4804		.byte	5
000002b6 02               4805		.byte	2
000002b7 12               4806		.byte	18
000002b8 01               4807		.byte	1
000002b9 14               4808		.byte	20
000002ba 000502           4809		.byte	0,5,2
000002bd 00000000         4810		.long	.LDWlin11
000002c1 0b               4811		.byte	11
000002c2 0c               4812		.byte	12
000002c3 3b               4813		.byte	59
000002c4 3c               4814		.byte	60
000002c5 1c               4815		.byte	28
000002c6 23               4816		.byte	35
000002c7 1b               4817		.byte	27
000002c8 1d               4818		.byte	29
000002c9 000502           4819		.byte	0,5,2
000002cc 00000000         4820		.long	.LDWlin12
000002d0 0b               4821		.byte	11
000002d1 0c               4822		.byte	12
000002d2 0c               4823		.byte	12
000002d3 02               4824		.byte	2
000002d4 00               4825		.byte	0
000002d5 0c               4826		.byte	12
000002d6 02               4827		.byte	2
000002d7 0c               4828		.byte	12
000002d8 000101           4829		.byte	0,1,1
                          4830		.section	.debug_info
                          4831	.LDW_5c74390:
00000f69 11               4832		.byte	17
00000f6a 70436f6e74657874 4833		.strz	"pContext"
00000f72 00              
00000f73 e804             4834		.byte	232,4
00000f75 6a               4835		.byte	106
00000f76 01               4836		.byte	1
00000f77 00000000         4837		.long	.LDW_498c7d0
00000f7b 00               4838		.byte	0
00000f7c 016e             4839		.byte	1,110
                          4840	
                          4841	.LDW_5c73e68:
00000f7e 11               4842		.byte	17
00000f7f 704366674c697374 4843		.strz	"pCfgList"
00000f87 00              
00000f88 e904             4844		.byte	233,4
00000f8a 3e               4845		.byte	62
00000f8b 01               4846		.byte	1
00000f8c 00000000         4847		.long	.LDW_498c6f0
00000f90 00               4848		.byte	0
00000f91 016f             4849		.byte	1,111
                          4850	
                          4851	.LDW_5c74180:
00000f93 11               4852		.byte	17
00000f94 705365676d656e74 4853		.strz	"pSegmentInfo"
00000f9c 496e666f00      
00000fa1 ea04             4854		.byte	234,4
00000fa3 3d               4855		.byte	61
00000fa4 01               4856		.byte	1
00000fa5 00000000         4857		.long	.LDW_498c920

                                   Fri Apr 10 08:31:50 2020           Page 88
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000fa9 00               4858		.byte	0
00000faa 016d             4859		.byte	1,109
                          4860	
                          4861	.LDW_4983620:
00000fac 1f               4862		.byte	31
00000fad 00000000         4863		.long	.LDW41
00000fb1 00000000         4864		.long	.LDW51
                          4865	
                          4866	.LDW_5c73ec0:
00000fb5 06               4867		.byte	6
00000fb6 726573756c7400   4868		.strz	"result"
00000fbd ec04             4869		.byte	236,4
00000fbf 16               4870		.byte	22
00000fc0 01               4871		.byte	1
00000fc1 00000000         4872		.long	.LDW_49cb6b0
00000fc5 00               4873		.byte	0
00000fc6 00               4874		.byte	0
00000fc7 0153             4875		.byte	1,83
                          4876	
                          4877	.LDW_5c73ba8:
00000fc9 06               4878		.byte	6
00000fca 6164647265737342 4879		.strz	"addressBuffer"
00000fd2 756666657200    
00000fd8 ed04             4880		.byte	237,4
00000fda 16               4881		.byte	22
00000fdb 01               4882		.byte	1
00000fdc 00000000         4883		.long	.LDW_49cee10
00000fe0 00               4884		.byte	0
00000fe1 00               4885		.byte	0
00000fe2 0271             4886		.byte	2,113
00000fe4 08               4887		.byte	8
                          4888	
                          4889	.LDW_5c73b50:
00000fe5 07               4890		.byte	7
00000fe6 7056657269667950 4891		.strz	"pVerifyParam"
00000fee 6172616d00      
00000ff3 ee04             4892		.byte	238,4
00000ff5 3c               4893		.byte	60
00000ff6 01               4894		.byte	1
00000ff7 00000000         4895		.long	.LDW_498c878
00000ffb 00               4896		.byte	0
00000ffc 00               4897		.byte	0
                          4898	
00000ffd 00               4899		.byte	0
                          4900	
00000ffe 00               4901		.byte	0
                          4902	
                          4903	.LDW_49cee98:
00000fff 15               4904		.byte	21
00001000 5365634d5f506f70 4905		.strz	"SecM_PopulateCfgList"
00001008 756c617465436667
00001010 4c69737400      
00001015 9205             4906		.byte	146,5
00001017 0d               4907		.byte	13
00001018 01               4908		.byte	1
00001019 00000000         4909		.long	SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
0000101d 00000000         4910		.long	__ghs_eofn_SecM_PopulateCfgList
00001021 0151             4911		.byte	1,81
00001023 828080800e       4912		.byte	130,128,128,128,14
00001028 0c               4913		.byte	12

                                   Fri Apr 10 08:31:50 2020           Page 89
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001029 00               4914		.byte	0
0000102a 18               4915		.byte	24
0000102b 00               4916		.byte	0
0000102c 00               4917		.byte	0
0000102d 00               4918		.byte	0
0000102e 00               4919		.byte	0
0000102f 01               4920		.byte	1
00001030 00               4921		.byte	0
00001031 01               4922		.byte	1
                          4923	
                          4924		.section	.debug_abbrev
0000013f 15               4925		.byte	21
00000140 2e               4926		.byte	46
00000141 01               4927		.byte	1
00000142 0308             4928		.byte	3,8
00000144 3b0f             4929		.byte	59,15
00000146 390f             4930		.byte	57,15
00000148 3a0f             4931		.byte	58,15
0000014a 1101             4932		.byte	17,1
0000014c 1201             4933		.byte	18,1
0000014e 400a             4934		.byte	64,10
00000150 8341             4935		.byte	131,65
00000152 0f               4936		.byte	15
00000153 8741             4937		.byte	135,65
00000155 0d               4938		.byte	13
00000156 8541             4939		.byte	133,65
00000158 0f               4940		.byte	15
00000159 8641             4941		.byte	134,65
0000015b 0d               4942		.byte	13
0000015c 9241             4943		.byte	146,65
0000015e 0f               4944		.byte	15
0000015f 3c0c             4945		.byte	60,12
00000161 200b             4946		.byte	32,11
00000163 3f0c             4947		.byte	63,12
00000165 320b             4948		.byte	50,11
00000167 4c0b             4949		.byte	76,11
00000169 270c             4950		.byte	39,12
0000016b 0000             4951		.byte	0,0
                          4952	
                          4953		.section	.debug_frame
                          4954	.LDW_5c82f10:
000000d8 00000014         4955		.long	.LDW_unq_a-.LDW_unq_9
                          4956	.LDW_unq_9:
000000dc 00000000         4957		.long	.LDW_5c4a068
000000e0 00000000         4958		.long	SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000e4 00000044         4959		.long	__ghs_eofn_SecM_PopulateCfgList-SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000e8 01               4960		.byte	1
000000e9 00000000         4961		.long	.LDW71
000000ed 00               4962		.byte	0
000000ee 00               4963		.byte	0
000000ef 00               4964		.byte	0
                          4965	.LDW_unq_a:
                          4966		.section	.debug_line
000002db 000502           4967		.byte	0,5,2
000002de 00000000         4968		.long	SecM_PopulateCfgList..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000002e2 06               4969		.byte	6

                                   Fri Apr 10 08:31:50 2020           Page 90
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000002e3 03               4970		.byte	3
000002e4 9305             4971		.byte	147,5
000002e6 02               4972		.byte	2
000002e7 00               4973		.byte	0
000002e8 01               4974		.byte	1
000002e9 03               4975		.byte	3
000002ea 08               4976		.byte	8
000002eb 02               4977		.byte	2
000002ec 08               4978		.byte	8
000002ed 01               4979		.byte	1
000002ee 14               4980		.byte	20
000002ef 02               4981		.byte	2
000002f0 02               4982		.byte	2
000002f1 000502           4983		.byte	0,5,2
000002f4 00000000         4984		.long	.LDWlin13
000002f8 0d               4985		.byte	13
000002f9 2b               4986		.byte	43
000002fa 03               4987		.byte	3
000002fb 04               4988		.byte	4
000002fc 02               4989		.byte	2
000002fd 08               4990		.byte	8
000002fe 01               4991		.byte	1
000002ff 000502           4992		.byte	0,5,2
00000302 00000000         4993		.long	.LDWlin14
00000306 0b               4994		.byte	11
00000307 0c               4995		.byte	12
00000308 1c               4996		.byte	28
00000309 1b               4997		.byte	27
0000030a 14               4998		.byte	20
0000030b 13               4999		.byte	19
0000030c 02               5000		.byte	2
0000030d 00               5001		.byte	0
0000030e 03               5002		.byte	3
0000030f 6f               5003		.byte	111
00000310 02               5004		.byte	2
00000311 00               5005		.byte	0
00000312 01               5006		.byte	1
00000313 000502           5007		.byte	0,5,2
00000316 00000000         5008		.long	.LDWlin15
0000031a 03               5009		.byte	3
0000031b 12               5010		.byte	18
0000031c 02               5011		.byte	2
0000031d 00               5012		.byte	0
0000031e 01               5013		.byte	1
0000031f 0d               5014		.byte	13
00000320 13               5015		.byte	19
00000321 02               5016		.byte	2
00000322 08               5017		.byte	8
00000323 000101           5018		.byte	0,1,1
                          5019		.section	.debug_info
                          5020	.LDW_5c73e10:
00001032 11               5021		.byte	17
00001033 70536f757263654c 5022		.strz	"pSourceList"
0000103b 69737400        
0000103f 9205             5023		.byte	146,5
00001041 63               5024		.byte	99
00001042 01               5025		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 91
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001043 00000000         5026		.long	.LDW_498c728
00001047 00               5027		.byte	0
00001048 0153             5028		.byte	1,83
                          5029	
                          5030	.LDW_5c738e8:
0000104a 11               5031		.byte	17
0000104b 705461726765744c 5032		.strz	"pTargetList"
00001053 69737400        
00001057 9305             5033		.byte	147,5
00001059 3e               5034		.byte	62
0000105a 01               5035		.byte	1
0000105b 00000000         5036		.long	.LDW_498c6f0
0000105f 00               5037		.byte	0
00001060 0154             5038		.byte	1,84
                          5039	
                          5040	.LDW_5c73a48:
00001062 11               5041		.byte	17
00001063 6d61736b00       5042		.strz	"mask"
00001068 9305             5043		.byte	147,5
0000106a 59               5044		.byte	89
0000106b 01               5045		.byte	1
0000106c 00000000         5046		.long	.LDW_49cb658
00001070 00               5047		.byte	0
00001071 0155             5048		.byte	1,85
                          5049	
                          5050	.LDW_49833b0:
00001073 1f               5051		.byte	31
00001074 00000000         5052		.long	.LDW61
00001078 00000000         5053		.long	.LDW71
                          5054	
                          5055	.LDW_5c73aa0:
0000107c 06               5056		.byte	6
0000107d 696e496e64657800 5057		.strz	"inIndex"
00001085 9505             5058		.byte	149,5
00001087 16               5059		.byte	22
00001088 01               5060		.byte	1
00001089 00000000         5061		.long	.LDW_49ceba8
0000108d 00               5062		.byte	0
0000108e 00               5063		.byte	0
0000108f 016e             5064		.byte	1,110
                          5065	
                          5066	.LDW_5c73af8:
00001091 06               5067		.byte	6
00001092 6f7574496e646578 5068		.strz	"outIndex"
0000109a 00              
0000109b 9605             5069		.byte	150,5
0000109d 16               5070		.byte	22
0000109e 01               5071		.byte	1
0000109f 00000000         5072		.long	.LDW_49ceba8
000010a3 00               5073		.byte	0
000010a4 00               5074		.byte	0
000010a5 016d             5075		.byte	1,109
                          5076	
                          5077	.LDW_5c73838:
000010a7 06               5078		.byte	6
000010a8 70536f757263654f 5079		.strz	"pSourceOperation"
000010b0 7065726174696f6e
000010b8 00              
000010b9 9705             5080		.byte	151,5
000010bb 3d               5081		.byte	61

                                   Fri Apr 10 08:31:50 2020           Page 92
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000010bc 01               5082		.byte	1
000010bd 00000000         5083		.long	.LDW_498ca00
000010c1 00               5084		.byte	0
000010c2 00               5085		.byte	0
000010c3 0157             5086		.byte	1,87
                          5087	
                          5088	.LDW_5c73f18:
000010c5 06               5089		.byte	6
000010c6 70536f7572636550 5090		.strz	"pSourceParam"
000010ce 6172616d00      
000010d3 9805             5091		.byte	152,5
000010d5 3d               5092		.byte	61
000010d6 01               5093		.byte	1
000010d7 00000000         5094		.long	.LDW_498c878
000010db 00               5095		.byte	0
000010dc 00               5096		.byte	0
000010dd 016f             5097		.byte	1,111
                          5098	
                          5099	.LDW_5c73db8:
000010df 06               5100		.byte	6
000010e0 7054617267657400 5101		.strz	"pTarget"
000010e8 9905             5102		.byte	153,5
000010ea 3d               5103		.byte	61
000010eb 01               5104		.byte	1
000010ec 00000000         5105		.long	.LDW_498c760
000010f0 00               5106		.byte	0
000010f1 00               5107		.byte	0
000010f2 0156             5108		.byte	1,86
                          5109	
000010f4 00               5110		.byte	0
                          5111	
000010f5 00               5112		.byte	0
                          5113	
                          5114	.LDW_49cef30:
000010f6 16               5115		.byte	22
000010f7 5365634d5f566572 5116		.strz	"SecM_VerificationWrapper"
000010ff 696669636174696f
00001107 6e57726170706572
0000110f 00              
00001110 ce05             5117		.byte	206,5
00001112 18               5118		.byte	24
00001113 01               5119		.byte	1
00001114 00000000         5120		.long	.LDW_49cb6b0
00001118 00000000         5121		.long	SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
0000111c 00000000         5122		.long	__ghs_eofn_SecM_VerificationWrapper
00001120 0151             5123		.byte	1,81
00001122 808080f00f       5124		.byte	128,128,128,240,15
00001127 8c01             5125		.byte	140,1
00001129 00               5126		.byte	0
0000112a a801             5127		.byte	168,1
0000112c 00               5128		.byte	0
0000112d 00               5129		.byte	0
0000112e 00               5130		.byte	0
0000112f 00               5131		.byte	0
00001130 01               5132		.byte	1
00001131 00               5133		.byte	0
00001132 01               5134		.byte	1
                          5135	
                          5136		.section	.debug_frame
                          5137	.LDW_5c14eb8:

                                   Fri Apr 10 08:31:50 2020           Page 93
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000000f0 00000014         5138		.long	.LDW_unq_c-.LDW_unq_b
                          5139	.LDW_unq_b:
000000f4 00000000         5140		.long	.LDW_5c4a068
000000f8 00000000         5141		.long	SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000000fc 00000106         5142		.long	__ghs_eofn_SecM_VerificationWrapper-SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000100 01               5143		.byte	1
00000101 00000000         5144		.long	.LDW91
00000105 00               5145		.byte	0
00000106 00               5146		.byte	0
00000107 00               5147		.byte	0
                          5148	.LDW_unq_c:
                          5149		.section	.debug_line
00000326 000502           5150		.byte	0,5,2
00000329 00000000         5151		.long	SecM_VerificationWrapper..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
0000032d 06               5152		.byte	6
0000032e 03               5153		.byte	3
0000032f d005             5154		.byte	208,5
00000331 02               5155		.byte	2
00000332 00               5156		.byte	0
00000333 01               5157		.byte	1
00000334 03               5158		.byte	3
00000335 23               5159		.byte	35
00000336 02               5160		.byte	2
00000337 18               5161		.byte	24
00000338 01               5162		.byte	1
00000339 000502           5163		.byte	0,5,2
0000033c 00000000         5164		.long	.LDWlin16
00000340 0d               5165		.byte	13
00000341 000502           5166		.byte	0,5,2
00000344 00000000         5167		.long	.LDWlin17
00000348 0d               5168		.byte	13
00000349 000502           5169		.byte	0,5,2
0000034c 00000000         5170		.long	.LDWlin18
00000350 03               5171		.byte	3
00000351 04               5172		.byte	4
00000352 02               5173		.byte	2
00000353 00               5174		.byte	0
00000354 01               5175		.byte	1
00000355 000502           5176		.byte	0,5,2
00000358 00000000         5177		.long	.LDWlin19
0000035c 03               5178		.byte	3
0000035d 09               5179		.byte	9
0000035e 02               5180		.byte	2
0000035f 00               5181		.byte	0
00000360 01               5182		.byte	1
00000361 2b               5183		.byte	43
00000362 1b               5184		.byte	27
00000363 03               5185		.byte	3
00000364 0b               5186		.byte	11
00000365 02               5187		.byte	2
00000366 06               5188		.byte	6
00000367 01               5189		.byte	1
00000368 000502           5190		.byte	0,5,2
0000036b 00000000         5191		.long	.LDWlin20
0000036f 0c               5192		.byte	12
00000370 000502           5193		.byte	0,5,2

                                   Fri Apr 10 08:31:50 2020           Page 94
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000373 00000000         5194		.long	.LDWlin21
00000377 0b               5195		.byte	11
00000378 03               5196		.byte	3
00000379 04               5197		.byte	4
0000037a 02               5198		.byte	2
0000037b 00               5199		.byte	0
0000037c 01               5200		.byte	1
0000037d 13               5201		.byte	19
0000037e 03               5202		.byte	3
0000037f 0d               5203		.byte	13
00000380 02               5204		.byte	2
00000381 02               5205		.byte	2
00000382 01               5206		.byte	1
00000383 15               5207		.byte	21
00000384 000502           5208		.byte	0,5,2
00000387 00000000         5209		.long	.LDWlin22
0000038b 0d               5210		.byte	13
0000038c 15               5211		.byte	21
0000038d 24               5212		.byte	36
0000038e 03               5213		.byte	3
0000038f 04               5214		.byte	4
00000390 02               5215		.byte	2
00000391 02               5216		.byte	2
00000392 01               5217		.byte	1
00000393 000502           5218		.byte	0,5,2
00000396 00000000         5219		.long	.LDWlin23
0000039a 0b               5220		.byte	11
0000039b 0c               5221		.byte	12
0000039c 2d               5222		.byte	45
0000039d 000502           5223		.byte	0,5,2
000003a0 00000000         5224		.long	.LDWlin24
000003a4 0b               5225		.byte	11
000003a5 0d               5226		.byte	13
000003a6 03               5227		.byte	3
000003a7 1e               5228		.byte	30
000003a8 02               5229		.byte	2
000003a9 04               5230		.byte	4
000003aa 01               5231		.byte	1
000003ab 02               5232		.byte	2
000003ac 00               5233		.byte	0
000003ad 0c               5234		.byte	12
000003ae 000502           5235		.byte	0,5,2
000003b1 00000000         5236		.long	.LDWlin25
000003b5 03               5237		.byte	3
000003b6 61               5238		.byte	97
000003b7 02               5239		.byte	2
000003b8 00               5240		.byte	0
000003b9 01               5241		.byte	1
000003ba 0c               5242		.byte	12
000003bb 0d               5243		.byte	13
000003bc 15               5244		.byte	21
000003bd 15               5245		.byte	21
000003be 1c               5246		.byte	28
000003bf 03               5247		.byte	3
000003c0 05               5248		.byte	5
000003c1 02               5249		.byte	2

                                   Fri Apr 10 08:31:50 2020           Page 95
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000003c2 08               5250		.byte	8
000003c3 01               5251		.byte	1
000003c4 000502           5252		.byte	0,5,2
000003c7 00000000         5253		.long	.LDWlin26
000003cb 03               5254		.byte	3
000003cc 04               5255		.byte	4
000003cd 02               5256		.byte	2
000003ce 00               5257		.byte	0
000003cf 01               5258		.byte	1
000003d0 000502           5259		.byte	0,5,2
000003d3 00000000         5260		.long	.LDWlin27
000003d7 0b               5261		.byte	11
000003d8 02               5262		.byte	2
000003d9 00               5263		.byte	0
000003da 0b               5264		.byte	11
000003db 0c               5265		.byte	12
000003dc 0c               5266		.byte	12
000003dd 03               5267		.byte	3
000003de 04               5268		.byte	4
000003df 02               5269		.byte	2
000003e0 02               5270		.byte	2
000003e1 01               5271		.byte	1
000003e2 0c               5272		.byte	12
000003e3 13               5273		.byte	19
000003e4 15               5274		.byte	21
000003e5 000502           5275		.byte	0,5,2
000003e8 00000000         5276		.long	.LDWlin28
000003ec 0d               5277		.byte	13
000003ed 000502           5278		.byte	0,5,2
000003f0 00000000         5279		.long	.LDWlin29
000003f4 0b               5280		.byte	11
000003f5 0b               5281		.byte	11
000003f6 13               5282		.byte	19
000003f7 000502           5283		.byte	0,5,2
000003fa 00000000         5284		.long	.LDWlin30
000003fe 0b               5285		.byte	11
000003ff 0c               5286		.byte	12
00000400 03               5287		.byte	3
00000401 04               5288		.byte	4
00000402 02               5289		.byte	2
00000403 00               5290		.byte	0
00000404 01               5291		.byte	1
00000405 13               5292		.byte	19
00000406 02               5293		.byte	2
00000407 00               5294		.byte	0
00000408 0b               5295		.byte	11
00000409 02               5296		.byte	2
0000040a 00               5297		.byte	0
0000040b 0d               5298		.byte	13
0000040c 000502           5299		.byte	0,5,2
0000040f 00000000         5300		.long	.LDWlin31
00000413 0b               5301		.byte	11
00000414 0d               5302		.byte	13
00000415 02               5303		.byte	2
00000416 00               5304		.byte	0
00000417 03               5305		.byte	3

                                   Fri Apr 10 08:31:50 2020           Page 96
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000418 ad7f             5306		.byte	173,127
0000041a 02               5307		.byte	2
0000041b 00               5308		.byte	0
0000041c 01               5309		.byte	1
0000041d 000502           5310		.byte	0,5,2
00000420 00000000         5311		.long	.LDWlin32
00000424 03               5312		.byte	3
00000425 d400             5313		.byte	212,0
00000427 02               5314		.byte	2
00000428 00               5315		.byte	0
00000429 01               5316		.byte	1
0000042a 03               5317		.byte	3
0000042b 22               5318		.byte	34
0000042c 02               5319		.byte	2
0000042d 00               5320		.byte	0
0000042e 01               5321		.byte	1
0000042f 02               5322		.byte	2
00000430 00               5323		.byte	0
00000431 0c               5324		.byte	12
00000432 0b               5325		.byte	11
00000433 0c               5326		.byte	12
00000434 1c               5327		.byte	28
00000435 000502           5328		.byte	0,5,2
00000438 00000000         5329		.long	.LDWlin33
0000043c 0c               5330		.byte	12
0000043d 000502           5331		.byte	0,5,2
00000440 00000000         5332		.long	.LDWlin34
00000444 0b               5333		.byte	11
00000445 0c               5334		.byte	12
00000446 1b               5335		.byte	27
00000447 1c               5336		.byte	28
00000448 000502           5337		.byte	0,5,2
0000044b 00000000         5338		.long	.LDWlin35
0000044f 0b               5339		.byte	11
00000450 02               5340		.byte	2
00000451 00               5341		.byte	0
00000452 0b               5342		.byte	11
00000453 02               5343		.byte	2
00000454 00               5344		.byte	0
00000455 0d               5345		.byte	13
00000456 02               5346		.byte	2
00000457 14               5347		.byte	20
00000458 000101           5348		.byte	0,1,1
                          5349		.section	.debug_info
                          5350	.LDW_5c73c00:
00001133 11               5351		.byte	17
00001134 7056657269667950 5352		.strz	"pVerifyParam"
0000113c 6172616d00      
00001141 ce05             5353		.byte	206,5
00001143 67               5354		.byte	103
00001144 01               5355		.byte	1
00001145 00000000         5356		.long	.LDW_498c450
00001149 00               5357		.byte	0
0000114a 016f             5358		.byte	1,111
                          5359	
                          5360	.LDW_5c739f0:
0000114c 11               5361		.byte	17

                                   Fri Apr 10 08:31:50 2020           Page 97
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000114d 704366674c697374 5362		.strz	"pCfgList"
00001155 00              
00001156 cf05             5363		.byte	207,5
00001158 3e               5364		.byte	62
00001159 01               5365		.byte	1
0000115a 00000000         5366		.long	.LDW_498c4f8
0000115e 00               5367		.byte	0
0000115f 0154             5368		.byte	1,84
                          5369	
                          5370	.LDW_4983140:
00001161 1f               5371		.byte	31
00001162 00000000         5372		.long	.LDW81
00001166 00000000         5373		.long	.LDW91
                          5374	
                          5375	.LDW_5c73c58:
0000116a 06               5376		.byte	6
0000116b 726573756c7400   5377		.strz	"result"
00001172 d205             5378		.byte	210,5
00001174 1f               5379		.byte	31
00001175 01               5380		.byte	1
00001176 00000000         5381		.long	.LDW_49cb6b0
0000117a 00               5382		.byte	0
0000117b 00               5383		.byte	0
0000117c 0153             5384		.byte	1,83
                          5385	
                          5386	.LDW_5c73f70:
0000117e 06               5387		.byte	6
0000117f 636f6e7465787400 5388		.strz	"context"
00001187 d405             5389		.byte	212,5
00001189 1f               5390		.byte	31
0000118a 01               5391		.byte	1
0000118b 00000000         5392		.long	.LDW_5c73080
0000118f 00               5393		.byte	0
00001190 00               5394		.byte	0
00001191 0271             5395		.byte	2,113
00001193 08               5396		.byte	8
                          5397	
                          5398	.LDW_5c73998:
00001194 06               5399		.byte	6
00001195 696e64657800     5400		.strz	"index"
0000119b d505             5401		.byte	213,5
0000119d 1f               5402		.byte	31
0000119e 01               5403		.byte	1
0000119f 00000000         5404		.long	.LDW_49ceba8
000011a3 00               5405		.byte	0
000011a4 00               5406		.byte	0
000011a5 016a             5407		.byte	1,106
                          5408	
                          5409	.LDW_5c741d8:
000011a7 06               5410		.byte	6
000011a8 705365676d656e74 5411		.strz	"pSegmentList"
000011b0 4c69737400      
000011b5 d705             5412		.byte	215,5
000011b7 37               5413		.byte	55
000011b8 01               5414		.byte	1
000011b9 00000000         5415		.long	.LDW_498c8b0
000011bd 00               5416		.byte	0
000011be 00               5417		.byte	0

                                   Fri Apr 10 08:31:50 2020           Page 98
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000011bf 016f             5418		.byte	1,111
                          5419	
                          5420	.LDW_5c74230:
000011c1 06               5421		.byte	6
000011c2 705365676d656e74 5422		.strz	"pSegmentInfo"
000011ca 496e666f00      
000011cf d905             5423		.byte	217,5
000011d1 37               5424		.byte	55
000011d2 01               5425		.byte	1
000011d3 00000000         5426		.long	.LDW_498c990
000011d7 00               5427		.byte	0
000011d8 00               5428		.byte	0
000011d9 0155             5429		.byte	1,85
                          5430	
                          5431	.LDW_5c74288:
000011db 06               5432		.byte	6
000011dc 6366674c69737441 5433		.strz	"cfgListAll"
000011e4 6c6c00          
000011e7 db05             5434		.byte	219,5
000011e9 1f               5435		.byte	31
000011ea 01               5436		.byte	1
000011eb 00000000         5437		.long	.LDW_49cb810
000011ef 00               5438		.byte	0
000011f0 00               5439		.byte	0
000011f1 0271             5440		.byte	2,113
000011f3 3c               5441		.byte	60
                          5442	
                          5443	.LDW_5c737e0:
000011f4 06               5444		.byte	6
000011f5 6366674c69737456 5445		.strz	"cfgListVerify"
000011fd 657269667900    
00001203 dd05             5446		.byte	221,5
00001205 1f               5447		.byte	31
00001206 01               5448		.byte	1
00001207 00000000         5449		.long	.LDW_49cb810
0000120b 00               5450		.byte	0
0000120c 00               5451		.byte	0
0000120d 0371             5452		.byte	3,113
0000120f d000             5453		.byte	208,0
                          5454	
                          5455	.LDW_5c73cb0:
00001211 06               5456		.byte	6
00001212 6366674c69737441 5457		.strz	"cfgListAddr"
0000121a 64647200        
0000121e e005             5458		.byte	224,5
00001220 20               5459		.byte	32
00001221 01               5460		.byte	1
00001222 00000000         5461		.long	.LDW_49cb810
00001226 00               5462		.byte	0
00001227 00               5463		.byte	0
00001228 0371             5464		.byte	3,113
0000122a e400             5465		.byte	228,0
                          5466	
                          5467	.LDW_5c73d08:
0000122c 06               5468		.byte	6
0000122d 6366674c69737449 5469		.strz	"cfgListInter"
00001235 6e74657200      
0000123a e405             5470		.byte	228,5
0000123c 1f               5471		.byte	31
0000123d 01               5472		.byte	1
0000123e 00000000         5473		.long	.LDW_49cb810

                                   Fri Apr 10 08:31:50 2020           Page 99
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001242 00               5474		.byte	0
00001243 00               5475		.byte	0
00001244 0371             5476		.byte	3,113
00001246 f800             5477		.byte	248,0
                          5478	
                          5479	.LDW_5c73d60:
00001248 06               5480		.byte	6
00001249 704366674c697374 5481		.strz	"pCfgListUpdate"
00001251 55706461746500  
00001258 e605             5482		.byte	230,5
0000125a 3e               5483		.byte	62
0000125b 01               5484		.byte	1
0000125c 00000000         5485		.long	.LDW_498c6f0
00001260 00               5486		.byte	0
00001261 00               5487		.byte	0
00001262 0169             5488		.byte	1,105
                          5489	
                          5490	.LDW_5c98e30:
00001264 06               5491		.byte	6
00001265 63757272656e7441 5492		.strz	"currentAddress"
0000126d 64647265737300  
00001274 e705             5493		.byte	231,5
00001276 1f               5494		.byte	31
00001277 01               5495		.byte	1
00001278 00000000         5496		.long	.LDW_5c743e8
0000127c 00               5497		.byte	0
0000127d 00               5498		.byte	0
0000127e 016b             5499		.byte	1,107
                          5500	
                          5501	.LDW_5c98cd0:
00001280 06               5502		.byte	6
00001281 72656d61696e6465 5503		.strz	"remainder"
00001289 7200            
0000128b e805             5504		.byte	232,5
0000128d 1f               5505		.byte	31
0000128e 01               5506		.byte	1
0000128f 00000000         5507		.long	.LDW_5c746a8
00001293 00               5508		.byte	0
00001294 00               5509		.byte	0
00001295 016c             5510		.byte	1,108
                          5511	
                          5512	.LDW_5c990f0:
00001297 06               5513		.byte	6
00001298 63757272656e744c 5514		.strz	"currentLength"
000012a0 656e67746800    
000012a6 e905             5515		.byte	233,5
000012a8 1f               5516		.byte	31
000012a9 01               5517		.byte	1
000012aa 00000000         5518		.long	.LDW_5c746a8
000012ae 00               5519		.byte	0
000012af 00               5520		.byte	0
000012b0 016d             5521		.byte	1,109
                          5522	
000012b2 00               5523		.byte	0
                          5524	
000012b3 00               5525		.byte	0
                          5526	
                          5527	.LDW_5c997d8:
000012b4 16               5528		.byte	22
000012b5 5365634d5f566572 5529		.strz	"SecM_VerificationBase"
000012bd 696669636174696f
000012c5 6e4261736500    

                                   Fri Apr 10 08:31:50 2020           Page 100
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000012cb cb07             5530		.byte	203,7
000012cd 18               5531		.byte	24
000012ce 01               5532		.byte	1
000012cf 00000000         5533		.long	.LDW_49cb6b0
000012d3 00000000         5534		.long	SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
000012d7 00000000         5535		.long	__ghs_eofn_SecM_VerificationBase
000012db 0151             5536		.byte	1,81
000012dd 8080808008       5537		.byte	128,128,128,128,8
000012e2 1c               5538		.byte	28
000012e3 00               5539		.byte	0
000012e4 20               5540		.byte	32
000012e5 00               5541		.byte	0
000012e6 00               5542		.byte	0
000012e7 00               5543		.byte	0
000012e8 00               5544		.byte	0
000012e9 01               5545		.byte	1
000012ea 00               5546		.byte	0
000012eb 01               5547		.byte	1
                          5548	
                          5549		.section	.debug_frame
                          5550	.LDW_5c14a60:
00000108 00000014         5551		.long	.LDW_unq_e-.LDW_unq_d
                          5552	.LDW_unq_d:
0000010c 00000000         5553		.long	.LDW_5c4a068
00000110 00000000         5554		.long	SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000114 00000034         5555		.long	__ghs_eofn_SecM_VerificationBase-SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000118 01               5556		.byte	1
00000119 00000000         5557		.long	.LDW12
0000011d 00               5558		.byte	0
0000011e 00               5559		.byte	0
0000011f 00               5560		.byte	0
                          5561	.LDW_unq_e:
                          5562		.section	.debug_line
0000045b 000502           5563		.byte	0,5,2
0000045e 00000000         5564		.long	SecM_VerificationBase..C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5CSec_Verification.
00000462 06               5565		.byte	6
00000463 03               5566		.byte	3
00000464 cc07             5567		.byte	204,7
00000466 02               5568		.byte	2
00000467 00               5569		.byte	0
00000468 01               5570		.byte	1
00000469 03               5571		.byte	3
0000046a 12               5572		.byte	18
0000046b 02               5573		.byte	2
0000046c 0c               5574		.byte	12
0000046d 01               5575		.byte	1
0000046e 03               5576		.byte	3
0000046f 16               5577		.byte	22
00000470 02               5578		.byte	2
00000471 02               5579		.byte	2
00000472 01               5580		.byte	1
00000473 1d               5581		.byte	29
00000474 000502           5582		.byte	0,5,2
00000477 00000000         5583		.long	.LDWlin36
0000047b 0b               5584		.byte	11
0000047c 0c               5585		.byte	12

                                   Fri Apr 10 08:31:50 2020           Page 101
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000047d 23               5586		.byte	35
0000047e 03               5587		.byte	3
0000047f 05               5588		.byte	5
00000480 02               5589		.byte	2
00000481 04               5590		.byte	4
00000482 01               5591		.byte	1
00000483 02               5592		.byte	2
00000484 00               5593		.byte	0
00000485 03               5594		.byte	3
00000486 05               5595		.byte	5
00000487 02               5596		.byte	2
00000488 00               5597		.byte	0
00000489 01               5598		.byte	1
0000048a 000502           5599		.byte	0,5,2
0000048d 00000000         5600		.long	.LDWlin37
00000491 03               5601		.byte	3
00000492 04               5602		.byte	4
00000493 02               5603		.byte	2
00000494 00               5604		.byte	0
00000495 01               5605		.byte	1
00000496 03               5606		.byte	3
00000497 05               5607		.byte	5
00000498 02               5608		.byte	2
00000499 04               5609		.byte	4
0000049a 01               5610		.byte	1
0000049b 02               5611		.byte	2
0000049c 0a               5612		.byte	10
0000049d 000101           5613		.byte	0,1,1
                          5614		.section	.debug_info
                          5615	.LDW_5c98d28:
000012ec 11               5616		.byte	17
000012ed 7056657269667950 5617		.strz	"pVerifyParam"
000012f5 6172616d00      
000012fa cb07             5618		.byte	203,7
000012fc 64               5619		.byte	100
000012fd 01               5620		.byte	1
000012fe 00000000         5621		.long	.LDW_498c450
00001302 00               5622		.byte	0
00001303 016f             5623		.byte	1,111
                          5624	
                          5625	.LDW_5c991f8:
00001305 11               5626		.byte	17
00001306 704366674c697374 5627		.strz	"pCfgList"
0000130e 00              
0000130f cc07             5628		.byte	204,7
00001311 3e               5629		.byte	62
00001312 01               5630		.byte	1
00001313 00000000         5631		.long	.LDW_498c4f8
00001317 00               5632		.byte	0
00001318 0154             5633		.byte	1,84
                          5634	
                          5635	.LDW_4983320:
0000131a 1f               5636		.byte	31
0000131b 00000000         5637		.long	.LDW02
0000131f 00000000         5638		.long	.LDW12
                          5639	
                          5640	.LDW_5c992a8:
00001323 07               5641		.byte	7

                                   Fri Apr 10 08:31:50 2020           Page 102
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001324 726573756c7400   5642		.strz	"result"
0000132b ce07             5643		.byte	206,7
0000132d 16               5644		.byte	22
0000132e 01               5645		.byte	1
0000132f 00000000         5646		.long	.LDW_49cb6b0
00001333 00               5647		.byte	0
00001334 00               5648		.byte	0
                          5649	
                          5650	.LDW_5c99148:
00001335 06               5651		.byte	6
00001336 7056657269667943 5652		.strz	"pVerifyContext"
0000133e 6f6e7465787400  
00001345 d207             5653		.byte	210,7
00001347 3c               5654		.byte	60
00001348 01               5655		.byte	1
00001349 00000000         5656		.long	.LDW_498c878
0000134d 00               5657		.byte	0
0000134e 00               5658		.byte	0
0000134f 0157             5659		.byte	1,87
                          5660	
                          5661	.LDW_5c98b70:
00001351 07               5662		.byte	7
00001352 696e64657800     5663		.strz	"index"
00001358 d507             5664		.byte	213,7
0000135a 16               5665		.byte	22
0000135b 01               5666		.byte	1
0000135c 00000000         5667		.long	.LDW_49ceba8
00001360 00               5668		.byte	0
00001361 00               5669		.byte	0
                          5670	
                          5671	.LDW_5c98f90:
00001362 07               5672		.byte	7
00001363 636667436f756e74 5673		.strz	"cfgCount"
0000136b 00              
0000136c d607             5674		.byte	214,7
0000136e 16               5675		.byte	22
0000136f 01               5676		.byte	1
00001370 00000000         5677		.long	.LDW_49ceba8
00001374 00               5678		.byte	0
00001375 00               5679		.byte	0
                          5680	
                          5681	.LDW_5c98ee0:
00001376 06               5682		.byte	6
00001377 637263546f74616c 5683		.strz	"crcTotalParam"
0000137f 506172616d00    
00001385 d907             5684		.byte	217,7
00001387 16               5685		.byte	22
00001388 01               5686		.byte	1
00001389 00000000         5687		.long	.LDW_5c98800
0000138d 00               5688		.byte	0
0000138e 00               5689		.byte	0
0000138f 0271             5690		.byte	2,113
00001391 08               5691		.byte	8
                          5692	
00001392 00               5693		.byte	0
                          5694	
00001393 00               5695		.byte	0
                          5696	
                          5697	.LDW_5c99870:

                                   Fri Apr 10 08:31:50 2020           Page 103
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001394 16               5698		.byte	22
00001395 5365634d5f566572 5699		.strz	"SecM_VerifyChecksumCrc"
0000139d 696679436865636b
000013a5 73756d43726300  
000013ac d908             5700		.byte	217,8
000013ae 11               5701		.byte	17
000013af 01               5702		.byte	1
000013b0 00000000         5703		.long	.LDW_49cb6b0
000013b4 00000000         5704		.long	SecM_VerifyChecksumCrc
000013b8 00000000         5705		.long	__ghs_eofn_SecM_VerifyChecksumCrc
000013bc 0151             5706		.byte	1,81
000013be 00               5707		.byte	0
000013bf 08               5708		.byte	8
000013c0 00               5709		.byte	0
000013c1 08               5710		.byte	8
000013c2 00               5711		.byte	0
000013c3 00               5712		.byte	0
000013c4 00               5713		.byte	0
000013c5 01               5714		.byte	1
000013c6 01               5715		.byte	1
000013c7 00               5716		.byte	0
000013c8 01               5717		.byte	1
                          5718	
                          5719		.section	.debug_frame
                          5720	.LDW_5c14ef8:
00000120 00000014         5721		.long	.LDW_unq_10-.LDW_unq_f
                          5722	.LDW_unq_f:
00000124 00000000         5723		.long	.LDW_5c4a068
00000128 00000000         5724		.long	SecM_VerifyChecksumCrc
0000012c 0000004c         5725		.long	__ghs_eofn_SecM_VerifyChecksumCrc-SecM_VerifyChecksumCrc
00000130 01               5726		.byte	1
00000131 00000000         5727		.long	.LDW32
00000135 00               5728		.byte	0
00000136 00               5729		.byte	0
00000137 00               5730		.byte	0
                          5731	.LDW_unq_10:
                          5732		.section	.debug_line
000004a0 000502           5733		.byte	0,5,2
000004a3 00000000         5734		.long	SecM_VerifyChecksumCrc
000004a7 06               5735		.byte	6
000004a8 03               5736		.byte	3
000004a9 d908             5737		.byte	217,8
000004ab 02               5738		.byte	2
000004ac 00               5739		.byte	0
000004ad 01               5740		.byte	1
000004ae 03               5741		.byte	3
000004af 0f               5742		.byte	15
000004b0 02               5743		.byte	2
000004b1 0a               5744		.byte	10
000004b2 01               5745		.byte	1
000004b3 03               5746		.byte	3
000004b4 08               5747		.byte	8
000004b5 02               5748		.byte	2
000004b6 02               5749		.byte	2
000004b7 01               5750		.byte	1
000004b8 06               5751		.byte	6
000004b9 000502           5752		.byte	0,5,2
000004bc 00000000         5753		.long	.LDWlin38

                                   Fri Apr 10 08:31:50 2020           Page 104
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000004c0 02               5754		.byte	2
000004c1 00               5755		.byte	0
000004c2 06               5756		.byte	6
000004c3 2d               5757		.byte	45
000004c4 0c               5758		.byte	12
000004c5 000502           5759		.byte	0,5,2
000004c8 00000000         5760		.long	.LDWlin39
000004cc 03               5761		.byte	3
000004cd 04               5762		.byte	4
000004ce 02               5763		.byte	2
000004cf 00               5764		.byte	0
000004d0 01               5765		.byte	1
000004d1 0b               5766		.byte	11
000004d2 03               5767		.byte	3
000004d3 06               5768		.byte	6
000004d4 02               5769		.byte	2
000004d5 00               5770		.byte	0
000004d6 01               5771		.byte	1
000004d7 0b               5772		.byte	11
000004d8 03               5773		.byte	3
000004d9 06               5774		.byte	6
000004da 02               5775		.byte	2
000004db 00               5776		.byte	0
000004dc 01               5777		.byte	1
000004dd 0b               5778		.byte	11
000004de 0c               5779		.byte	12
000004df 000502           5780		.byte	0,5,2
000004e2 00000000         5781		.long	.LDWlin40
000004e6 0b               5782		.byte	11
000004e7 0c               5783		.byte	12
000004e8 13               5784		.byte	19
000004e9 02               5785		.byte	2
000004ea 00               5786		.byte	0
000004eb 03               5787		.byte	3
000004ec 04               5788		.byte	4
000004ed 02               5789		.byte	2
000004ee 00               5790		.byte	0
000004ef 01               5791		.byte	1
000004f0 02               5792		.byte	2
000004f1 00               5793		.byte	0
000004f2 03               5794		.byte	3
000004f3 04               5795		.byte	4
000004f4 02               5796		.byte	2
000004f5 00               5797		.byte	0
000004f6 01               5798		.byte	1
000004f7 02               5799		.byte	2
000004f8 00               5800		.byte	0
000004f9 0c               5801		.byte	12
000004fa 0b               5802		.byte	11
000004fb 0c               5803		.byte	12
000004fc 1b               5804		.byte	27
000004fd 1b               5805		.byte	27
000004fe 1b               5806		.byte	27
000004ff 14               5807		.byte	20
00000500 23               5808		.byte	35
00000501 02               5809		.byte	2

                                   Fri Apr 10 08:31:50 2020           Page 105
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000502 00               5810		.byte	0
00000503 0d               5811		.byte	13
00000504 06               5812		.byte	6
00000505 000502           5813		.byte	0,5,2
00000508 00000000         5814		.long	__ghs_eofn_SecM_VerifyChecksumCrc
0000050c 02               5815		.byte	2
0000050d 00               5816		.byte	0
0000050e 000101           5817		.byte	0,1,1
                          5818		.section	.debug_info
                          5819	.LDW_5c98a10:
000013c9 11               5820		.byte	17
000013ca 7056657269667950 5821		.strz	"pVerifyParam"
000013d2 6172616d00      
000013d7 d908             5822		.byte	217,8
000013d9 61               5823		.byte	97
000013da 01               5824		.byte	1
000013db 00000000         5825		.long	.LDW_498c878
000013df 00               5826		.byte	0
000013e0 0157             5827		.byte	1,87
                          5828	
                          5829	.LDW_4983650:
000013e2 1f               5830		.byte	31
000013e3 00000000         5831		.long	.LDW22
000013e7 00000000         5832		.long	.LDW32
                          5833	
                          5834	.LDW_5c98960:
000013eb 06               5835		.byte	6
000013ec 726573756c7400   5836		.strz	"result"
000013f3 db08             5837		.byte	219,8
000013f5 14               5838		.byte	20
000013f6 01               5839		.byte	1
000013f7 00000000         5840		.long	.LDW_49cb6b0
000013fb 00               5841		.byte	0
000013fc 00               5842		.byte	0
000013fd 0153             5843		.byte	1,83
                          5844	
                          5845	.LDW_5c99040:
000013ff 06               5846		.byte	6
00001400 7043726350617261 5847		.strz	"pCrcParam"
00001408 6d00            
0000140a dc08             5848		.byte	220,8
0000140c 36               5849		.byte	54
0000140d 01               5850		.byte	1
0000140e 00000000         5851		.long	.LDW_498c6b8
00001412 00               5852		.byte	0
00001413 00               5853		.byte	0
00001414 0156             5854		.byte	1,86
                          5855	
                          5856	.LDW_5c989b8:
00001416 06               5857		.byte	6
00001417 637263416374696f 5858		.strz	"crcAction"
0000141f 6e00            
00001421 dd08             5859		.byte	221,8
00001423 13               5860		.byte	19
00001424 01               5861		.byte	1
00001425 00000000         5862		.long	.LDW_49cb658
00001429 00               5863		.byte	0
0000142a 00               5864		.byte	0
0000142b 0150             5865		.byte	1,80

                                   Fri Apr 10 08:31:50 2020           Page 106
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
                          5866	
0000142d 00               5867		.byte	0
                          5868	
0000142e 00               5869		.byte	0
                          5870	
                          5871	.LDW_5c99908:
0000142f 16               5872		.byte	22
00001430 5365634d5f566572 5873		.strz	"SecM_VerifyClassDDD"
00001438 696679436c617373
00001440 44444400        
00001444 b709             5874		.byte	183,9
00001446 11               5875		.byte	17
00001447 01               5876		.byte	1
00001448 00000000         5877		.long	.LDW_49cb6b0
0000144c 00000000         5878		.long	SecM_VerifyClassDDD
00001450 00000000         5879		.long	__ghs_eofn_SecM_VerifyClassDDD
00001454 0151             5880		.byte	1,81
00001456 03               5881		.byte	3
00001457 00               5882		.byte	0
00001458 00               5883		.byte	0
00001459 00               5884		.byte	0
0000145a 00               5885		.byte	0
0000145b 00               5886		.byte	0
0000145c 00               5887		.byte	0
0000145d 01               5888		.byte	1
0000145e 01               5889		.byte	1
0000145f 00               5890		.byte	0
00001460 01               5891		.byte	1
                          5892	
                          5893		.section	.debug_frame
                          5894	.LDW_49c6688:
00000138 00000014         5895		.long	.LDW_unq_12-.LDW_unq_11
                          5896	.LDW_unq_11:
0000013c 00000000         5897		.long	.LDW_5c4a068
00000140 00000000         5898		.long	SecM_VerifyClassDDD
00000144 00000016         5899		.long	__ghs_eofn_SecM_VerifyClassDDD-SecM_VerifyClassDDD
00000148 01               5900		.byte	1
00000149 00000000         5901		.long	.LDW52
0000014d 00               5902		.byte	0
0000014e 00               5903		.byte	0
0000014f 00               5904		.byte	0
                          5905	.LDW_unq_12:
                          5906		.section	.debug_line
00000511 000502           5907		.byte	0,5,2
00000514 00000000         5908		.long	SecM_VerifyClassDDD
00000518 06               5909		.byte	6
00000519 03               5910		.byte	3
0000051a ba09             5911		.byte	186,9
0000051c 02               5912		.byte	2
0000051d 00               5913		.byte	0
0000051e 01               5914		.byte	1
0000051f 000502           5915		.byte	0,5,2
00000522 00000000         5916		.long	.LDWlin42
00000526 0b               5917		.byte	11
00000527 03               5918		.byte	3
00000528 07               5919		.byte	7
00000529 02               5920		.byte	2
0000052a 00               5921		.byte	0

                                   Fri Apr 10 08:31:50 2020           Page 107
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000052b 01               5922		.byte	1
0000052c 33               5923		.byte	51
0000052d 1c               5924		.byte	28
0000052e 02               5925		.byte	2
0000052f 00               5926		.byte	0
00000530 0d               5927		.byte	13
00000531 06               5928		.byte	6
00000532 000502           5929		.byte	0,5,2
00000535 00000000         5930		.long	__ghs_eofn_SecM_VerifyClassDDD
00000539 02               5931		.byte	2
0000053a 00               5932		.byte	0
0000053b 000101           5933		.byte	0,1,1
                          5934		.section	.debug_info
                          5935	.LDW_5c98b18:
00001461 11               5936		.byte	17
00001462 7056657269667950 5937		.strz	"pVerifyParam"
0000146a 6172616d00      
0000146f b709             5938		.byte	183,9
00001471 5e               5939		.byte	94
00001472 01               5940		.byte	1
00001473 00000000         5941		.long	.LDW_498c878
00001477 00               5942		.byte	0
00001478 0153             5943		.byte	1,83
                          5944	
                          5945	.LDW_4983590:
0000147a 1f               5946		.byte	31
0000147b 00000000         5947		.long	.LDW42
0000147f 00000000         5948		.long	.LDW52
                          5949	
00001483 00               5950		.byte	0
                          5951	
00001484 00               5952		.byte	0
                          5953	
                          5954	.LDW_5c999a0:
00001485 16               5955		.byte	22
00001486 5365634d5f566572 5956		.strz	"SecM_VerifySignature"
0000148e 6966795369676e61
00001496 7475726500      
0000149b e009             5957		.byte	224,9
0000149d 11               5958		.byte	17
0000149e 01               5959		.byte	1
0000149f 00000000         5960		.long	.LDW_49cb6b0
000014a3 00000000         5961		.long	SecM_VerifySignature
000014a7 00000000         5962		.long	__ghs_eofn_SecM_VerifySignature
000014ab 0151             5963		.byte	1,81
000014ad 03               5964		.byte	3
000014ae 00               5965		.byte	0
000014af 00               5966		.byte	0
000014b0 00               5967		.byte	0
000014b1 00               5968		.byte	0
000014b2 00               5969		.byte	0
000014b3 00               5970		.byte	0
000014b4 01               5971		.byte	1
000014b5 01               5972		.byte	1
000014b6 00               5973		.byte	0
000014b7 01               5974		.byte	1
                          5975	
                          5976		.section	.debug_frame
                          5977	.LDW_5e1fe50:

                                   Fri Apr 10 08:31:50 2020           Page 108
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000150 00000014         5978		.long	.LDW_unq_14-.LDW_unq_13
                          5979	.LDW_unq_13:
00000154 00000000         5980		.long	.LDW_5c4a068
00000158 00000000         5981		.long	SecM_VerifySignature
0000015c 00000002         5982		.long	__ghs_eofn_SecM_VerifySignature-SecM_VerifySignature
00000160 01               5983		.byte	1
00000161 00000000         5984		.long	.LDW72
00000165 00               5985		.byte	0
00000166 00               5986		.byte	0
00000167 00               5987		.byte	0
                          5988	.LDW_unq_14:
                          5989		.section	.debug_line
0000053e 000502           5990		.byte	0,5,2
00000541 00000000         5991		.long	SecM_VerifySignature
00000545 06               5992		.byte	6
00000546 03               5993		.byte	3
00000547 e209             5994		.byte	226,9
00000549 02               5995		.byte	2
0000054a 00               5996		.byte	0
0000054b 01               5997		.byte	1
0000054c 06               5998		.byte	6
0000054d 000502           5999		.byte	0,5,2
00000550 00000000         6000		.long	__ghs_eofn_SecM_VerifySignature
00000554 02               6001		.byte	2
00000555 00               6002		.byte	0
00000556 000101           6003		.byte	0,1,1
                          6004		.section	.debug_info
                          6005	.LDW_5c98c78:
000014b8 11               6006		.byte	17
000014b9 7056657269667950 6007		.strz	"pVerifyParam"
000014c1 6172616d00      
000014c6 e009             6008		.byte	224,9
000014c8 5f               6009		.byte	95
000014c9 01               6010		.byte	1
000014ca 00000000         6011		.long	.LDW_498c878
000014ce 00               6012		.byte	0
000014cf 0153             6013		.byte	1,83
                          6014	
                          6015	.LDW_49831d0:
000014d1 1f               6016		.byte	31
000014d2 00000000         6017		.long	.LDW62
000014d6 00000000         6018		.long	.LDW72
                          6019	
000014da 00               6020		.byte	0
                          6021	
000014db 00               6022		.byte	0
                          6023	
                          6024	.LDW_5c99a38:
000014dc 16               6025		.byte	22
000014dd 5365634d5f496e69 6026		.strz	"SecM_InitVerification"
000014e5 7456657269666963
000014ed 6174696f6e00    
000014f3 ee09             6027		.byte	238,9
000014f5 11               6028		.byte	17
000014f6 01               6029		.byte	1
000014f7 00000000         6030		.long	.LDW_49cb6b0
000014fb 00000000         6031		.long	SecM_InitVerification
000014ff 00000000         6032		.long	__ghs_eofn_SecM_InitVerification
00001503 0151             6033		.byte	1,81

                                   Fri Apr 10 08:31:50 2020           Page 109
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001505 03               6034		.byte	3
00001506 00               6035		.byte	0
00001507 00               6036		.byte	0
00001508 00               6037		.byte	0
00001509 00               6038		.byte	0
0000150a 00               6039		.byte	0
0000150b 00               6040		.byte	0
0000150c 01               6041		.byte	1
0000150d 01               6042		.byte	1
0000150e 00               6043		.byte	0
0000150f 01               6044		.byte	1
                          6045	
                          6046		.section	.debug_frame
                          6047	.LDW_5e1fd90:
00000168 00000014         6048		.long	.LDW_unq_16-.LDW_unq_15
                          6049	.LDW_unq_15:
0000016c 00000000         6050		.long	.LDW_5c4a068
00000170 00000000         6051		.long	SecM_InitVerification
00000174 00000004         6052		.long	__ghs_eofn_SecM_InitVerification-SecM_InitVerification
00000178 01               6053		.byte	1
00000179 00000000         6054		.long	.LDW92
0000017d 00               6055		.byte	0
0000017e 00               6056		.byte	0
0000017f 00               6057		.byte	0
                          6058	.LDW_unq_16:
                          6059		.section	.debug_line
00000559 000502           6060		.byte	0,5,2
0000055c 00000000         6061		.long	SecM_InitVerification
00000560 06               6062		.byte	6
00000561 03               6063		.byte	3
00000562 f409             6064		.byte	244,9
00000564 02               6065		.byte	2
00000565 00               6066		.byte	0
00000566 01               6067		.byte	1
00000567 06               6068		.byte	6
00000568 02               6069		.byte	2
00000569 02               6070		.byte	2
0000056a 02               6071		.byte	2
0000056b 02               6072		.byte	2
0000056c 000101           6073		.byte	0,1,1
                          6074		.section	.debug_info
                          6075	.LDW_5c98a68:
00001510 11               6076		.byte	17
00001511 696e697400       6077		.strz	"init"
00001516 ee09             6078		.byte	238,9
00001518 3c               6079		.byte	60
00001519 01               6080		.byte	1
0000151a 00000000         6081		.long	.LDW_5c98bc8
0000151e 00               6082		.byte	0
0000151f 0153             6083		.byte	1,83
                          6084	
                          6085	.LDW_4983860:
00001521 1f               6086		.byte	31
00001522 00000000         6087		.long	.LDW82
00001526 00000000         6088		.long	.LDW92
                          6089	

                                   Fri Apr 10 08:31:50 2020           Page 110
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000152a 00               6090		.byte	0
                          6091	
0000152b 00               6092		.byte	0
                          6093	
                          6094	.LDW_5c99ad0:
0000152c 16               6095		.byte	22
0000152d 5365634d5f446569 6096		.strz	"SecM_DeinitVerification"
00001535 6e69745665726966
0000153d 69636174696f6e00
00001545 800a             6097		.byte	128,10
00001547 11               6098		.byte	17
00001548 01               6099		.byte	1
00001549 00000000         6100		.long	.LDW_49cb6b0
0000154d 00000000         6101		.long	SecM_DeinitVerification
00001551 00000000         6102		.long	__ghs_eofn_SecM_DeinitVerification
00001555 0151             6103		.byte	1,81
00001557 03               6104		.byte	3
00001558 00               6105		.byte	0
00001559 00               6106		.byte	0
0000155a 00               6107		.byte	0
0000155b 00               6108		.byte	0
0000155c 00               6109		.byte	0
0000155d 00               6110		.byte	0
0000155e 01               6111		.byte	1
0000155f 01               6112		.byte	1
00001560 00               6113		.byte	0
00001561 01               6114		.byte	1
                          6115	
                          6116		.section	.debug_frame
                          6117	.LDW_5e20090:
00000180 00000014         6118		.long	.LDW_unq_18-.LDW_unq_17
                          6119	.LDW_unq_17:
00000184 00000000         6120		.long	.LDW_5c4a068
00000188 00000000         6121		.long	SecM_DeinitVerification
0000018c 00000004         6122		.long	__ghs_eofn_SecM_DeinitVerification-SecM_DeinitVerification
00000190 01               6123		.byte	1
00000191 00000000         6124		.long	.LDW13
00000195 00               6125		.byte	0
00000196 00               6126		.byte	0
00000197 00               6127		.byte	0
                          6128	.LDW_unq_18:
                          6129		.section	.debug_line
0000056f 000502           6130		.byte	0,5,2
00000572 00000000         6131		.long	SecM_DeinitVerification
00000576 06               6132		.byte	6
00000577 03               6133		.byte	3
00000578 860a             6134		.byte	134,10
0000057a 02               6135		.byte	2
0000057b 00               6136		.byte	0
0000057c 01               6137		.byte	1
0000057d 06               6138		.byte	6
0000057e 02               6139		.byte	2
0000057f 02               6140		.byte	2
00000580 02               6141		.byte	2
00000581 02               6142		.byte	2
00000582 000101           6143		.byte	0,1,1
                          6144		.section	.debug_info
                          6145	.LDW_5c98ac0:

                                   Fri Apr 10 08:31:50 2020           Page 111
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001562 11               6146		.byte	17
00001563 6465696e697400   6147		.strz	"deinit"
0000156a 800a             6148		.byte	128,10
0000156c 40               6149		.byte	64
0000156d 01               6150		.byte	1
0000156e 00000000         6151		.long	.LDW_5c99250
00001572 00               6152		.byte	0
00001573 0153             6153		.byte	1,83
                          6154	
                          6155	.LDW_4983770:
00001575 1f               6156		.byte	31
00001576 00000000         6157		.long	.LDW03
0000157a 00000000         6158		.long	.LDW13
                          6159	
0000157e 00               6160		.byte	0
                          6161	
0000157f 00               6162		.byte	0
                          6163	
                          6164	.LDW_5ca9b70:
00001580 16               6165		.byte	22
00001581 5365634d5f566572 6166		.strz	"SecM_VerificationClassDDD"
00001589 696669636174696f
00001591 6e436c6173734444
00001599 4400            
0000159b 970a             6167		.byte	151,10
0000159d 11               6168		.byte	17
0000159e 01               6169		.byte	1
0000159f 00000000         6170		.long	.LDW_49cb6b0
000015a3 00000000         6171		.long	SecM_VerificationClassDDD
000015a7 00000000         6172		.long	__ghs_eofn_SecM_VerificationClassDDD
000015ab 0151             6173		.byte	1,81
000015ad 00               6174		.byte	0
000015ae d800             6175		.byte	216,0
000015b0 00               6176		.byte	0
000015b1 d800             6177		.byte	216,0
000015b3 00               6178		.byte	0
000015b4 00               6179		.byte	0
000015b5 00               6180		.byte	0
000015b6 01               6181		.byte	1
000015b7 01               6182		.byte	1
000015b8 00               6183		.byte	0
000015b9 01               6184		.byte	1
                          6185	
                          6186		.section	.debug_frame
                          6187	.LDW_5e1fb50:
00000198 00000014         6188		.long	.LDW_unq_1a-.LDW_unq_19
                          6189	.LDW_unq_19:
0000019c 00000000         6190		.long	.LDW_5c4a068
000001a0 00000000         6191		.long	SecM_VerificationClassDDD
000001a4 0000002e         6192		.long	__ghs_eofn_SecM_VerificationClassDDD-SecM_VerificationClassDDD
000001a8 01               6193		.byte	1
000001a9 00000000         6194		.long	.LDW33
000001ad 00               6195		.byte	0
000001ae 00               6196		.byte	0
000001af 00               6197		.byte	0
                          6198	.LDW_unq_1a:
                          6199		.section	.debug_line
00000585 000502           6200		.byte	0,5,2
00000588 00000000         6201		.long	SecM_VerificationClassDDD

                                   Fri Apr 10 08:31:50 2020           Page 112
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000058c 06               6202		.byte	6
0000058d 03               6203		.byte	3
0000058e 970a             6204		.byte	151,10
00000590 02               6205		.byte	2
00000591 00               6206		.byte	0
00000592 01               6207		.byte	1
00000593 03               6208		.byte	3
00000594 04               6209		.byte	4
00000595 02               6210		.byte	2
00000596 08               6211		.byte	8
00000597 01               6212		.byte	1
00000598 33               6213		.byte	51
00000599 23               6214		.byte	35
0000059a 1d               6215		.byte	29
0000059b 06               6216		.byte	6
0000059c 000502           6217		.byte	0,5,2
0000059f 00000000         6218		.long	.LDWlin45
000005a3 02               6219		.byte	2
000005a4 00               6220		.byte	0
000005a5 02               6221		.byte	2
000005a6 0c               6222		.byte	12
000005a7 000101           6223		.byte	0,1,1
                          6224		.section	.debug_info
                          6225	.LDW_5c98f38:
000015ba 11               6226		.byte	17
000015bb 7056657269667950 6227		.strz	"pVerifyParam"
000015c3 6172616d00      
000015c8 970a             6228		.byte	151,10
000015ca 61               6229		.byte	97
000015cb 01               6230		.byte	1
000015cc 00000000         6231		.long	.LDW_498c450
000015d0 00               6232		.byte	0
000015d1 0153             6233		.byte	1,83
                          6234	
                          6235	.LDW_4983890:
000015d3 1f               6236		.byte	31
000015d4 00000000         6237		.long	.LDW23
000015d8 00000000         6238		.long	.LDW33
                          6239	
                          6240	.LDW_5c98dd8:
000015dc 06               6241		.byte	6
000015dd 766572696679436f 6242		.strz	"verifyContext"
000015e5 6e7465787400    
000015eb 990a             6243		.byte	153,10
000015ed 1f               6244		.byte	31
000015ee 01               6245		.byte	1
000015ef 00000000         6246		.long	.LDW_5ca9c08
000015f3 00               6247		.byte	0
000015f4 00               6248		.byte	0
000015f5 0271             6249		.byte	2,113
000015f7 14               6250		.byte	20
                          6251	
                          6252	.LDW_5c988b0:
000015f8 06               6253		.byte	6
000015f9 636f6e66696700   6254		.strz	"config"
00001600 9a0a             6255		.byte	154,10
00001602 1f               6256		.byte	31
00001603 01               6257		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 113
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00001604 00000000         6258		.long	.LDW_5c74078
00001608 00               6259		.byte	0
00001609 00               6260		.byte	0
0000160a 0271             6261		.byte	2,113
0000160c 08               6262		.byte	8
                          6263	
0000160d 00               6264		.byte	0
                          6265	
0000160e 00               6266		.byte	0
                          6267	
                          6268	.LDW_5ca9c90:
0000160f 16               6269		.byte	22
00001610 5365634d5f566572 6270		.strz	"SecM_Verification"
00001618 696669636174696f
00001620 6e00            
00001622 d00a             6271		.byte	208,10
00001624 11               6272		.byte	17
00001625 01               6273		.byte	1
00001626 00000000         6274		.long	.LDW_49cb6b0
0000162a 00000000         6275		.long	SecM_Verification
0000162e 00000000         6276		.long	__ghs_eofn_SecM_Verification
00001632 0151             6277		.byte	1,81
00001634 03               6278		.byte	3
00001635 00               6279		.byte	0
00001636 00               6280		.byte	0
00001637 00               6281		.byte	0
00001638 00               6282		.byte	0
00001639 00               6283		.byte	0
0000163a 00               6284		.byte	0
0000163b 01               6285		.byte	1
0000163c 01               6286		.byte	1
0000163d 00               6287		.byte	0
0000163e 01               6288		.byte	1
                          6289	
                          6290		.section	.debug_frame
                          6291	.LDW_5e20010:
000001b0 00000014         6292		.long	.LDW_unq_1c-.LDW_unq_1b
                          6293	.LDW_unq_1b:
000001b4 00000000         6294		.long	.LDW_5c4a068
000001b8 00000000         6295		.long	SecM_Verification
000001bc 00000002         6296		.long	__ghs_eofn_SecM_Verification-SecM_Verification
000001c0 01               6297		.byte	1
000001c1 00000000         6298		.long	.LDW53
000001c5 00               6299		.byte	0
000001c6 00               6300		.byte	0
000001c7 00               6301		.byte	0
                          6302	.LDW_unq_1c:
                          6303		.section	.debug_line
000005aa 000502           6304		.byte	0,5,2
000005ad 00000000         6305		.long	SecM_Verification
000005b1 06               6306		.byte	6
000005b2 03               6307		.byte	3
000005b3 d20a             6308		.byte	210,10
000005b5 02               6309		.byte	2
000005b6 00               6310		.byte	0
000005b7 01               6311		.byte	1
000005b8 06               6312		.byte	6
000005b9 000502           6313		.byte	0,5,2

                                   Fri Apr 10 08:31:50 2020           Page 114
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000005bc 00000000         6314		.long	__ghs_eofn_SecM_Verification
000005c0 02               6315		.byte	2
000005c1 00               6316		.byte	0
000005c2 000101           6317		.byte	0,1,1
                          6318		.section	.debug_info
                          6319	.LDW_5c98c20:
0000163f 11               6320		.byte	17
00001640 7056657269667950 6321		.strz	"pVerifyParam"
00001648 6172616d00      
0000164d d00a             6322		.byte	208,10
0000164f 59               6323		.byte	89
00001650 01               6324		.byte	1
00001651 00000000         6325		.long	.LDW_498c450
00001655 00               6326		.byte	0
00001656 0153             6327		.byte	1,83
                          6328	
                          6329	.LDW_4983710:
00001658 1f               6330		.byte	31
00001659 00000000         6331		.long	.LDW43
0000165d 00000000         6332		.long	.LDW53
                          6333	
00001661 00               6334		.byte	0
                          6335	
00001662 00               6336		.byte	0
                          6337	
00001663 00               6338		.byte	0
                          6339	
                          6340		.section	.debug_line
                          6341	.Ldw_line_end:
                          6342		.section	.debug_macinfo
00000000 03               6343		.byte	3
00000001 00               6344		.byte	0
00000002 01               6345		.byte	1
00000003 03               6346		.byte	3
00000004 50               6347		.byte	80
00000005 02               6348		.byte	2
00000006 03               6349		.byte	3
00000007 55               6350		.byte	85
00000008 03               6351		.byte	3
00000009 01               6352		.byte	1
0000000a 45               6353		.byte	69
0000000b 5f5f5345435f494e 6354		.strz	"__SEC_INC_H__ "
00000013 435f485f5f2000  
0000001a 03               6355		.byte	3
0000001b 4c               6356		.byte	76
0000001c 04               6357		.byte	4
0000001d 01               6358		.byte	1
0000001e 4a               6359		.byte	74
0000001f 435f435055545950 6360		.strz	"C_CPUTYPE_32BIT "
00000027 455f333242495420
0000002f 00              
00000030 01               6361		.byte	1
00000031 59               6362		.byte	89
00000032 435f435055545950 6363		.strz	"C_CPUTYPE_BITORDER_MSB2LSB "
0000003a 455f4249544f5244
00000042 45525f4d5342324c
0000004a 53422000        
0000004e 01               6364		.byte	1
0000004f 63               6365		.byte	99
00000050 565f454e41424c45 6366		.strz	"V_ENABLE_USE_DUMMY_STATEMENT "
00000058 5f5553455f44554d
00000060 4d595f5354415445
00000068 4d454e542000    
0000006e 01               6367		.byte	1
0000006f 8901             6368		.byte	137,1
00000071 5647454e5f454e41 6369		.strz	"VGEN_ENABLE_CANFBL "
00000079 424c455f43414e46
00000081 424c2000        

                                   Fri Apr 10 08:31:50 2020           Page 115
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000085 01               6370		.byte	1
00000086 be01             6371		.byte	190,1
00000088 565f434f4d505f47 6372		.strz	"V_COMP_GHS_MPC5700 "
00000090 48535f4d50433537
00000098 30302000        
0000009c 01               6373		.byte	1
0000009d ca01             6374		.byte	202,1
0000009f 4d414749435f4e55 6375		.strz	"MAGIC_NUMBER 312540478"
000000a7 4d42455220333132
000000af 35343034373800  
000000b6 04               6376		.byte	4
000000b7 03               6377		.byte	3
000000b8 52               6378		.byte	82
000000b9 05               6379		.byte	5
000000ba 01               6380		.byte	1
000000bb 8704             6381		.byte	135,4
000000bd 565f4445465f5355 6382		.strz	"V_DEF_SUPPORTED_PLATFORM "
000000c5 50504f525445445f
000000cd 504c4154464f524d
000000d5 2000            
000000d7 01               6383		.byte	1
000000d8 da06             6384		.byte	218,6
000000da 4c4f43414c5f494e 6385		.strz	"LOCAL_INLINE static inline"
000000e2 4c494e4520737461
000000ea 74696320696e6c69
000000f2 6e6500          
000000f5 01               6386		.byte	1
000000f6 e406             6387		.byte	228,6
000000f8 565f4d454d524f4d 6388		.strz	"V_MEMROM0 "
00000100 302000          
00000103 01               6389		.byte	1
00000104 ec06             6390		.byte	236,6
00000106 565f4d454d524f4d 6391		.strz	"V_MEMROM1 "
0000010e 312000          
00000111 01               6392		.byte	1
00000112 8007             6393		.byte	128,7
00000114 565f4d454d524f4d 6394		.strz	"V_MEMROM2 const"
0000011c 3220636f6e737400
00000124 01               6395		.byte	1
00000125 9307             6396		.byte	147,7
00000127 565f4d454d524f4d 6397		.strz	"V_MEMROM3 "
0000012f 332000          
00000132 01               6398		.byte	1
00000133 a107             6399		.byte	161,7
00000135 565f4d454d52414d 6400		.strz	"V_MEMRAM1 "
0000013d 312000          
00000140 01               6401		.byte	1
00000141 b507             6402		.byte	181,7
00000143 565f4d454d52414d 6403		.strz	"V_MEMRAM2 "
0000014b 322000          
0000014e 01               6404		.byte	1
0000014f cc07             6405		.byte	204,7
00000151 565f4d454d52414d 6406		.strz	"V_MEMRAM3 "
00000159 332000          
0000015c 04               6407		.byte	4
0000015d 03               6408		.byte	3
0000015e 56               6409		.byte	86
0000015f 06               6410		.byte	6
00000160 01               6411		.byte	1
00000161 2f               6412		.byte	47
00000162 5345435f434c4153 6413		.strz	"SEC_CLASS_DDD 0"
0000016a 535f444444203000
00000172 01               6414		.byte	1
00000173 32               6415		.byte	50
00000174 5345435f434c4153 6416		.strz	"SEC_CLASS_VENDOR 3"
0000017c 535f56454e444f52
00000184 203300          
00000187 01               6417		.byte	1
00000188 39               6418		.byte	57
00000189 5345435f52495045 6419		.strz	"SEC_RIPEMD160 0"
00000191 4d44313630203000
00000199 01               6420		.byte	1
0000019a 3a               6421		.byte	58
0000019b 5345435f53484131 6422		.strz	"SEC_SHA1 1"
000001a3 203100          
000001a6 01               6423		.byte	1
000001a7 3b               6424		.byte	59
000001a8 5345435f53484132 6425		.strz	"SEC_SHA256 2"
000001b0 3536203200      

                                   Fri Apr 10 08:31:50 2020           Page 116
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000001b5 01               6426		.byte	1
000001b6 44               6427		.byte	68
000001b7 5345435f4b45595f 6428		.strz	"SEC_KEY_TIMEOUT 0"
000001bf 54494d454f555420
000001c7 3000            
000001c9 01               6429		.byte	1
000001ca 48               6430		.byte	72
000001cb 5345435f48415348 6431		.strz	"SEC_HASH_ALGORITHM SEC_SHA1"
000001d3 5f414c474f524954
000001db 484d205345435f53
000001e3 48413100        
000001e7 01               6432		.byte	1
000001e8 49               6433		.byte	73
000001e9 5345435f53454355 6434		.strz	"SEC_SECURITY_CLASS SEC_CLASS_DDD"
000001f1 524954595f434c41
000001f9 5353205345435f43
00000201 4c4153535f444444
00000209 00              
0000020a 01               6435		.byte	1
0000020b 4f               6436		.byte	79
0000020c 5345435f454e4142 6437		.strz	"SEC_ENABLE_VERIFICATION_KEY_INTERNAL "
00000214 4c455f5645524946
0000021c 49434154494f4e5f
00000224 4b45595f494e5445
0000022c 524e414c2000    
00000232 01               6438		.byte	1
00000233 50               6439		.byte	80
00000234 5345435f53495a45 6440		.strz	"SEC_SIZE_CHECKSUM_VENDOR 0"
0000023c 5f434845434b5355
00000244 4d5f56454e444f52
0000024c 203000          
0000024f 01               6441		.byte	1
00000250 52               6442		.byte	82
00000251 5345435f56455249 6443		.strz	"SEC_VERIFY_BYTES 64"
00000259 46595f4259544553
00000261 20363400        
00000265 01               6444		.byte	1
00000266 53               6445		.byte	83
00000267 5345435f454e4142 6446		.strz	"SEC_ENABLE_VERIFICATION_ADDRESS_LENGTH "
0000026f 4c455f5645524946
00000277 49434154494f4e5f
0000027f 414444524553535f
00000287 4c454e4754482000
0000028f 01               6447		.byte	1
00000290 54               6448		.byte	84
00000291 5345435f454e4142 6449		.strz	"SEC_ENABLE_CRC_TOTAL "
00000299 4c455f4352435f54
000002a1 4f54414c2000    
000002a7 01               6450		.byte	1
000002a8 57               6451		.byte	87
000002a9 5345435f5645525f 6452		.strz	"SEC_VER_SIG_OFFSET 0"
000002b1 5349475f4f464653
000002b9 4554203000      
000002be 01               6453		.byte	1
000002bf 58               6454		.byte	88
000002c0 5345435f5645525f 6455		.strz	"SEC_VER_CRC_OFFSET 0"
000002c8 4352435f4f464653
000002d0 4554203000      
000002d5 04               6456		.byte	4
000002d6 03               6457		.byte	3
000002d7 59               6458		.byte	89
000002d8 07               6459		.byte	7
000002d9 03               6460		.byte	3
000002da 4d               6461		.byte	77
000002db 03               6462		.byte	3
000002dc 04               6463		.byte	4
000002dd 01               6464		.byte	1
000002de 59               6465		.byte	89
000002df 5345435f57415443 6466		.strz	"SEC_WATCHDOG_CYCLE_COUNT (0x20u)"
000002e7 48444f475f435943
000002ef 4c455f434f554e54
000002f7 2028307832307529
000002ff 00              
00000300 01               6467		.byte	1
00000301 60               6468		.byte	96
00000302 5345435f454e4142 6469		.strz	"SEC_ENABLE_WORKSPACE_INTERNAL "
0000030a 4c455f574f524b53
00000312 504143455f494e54
0000031a 45524e414c2000  
00000321 01               6470		.byte	1
00000322 66               6471		.byte	102
00000323 5345435f43484543 6472		.strz	"SEC_CHECKSUM_TYPE_CRC 0u"
0000032b 4b53554d5f545950
00000333 455f435243203075
0000033b 00              
0000033c 01               6473		.byte	1
0000033d 6b               6474		.byte	107
0000033e 5345435f43484543 6475		.strz	"SEC_CHECKSUM_TYPE_HASH (SEC_CHECKSUM_TYPE_CRC + 1u)"
00000346 4b53554d5f545950
0000034e 455f484153482028
00000356 5345435f43484543
0000035e 4b53554d5f545950
00000366 455f435243202b20
0000036e 31752900        
00000372 01               6476		.byte	1
00000373 71               6477		.byte	113
00000374 5345435f4d41435f 6478		.strz	"SEC_MAC_TYPE_HMAC 0u"
0000037c 545950455f484d41
00000384 4320307500      
00000389 01               6479		.byte	1
0000038a 8601             6480		.byte	134,1
0000038c 5345435f43524333 6481		.strz	"SEC_CRC32 0u"
00000394 3220307500      

                                   Fri Apr 10 08:31:50 2020           Page 117
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000399 01               6482		.byte	1
0000039a 8e01             6483		.byte	142,1
0000039c 5345435f43524331 6484		.strz	"SEC_CRC16 (SEC_CRC32 + 1u)"
000003a4 3620285345435f43
000003ac 52433332202b2031
000003b4 752900          
000003b7 01               6485		.byte	1
000003b8 ca01             6486		.byte	202,1
000003ba 5345435f5349474e 6487		.strz	"SEC_SIGNATURE_SCHEME_RSA_V15 0u"
000003c2 41545552455f5343
000003ca 48454d455f525341
000003d2 5f56313520307500
000003da 01               6488		.byte	1
000003db dc01             6489		.byte	220,1
000003dd 5345434d5f4f4b20 6490		.strz	"SECM_OK 0x00u"
000003e5 307830307500    
000003eb 01               6491		.byte	1
000003ec e301             6492		.byte	227,1
000003ee 5345435f43414c4c 6493		.strz	"SEC_CALL_TYPE "
000003f6 5f545950452000  
000003fd 01               6494		.byte	1
000003fe f401             6495		.byte	244,1
00000400 5345435f57415443 6496		.strz	"SEC_WATCHDOG_NONE ((FL_WDTriggerFctType)0u)"
00000408 48444f475f4e4f4e
00000410 45202828464c5f57
00000418 4454726967676572
00000420 4663745479706529
00000428 30752900        
0000042c 01               6497		.byte	1
0000042d f901             6498		.byte	249,1
0000042f 5345435f57415443 6499		.strz	"SEC_WATCHDOG_TRIGGER(function) if ((SEC_WATCHDOG_NONE) != (function)) { (function)(); }"
00000437 48444f475f545249
0000043f 474745522866756e
00000447 6374696f6e292069
0000044f 662028285345435f
00000457 5741544348444f47
0000045f 5f4e4f4e45292021
00000467 3d202866756e6374
0000046f 696f6e2929207b20
00000477 2866756e6374696f
0000047f 6e2928293b207d00
00000487 04               6500		.byte	4
00000488 03               6501		.byte	3
00000489 5c               6502		.byte	92
0000048a 08               6503		.byte	8
0000048b 03               6504		.byte	3
0000048c 2f               6505		.byte	47
0000048d 09               6506		.byte	9
0000048e 04               6507		.byte	4
0000048f 04               6508		.byte	4
00000490 04               6509		.byte	4
00000491 03               6510		.byte	3
00000492 58               6511		.byte	88
00000493 0a               6512		.byte	10
00000494 01               6513		.byte	1
00000495 4b               6514		.byte	75
00000496 6b435243496e6974 6515		.strz	"kCRCInit 0x01u"
0000049e 20307830317500  
000004a5 01               6516		.byte	1
000004a6 4d               6517		.byte	77
000004a7 6b435243436f6d70 6518		.strz	"kCRCCompute 0x02u"
000004af 7574652030783032
000004b7 7500            
000004b9 01               6519		.byte	1
000004ba 4f               6520		.byte	79
000004bb 6b43524346696e61 6521		.strz	"kCRCFinalize 0x03u"
000004c3 6c697a6520307830
000004cb 337500          
000004ce 01               6522		.byte	1
000004cf 52               6523		.byte	82
000004d0 5345435f4352435f 6524		.strz	"SEC_CRC_NONE 0x00u"
000004d8 4e4f4e4520307830
000004e0 307500          
000004e3 01               6525		.byte	1
000004e4 53               6526		.byte	83
000004e5 5345435f4352435f 6527		.strz	"SEC_CRC_INIT kCRCInit"
000004ed 494e4954206b4352
000004f5 43496e697400    
000004fb 01               6528		.byte	1
000004fc 54               6529		.byte	84
000004fd 5345435f4352435f 6530		.strz	"SEC_CRC_COMPUTE kCRCCompute"
00000505 434f4d5055544520
0000050d 6b435243436f6d70
00000515 75746500        
00000519 01               6531		.byte	1
0000051a 55               6532		.byte	85
0000051b 5345435f4352435f 6533		.strz	"SEC_CRC_FINALIZE kCRCFinalize"
00000523 46494e414c495a45
0000052b 206b43524346696e
00000533 616c697a6500    
00000539 01               6534		.byte	1
0000053a 56               6535		.byte	86
0000053b 5345435f4352435f 6536		.strz	"SEC_CRC_VERIFY 0x04u"
00000543 5645524946592030
0000054b 7830347500      
00000550 01               6537		.byte	1

                                   Fri Apr 10 08:31:50 2020           Page 118
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000551 5d               6538		.byte	93
00000552 5345435f53495a45 6539		.strz	"SEC_SIZE_CHECKSUM_CRC_32 4u"
0000055a 5f434845434b5355
00000562 4d5f4352435f3332
0000056a 20347500        
0000056e 01               6540		.byte	1
0000056f 6d               6541		.byte	109
00000570 5345435f4352435f 6542		.strz	"SEC_CRC_TYPE SEC_CRC32"
00000578 5459504520534543
00000580 5f435243333200  
00000587 01               6543		.byte	1
00000588 78               6544		.byte	120
00000589 5345435f454e4142 6545		.strz	"SEC_ENABLE_CRC_TYPE_CRC32 "
00000591 4c455f4352435f54
00000599 5950455f43524333
000005a1 322000          
000005a4 01               6546		.byte	1
000005a5 8501             6547		.byte	133,1
000005a7 5345435f494e4954 6548		.strz	"SEC_INITIAL_VAL(val) (val)"
000005af 49414c5f56414c28
000005b7 76616c2920287661
000005bf 6c2900          
000005c2 01               6549		.byte	1
000005c3 8901             6550		.byte	137,1
000005c5 5345435f5a45524f 6551		.strz	"SEC_ZERO_VALUE SEC_INITIAL_VAL(0x00u)"
000005cd 5f56414c55452053
000005d5 45435f494e495449
000005dd 414c5f56414c2830
000005e5 783030752900    
000005eb 04               6552		.byte	4
000005ec 03               6553		.byte	3
000005ed 59               6554		.byte	89
000005ee 0b               6555		.byte	11
000005ef 03               6556		.byte	3
000005f0 55               6557		.byte	85
000005f1 0c               6558		.byte	12
000005f2 01               6559		.byte	1
000005f3 3e               6560		.byte	62
000005f4 5345435f53454544 6561		.strz	"SEC_SEED_LENGTH 8u"
000005fc 5f4c454e47544820
00000604 387500          
00000607 01               6562		.byte	1
00000608 40               6563		.byte	64
00000609 5345435f4b45595f 6564		.strz	"SEC_KEY_LENGTH 4u"
00000611 4c454e4754482034
00000619 7500            
0000061b 04               6565		.byte	4
0000061c 01               6566		.byte	1
0000061d 7e               6567		.byte	126
0000061e 5345435f50524e47 6568		.strz	"SEC_PRNG_LCG 0u"
00000626 5f4c434720307500
0000062e 01               6569		.byte	1
0000062f 8301             6570		.byte	131,1
00000631 5345435f50524e47 6571		.strz	"SEC_PRNG_FIPS186 (SEC_PRNG_LCG + 1u)"
00000639 5f46495053313836
00000641 20285345435f5052
00000649 4e475f4c4347202b
00000651 2031752900      
00000656 01               6572		.byte	1
00000657 8901             6573		.byte	137,1
00000659 5345435f50524e47 6574		.strz	"SEC_PRNG SEC_PRNG_LCG"
00000661 205345435f50524e
00000669 475f4c434700    
0000066f 04               6575		.byte	4
00000670 03               6576		.byte	3
00000671 5a               6577		.byte	90
00000672 0d               6578		.byte	13
00000673 01               6579		.byte	1
00000674 53               6580		.byte	83
00000675 5359535345525649 6581		.strz	"SYSSERVICE_SECMODHIS_VERIFICATION_VERSION 0x0208u"
0000067d 43455f5345434d4f
00000685 444849535f564552
0000068d 494649434154494f
00000695 4e5f56455253494f
0000069d 4e20307830323038
000006a5 7500            
000006a7 01               6582		.byte	1
000006a8 54               6583		.byte	84
000006a9 5359535345525649 6584		.strz	"SYSSERVICE_SECMODHIS_VERIFICATION_RELEASE_VERSION 0x01u"
000006b1 43455f5345434d4f
000006b9 444849535f564552
000006c1 494649434154494f
000006c9 4e5f52454c454153
000006d1 455f56455253494f
000006d9 4e20307830317500
000006e1 01               6585		.byte	1
000006e2 64               6586		.byte	100
000006e3 5345434d5f564552 6587		.strz	"SECM_VER_OK 0x00u"
000006eb 5f4f4b2030783030
000006f3 7500            
000006f5 01               6588		.byte	1
000006f6 65               6589		.byte	101
000006f7 5345434d5f564552 6590		.strz	"SECM_VER_ERROR 0x01u"
000006ff 5f4552524f522030
00000707 7830317500      
0000070c 01               6591		.byte	1
0000070d 6a               6592		.byte	106
0000070e 6b48617368496e69 6593		.strz	"kHashInit 0x01u"
00000716 7420307830317500

                                   Fri Apr 10 08:31:50 2020           Page 119
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
0000071e 01               6594		.byte	1
0000071f 6b               6595		.byte	107
00000720 6b48617368436f6d 6596		.strz	"kHashCompute 0x02u"
00000728 7075746520307830
00000730 327500          
00000733 01               6597		.byte	1
00000734 6c               6598		.byte	108
00000735 6b4861736846696e 6599		.strz	"kHashFinalize 0x03u"
0000073d 616c697a65203078
00000745 30337500        
00000749 01               6600		.byte	1
0000074a 6d               6601		.byte	109
0000074b 6b53696756657269 6602		.strz	"kSigVerify 0x04u"
00000753 6679203078303475
0000075b 00              
0000075c 01               6603		.byte	1
0000075d 71               6604		.byte	113
0000075e 5345435f48415348 6605		.strz	"SEC_HASH_INIT kHashInit"
00000766 5f494e4954206b48
0000076e 617368496e697400
00000776 01               6606		.byte	1
00000777 72               6607		.byte	114
00000778 5345435f48415348 6608		.strz	"SEC_HASH_COMPUTE kHashCompute"
00000780 5f434f4d50555445
00000788 206b48617368436f
00000790 6d7075746500    
00000796 01               6609		.byte	1
00000797 73               6610		.byte	115
00000798 5345435f48415348 6611		.strz	"SEC_HASH_FINALIZE kHashFinalize"
000007a0 5f46494e414c495a
000007a8 45206b4861736846
000007b0 696e616c697a6500
000007b8 01               6612		.byte	1
000007b9 74               6613		.byte	116
000007ba 5345435f5349475f 6614		.strz	"SEC_SIG_VERIFY kSigVerify"
000007c2 564552494659206b
000007ca 5369675665726966
000007d2 7900            
000007d4 01               6615		.byte	1
000007d5 77               6616		.byte	119
000007d6 5345435f55504441 6617		.strz	"SEC_UPDATE_OPERATION_DEFAULT 0x00u"
000007de 54455f4f50455241
000007e6 54494f4e5f444546
000007ee 41554c5420307830
000007f6 307500          
000007f9 01               6618		.byte	1
000007fa 78               6619		.byte	120
000007fb 5345435f55504441 6620		.strz	"SEC_UPDATE_OPERATION_ADDRESS_LENGTH 0x01u"
00000803 54455f4f50455241
0000080b 54494f4e5f414444
00000813 524553535f4c454e
0000081b 4754482030783031
00000823 7500            
00000825 01               6621		.byte	1
00000826 79               6622		.byte	121
00000827 5345435f55504441 6623		.strz	"SEC_UPDATE_OPERATION_INTER_SEGMENT 0x02u"
0000082f 54455f4f50455241
00000837 54494f4e5f494e54
0000083f 45525f5345474d45
00000847 4e54203078303275
0000084f 00              
00000850 01               6624		.byte	1
00000851 7a               6625		.byte	122
00000852 5345435f55504441 6626		.strz	"SEC_UPDATE_OPERATION_VERIFICATION 0x04u"
0000085a 54455f4f50455241
00000862 54494f4e5f564552
0000086a 494649434154494f
00000872 4e20307830347500
0000087a 01               6627		.byte	1
0000087b ba01             6628		.byte	186,1
0000087d 5345435f53454355 6629		.strz	"SEC_SECURITY_CLASS_VERIFY SEC_SECURITY_CLASS"
00000885 524954595f434c41
0000088d 53535f5645524946
00000895 59205345435f5345
0000089d 4355524954595f43
000008a5 4c41535300      
000008aa 01               6630		.byte	1
000008ab c001             6631		.byte	192,1
000008ad 5345435f53454355 6632		.strz	"SEC_SECURITY_CLASS_VERIFICATION SEC_SECURITY_CLASS"
000008b5 524954595f434c41
000008bd 53535f5645524946
000008c5 49434154494f4e20
000008cd 5345435f53454355
000008d5 524954595f434c41
000008dd 535300          
000008e0 01               6633		.byte	1
000008e1 c701             6634		.byte	199,1
000008e3 5345435f43484543 6635		.strz	"SEC_CHECKSUM_TYPE SEC_CHECKSUM_TYPE_CRC"
000008eb 4b53554d5f545950
000008f3 45205345435f4348
000008fb 45434b53554d5f54
00000903 5950455f43524300
0000090b 01               6636		.byte	1
0000090c cd01             6637		.byte	205,1
0000090e 5345435f4d41435f 6638		.strz	"SEC_MAC_TYPE SEC_MAC_TYPE_HMAC"
00000916 5459504520534543
0000091e 5f4d41435f545950
00000926 455f484d414300  
0000092d 01               6639		.byte	1
0000092e d301             6640		.byte	211,1
00000930 5345435f5349474e 6641		.strz	"SEC_SIGNATURE_SCHEME SEC_SIGNATURE_SCHEME_RSA_V15"
00000938 41545552455f5343
00000940 48454d4520534543
00000948 5f5349474e415455
00000950 52455f534348454d
00000958 455f5253415f5631
00000960 3500            
00000962 01               6642		.byte	1
00000963 f101             6643		.byte	241,1
00000965 5345435f454e4142 6644		.strz	"SEC_ENABLE_VERIFICATION_ASSERT_READ_COUNT "
0000096d 4c455f5645524946
00000975 49434154494f4e5f
0000097d 4153534552545f52
00000985 4541445f434f554e
0000098d 542000          
00000990 01               6645		.byte	1
00000991 fd01             6646		.byte	253,1
00000993 5345435f454e4142 6647		.strz	"SEC_ENABLE_SECURITY_CLASS_DDD "
0000099b 4c455f5345435552
000009a3 4954595f434c4153
000009ab 535f4444442000  
000009b2 01               6648		.byte	1
000009b3 8f02             6649		.byte	143,2

                                   Fri Apr 10 08:31:50 2020           Page 120
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
000009b5 5345435f454e4142 6650		.strz	"SEC_ENABLE_CHECKSUM_TYPE_CRC "
000009bd 4c455f434845434b
000009c5 53554d5f54595045
000009cd 5f4352432000    
000009d3 01               6651		.byte	1
000009d4 db02             6652		.byte	219,2
000009d6 5345435f454e4142 6653		.strz	"SEC_ENABLE_VERIFY_CHECKSUM_CRC "
000009de 4c455f5645524946
000009e6 595f434845434b53
000009ee 554d5f4352432000
000009f6 01               6654		.byte	1
000009f7 8603             6655		.byte	134,3
000009f9 5345435f53495a45 6656		.strz	"SEC_SIZE_CHECKSUM_CRC SEC_SIZE_CHECKSUM_CRC_32"
00000a01 5f434845434b5355
00000a09 4d5f435243205345
00000a11 435f53495a455f43
00000a19 4845434b53554d5f
00000a21 4352435f333200  
00000a28 01               6657		.byte	1
00000a29 b503             6658		.byte	181,3
00000a2b 5345435f56455249 6659		.strz	"SEC_VERIFY_CLASS_DDD_VERIFY_SIZE SEC_SIZE_CHECKSUM_CRC"
00000a33 46595f434c415353
00000a3b 5f4444445f564552
00000a43 4946595f53495a45
00000a4b 205345435f53495a
00000a53 455f434845434b53
00000a5b 554d5f43524300  
00000a62 01               6660		.byte	1
00000a63 c303             6661		.byte	195,3
00000a65 5345435f56455249 6662		.strz	"SEC_VERIFY_CLASS_DDD_VERIFY_OFFSET 0u"
00000a6d 46595f434c415353
00000a75 5f4444445f564552
00000a7d 4946595f4f464653
00000a85 455420307500    
00000a8b 04               6663		.byte	4
00000a8c 04               6664		.byte	4
00000a8d 01               6665		.byte	1
00000a8e 66               6666		.byte	102
00000a8f 5345435f41444452 6667		.strz	"SEC_ADDRESS_LENGTH_INPUT_SIZE 4u"
00000a97 4553535f4c454e47
00000a9f 54485f494e505554
00000aa7 5f53495a45203475
00000aaf 00              
00000ab0 01               6668		.byte	1
00000ab1 8001             6669		.byte	128,1
00000ab3 5345435f56455249 6670		.strz	"SEC_VERIFY_CLASS_DDD_FUNCTION SecM_VerifyChecksumCrc"
00000abb 46595f434c415353
00000ac3 5f4444445f46554e
00000acb 4354494f4e205365
00000ad3 634d5f5665726966
00000adb 79436865636b7375
00000ae3 6d43726300      
00000ae8 01               6671		.byte	1
00000ae9 8101             6672		.byte	129,1
00000aeb 5345435f56455249 6673		.strz	"SEC_VERIFY_CLASS_DDD_WORKSPACE &crcParam"
00000af3 46595f434c415353
00000afb 5f4444445f574f52
00000b03 4b53504143452026
00000b0b 637263506172616d
00000b13 00              
00000b14 01               6674		.byte	1
00000b15 8201             6675		.byte	130,1
00000b17 5345435f56455249 6676		.strz	"SEC_VERIFY_CLASS_DDD_WORKSPACE_SIZE sizeof(crcParam)"
00000b1f 46595f434c415353
00000b27 5f4444445f574f52
00000b2f 4b53504143455f53
00000b37 495a452073697a65
00000b3f 6f66286372635061
00000b47 72616d2900      
00000b4c 01               6677		.byte	1
00000b4d 8901             6678		.byte	137,1
00000b4f 5345435f56455249 6679		.strz	"SEC_VERIFY_FUNCTION SecM_VerifyClassDDD"
00000b57 46595f46554e4354
00000b5f 494f4e205365634d
00000b67 5f56657269667943
00000b6f 6c61737344444400
00000b77 01               6680		.byte	1
00000b78 9401             6681		.byte	148,1
00000b7a 5345435f56455249 6682		.strz	"SEC_VERIFICATION_FUNCTION SecM_VerificationClassDDD"
00000b82 4649434154494f4e
00000b8a 5f46554e4354494f
00000b92 4e205365634d5f56
00000b9a 6572696669636174
00000ba2 696f6e436c617373
00000baa 44444400        
00000bae 01               6683		.byte	1
00000baf 9f01             6684		.byte	159,1
00000bb1 5345435f4f504552 6685		.strz	"SEC_OPERATION_SIZE_CRC_TOTAL 1u"
00000bb9 4154494f4e5f5349
00000bc1 5a455f4352435f54
00000bc9 4f54414c20317500
00000bd1 01               6686		.byte	1
00000bd2 a301             6687		.byte	163,1
00000bd4 5345435f4f504552 6688		.strz	"SEC_OPERATION_SIZE_CRC_WRITTEN 0u"
00000bdc 4154494f4e5f5349
00000be4 5a455f4352435f57
00000bec 52495454454e2030
00000bf4 7500            
00000bf6 01               6689		.byte	1
00000bf7 a401             6690		.byte	164,1
00000bf9 5345435f4f504552 6691		.strz	"SEC_OPERATION_SIZE_VENDOR_CHECKSUM 0u"
00000c01 4154494f4e5f5349
00000c09 5a455f56454e444f
00000c11 525f434845434b53
00000c19 554d20307500    
00000c1f 01               6692		.byte	1
00000c20 a601             6693		.byte	166,1
00000c22 5345435f4f504552 6694		.strz	"SEC_OPERATION_SIZE (SEC_OPERATION_SIZE_CRC_TOTAL + SEC_OPERATION_SIZE_CRC_WRITTEN + SEC_OPERATION_SIZE_VENDOR_CHECKSUM + 1u)"
00000c2a 4154494f4e5f5349
00000c32 5a4520285345435f
00000c3a 4f5045524154494f
00000c42 4e5f53495a455f43
00000c4a 52435f544f54414c
00000c52 202b205345435f4f
00000c5a 5045524154494f4e
00000c62 5f53495a455f4352
00000c6a 435f575249545445
00000c72 4e202b205345435f
00000c7a 4f5045524154494f
00000c82 4e5f53495a455f56
00000c8a 454e444f525f4348
00000c92 45434b53554d202b
00000c9a 2031752900      
00000c9f 01               6695		.byte	1
00000ca0 ab01             6696		.byte	171,1
00000ca2 5345435f5645525f 6697		.strz	"SEC_VER_MAX_CONFIG_COUNT SEC_OPERATION_SIZE"
00000caa 4d41585f434f4e46
00000cb2 49475f434f554e54
00000cba 205345435f4f5045
00000cc2 524154494f4e5f53
00000cca 495a4500        
00000cce 01               6698		.byte	1
00000ccf af01             6699		.byte	175,1
00000cd1 5345435f5645525f 6700		.strz	"SEC_VER_ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]))"
00000cd9 41525241595f5349
00000ce1 5a45286172722920
00000ce9 2873697a656f6628
00000cf1 61727229202f2073
00000cf9 697a656f66282861
00000d01 7272295b305d2929
00000d09 00              
00000d0a 01               6701		.byte	1
00000d0b b401             6702		.byte	180,1
00000d0d 5345435f52454144 6703		.strz	"SEC_READ_COUNT_RESULT_IGNORE SECM_VER_OK"
00000d15 5f434f554e545f52
00000d1d 4553554c545f4947
00000d25 4e4f524520534543
00000d2d 4d5f5645525f4f4b
00000d35 00              
00000d36 01               6704		.byte	1
00000d37 b601             6705		.byte	182,1

                                   Fri Apr 10 08:31:50 2020           Page 121
                                   Fri Apr 10 08:31:49 2020   gh_000022k1.si
00000d39 5345435f52454144 6706		.strz	"SEC_READ_COUNT_RESULT_ASSERT SECM_VER_ERROR"
00000d41 5f434f554e545f52
00000d49 4553554c545f4153
00000d51 5345525420534543
00000d59 4d5f5645525f4552
00000d61 524f5200        
00000d65 01               6707		.byte	1
00000d66 b901             6708		.byte	185,1
00000d68 5345435f52454144 6709		.strz	"SEC_READ_COUNT_MASK_IGNORE 0x00u"
00000d70 5f434f554e545f4d
00000d78 41534b5f49474e4f
00000d80 5245203078303075
00000d88 00              
00000d89 01               6710		.byte	1
00000d8a bc01             6711		.byte	188,1
00000d8c 5345435f52454144 6712		.strz	"SEC_READ_COUNT_MASK_ASSERT (SecM_SizeType)(-1)"
00000d94 5f434f554e545f4d
00000d9c 41534b5f41535345
00000da4 525420285365634d
00000dac 5f53697a65547970
00000db4 6529282d312900  
00000dbb 01               6713		.byte	1
00000dbc c101             6714		.byte	193,1
00000dbe 5345435f4d454d4f 6715		.strz	"SEC_MEMORY_READ_ACCESS_WIDTH 1u"
00000dc6 52595f524541445f
00000dce 4143434553535f57
00000dd6 4944544820317500
00000dde 04               6716		.byte	4
00000ddf 00               6717		.byte	0
                          6718		.section	.debug_abbrev
0000016d 00               6719		.byte	0
                          6720		.section	.debug_info
                          6721	.Ldw_end:
