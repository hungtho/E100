
                                   Fri Apr 10 08:32:27 2020           Page 1
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
Command Line:   C:\ghs\comp_201754\asppc.exe -noundefined
                -stderr=err/ind_mset.err -elf -b1 -I../../../bsw/_common
                -I../../../bsw/eep -I../../../bsw/fbl -I../../../bsw/flash
                -I../../../bsw/flash_xd1 -I../../../bsw/secmod
                -I../../../bsw/wrapnv -Ic:/ghs/comp_201754/ansi
                -Ic:/ghs/comp_201754/include/ppc -Ic:/ghs/comp_201754/src/libsys
                -Igendata -Iinclude -IC:\ghs\comp_201754\lib\ppc5514
                -cpu=ppc560xp
                -patch_dbo=C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl\obj\ind_mset.dbo
                -source=ind_mset.c -o obj\gh_00008d81.o -list=lst/ind_mset.lst
                C:\Users\owner\AppData\Local\Temp\gh_00008d81.si
Source File:    C:\Users\owner\AppData\Local\Temp\gh_00008d81.si
Directory:      C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
Host OS:        Windows
AS: Copyright (C) 1983-2017 Green Hills Software.  All Rights Reserved.
Release: Compiler v2017.5.4
Build Directory: [Directory] COMP-VAL-WIN50:c:/autoval2/v2017.5-2017-10-03/win32-comp-ecom
Revision: [VCInfo] http://toolsvc/branches/release-branch-2017-5-comp/src@603870 (built by auto-compiler)
Revision Date: Wed Oct 04 11:30:08 2017

Release Date: Wed Oct 04 09:00:05 2017

                             1	#Driver Command: ccppc -DBRS_DERIVATIVE_SPC570S50 -DBRS_OSC_CLK=40
                             2	#		-DBRS_TIMEBASE_CLOCK=80 -DBRS_OS_USECASE_BRS
                             3	#		-DBRS_EVA_BOARD_DEFAULT -DBRS_PLATFORM_MPC57XX -DBRS_COMP_GHS
                             4	#		-DBRSHW_INSTRUCTION_SET_VLE -DBRS_CPU_STARTUP_ID=0
                             5	#		-object_dir=obj -list=lst/ind_mset.lst -stderr=err/ind_mset.err
                             6	#		-c -vle -DC_ENABLE_INSTRUCTION_SET_VLE -D__vle
                             7	#		--prototype_warnings -Odebug -Osize -Ospace -G -dual_debug
                             8	#		-nofloatio -cpu=ppc560xp -noobj -DRAM_48K -inline_prologue
                             9	#		-pragma_asm_inline -noSPE --no_exceptions --no_commons
                            10	#		-nokeeptempfiles -pnone --incorrect_pragma_warnings
                            11	#		--slash_comment --long_long -preprocess_assembly_files
                            12	#		-passsource -I../../../bsw/_common -I../../../bsw/eep
                            13	#		-I../../../bsw/fbl -I../../../bsw/flash -I../../../bsw/flash_xd1
                            14	#		-I../../../bsw/secmod -I../../../bsw/wrapnv
                            15	#		-Ic:/ghs/comp_201754/ansi -Ic:/ghs/comp_201754/include/ppc
                            16	#		-Ic:/ghs/comp_201754/src/libsys -Igendata -Iinclude
                            17	#		C:/ghs/comp_201754/src/libstartup/ind_mset.c
                            18	#Source File:   C:/ghs/comp_201754/src/libstartup/ind_mset.c
                            19	#Directory:     C:\Vector\CBD1800772_D00_Mpc57xx\Demo\DemoFbl\Appl
                            20	#Compile Date:  Fri Apr 10 08:32:26 2020
                            21	#Host OS:       Win32
                            22	#Version:       C-POWERPC 2017.5.4 RELEASE VERSION
                            23	#Release:       Compiler v2017.5.4
                            24	#Revision Date: Wed Oct 04 11:39:37 2017
                            25	#Release Date:  Wed Oct 04 09:00:05 2017
                            26	# ecom  -g -w -OMS
                            27	
                            28	#1: /*
                            29	#2:                       Low-Level Startup Library
                            30	#4:             Copyright 1983-2017 Green Hills Software, Inc.
                            31	#6:     This program is the property of Green Hills Software, Inc,
                            32	#7:     its contents are proprietary information and no part of it
                            33	#8:     is to be disclosed to anyone except employees of Green Hills
                            34	#9:     Software, Inc., or as agreed in writing signed by the President
                            35	#10:     of Green Hills Software, Inc.
                            36	#11: */
                            37	#13: #include "ind_startup.h"
                            38	#14: #include "indlibvariant.h"
                            39	#16: #if defined(__i386__) && defined(__x86_64__)
                            40	#17: /* For 64-bit x86, use this hand-optimized assembly implementation. This
                            41	#18:  * implementation isn't written to work on 32-bit x86, so can't just be listed
                            42	#19:  * in ind_mset.gpj. */

                                   Fri Apr 10 08:32:27 2020           Page 2
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
                            43	#20: #if !defined(__linux)
                            44	#21: #pragma ghs static_call 0
                            45	#22: #pragma ghs max_stack   0
                            46	#23: #endif
                            47	#24: void *(memset)(void *s, int c, size_t n);
                            48	#25: #pragma asm
                            49	#26: #include "ind_mset.86"
                            50	#27: #pragma endasm
                            51	#28: #else
                            52	#30: /* The C version of memset doesn't have SIMD code, so it isn't built when
                            53	#31:  * __GHS_SIMD_ALTERNATE_COMPILE is defined. */
                            54	#32: #if !defined(__GHS_SIMD_ALTERNATE_COMPILE)
                            55	#34: /* Unrolled memset loop, using up to 16-byte alignment */
                            56	#35: /* This routine is used by gprof and crt0.o */
                            57	#36: /* Only POWER values of 4 and 5 are supported. */
                            58	#37: #define POWER	4
                            59	#38: #define LOOP	(1<<POWER)
                            60	#40: #if defined(__V800)
                            61	#42: /* Reverse the order of the writes, since we have to remember the base */
                            62	#43: /* or the block.  Figure out the end of the block and work backwards.  Needs  */
                            63	#44: /* only one active pointer, plus the saved base pointer, and no counters.     */
                            64	#45: /* Old way may be better on CISC 68k, but maybe not. */
                            65	#47: void *(memset)(void *s, int c, size_t n) {
                            66	#48:     unsigned char *pt = (unsigned char*)s + n;
                            67	#49:     unsigned char ch=c; 
                            68	#50:     unsigned char *stop1 = (unsigned char*)s-1, *stop2;
                            69	#52:     if (n > 2*LOOP) {
                            70	#53: 	/* we have at least one aligned 16-byte block */
                            71	#54: 	register int ch4;
                            72	#56: 	/* Compute repeated char value */
                            73	#57: 	ch4 = ch;
                            74	#58: 	ch4 <<= 8;
                            75	#59: 	ch4 |= ch;
                            76	#60: 	ch4 = (ch4 << 16 | ch4);
                            77	#62: 	/* Store the odd bytes at the end first */
                            78	#63: 	while ((size_t)pt & LOOP-1)
                            79	#64: 	    *--pt = ch;
                            80	#66: 	/* pt is now aligned, pointing above the top block */
                            81	#68: 	{
                            82	#69: #ifdef USE_STRUCT16
                            83	#70: 	    register struct quad { int b1,b2,b3,b4; } ch16;
                            84	#71: 	    ch16.b1=ch4; ch16.b2=ch4; ch16.b3=ch4; ch16.b4=ch4;
                            85	#72: #endif
                            86	#74: /* Account for the case of s being at or below zero while pt is above zero. */
                            87	#75: #if __PTR_BIT < __INT_BIT && __PTR_BIT == __SHRT_BIT
                            88	#76: 	    stop2 = (unsigned char*)(short)((size_t)s&(~(LOOP-1)));
                            89	#77: #else
                            90	#78: 	    stop2 = (unsigned char*)((size_t)s&(~(LOOP-1)));
                            91	#79: #endif
                            92	#80: /* Termination test is optimized for the case where the start of
                            93	#81:    the memory block is favorably aligned. */
                            94	#82: 	    while ((pt -= LOOP) != stop2) {
                            95	#83: #ifdef USE_STRUCT16
                            96	#84: 		((struct quad*)pt)[0] = ch16;
                            97	#85: 		((struct quad*)pt)[1] = ch16;
                            98	#86: #else

                                   Fri Apr 10 08:32:27 2020           Page 3
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
                            99	#87: 		((int *)pt)[0] = ch4;
                           100	#88: 		((int *)pt)[1] = ch4;
                           101	#89: # if POWER >= 4
                           102	#90: 		((int *)pt)[2] = ch4;
                           103	#91: 		((int *)pt)[3] = ch4;
                           104	#92: #  if POWER >= 5
                           105	#93: 		((int *)pt)[4] = ch4;
                           106	#94: 		((int *)pt)[5] = ch4;
                           107	#95: 		((int *)pt)[6] = ch4;
                           108	#96: 		((int *)pt)[7] = ch4;
                           109	#97: #  endif
                           110	#98: # endif
                           111	#99: #endif
                           112	#100: 	    }
                           113	#101: /* Correct for overshoot on this pointer that is being walked
                           114	#102:  * backwards through the memory block.
                           115	#103:  */
                           116	#104: 	    pt += LOOP;
                           117	#105: 	}
                           118	#106:     }
                           119	#107: /* Account for the case of s being at or below zero while pt is above zero. */
                           120	#108:     while (--pt != stop1)
                           121	#109: 	*pt = ch;
                           122	#110:     
                           123	#111:     return s;
                           124	#112: }
                           125	#114: #else
                           126	#116: /* Original fast routine */
                           127		.section ".vletext", "vax"
                           128		.vle
                           129		.vle
                           130	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cind_mset...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB08A..0::
                           131		.align	1
                           132	..gh.f.p.5.a.1.r.0.e.0:
                           133		.type	..gh.f.p.5.a.1.r.0.e.0,@object
                           134		.size	..gh.f.p.5.a.1.r.0.e.0,0
                           135		.global	memset
                           136	memset:
                           137	#	    .bf
                           138	.LDW01:
                           139	#118: void *(memset)(void *s, int c, size_t n) {
                           140	#119:     register unsigned char *pt=s;
                           141	#	    .bs
                           142	.LDW11:
                           143	#120:     unsigned char ch=c; 
00000000 0137              144		se_mr	r7, r3
00000002 00c4              145		se_extzb	r4
                           146	#122:     if (n > 2*LOOP) {
00000004 23f5              147		se_cmpli	r5, 32
00000006 e100              148		se_ble	.L4
                           149	#	    .bs
                           150	.LDW21:
                           151	#123: 	/* we have at least one aligned 16-byte block */
                           152	#124: 	register size_t i;
                           153	#125: 	register int ch4;
                           154	#126: 	struct quad { int b1,b2,b3,b4; };

                                   Fri Apr 10 08:32:27 2020           Page 4
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
                           155	#128: 	/* Compute repeated char value */
                           156	#129: 	ch4 = ch;
                           157	#line129
                           158	..lin.c288cad0..d82b830.0_1::
                           159	.LDWlin1:
00000008 0140              160		se_mr	r0, r4
                           161	#130: 	ch4 <<= 8;
0000000a 6c80              162		se_slwi	r0, 8
                           163	#131: 	ch4 |= ch;
0000000c 4440              164		se_or	r0, r4
                           165	#132: 	ch4 = (ch4 << 16 | ch4);
0000000e 7c068070          166		e_slwi	r6, r0, 16
00000012 4460              167		se_or	r0, r6
                           168	#134: 	if ((i = ((size_t)pt & (LOOP-1))) != 0) {
00000014 1866c80f          169		e_andi.	r6, r3, 15
00000018 e600              170		se_beq	.L6
                           171	#135: 	    i = LOOP - i;		/* i is bytes before the blocks */
                           172	#line135
                           173	..lin.c288cad0..d82b830.0_2::
                           174	.LDWlin2:
0000001a 18c6b010          175		e_subfic	r6, r6, 16
                           176	#136: 	    n -= i;			/* n is bytes in blocks and after blocks */
0000001e 2407              177		se_subi	r7, 1
                           178	#137: 	    do {
00000020 00b6              179		se_mtctr	r6
00000022 0665              180		se_sub	r5, r6
                           181	.L10:
                           182	#138: 		*pt = ch;
00000024 18870401          183		e_stbu	r4, 1(r7)
                           184	#139: 		pt++;
00000028 7a200000          185		e_bdnz	.L10
0000002c 2007              186		se_addi	r7, 1
                           187	.L6:
                           188	#140: 	    } while (--i);
                           189	#141: 	}
                           190	#143: 	/* we are now at a block boundary. */
                           191	#144: 	i = n >> POWER;		/* i is number of blocks */
0000002e 7ca62470          192		e_srwi	r6, r5, 4
                           193	#145: 	n &= LOOP-1;		/* n is bytes after the block */
00000032 24f7              194		se_subi	r7, 16
                           195	#147: 	{
                           196	#148: #ifdef USE_STRUCT16
                           197	#149: 	    register struct quad ch16;
                           198	#150: 	    ch16.b1=ch4; ch16.b2=ch4; ch16.b3=ch4; ch16.b4=ch4;
                           199	#151: #endif
                           200	#152: 	    do {
00000034 00b6              201		se_mtctr	r6
00000036 2ef5              202		se_andi	r5, 15
                           203	.L13:
                           204	#153: #ifdef USE_STRUCT16
                           205	#154: 		((struct quad*)pt)[0] = ch16;
                           206	#155: 		((struct quad*)pt)[1] = ch16;
                           207	#156: 		pt += 2 * sizeof(struct quad);
                           208	#157: #else
                           209	#158: 		((struct quad*)pt)[0].b1 = ch4;
00000038 18070610          210		e_stwu	r0, 16(r7)

                                   Fri Apr 10 08:32:27 2020           Page 5
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
                           211	#159: 		((struct quad*)pt)[0].b2 = ch4;
0000003c d307              212		se_stw	r0, 12(r7)
                           213	#160: 		((struct quad*)pt)[0].b3 = ch4;
0000003e d207              214		se_stw	r0, 8(r7)
                           215	#161: 		((struct quad*)pt)[0].b4 = ch4;
00000040 d107              216		se_stw	r0, 4(r7)
                           217	#162: # if POWER == 4
                           218	#163: 		pt += sizeof(struct quad);
00000042 7a200000          219		e_bdnz	.L13
00000046 20f7              220		se_addi	r7, 16
                           221	.L4:
                           222	#	    .es
                           223	.LDW31:
                           224	#	    .es
                           225	.LDW41:
                           226	#164: # elif POWER == 5
                           227	#165: 		((struct quad*)pt)[1].b1 = ch4;
                           228	#166: 		((struct quad*)pt)[1].b2 = ch4;
                           229	#167: 		((struct quad*)pt)[1].b3 = ch4;
                           230	#168: 		((struct quad*)pt)[1].b4 = ch4;
                           231	#169: 		pt += 2 * sizeof(struct quad);
                           232	#170: # endif
                           233	#171: #endif
                           234	#172: 	    } while (--i);
                           235	#173: 	}
                           236	#174:     }
                           237	#175:     if (n) {	/* n is bytes after the blocks */
00000048 2a05              238		se_cmpi	r5, 0
0000004a e600              239		se_beq	.L2
0000004c 2407              240		se_subi	r7, 1
0000004e 00b5              241		se_mtctr	r5
                           242	.L18:
                           243	#176: 	do {
                           244	#177: 	    *pt = ch;
                           245	#line177
                           246	..lin.c288cad0..d82b830.0_3::
                           247	.LDWlin3:
00000050 18870401          248		e_stbu	r4, 1(r7)
                           249	#178: 	    pt++;
00000054 7a200000          250		e_bdnz	.L18
                           251	#179: 	} while ( --n );
                           252	#180:     }
                           253	#181:     return(s);
                           254	.L2:
                           255	#	    .ef
                           256	.LDW51:
00000058 0004              257		se_blr
                           258		.global	__ghs_eofn_memset
                           259	__ghs_eofn_memset:
                           260		.type	memset,@function
                           261		.size	memset,$-memset
                           262		.align	1
                           263	
                           264	#function:			memset
                           265	#stack frame size:		0
                           266	#

                                   Fri Apr 10 08:32:27 2020           Page 6
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
                           267	#pt	r7	local
                           268	#ch	r4	local
                           269	#i	r6	local
                           270	#ch4	r0	local
                           271	
                           272	#s	r3	param
                           273	#c	r4	param
                           274	#n	r5	param
                           275	
                           276		.data
                           277		.section ".vletext", "vax"
                           278		.vle
                           279		.vle
                           280	
                           281	#182: }
                           282		.align	1
                           283	
                           284		.data
                           285		.note ".PPC.EMB.apuinfo",""
00000000 00000008          286		.long	0x00000008
00000004 00000004          287		.long	4
00000008 00000002          288		.long	0x00000002
                           289		# "APUinfo\000"
0000000c 41505569          290		.byte	65,80,85,105
00000010 6e666f00          291		.byte	110,102,111,0
00000014 01040001          292		.long	0x01040001
                           293		.ghsnote version,20
                           294		.ghsnote tools,3
                           295		.ghsnote options,644
                           296		.section ".vletext", "vax"
                           297		.vle
                           298		.vle
                           299		.align	1
                           300	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cind_mset...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB08A..0::
                           301		.section	.debug_info
                           302	.Ldw_begin:
00000000 000001de          303		.long	.Ldw_end-.Ldw_begin-4
00000004 0002              304		.byte	0,2
00000006 00000000          305		.long	.Ldw_abbr_begin
0000000a 04                306		.byte	4
                           307		.section	.debug_abbrev
                           308	.Ldw_abbr_begin:
                           309		.section	.debug_info
0000000b 01                310		.byte	1
0000000c 00000000          311		.long	..bof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cind_mset...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB08A..0
00000010 00000000          312		.long	..eof.C.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl.5Cobj.5Cind_mset...43.3A.5CVector.5CCBD1800772_D00_Mpc57xx.5CDemo.5CDemoFbl.5CAppl..5E8FB08A..0
00000014 433a2f6768732f63  313		.strz	"C:/ghs/comp_201754/src/libstartup/ind_mset.c"
0000001c 6f6d705f32303137
00000024 35342f7372632f6c
0000002c 6962737461727475
00000034 702f696e645f6d73
0000003c 65742e6300      
00000041 433a5c566563746f  314		.strz	"C:\\Vector\\CBD1800772_D00_Mpc57xx\\Demo\\DemoFbl\\Appl"
00000049 725c434244313830
00000051 303737325f443030
00000059 5f4d706335377878
00000061 5c44656d6f5c4465
00000069 6d6f46626c5c4170
00000071 706c00          
00000074 4748532043203230  315		.strz	"GHS C 2017.5.4 [dual]"
0000007c 31372e352e34205b
00000084 6475616c5d00    
0000008a 0001              316		.byte	0,1
0000008c 00000000          317		.long	.Ldw_line_begin
00000090 00000000          318		.long	.Ldw_macinfo_begin
00000094 00                319		.byte	0
                           320	
                           321		.section	.debug_abbrev
00000000 01                322		.byte	1

                                   Fri Apr 10 08:32:27 2020           Page 7
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000001 11                323		.byte	17
00000002 01                324		.byte	1
00000003 1101              325		.byte	17,1
00000005 1201              326		.byte	18,1
00000007 0308              327		.byte	3,8
00000009 1b08              328		.byte	27,8
0000000b 2508              329		.byte	37,8
0000000d 1305              330		.byte	19,5
0000000f 1006              331		.byte	16,6
00000011 4306              332		.byte	67,6
00000013 420b              333		.byte	66,11
00000015 0000              334		.byte	0,0
                           335	
                           336		.section	.debug_line
                           337	.Ldw_line_begin:
00000000 0000010f          338		.long	.Ldw_line_end-.Ldw_line_begin-4
00000004 0002              339		.byte	0,2
00000006 000000a4          340		.long	.Ldw_lpro_end-.Ldw_lpro_begin
                           341	.Ldw_lpro_begin:
0000000a 01                342		.byte	1
0000000b 00                343		.byte	0
0000000c 00                344		.byte	0
0000000d 04                345		.byte	4
0000000e 0a                346		.byte	10
0000000f 000101            347		.byte	0,1,1
00000012 010100            348		.byte	1,1,0
00000015 000001            349		.byte	0,0,1
00000018 00                350		.byte	0
00000019 433a2f6768732f63  351		.strz	"C:/ghs/comp_201754/src/libstartup/ind_mset.c"
00000021 6f6d705f32303137
00000029 35342f7372632f6c
00000031 6962737461727475
00000039 702f696e645f6d73
00000041 65742e6300      
00000046 000000            352		.byte	0,0,0
00000049 433a2f6768732f63  353		.strz	"C:/ghs/comp_201754/src/libstartup/ind_startup.h"
00000051 6f6d705f32303137
00000059 35342f7372632f6c
00000061 6962737461727475
00000069 702f696e645f7374
00000071 61727475702e6800
00000079 000000            354		.byte	0,0,0
0000007c 633a2f6768732f63  355		.strz	"c:/ghs/comp_201754/src/libsys/indlibvariant.h"
00000084 6f6d705f32303137
0000008c 35342f7372632f6c
00000094 69627379732f696e
0000009c 646c696276617269
000000a4 616e742e6800    
000000aa 000000            356		.byte	0,0,0
000000ad 00                357		.byte	0
                           358	.Ldw_lpro_end:
                           359		.section	.debug_macinfo
                           360	.Ldw_macinfo_begin:
                           361		.section	.debug_frame
                           362	.LDW_18982d8:
00000000 0000008c          363		.long	.LDW_unq_2-.LDW_unq_1
                           364	.LDW_unq_1:
00000004 ffffffff          365		.byte	255,255,255,255
00000008 01                366		.byte	1
00000009 00                367		.byte	0
0000000a 01                368		.byte	1
0000000b 01                369		.byte	1
0000000c 6c                370		.byte	108
0000000d 0c                371		.byte	12
0000000e 01                372		.byte	1
0000000f 00                373		.byte	0
00000010 07                374		.byte	7
00000011 00                375		.byte	0
00000012 07                376		.byte	7
00000013 01                377		.byte	1
00000014 07                378		.byte	7

                                   Fri Apr 10 08:32:27 2020           Page 8
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000015 02                379		.byte	2
00000016 07                380		.byte	7
00000017 03                381		.byte	3
00000018 07                382		.byte	7
00000019 04                383		.byte	4
0000001a 07                384		.byte	7
0000001b 05                385		.byte	5
0000001c 07                386		.byte	7
0000001d 06                387		.byte	6
0000001e 07                388		.byte	7
0000001f 07                389		.byte	7
00000020 07                390		.byte	7
00000021 08                391		.byte	8
00000022 07                392		.byte	7
00000023 09                393		.byte	9
00000024 07                394		.byte	7
00000025 0a                395		.byte	10
00000026 07                396		.byte	7
00000027 0b                397		.byte	11
00000028 07                398		.byte	7
00000029 0c                399		.byte	12
0000002a 07                400		.byte	7
0000002b 0d                401		.byte	13
0000002c 07                402		.byte	7
0000002d 0e                403		.byte	14
0000002e 07                404		.byte	7
0000002f 0f                405		.byte	15
00000030 07                406		.byte	7
00000031 10                407		.byte	16
00000032 07                408		.byte	7
00000033 11                409		.byte	17
00000034 07                410		.byte	7
00000035 12                411		.byte	18
00000036 07                412		.byte	7
00000037 13                413		.byte	19
00000038 07                414		.byte	7
00000039 14                415		.byte	20
0000003a 07                416		.byte	7
0000003b 15                417		.byte	21
0000003c 07                418		.byte	7
0000003d 16                419		.byte	22
0000003e 07                420		.byte	7
0000003f 17                421		.byte	23
00000040 07                422		.byte	7
00000041 18                423		.byte	24
00000042 07                424		.byte	7
00000043 19                425		.byte	25
00000044 07                426		.byte	7
00000045 1a                427		.byte	26
00000046 07                428		.byte	7
00000047 1b                429		.byte	27
00000048 07                430		.byte	7
00000049 1c                431		.byte	28
0000004a 07                432		.byte	7
0000004b 1d                433		.byte	29
0000004c 07                434		.byte	7

                                   Fri Apr 10 08:32:27 2020           Page 9
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
0000004d 1e                435		.byte	30
0000004e 07                436		.byte	7
0000004f 1f                437		.byte	31
00000050 07                438		.byte	7
00000051 20                439		.byte	32
00000052 07                440		.byte	7
00000053 21                441		.byte	33
00000054 07                442		.byte	7
00000055 22                443		.byte	34
00000056 07                444		.byte	7
00000057 23                445		.byte	35
00000058 07                446		.byte	7
00000059 24                447		.byte	36
0000005a 07                448		.byte	7
0000005b 25                449		.byte	37
0000005c 07                450		.byte	7
0000005d 26                451		.byte	38
0000005e 07                452		.byte	7
0000005f 27                453		.byte	39
00000060 07                454		.byte	7
00000061 28                455		.byte	40
00000062 07                456		.byte	7
00000063 29                457		.byte	41
00000064 07                458		.byte	7
00000065 2a                459		.byte	42
00000066 07                460		.byte	7
00000067 2b                461		.byte	43
00000068 07                462		.byte	7
00000069 2c                463		.byte	44
0000006a 07                464		.byte	7
0000006b 2d                465		.byte	45
0000006c 07                466		.byte	7
0000006d 2e                467		.byte	46
0000006e 07                468		.byte	7
0000006f 2f                469		.byte	47
00000070 07                470		.byte	7
00000071 30                471		.byte	48
00000072 07                472		.byte	7
00000073 31                473		.byte	49
00000074 07                474		.byte	7
00000075 32                475		.byte	50
00000076 07                476		.byte	7
00000077 33                477		.byte	51
00000078 07                478		.byte	7
00000079 34                479		.byte	52
0000007a 07                480		.byte	7
0000007b 35                481		.byte	53
0000007c 07                482		.byte	7
0000007d 36                483		.byte	54
0000007e 07                484		.byte	7
0000007f 37                485		.byte	55
00000080 07                486		.byte	7
00000081 38                487		.byte	56
00000082 07                488		.byte	7
00000083 39                489		.byte	57
00000084 07                490		.byte	7

                                   Fri Apr 10 08:32:27 2020           Page 10
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000085 3a                491		.byte	58
00000086 07                492		.byte	7
00000087 3b                493		.byte	59
00000088 07                494		.byte	7
00000089 3c                495		.byte	60
0000008a 07                496		.byte	7
0000008b 3d                497		.byte	61
0000008c 07                498		.byte	7
0000008d 3e                499		.byte	62
0000008e 07                500		.byte	7
0000008f 3f                501		.byte	63
                           502	.LDW_unq_2:
                           503		.section	.debug_info
                           504	.LDW_189c950:
00000095 27                505		.byte	39
00000096 766f69642a00      506		.strz	"void*"
0000009c 01                507		.byte	1
0000009d 04                508		.byte	4
                           509	
                           510		.section	.debug_abbrev
00000017 27                511		.byte	39
00000018 24                512		.byte	36
00000019 00                513		.byte	0
0000001a 0308              514		.byte	3,8
0000001c 3e0b              515		.byte	62,11
0000001e 0b0b              516		.byte	11,11
00000020 0000              517		.byte	0,0
                           518	
                           519		.section	.debug_info
                           520	.LDW_189c988:
0000009e 27                521		.byte	39
0000009f 696e7400          522		.strz	"int"
000000a3 05                523		.byte	5
000000a4 04                524		.byte	4
                           525	
                           526	.LDW_189c790:
000000a5 27                527		.byte	39
000000a6 756e7369676e6564  528		.strz	"unsigned int"
000000ae 20696e7400      
000000b3 07                529		.byte	7
000000b4 04                530		.byte	4
                           531	
                           532	.LDW_189c448:
000000b5 46                533		.byte	70
000000b6 00000000          534		.long	.LDW_189c950
000000ba 01                535		.byte	1
                           536	
                           537		.section	.debug_abbrev
00000022 46                538		.byte	70
00000023 15                539		.byte	21
00000024 01                540		.byte	1
00000025 4910              541		.byte	73,16
00000027 270c              542		.byte	39,12
00000029 0000              543		.byte	0,0
                           544	
                           545		.section	.debug_info
                           546	.LDW_1893620:

                                   Fri Apr 10 08:32:27 2020           Page 11
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
000000bb 14                547		.byte	20
000000bc 00000000          548		.long	.LDW_189c950
000000c0 00                549		.byte	0
                           550	
                           551		.section	.debug_abbrev
0000002b 14                552		.byte	20
0000002c 05                553		.byte	5
0000002d 00                554		.byte	0
0000002e 4910              555		.byte	73,16
00000030 4b0c              556		.byte	75,12
00000032 0000              557		.byte	0,0
                           558	
                           559		.section	.debug_info
                           560	.LDW_1893470:
000000c1 14                561		.byte	20
000000c2 00000000          562		.long	.LDW_189c988
000000c6 00                563		.byte	0
                           564	
                           565	.LDW_18932f0:
000000c7 14                566		.byte	20
000000c8 00000000          567		.long	.LDW_5b793e8
000000cc 00                568		.byte	0
                           569	
000000cd 00                570		.byte	0
                           571	
                           572	.LDW_189c678:
000000ce 27                573		.byte	39
000000cf 756e7369676e6564  574		.strz	"unsigned char"
000000d7 206368617200    
000000dd 08                575		.byte	8
000000de 01                576		.byte	1
                           577	
                           578	.LDW_189c9c0:
000000df 31                579		.byte	49
000000e0 00000000          580		.long	.LDW_189c678
                           581	
                           582		.section	.debug_abbrev
00000034 31                583		.byte	49
00000035 0f                584		.byte	15
00000036 00                585		.byte	0
00000037 4910              586		.byte	73,16
00000039 0000              587		.byte	0,0
                           588	
                           589		.section	.debug_info
                           590	.LDW_5b793e8:
000000e4 2a                591		.byte	42
000000e5 73797a655f7400    592		.strz	"syze_t"
000000ec 22                593		.byte	34
000000ed 1a                594		.byte	26
000000ee 02                595		.byte	2
000000ef 00000000          596		.long	.LDW_189c790
                           597	
                           598		.section	.debug_abbrev
0000003b 2a                599		.byte	42
0000003c 16                600		.byte	22
0000003d 00                601		.byte	0
0000003e 0308              602		.byte	3,8

                                   Fri Apr 10 08:32:27 2020           Page 12
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000040 3b0f              603		.byte	59,15
00000042 390f              604		.byte	57,15
00000044 3a0f              605		.byte	58,15
00000046 4910              606		.byte	73,16
00000048 0000              607		.byte	0,0
                           608	
                           609		.section	.debug_info
                           610	.LDW_5b79440:
000000f3 16                611		.byte	22
000000f4 6d656d73657400    612		.strz	"memset"
000000fb 76                613		.byte	118
000000fc 08                614		.byte	8
000000fd 01                615		.byte	1
000000fe 00000000          616		.long	.LDW_189c950
00000102 00000000          617		.long	memset
00000106 00000000          618		.long	__ghs_eofn_memset
0000010a 0151              619		.byte	1,81
0000010c 03                620		.byte	3
0000010d 00                621		.byte	0
0000010e 00                622		.byte	0
0000010f 00                623		.byte	0
00000110 00                624		.byte	0
00000111 00                625		.byte	0
00000112 00                626		.byte	0
00000113 01                627		.byte	1
00000114 01                628		.byte	1
00000115 00                629		.byte	0
00000116 01                630		.byte	1
                           631	
                           632		.section	.debug_abbrev
0000004a 16                633		.byte	22
0000004b 2e                634		.byte	46
0000004c 01                635		.byte	1
0000004d 0308              636		.byte	3,8
0000004f 3b0f              637		.byte	59,15
00000051 390f              638		.byte	57,15
00000053 3a0f              639		.byte	58,15
00000055 4910              640		.byte	73,16
00000057 1101              641		.byte	17,1
00000059 1201              642		.byte	18,1
0000005b 400a              643		.byte	64,10
0000005d 8341              644		.byte	131,65
0000005f 0f                645		.byte	15
00000060 8741              646		.byte	135,65
00000062 0d                647		.byte	13
00000063 8541              648		.byte	133,65
00000065 0f                649		.byte	15
00000066 8641              650		.byte	134,65
00000068 0d                651		.byte	13
00000069 9241              652		.byte	146,65
0000006b 0f                653		.byte	15
0000006c 3c0c              654		.byte	60,12
0000006e 200b              655		.byte	32,11
00000070 3f0c              656		.byte	63,12
00000072 320b              657		.byte	50,11
00000074 4c0b              658		.byte	76,11

                                   Fri Apr 10 08:32:27 2020           Page 13
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000076 270c              659		.byte	39,12
00000078 0000              660		.byte	0,0
                           661	
                           662		.section	.debug_frame
                           663	.LDW_5b53f80:
00000090 00000014          664		.long	.LDW_unq_4-.LDW_unq_3
                           665	.LDW_unq_3:
00000094 00000000          666		.long	.LDW_18982d8
00000098 00000000          667		.long	memset
0000009c 0000005a          668		.long	__ghs_eofn_memset-memset
000000a0 01                669		.byte	1
000000a1 00000000          670		.long	.LDW51
000000a5 00                671		.byte	0
000000a6 00                672		.byte	0
000000a7 00                673		.byte	0
                           674	.LDW_unq_4:
                           675		.section	.debug_line
000000ae 000502            676		.byte	0,5,2
000000b1 00000000          677		.long	memset
000000b5 06                678		.byte	6
000000b6 03                679		.byte	3
000000b7 f700              680		.byte	247,0
000000b9 02                681		.byte	2
000000ba 00                682		.byte	0
000000bb 01                683		.byte	1
000000bc 1c                684		.byte	28
000000bd 000502            685		.byte	0,5,2
000000c0 00000000          686		.long	.LDWlin1
000000c4 02                687		.byte	2
000000c5 00                688		.byte	0
000000c6 03                689		.byte	3
000000c7 07                690		.byte	7
000000c8 02                691		.byte	2
000000c9 00                692		.byte	0
000000ca 01                693		.byte	1
000000cb 13                694		.byte	19
000000cc 13                695		.byte	19
000000cd 13                696		.byte	19
000000ce 24                697		.byte	36
000000cf 000502            698		.byte	0,5,2
000000d2 00000000          699		.long	.LDWlin2
000000d6 02                700		.byte	2
000000d7 00                701		.byte	0
000000d8 0b                702		.byte	11
000000d9 1b                703		.byte	27
000000da 13                704		.byte	19
000000db 1b                705		.byte	27
000000dc 1c                706		.byte	28
000000dd 02                707		.byte	2
000000de 06                708		.byte	6
000000df 0b                709		.byte	11
000000e0 02                710		.byte	2
000000e1 00                711		.byte	0
000000e2 0d                712		.byte	13
000000e3 1b                713		.byte	27
000000e4 03                714		.byte	3

                                   Fri Apr 10 08:32:27 2020           Page 14
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
000000e5 07                715		.byte	7
000000e6 02                716		.byte	2
000000e7 02                717		.byte	2
000000e8 01                718		.byte	1
000000e9 03                719		.byte	3
000000ea 06                720		.byte	6
000000eb 02                721		.byte	2
000000ec 04                722		.byte	4
000000ed 01                723		.byte	1
000000ee 1b                724		.byte	27
000000ef 13                725		.byte	19
000000f0 13                726		.byte	19
000000f1 03                727		.byte	3
000000f2 0b                728		.byte	11
000000f3 02                729		.byte	2
000000f4 02                730		.byte	2
000000f5 01                731		.byte	1
000000f6 02                732		.byte	2
000000f7 06                733		.byte	6
000000f8 0c                734		.byte	12
000000f9 02                735		.byte	2
000000fa 00                736		.byte	0
000000fb 0b                737		.byte	11
000000fc 000502            738		.byte	0,5,2
000000ff 00000000          739		.long	.LDWlin3
00000103 02                740		.byte	2
00000104 00                741		.byte	0
00000105 0b                742		.byte	11
00000106 0b                743		.byte	11
00000107 1c                744		.byte	28
00000108 02                745		.byte	2
00000109 04                746		.byte	4
0000010a 0b                747		.byte	11
0000010b 02                748		.byte	2
0000010c 00                749		.byte	0
0000010d 0b                750		.byte	11
0000010e 02                751		.byte	2
0000010f 02                752		.byte	2
00000110 000101            753		.byte	0,1,1
                           754		.section	.debug_info
                           755	.LDW_5b794d8:
00000117 11                756		.byte	17
00000118 7300              757		.strz	"s"
0000011a 76                758		.byte	118
0000011b 16                759		.byte	22
0000011c 01                760		.byte	1
0000011d 00000000          761		.long	.LDW_189c950
00000121 00                762		.byte	0
00000122 0153              763		.byte	1,83
                           764	
                           765		.section	.debug_abbrev
0000007a 11                766		.byte	17
0000007b 05                767		.byte	5
0000007c 00                768		.byte	0
0000007d 0308              769		.byte	3,8
0000007f 3b0f              770		.byte	59,15

                                   Fri Apr 10 08:32:27 2020           Page 15
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000081 390f              771		.byte	57,15
00000083 3a0f              772		.byte	58,15
00000085 4910              773		.byte	73,16
00000087 4b0c              774		.byte	75,12
00000089 020a              775		.byte	2,10
0000008b 0000              776		.byte	0,0
                           777	
                           778		.section	.debug_info
                           779	.LDW_5b79530:
00000124 11                780		.byte	17
00000125 6300              781		.strz	"c"
00000127 76                782		.byte	118
00000128 1d                783		.byte	29
00000129 01                784		.byte	1
0000012a 00000000          785		.long	.LDW_189c988
0000012e 00                786		.byte	0
0000012f 0154              787		.byte	1,84
                           788	
                           789	.LDW_5b79588:
00000131 11                790		.byte	17
00000132 6e00              791		.strz	"n"
00000134 76                792		.byte	118
00000135 27                793		.byte	39
00000136 01                794		.byte	1
00000137 00000000          795		.long	.LDW_5b793e8
0000013b 00                796		.byte	0
0000013c 0155              797		.byte	1,85
                           798	
                           799	.LDW_18934a0:
0000013e 1f                800		.byte	31
0000013f 00000000          801		.long	.LDW01
00000143 00000000          802		.long	.LDW51
                           803	
                           804		.section	.debug_abbrev
0000008d 1f                805		.byte	31
0000008e 0b                806		.byte	11
0000008f 01                807		.byte	1
00000090 1101              808		.byte	17,1
00000092 1201              809		.byte	18,1
00000094 0000              810		.byte	0,0
                           811	
                           812		.section	.debug_info
                           813	.LDW_5b795e0:
00000147 06                814		.byte	6
00000148 707400            815		.strz	"pt"
0000014b 77                816		.byte	119
0000014c 1d                817		.byte	29
0000014d 01                818		.byte	1
0000014e 00000000          819		.long	.LDW_189c9c0
00000152 00                820		.byte	0
00000153 00                821		.byte	0
00000154 0157              822		.byte	1,87
                           823	
                           824		.section	.debug_abbrev
00000096 06                825		.byte	6
00000097 34                826		.byte	52

                                   Fri Apr 10 08:32:27 2020           Page 16
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000098 00                827		.byte	0
00000099 0308              828		.byte	3,8
0000009b 3b0f              829		.byte	59,15
0000009d 390f              830		.byte	57,15
0000009f 3a0f              831		.byte	58,15
000000a1 4910              832		.byte	73,16
000000a3 3f0c              833		.byte	63,12
000000a5 3c0c              834		.byte	60,12
000000a7 020a              835		.byte	2,10
000000a9 0000              836		.byte	0,0
                           837	
                           838		.section	.debug_info
                           839	.LDW_5b79638:
00000156 06                840		.byte	6
00000157 636800            841		.strz	"ch"
0000015a 78                842		.byte	120
0000015b 13                843		.byte	19
0000015c 01                844		.byte	1
0000015d 00000000          845		.long	.LDW_189c678
00000161 00                846		.byte	0
00000162 00                847		.byte	0
00000163 0154              848		.byte	1,84
                           849	
                           850	.LDW_18934d0:
00000165 1f                851		.byte	31
00000166 00000000          852		.long	.LDW11
0000016a 00000000          853		.long	.LDW41
                           854	
                           855	.LDW_1893140:
0000016e 1f                856		.byte	31
0000016f 00000000          857		.long	.LDW21
00000173 00000000          858		.long	.LDW31
                           859	
                           860	.LDW_5b79690:
00000177 42                861		.byte	66
00000178 7175616400        862		.strz	"quad"
0000017d 7e                863		.byte	126
0000017e 09                864		.byte	9
0000017f 01                865		.byte	1
00000180 10                866		.byte	16
00000181 01                867		.byte	1
                           868	
                           869		.section	.debug_abbrev
000000ab 42                870		.byte	66
000000ac 13                871		.byte	19
000000ad 01                872		.byte	1
000000ae 0308              873		.byte	3,8
000000b0 3b0f              874		.byte	59,15
000000b2 390f              875		.byte	57,15
000000b4 3a0f              876		.byte	58,15
000000b6 0b0f              877		.byte	11,15
000000b8 320b              878		.byte	50,11
000000ba 0000              879		.byte	0,0
                           880	
                           881		.section	.debug_info
                           882	.LDW_5b796e8:

                                   Fri Apr 10 08:32:27 2020           Page 17
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000182 25                883		.byte	37
00000183 623100            884		.strz	"b1"
00000186 7e                885		.byte	126
00000187 14                886		.byte	20
00000188 01                887		.byte	1
00000189 00000000          888		.long	.LDW_189c988
0000018d 0223              889		.byte	2,35
0000018f 00                890		.byte	0
00000190 01                891		.byte	1
                           892	
                           893		.section	.debug_abbrev
000000bc 25                894		.byte	37
000000bd 0d                895		.byte	13
000000be 00                896		.byte	0
000000bf 0308              897		.byte	3,8
000000c1 3b0f              898		.byte	59,15
000000c3 390f              899		.byte	57,15
000000c5 3a0f              900		.byte	58,15
000000c7 4910              901		.byte	73,16
000000c9 380a              902		.byte	56,10
000000cb 320b              903		.byte	50,11
000000cd 0000              904		.byte	0,0
                           905	
                           906		.section	.debug_info
                           907	.LDW_5b799e0:
00000191 25                908		.byte	37
00000192 623200            909		.strz	"b2"
00000195 7e                910		.byte	126
00000196 17                911		.byte	23
00000197 01                912		.byte	1
00000198 00000000          913		.long	.LDW_189c988
0000019c 0223              914		.byte	2,35
0000019e 04                915		.byte	4
0000019f 01                916		.byte	1
                           917	
                           918	.LDW_5b79a28:
000001a0 25                919		.byte	37
000001a1 623300            920		.strz	"b3"
000001a4 7e                921		.byte	126
000001a5 1a                922		.byte	26
000001a6 01                923		.byte	1
000001a7 00000000          924		.long	.LDW_189c988
000001ab 0223              925		.byte	2,35
000001ad 08                926		.byte	8
000001ae 01                927		.byte	1
                           928	
                           929	.LDW_5b79d88:
000001af 25                930		.byte	37
000001b0 623400            931		.strz	"b4"
000001b3 7e                932		.byte	126
000001b4 1d                933		.byte	29
000001b5 01                934		.byte	1
000001b6 00000000          935		.long	.LDW_189c988
000001ba 0223              936		.byte	2,35
000001bc 0c                937		.byte	12
000001bd 01                938		.byte	1

                                   Fri Apr 10 08:32:27 2020           Page 18
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
                           939	
000001be 00                940		.byte	0
                           941	
                           942	.LDW_5b79f38:
000001bf 06                943		.byte	6
000001c0 6900              944		.strz	"i"
000001c2 7c                945		.byte	124
000001c3 12                946		.byte	18
000001c4 01                947		.byte	1
000001c5 00000000          948		.long	.LDW_5b793e8
000001c9 00                949		.byte	0
000001ca 00                950		.byte	0
000001cb 0156              951		.byte	1,86
                           952	
                           953	.LDW_5b79f90:
000001cd 06                954		.byte	6
000001ce 63683400          955		.strz	"ch4"
000001d2 7d                956		.byte	125
000001d3 0f                957		.byte	15
000001d4 01                958		.byte	1
000001d5 00000000          959		.long	.LDW_189c988
000001d9 00                960		.byte	0
000001da 00                961		.byte	0
000001db 0150              962		.byte	1,80
                           963	
000001dd 00                964		.byte	0
                           965	
000001de 00                966		.byte	0
                           967	
000001df 00                968		.byte	0
                           969	
000001e0 00                970		.byte	0
                           971	
000001e1 00                972		.byte	0
                           973	
                           974		.section	.debug_line
                           975	.Ldw_line_end:
                           976		.section	.debug_macinfo
00000000 01                977		.byte	1
00000001 00                978		.byte	0
00000002 5f5f494e545f4249  979		.strz	"__INT_BIT 32"
0000000a 5420333200      
0000000f 01                980		.byte	1
00000010 00                981		.byte	0
00000011 5f5f5054525f4249  982		.strz	"__PTR_BIT 32"
00000019 5420333200      
0000001e 03                983		.byte	3
0000001f 00                984		.byte	0
00000020 01                985		.byte	1
00000021 03                986		.byte	3
00000022 0d                987		.byte	13
00000023 02                988		.byte	2
00000024 01                989		.byte	1
00000025 2e                990		.byte	46
00000026 73697a655f742073  991		.strz	"size_t syze_t"
0000002e 797a655f7400    
00000034 04                992		.byte	4
00000035 03                993		.byte	3
00000036 0e                994		.byte	14

                                   Fri Apr 10 08:32:27 2020           Page 19
                                   Fri Apr 10 08:32:26 2020   gh_00008d81.si
00000037 03                995		.byte	3
00000038 04                996		.byte	4
00000039 01                997		.byte	1
0000003a 25                998		.byte	37
0000003b 504f574552203400  999		.strz	"POWER 4"
00000043 01               1000		.byte	1
00000044 26               1001		.byte	38
00000045 4c4f4f502028313c 1002		.strz	"LOOP (1<<POWER)"
0000004d 3c504f5745522900
00000055 04               1003		.byte	4
00000056 00               1004		.byte	0
                          1005		.section	.debug_abbrev
000000cf 00               1006		.byte	0
                          1007		.section	.debug_info
                          1008	.Ldw_end:
